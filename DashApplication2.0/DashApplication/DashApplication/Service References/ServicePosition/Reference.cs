//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.60310.0
// 
namespace DashApplication.ServicePosition {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Locale", Namespace="http://schemas.datacontract.org/2004/07/DashBusiness")]
    public enum Locale : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Domestic = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        International = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HtbLocale", Namespace="http://schemas.datacontract.org/2004/07/DashBusiness")]
    public enum HtbLocale : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Penson = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bps = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicePosition.IPosition")]
    public interface IPosition {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/MemoSegStartOfDaySet", ReplyAction="http://tempuri.org/IPosition/MemoSegStartOfDaySetResponse")]
        System.IAsyncResult BeginMemoSegStartOfDaySet(string bizDate, string system, string secId, string quantity, System.AsyncCallback callback, object asyncState);
        
        void EndMemoSegStartOfDaySet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/PenaltyBoxGet", ReplyAction="http://tempuri.org/IPosition/PenaltyBoxGetResponse")]
        System.IAsyncResult BeginPenaltyBoxGet(bool showHistory, System.AsyncCallback callback, object asyncState);
        
        byte[] EndPenaltyBoxGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/PenaltyBoxItemSet", ReplyAction="http://tempuri.org/IPosition/PenaltyBoxItemSetResponse")]
        System.IAsyncResult BeginPenaltyBoxItemSet(string secId, string actUserId, string comment, System.AsyncCallback callback, object asyncState);
        
        void EndPenaltyBoxItemSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/PenaltyBoxCommentSet", ReplyAction="http://tempuri.org/IPosition/PenaltyBoxCommentSetResponse")]
        System.IAsyncResult BeginPenaltyBoxCommentSet(string processId, string comment, System.AsyncCallback callback, object asyncState);
        
        void EndPenaltyBoxCommentSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/RecallTradingGet", ReplyAction="http://tempuri.org/IPosition/RecallTradingGetResponse")]
        System.IAsyncResult BeginRecallTradingGet(string bizDate, string bookGroup, System.AsyncCallback callback, object asyncState);
        
        byte[] EndRecallTradingGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/RecallTradingSet", ReplyAction="http://tempuri.org/IPosition/RecallTradingSetResponse")]
        System.IAsyncResult BeginRecallTradingSet(string bizDate, string bookGroup, string secId, string comment, System.AsyncCallback callback, object asyncState);
        
        void EndRecallTradingSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/ShortSaleBillingBPSItemSet", ReplyAction="http://tempuri.org/IPosition/ShortSaleBillingBPSItemSetResponse")]
        System.IAsyncResult BeginShortSaleBillingBPSItemSet(string bizDate, string accountNumber, string secId, string quantityShorted, string quantityCovered, string settlementDate, string price, string rate, string actUserId, System.AsyncCallback callback, object asyncState);
        
        byte[] EndShortSaleBillingBPSItemSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/CollateralizationUtilDetailGet", ReplyAction="http://tempuri.org/IPosition/CollateralizationUtilDetailGetResponse")]
        System.IAsyncResult BeginCollateralizationUtilDetailGet(string bizDate, string classGroup, System.AsyncCallback callback, object asyncState);
        
        byte[] EndCollateralizationUtilDetailGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/CollateralizationUtilStartOfDayGet", ReplyAction="http://tempuri.org/IPosition/CollateralizationUtilStartOfDayGetResponse")]
        System.IAsyncResult BeginCollateralizationUtilStartOfDayGet(string bizDate, System.AsyncCallback callback, object asyncState);
        
        byte[] EndCollateralizationUtilStartOfDayGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/CollateralizationUtilIntraDayGet", ReplyAction="http://tempuri.org/IPosition/CollateralizationUtilIntraDayGetResponse")]
        System.IAsyncResult BeginCollateralizationUtilIntraDayGet(string bizDate, string priceThreshold, System.AsyncCallback callback, object asyncState);
        
        byte[] EndCollateralizationUtilIntraDayGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/BorrowsMorningGet", ReplyAction="http://tempuri.org/IPosition/BorrowsMorningGetResponse")]
        System.IAsyncResult BeginBorrowsMorningGet(string bizDate, System.AsyncCallback callback, object asyncState);
        
        byte[] EndBorrowsMorningGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/BorrowsMorningSet", ReplyAction="http://tempuri.org/IPosition/BorrowsMorningSetResponse")]
        System.IAsyncResult BeginBorrowsMorningSet(string bizDate, string bookGroup, string secId, string quantity, System.AsyncCallback callback, object asyncState);
        
        void EndBorrowsMorningSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/BorrowsMorningPurge", ReplyAction="http://tempuri.org/IPosition/BorrowsMorningPurgeResponse")]
        System.IAsyncResult BeginBorrowsMorningPurge(string bizDate, System.AsyncCallback callback, object asyncState);
        
        void EndBorrowsMorningPurge(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/CheckListGet", ReplyAction="http://tempuri.org/IPosition/CheckListGetResponse")]
        System.IAsyncResult BeginCheckListGet(string bizDate, System.AsyncCallback callback, object asyncState);
        
        byte[] EndCheckListGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/CheckListItemSet", ReplyAction="http://tempuri.org/IPosition/CheckListItemSetResponse")]
        System.IAsyncResult BeginCheckListItemSet(string bizDate, string processId, string itemComment, string itemUserId, System.AsyncCallback callback, object asyncState);
        
        void EndCheckListItemSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/KeyValueGet", ReplyAction="http://tempuri.org/IPosition/KeyValueGetResponse")]
        System.IAsyncResult BeginKeyValueGet(string keyId, System.AsyncCallback callback, object asyncState);
        
        string EndKeyValueGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/KeyValueSet", ReplyAction="http://tempuri.org/IPosition/KeyValueSetResponse")]
        System.IAsyncResult BeginKeyValueSet(string keyId, string keyValue, System.AsyncCallback callback, object asyncState);
        
        void EndKeyValueSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/BookBalancesGet", ReplyAction="http://tempuri.org/IPosition/BookBalancesGetResponse")]
        System.IAsyncResult BeginBookBalancesGet(string bizDate, string bookGroup, System.AsyncCallback callback, object asyncState);
        
        byte[] EndBookBalancesGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/BookCreditLBookBalancesGet", ReplyAction="http://tempuri.org/IPosition/BookCreditLBookBalancesGetResponse")]
        System.IAsyncResult BeginBookCreditLBookBalancesGet(string bizDate, string bookGroup, System.AsyncCallback callback, object asyncState);
        
        byte[] EndBookCreditLBookBalancesGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/RecallTradingSupplementGet", ReplyAction="http://tempuri.org/IPosition/RecallTradingSupplementGetResponse")]
        System.IAsyncResult BeginRecallTradingSupplementGet(string bizDatePrior, string bizDate, string bookGroup, System.AsyncCallback callback, object asyncState);
        
        byte[] EndRecallTradingSupplementGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/UserValidationGet", ReplyAction="http://tempuri.org/IPosition/UserValidationGetResponse")]
        System.IAsyncResult BeginUserValidationGet(string userName, string password, System.AsyncCallback callback, object asyncState);
        
        bool EndUserValidationGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/ContractDataGet", ReplyAction="http://tempuri.org/IPosition/ContractDataGetResponse")]
        System.IAsyncResult BeginContractDataGet(string bizDate, string bookGroup, string secId, string userId, string functionPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndContractDataGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/ContractSummaryByCashLoad", ReplyAction="http://tempuri.org/IPosition/ContractSummaryByCashLoadResponse")]
        System.IAsyncResult BeginContractSummaryByCashLoad(string bizDate, string bookGroup, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndContractSummaryByCashLoad(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/ContractSummaryBySecurity", ReplyAction="http://tempuri.org/IPosition/ContractSummaryBySecurityResponse")]
        System.IAsyncResult BeginContractSummaryBySecurity(string bizDate, string bookGroup, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndContractSummaryBySecurity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/ContractsExcessCollateralSummaryLoad", ReplyAction="http://tempuri.org/IPosition/ContractsExcessCollateralSummaryLoadResponse")]
        System.IAsyncResult BeginContractsExcessCollateralSummaryLoad(string bizDate, string bookGroup, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndContractsExcessCollateralSummaryLoad(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/ContractSummaryByBooKGroupCashLoad", ReplyAction="http://tempuri.org/IPosition/ContractSummaryByBooKGroupCashLoadResponse")]
        System.IAsyncResult BeginContractSummaryByBooKGroupCashLoad(string bizDate, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndContractSummaryByBooKGroupCashLoad(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/ContractSummaryByBooKGroupSharesCashLoad", ReplyAction="http://tempuri.org/IPosition/ContractSummaryByBooKGroupSharesCashLoadResponse")]
        System.IAsyncResult BeginContractSummaryByBooKGroupSharesCashLoad(string bizDate, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndContractSummaryByBooKGroupSharesCashLoad(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/ContractsDetailByBookSummaryLoad", ReplyAction="http://tempuri.org/IPosition/ContractsDetailByBookSummaryLoadResponse")]
        System.IAsyncResult BeginContractsDetailByBookSummaryLoad(string bizDate, string bookGroup, string book, string currencyIso, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndContractsDetailByBookSummaryLoad(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/MarksGet", ReplyAction="http://tempuri.org/IPosition/MarksGetResponse")]
        System.IAsyncResult BeginMarksGet(string bizDate, string bookGroup, string book, string currencyIso, DashApplication.ServicePosition.Locale localeType, System.AsyncCallback callback, object asyncState);
        
        byte[] EndMarksGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/InventoryHistoryGet", ReplyAction="http://tempuri.org/IPosition/InventoryHistoryGetResponse")]
        System.IAsyncResult BeginInventoryHistoryGet(string secId, System.AsyncCallback callback, object asyncState);
        
        byte[] EndInventoryHistoryGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/InventoryHistorySummaryGet", ReplyAction="http://tempuri.org/IPosition/InventoryHistorySummaryGetResponse")]
        System.IAsyncResult BeginInventoryHistorySummaryGet(string secId, System.AsyncCallback callback, object asyncState);
        
        byte[] EndInventoryHistorySummaryGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/InventoryDeskGet", ReplyAction="http://tempuri.org/IPosition/InventoryDeskGetResponse")]
        System.IAsyncResult BeginInventoryDeskGet(string desk, string bizDate, System.AsyncCallback callback, object asyncState);
        
        byte[] EndInventoryDeskGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/DeskListGet", ReplyAction="http://tempuri.org/IPosition/DeskListGetResponse")]
        System.IAsyncResult BeginDeskListGet(string bizDate, System.AsyncCallback callback, object asyncState);
        
        byte[] EndDeskListGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/BookGroupGet", ReplyAction="http://tempuri.org/IPosition/BookGroupGetResponse")]
        System.IAsyncResult BeginBookGroupGet(string userId, string functionPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndBookGroupGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/HtbProfitabilityGet", ReplyAction="http://tempuri.org/IPosition/HtbProfitabilityGetResponse")]
        System.IAsyncResult BeginHtbProfitabilityGet(string bizDate, DashApplication.ServicePosition.HtbLocale htbLocate, int numOfRecords, System.AsyncCallback callback, object asyncState);
        
        byte[] EndHtbProfitabilityGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/HtbProfitabilitySpreadsGet", ReplyAction="http://tempuri.org/IPosition/HtbProfitabilitySpreadsGetResponse")]
        System.IAsyncResult BeginHtbProfitabilitySpreadsGet(string bizDate, DashApplication.ServicePosition.HtbLocale htbLocate, System.AsyncCallback callback, object asyncState);
        
        byte[] EndHtbProfitabilitySpreadsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/HolidaysGet", ReplyAction="http://tempuri.org/IPosition/HolidaysGetResponse")]
        System.IAsyncResult BeginHolidaysGet(System.AsyncCallback callback, object asyncState);
        
        byte[] EndHolidaysGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/UserCanView", ReplyAction="http://tempuri.org/IPosition/UserCanViewResponse")]
        System.IAsyncResult BeginUserCanView(string userId, string functionPath, System.AsyncCallback callback, object asyncState);
        
        bool EndUserCanView(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/WebSecurityProfileDataSetGet", ReplyAction="http://tempuri.org/IPosition/WebSecurityProfileDataSetGetResponse")]
        System.IAsyncResult BeginWebSecurityProfileDataSetGet(string userId, System.AsyncCallback callback, object asyncState);
        
        byte[] EndWebSecurityProfileDataSetGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/InventoryRateGet", ReplyAction="http://tempuri.org/IPosition/InventoryRateGetResponse")]
        System.IAsyncResult BeginInventoryRateGet(string secId, System.AsyncCallback callback, object asyncState);
        
        string EndInventoryRateGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/InventoryRateHistoryGet", ReplyAction="http://tempuri.org/IPosition/InventoryRateHistoryGetResponse")]
        System.IAsyncResult BeginInventoryRateHistoryGet(string secId, System.AsyncCallback callback, object asyncState);
        
        byte[] EndInventoryRateHistoryGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/FileReader", ReplyAction="http://tempuri.org/IPosition/FileReaderResponse")]
        System.IAsyncResult BeginFileReader(string path, System.AsyncCallback callback, object asyncState);
        
        string EndFileReader(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/WebReportsGet", ReplyAction="http://tempuri.org/IPosition/WebReportsGetResponse")]
        System.IAsyncResult BeginWebReportsGet(System.AsyncCallback callback, object asyncState);
        
        byte[] EndWebReportsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/ReportValueSet", ReplyAction="http://tempuri.org/IPosition/ReportValueSetResponse")]
        System.IAsyncResult BeginReportValueSet(string reportName, string reportRecipient, string format, string justify, System.AsyncCallback callback, object asyncState);
        
        bool EndReportValueSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/StraddlesGet", ReplyAction="http://tempuri.org/IPosition/StraddlesGetResponse")]
        System.IAsyncResult BeginStraddlesGet(string accountList, string locMemo, string accountType, System.AsyncCallback callback, object asyncState);
        
        byte[] EndStraddlesGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/ShortSaleLocatesSourceGet", ReplyAction="http://tempuri.org/IPosition/ShortSaleLocatesSourceGetResponse")]
        System.IAsyncResult BeginShortSaleLocatesSourceGet(string tradeDate, string source, System.AsyncCallback callback, object asyncState);
        
        byte[] EndShortSaleLocatesSourceGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/BankLoanReleaseReportGet", ReplyAction="http://tempuri.org/IPosition/BankLoanReleaseReportGetResponse")]
        System.IAsyncResult BeginBankLoanReleaseReportGet(string bizDate, string book, System.AsyncCallback callback, object asyncState);
        
        byte[] EndBankLoanReleaseReportGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPosition/MemoSegLockupGet", ReplyAction="http://tempuri.org/IPosition/MemoSegLockupGetResponse")]
        System.IAsyncResult BeginMemoSegLockupGet(string system, System.AsyncCallback callback, object asyncState);
        
        byte[] EndMemoSegLockupGet(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPositionChannel : DashApplication.ServicePosition.IPosition, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PenaltyBoxGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PenaltyBoxGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecallTradingGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RecallTradingGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShortSaleBillingBPSItemSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ShortSaleBillingBPSItemSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CollateralizationUtilDetailGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CollateralizationUtilDetailGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CollateralizationUtilStartOfDayGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CollateralizationUtilStartOfDayGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CollateralizationUtilIntraDayGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CollateralizationUtilIntraDayGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BorrowsMorningGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BorrowsMorningGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckListGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckListGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KeyValueGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public KeyValueGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookBalancesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BookBalancesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookCreditLBookBalancesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BookCreditLBookBalancesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecallTradingSupplementGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RecallTradingSupplementGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserValidationGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserValidationGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContractDataGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ContractDataGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContractSummaryByCashLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ContractSummaryByCashLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContractSummaryBySecurityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ContractSummaryBySecurityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContractsExcessCollateralSummaryLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ContractsExcessCollateralSummaryLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContractSummaryByBooKGroupCashLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ContractSummaryByBooKGroupCashLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContractSummaryByBooKGroupSharesCashLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ContractSummaryByBooKGroupSharesCashLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContractsDetailByBookSummaryLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ContractsDetailByBookSummaryLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MarksGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MarksGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventoryHistoryGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InventoryHistoryGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventoryHistorySummaryGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InventoryHistorySummaryGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventoryDeskGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InventoryDeskGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeskListGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeskListGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookGroupGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BookGroupGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HtbProfitabilityGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HtbProfitabilityGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HtbProfitabilitySpreadsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HtbProfitabilitySpreadsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HolidaysGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HolidaysGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserCanViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserCanViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebSecurityProfileDataSetGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebSecurityProfileDataSetGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventoryRateGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InventoryRateGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventoryRateHistoryGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InventoryRateHistoryGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileReaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FileReaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebReportsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebReportsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportValueSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReportValueSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StraddlesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StraddlesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShortSaleLocatesSourceGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ShortSaleLocatesSourceGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BankLoanReleaseReportGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BankLoanReleaseReportGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemoSegLockupGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemoSegLockupGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PositionClient : System.ServiceModel.ClientBase<DashApplication.ServicePosition.IPosition>, DashApplication.ServicePosition.IPosition {
        
        private BeginOperationDelegate onBeginMemoSegStartOfDaySetDelegate;
        
        private EndOperationDelegate onEndMemoSegStartOfDaySetDelegate;
        
        private System.Threading.SendOrPostCallback onMemoSegStartOfDaySetCompletedDelegate;
        
        private BeginOperationDelegate onBeginPenaltyBoxGetDelegate;
        
        private EndOperationDelegate onEndPenaltyBoxGetDelegate;
        
        private System.Threading.SendOrPostCallback onPenaltyBoxGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginPenaltyBoxItemSetDelegate;
        
        private EndOperationDelegate onEndPenaltyBoxItemSetDelegate;
        
        private System.Threading.SendOrPostCallback onPenaltyBoxItemSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginPenaltyBoxCommentSetDelegate;
        
        private EndOperationDelegate onEndPenaltyBoxCommentSetDelegate;
        
        private System.Threading.SendOrPostCallback onPenaltyBoxCommentSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginRecallTradingGetDelegate;
        
        private EndOperationDelegate onEndRecallTradingGetDelegate;
        
        private System.Threading.SendOrPostCallback onRecallTradingGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginRecallTradingSetDelegate;
        
        private EndOperationDelegate onEndRecallTradingSetDelegate;
        
        private System.Threading.SendOrPostCallback onRecallTradingSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginShortSaleBillingBPSItemSetDelegate;
        
        private EndOperationDelegate onEndShortSaleBillingBPSItemSetDelegate;
        
        private System.Threading.SendOrPostCallback onShortSaleBillingBPSItemSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginCollateralizationUtilDetailGetDelegate;
        
        private EndOperationDelegate onEndCollateralizationUtilDetailGetDelegate;
        
        private System.Threading.SendOrPostCallback onCollateralizationUtilDetailGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginCollateralizationUtilStartOfDayGetDelegate;
        
        private EndOperationDelegate onEndCollateralizationUtilStartOfDayGetDelegate;
        
        private System.Threading.SendOrPostCallback onCollateralizationUtilStartOfDayGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginCollateralizationUtilIntraDayGetDelegate;
        
        private EndOperationDelegate onEndCollateralizationUtilIntraDayGetDelegate;
        
        private System.Threading.SendOrPostCallback onCollateralizationUtilIntraDayGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginBorrowsMorningGetDelegate;
        
        private EndOperationDelegate onEndBorrowsMorningGetDelegate;
        
        private System.Threading.SendOrPostCallback onBorrowsMorningGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginBorrowsMorningSetDelegate;
        
        private EndOperationDelegate onEndBorrowsMorningSetDelegate;
        
        private System.Threading.SendOrPostCallback onBorrowsMorningSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginBorrowsMorningPurgeDelegate;
        
        private EndOperationDelegate onEndBorrowsMorningPurgeDelegate;
        
        private System.Threading.SendOrPostCallback onBorrowsMorningPurgeCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckListGetDelegate;
        
        private EndOperationDelegate onEndCheckListGetDelegate;
        
        private System.Threading.SendOrPostCallback onCheckListGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckListItemSetDelegate;
        
        private EndOperationDelegate onEndCheckListItemSetDelegate;
        
        private System.Threading.SendOrPostCallback onCheckListItemSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginKeyValueGetDelegate;
        
        private EndOperationDelegate onEndKeyValueGetDelegate;
        
        private System.Threading.SendOrPostCallback onKeyValueGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginKeyValueSetDelegate;
        
        private EndOperationDelegate onEndKeyValueSetDelegate;
        
        private System.Threading.SendOrPostCallback onKeyValueSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginBookBalancesGetDelegate;
        
        private EndOperationDelegate onEndBookBalancesGetDelegate;
        
        private System.Threading.SendOrPostCallback onBookBalancesGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginBookCreditLBookBalancesGetDelegate;
        
        private EndOperationDelegate onEndBookCreditLBookBalancesGetDelegate;
        
        private System.Threading.SendOrPostCallback onBookCreditLBookBalancesGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginRecallTradingSupplementGetDelegate;
        
        private EndOperationDelegate onEndRecallTradingSupplementGetDelegate;
        
        private System.Threading.SendOrPostCallback onRecallTradingSupplementGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserValidationGetDelegate;
        
        private EndOperationDelegate onEndUserValidationGetDelegate;
        
        private System.Threading.SendOrPostCallback onUserValidationGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginContractDataGetDelegate;
        
        private EndOperationDelegate onEndContractDataGetDelegate;
        
        private System.Threading.SendOrPostCallback onContractDataGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginContractSummaryByCashLoadDelegate;
        
        private EndOperationDelegate onEndContractSummaryByCashLoadDelegate;
        
        private System.Threading.SendOrPostCallback onContractSummaryByCashLoadCompletedDelegate;
        
        private BeginOperationDelegate onBeginContractSummaryBySecurityDelegate;
        
        private EndOperationDelegate onEndContractSummaryBySecurityDelegate;
        
        private System.Threading.SendOrPostCallback onContractSummaryBySecurityCompletedDelegate;
        
        private BeginOperationDelegate onBeginContractsExcessCollateralSummaryLoadDelegate;
        
        private EndOperationDelegate onEndContractsExcessCollateralSummaryLoadDelegate;
        
        private System.Threading.SendOrPostCallback onContractsExcessCollateralSummaryLoadCompletedDelegate;
        
        private BeginOperationDelegate onBeginContractSummaryByBooKGroupCashLoadDelegate;
        
        private EndOperationDelegate onEndContractSummaryByBooKGroupCashLoadDelegate;
        
        private System.Threading.SendOrPostCallback onContractSummaryByBooKGroupCashLoadCompletedDelegate;
        
        private BeginOperationDelegate onBeginContractSummaryByBooKGroupSharesCashLoadDelegate;
        
        private EndOperationDelegate onEndContractSummaryByBooKGroupSharesCashLoadDelegate;
        
        private System.Threading.SendOrPostCallback onContractSummaryByBooKGroupSharesCashLoadCompletedDelegate;
        
        private BeginOperationDelegate onBeginContractsDetailByBookSummaryLoadDelegate;
        
        private EndOperationDelegate onEndContractsDetailByBookSummaryLoadDelegate;
        
        private System.Threading.SendOrPostCallback onContractsDetailByBookSummaryLoadCompletedDelegate;
        
        private BeginOperationDelegate onBeginMarksGetDelegate;
        
        private EndOperationDelegate onEndMarksGetDelegate;
        
        private System.Threading.SendOrPostCallback onMarksGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginInventoryHistoryGetDelegate;
        
        private EndOperationDelegate onEndInventoryHistoryGetDelegate;
        
        private System.Threading.SendOrPostCallback onInventoryHistoryGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginInventoryHistorySummaryGetDelegate;
        
        private EndOperationDelegate onEndInventoryHistorySummaryGetDelegate;
        
        private System.Threading.SendOrPostCallback onInventoryHistorySummaryGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginInventoryDeskGetDelegate;
        
        private EndOperationDelegate onEndInventoryDeskGetDelegate;
        
        private System.Threading.SendOrPostCallback onInventoryDeskGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeskListGetDelegate;
        
        private EndOperationDelegate onEndDeskListGetDelegate;
        
        private System.Threading.SendOrPostCallback onDeskListGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginBookGroupGetDelegate;
        
        private EndOperationDelegate onEndBookGroupGetDelegate;
        
        private System.Threading.SendOrPostCallback onBookGroupGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginHtbProfitabilityGetDelegate;
        
        private EndOperationDelegate onEndHtbProfitabilityGetDelegate;
        
        private System.Threading.SendOrPostCallback onHtbProfitabilityGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginHtbProfitabilitySpreadsGetDelegate;
        
        private EndOperationDelegate onEndHtbProfitabilitySpreadsGetDelegate;
        
        private System.Threading.SendOrPostCallback onHtbProfitabilitySpreadsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginHolidaysGetDelegate;
        
        private EndOperationDelegate onEndHolidaysGetDelegate;
        
        private System.Threading.SendOrPostCallback onHolidaysGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserCanViewDelegate;
        
        private EndOperationDelegate onEndUserCanViewDelegate;
        
        private System.Threading.SendOrPostCallback onUserCanViewCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebSecurityProfileDataSetGetDelegate;
        
        private EndOperationDelegate onEndWebSecurityProfileDataSetGetDelegate;
        
        private System.Threading.SendOrPostCallback onWebSecurityProfileDataSetGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginInventoryRateGetDelegate;
        
        private EndOperationDelegate onEndInventoryRateGetDelegate;
        
        private System.Threading.SendOrPostCallback onInventoryRateGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginInventoryRateHistoryGetDelegate;
        
        private EndOperationDelegate onEndInventoryRateHistoryGetDelegate;
        
        private System.Threading.SendOrPostCallback onInventoryRateHistoryGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginFileReaderDelegate;
        
        private EndOperationDelegate onEndFileReaderDelegate;
        
        private System.Threading.SendOrPostCallback onFileReaderCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebReportsGetDelegate;
        
        private EndOperationDelegate onEndWebReportsGetDelegate;
        
        private System.Threading.SendOrPostCallback onWebReportsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginReportValueSetDelegate;
        
        private EndOperationDelegate onEndReportValueSetDelegate;
        
        private System.Threading.SendOrPostCallback onReportValueSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginStraddlesGetDelegate;
        
        private EndOperationDelegate onEndStraddlesGetDelegate;
        
        private System.Threading.SendOrPostCallback onStraddlesGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginShortSaleLocatesSourceGetDelegate;
        
        private EndOperationDelegate onEndShortSaleLocatesSourceGetDelegate;
        
        private System.Threading.SendOrPostCallback onShortSaleLocatesSourceGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginBankLoanReleaseReportGetDelegate;
        
        private EndOperationDelegate onEndBankLoanReleaseReportGetDelegate;
        
        private System.Threading.SendOrPostCallback onBankLoanReleaseReportGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemoSegLockupGetDelegate;
        
        private EndOperationDelegate onEndMemoSegLockupGetDelegate;
        
        private System.Threading.SendOrPostCallback onMemoSegLockupGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PositionClient() {
        }
        
        public PositionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PositionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PositionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PositionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MemoSegStartOfDaySetCompleted;
        
        public event System.EventHandler<PenaltyBoxGetCompletedEventArgs> PenaltyBoxGetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PenaltyBoxItemSetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PenaltyBoxCommentSetCompleted;
        
        public event System.EventHandler<RecallTradingGetCompletedEventArgs> RecallTradingGetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RecallTradingSetCompleted;
        
        public event System.EventHandler<ShortSaleBillingBPSItemSetCompletedEventArgs> ShortSaleBillingBPSItemSetCompleted;
        
        public event System.EventHandler<CollateralizationUtilDetailGetCompletedEventArgs> CollateralizationUtilDetailGetCompleted;
        
        public event System.EventHandler<CollateralizationUtilStartOfDayGetCompletedEventArgs> CollateralizationUtilStartOfDayGetCompleted;
        
        public event System.EventHandler<CollateralizationUtilIntraDayGetCompletedEventArgs> CollateralizationUtilIntraDayGetCompleted;
        
        public event System.EventHandler<BorrowsMorningGetCompletedEventArgs> BorrowsMorningGetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> BorrowsMorningSetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> BorrowsMorningPurgeCompleted;
        
        public event System.EventHandler<CheckListGetCompletedEventArgs> CheckListGetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CheckListItemSetCompleted;
        
        public event System.EventHandler<KeyValueGetCompletedEventArgs> KeyValueGetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> KeyValueSetCompleted;
        
        public event System.EventHandler<BookBalancesGetCompletedEventArgs> BookBalancesGetCompleted;
        
        public event System.EventHandler<BookCreditLBookBalancesGetCompletedEventArgs> BookCreditLBookBalancesGetCompleted;
        
        public event System.EventHandler<RecallTradingSupplementGetCompletedEventArgs> RecallTradingSupplementGetCompleted;
        
        public event System.EventHandler<UserValidationGetCompletedEventArgs> UserValidationGetCompleted;
        
        public event System.EventHandler<ContractDataGetCompletedEventArgs> ContractDataGetCompleted;
        
        public event System.EventHandler<ContractSummaryByCashLoadCompletedEventArgs> ContractSummaryByCashLoadCompleted;
        
        public event System.EventHandler<ContractSummaryBySecurityCompletedEventArgs> ContractSummaryBySecurityCompleted;
        
        public event System.EventHandler<ContractsExcessCollateralSummaryLoadCompletedEventArgs> ContractsExcessCollateralSummaryLoadCompleted;
        
        public event System.EventHandler<ContractSummaryByBooKGroupCashLoadCompletedEventArgs> ContractSummaryByBooKGroupCashLoadCompleted;
        
        public event System.EventHandler<ContractSummaryByBooKGroupSharesCashLoadCompletedEventArgs> ContractSummaryByBooKGroupSharesCashLoadCompleted;
        
        public event System.EventHandler<ContractsDetailByBookSummaryLoadCompletedEventArgs> ContractsDetailByBookSummaryLoadCompleted;
        
        public event System.EventHandler<MarksGetCompletedEventArgs> MarksGetCompleted;
        
        public event System.EventHandler<InventoryHistoryGetCompletedEventArgs> InventoryHistoryGetCompleted;
        
        public event System.EventHandler<InventoryHistorySummaryGetCompletedEventArgs> InventoryHistorySummaryGetCompleted;
        
        public event System.EventHandler<InventoryDeskGetCompletedEventArgs> InventoryDeskGetCompleted;
        
        public event System.EventHandler<DeskListGetCompletedEventArgs> DeskListGetCompleted;
        
        public event System.EventHandler<BookGroupGetCompletedEventArgs> BookGroupGetCompleted;
        
        public event System.EventHandler<HtbProfitabilityGetCompletedEventArgs> HtbProfitabilityGetCompleted;
        
        public event System.EventHandler<HtbProfitabilitySpreadsGetCompletedEventArgs> HtbProfitabilitySpreadsGetCompleted;
        
        public event System.EventHandler<HolidaysGetCompletedEventArgs> HolidaysGetCompleted;
        
        public event System.EventHandler<UserCanViewCompletedEventArgs> UserCanViewCompleted;
        
        public event System.EventHandler<WebSecurityProfileDataSetGetCompletedEventArgs> WebSecurityProfileDataSetGetCompleted;
        
        public event System.EventHandler<InventoryRateGetCompletedEventArgs> InventoryRateGetCompleted;
        
        public event System.EventHandler<InventoryRateHistoryGetCompletedEventArgs> InventoryRateHistoryGetCompleted;
        
        public event System.EventHandler<FileReaderCompletedEventArgs> FileReaderCompleted;
        
        public event System.EventHandler<WebReportsGetCompletedEventArgs> WebReportsGetCompleted;
        
        public event System.EventHandler<ReportValueSetCompletedEventArgs> ReportValueSetCompleted;
        
        public event System.EventHandler<StraddlesGetCompletedEventArgs> StraddlesGetCompleted;
        
        public event System.EventHandler<ShortSaleLocatesSourceGetCompletedEventArgs> ShortSaleLocatesSourceGetCompleted;
        
        public event System.EventHandler<BankLoanReleaseReportGetCompletedEventArgs> BankLoanReleaseReportGetCompleted;
        
        public event System.EventHandler<MemoSegLockupGetCompletedEventArgs> MemoSegLockupGetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginMemoSegStartOfDaySet(string bizDate, string system, string secId, string quantity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemoSegStartOfDaySet(bizDate, system, secId, quantity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DashApplication.ServicePosition.IPosition.EndMemoSegStartOfDaySet(System.IAsyncResult result) {
            base.Channel.EndMemoSegStartOfDaySet(result);
        }
        
        private System.IAsyncResult OnBeginMemoSegStartOfDaySet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            string system = ((string)(inValues[1]));
            string secId = ((string)(inValues[2]));
            string quantity = ((string)(inValues[3]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginMemoSegStartOfDaySet(bizDate, system, secId, quantity, callback, asyncState);
        }
        
        private object[] OnEndMemoSegStartOfDaySet(System.IAsyncResult result) {
            ((DashApplication.ServicePosition.IPosition)(this)).EndMemoSegStartOfDaySet(result);
            return null;
        }
        
        private void OnMemoSegStartOfDaySetCompleted(object state) {
            if ((this.MemoSegStartOfDaySetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemoSegStartOfDaySetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemoSegStartOfDaySetAsync(string bizDate, string system, string secId, string quantity) {
            this.MemoSegStartOfDaySetAsync(bizDate, system, secId, quantity, null);
        }
        
        public void MemoSegStartOfDaySetAsync(string bizDate, string system, string secId, string quantity, object userState) {
            if ((this.onBeginMemoSegStartOfDaySetDelegate == null)) {
                this.onBeginMemoSegStartOfDaySetDelegate = new BeginOperationDelegate(this.OnBeginMemoSegStartOfDaySet);
            }
            if ((this.onEndMemoSegStartOfDaySetDelegate == null)) {
                this.onEndMemoSegStartOfDaySetDelegate = new EndOperationDelegate(this.OnEndMemoSegStartOfDaySet);
            }
            if ((this.onMemoSegStartOfDaySetCompletedDelegate == null)) {
                this.onMemoSegStartOfDaySetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemoSegStartOfDaySetCompleted);
            }
            base.InvokeAsync(this.onBeginMemoSegStartOfDaySetDelegate, new object[] {
                        bizDate,
                        system,
                        secId,
                        quantity}, this.onEndMemoSegStartOfDaySetDelegate, this.onMemoSegStartOfDaySetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginPenaltyBoxGet(bool showHistory, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPenaltyBoxGet(showHistory, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndPenaltyBoxGet(System.IAsyncResult result) {
            return base.Channel.EndPenaltyBoxGet(result);
        }
        
        private System.IAsyncResult OnBeginPenaltyBoxGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool showHistory = ((bool)(inValues[0]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginPenaltyBoxGet(showHistory, callback, asyncState);
        }
        
        private object[] OnEndPenaltyBoxGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndPenaltyBoxGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPenaltyBoxGetCompleted(object state) {
            if ((this.PenaltyBoxGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PenaltyBoxGetCompleted(this, new PenaltyBoxGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PenaltyBoxGetAsync(bool showHistory) {
            this.PenaltyBoxGetAsync(showHistory, null);
        }
        
        public void PenaltyBoxGetAsync(bool showHistory, object userState) {
            if ((this.onBeginPenaltyBoxGetDelegate == null)) {
                this.onBeginPenaltyBoxGetDelegate = new BeginOperationDelegate(this.OnBeginPenaltyBoxGet);
            }
            if ((this.onEndPenaltyBoxGetDelegate == null)) {
                this.onEndPenaltyBoxGetDelegate = new EndOperationDelegate(this.OnEndPenaltyBoxGet);
            }
            if ((this.onPenaltyBoxGetCompletedDelegate == null)) {
                this.onPenaltyBoxGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPenaltyBoxGetCompleted);
            }
            base.InvokeAsync(this.onBeginPenaltyBoxGetDelegate, new object[] {
                        showHistory}, this.onEndPenaltyBoxGetDelegate, this.onPenaltyBoxGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginPenaltyBoxItemSet(string secId, string actUserId, string comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPenaltyBoxItemSet(secId, actUserId, comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DashApplication.ServicePosition.IPosition.EndPenaltyBoxItemSet(System.IAsyncResult result) {
            base.Channel.EndPenaltyBoxItemSet(result);
        }
        
        private System.IAsyncResult OnBeginPenaltyBoxItemSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string secId = ((string)(inValues[0]));
            string actUserId = ((string)(inValues[1]));
            string comment = ((string)(inValues[2]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginPenaltyBoxItemSet(secId, actUserId, comment, callback, asyncState);
        }
        
        private object[] OnEndPenaltyBoxItemSet(System.IAsyncResult result) {
            ((DashApplication.ServicePosition.IPosition)(this)).EndPenaltyBoxItemSet(result);
            return null;
        }
        
        private void OnPenaltyBoxItemSetCompleted(object state) {
            if ((this.PenaltyBoxItemSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PenaltyBoxItemSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PenaltyBoxItemSetAsync(string secId, string actUserId, string comment) {
            this.PenaltyBoxItemSetAsync(secId, actUserId, comment, null);
        }
        
        public void PenaltyBoxItemSetAsync(string secId, string actUserId, string comment, object userState) {
            if ((this.onBeginPenaltyBoxItemSetDelegate == null)) {
                this.onBeginPenaltyBoxItemSetDelegate = new BeginOperationDelegate(this.OnBeginPenaltyBoxItemSet);
            }
            if ((this.onEndPenaltyBoxItemSetDelegate == null)) {
                this.onEndPenaltyBoxItemSetDelegate = new EndOperationDelegate(this.OnEndPenaltyBoxItemSet);
            }
            if ((this.onPenaltyBoxItemSetCompletedDelegate == null)) {
                this.onPenaltyBoxItemSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPenaltyBoxItemSetCompleted);
            }
            base.InvokeAsync(this.onBeginPenaltyBoxItemSetDelegate, new object[] {
                        secId,
                        actUserId,
                        comment}, this.onEndPenaltyBoxItemSetDelegate, this.onPenaltyBoxItemSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginPenaltyBoxCommentSet(string processId, string comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPenaltyBoxCommentSet(processId, comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DashApplication.ServicePosition.IPosition.EndPenaltyBoxCommentSet(System.IAsyncResult result) {
            base.Channel.EndPenaltyBoxCommentSet(result);
        }
        
        private System.IAsyncResult OnBeginPenaltyBoxCommentSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string processId = ((string)(inValues[0]));
            string comment = ((string)(inValues[1]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginPenaltyBoxCommentSet(processId, comment, callback, asyncState);
        }
        
        private object[] OnEndPenaltyBoxCommentSet(System.IAsyncResult result) {
            ((DashApplication.ServicePosition.IPosition)(this)).EndPenaltyBoxCommentSet(result);
            return null;
        }
        
        private void OnPenaltyBoxCommentSetCompleted(object state) {
            if ((this.PenaltyBoxCommentSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PenaltyBoxCommentSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PenaltyBoxCommentSetAsync(string processId, string comment) {
            this.PenaltyBoxCommentSetAsync(processId, comment, null);
        }
        
        public void PenaltyBoxCommentSetAsync(string processId, string comment, object userState) {
            if ((this.onBeginPenaltyBoxCommentSetDelegate == null)) {
                this.onBeginPenaltyBoxCommentSetDelegate = new BeginOperationDelegate(this.OnBeginPenaltyBoxCommentSet);
            }
            if ((this.onEndPenaltyBoxCommentSetDelegate == null)) {
                this.onEndPenaltyBoxCommentSetDelegate = new EndOperationDelegate(this.OnEndPenaltyBoxCommentSet);
            }
            if ((this.onPenaltyBoxCommentSetCompletedDelegate == null)) {
                this.onPenaltyBoxCommentSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPenaltyBoxCommentSetCompleted);
            }
            base.InvokeAsync(this.onBeginPenaltyBoxCommentSetDelegate, new object[] {
                        processId,
                        comment}, this.onEndPenaltyBoxCommentSetDelegate, this.onPenaltyBoxCommentSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginRecallTradingGet(string bizDate, string bookGroup, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRecallTradingGet(bizDate, bookGroup, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndRecallTradingGet(System.IAsyncResult result) {
            return base.Channel.EndRecallTradingGet(result);
        }
        
        private System.IAsyncResult OnBeginRecallTradingGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            string bookGroup = ((string)(inValues[1]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginRecallTradingGet(bizDate, bookGroup, callback, asyncState);
        }
        
        private object[] OnEndRecallTradingGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndRecallTradingGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRecallTradingGetCompleted(object state) {
            if ((this.RecallTradingGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RecallTradingGetCompleted(this, new RecallTradingGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RecallTradingGetAsync(string bizDate, string bookGroup) {
            this.RecallTradingGetAsync(bizDate, bookGroup, null);
        }
        
        public void RecallTradingGetAsync(string bizDate, string bookGroup, object userState) {
            if ((this.onBeginRecallTradingGetDelegate == null)) {
                this.onBeginRecallTradingGetDelegate = new BeginOperationDelegate(this.OnBeginRecallTradingGet);
            }
            if ((this.onEndRecallTradingGetDelegate == null)) {
                this.onEndRecallTradingGetDelegate = new EndOperationDelegate(this.OnEndRecallTradingGet);
            }
            if ((this.onRecallTradingGetCompletedDelegate == null)) {
                this.onRecallTradingGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRecallTradingGetCompleted);
            }
            base.InvokeAsync(this.onBeginRecallTradingGetDelegate, new object[] {
                        bizDate,
                        bookGroup}, this.onEndRecallTradingGetDelegate, this.onRecallTradingGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginRecallTradingSet(string bizDate, string bookGroup, string secId, string comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRecallTradingSet(bizDate, bookGroup, secId, comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DashApplication.ServicePosition.IPosition.EndRecallTradingSet(System.IAsyncResult result) {
            base.Channel.EndRecallTradingSet(result);
        }
        
        private System.IAsyncResult OnBeginRecallTradingSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            string bookGroup = ((string)(inValues[1]));
            string secId = ((string)(inValues[2]));
            string comment = ((string)(inValues[3]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginRecallTradingSet(bizDate, bookGroup, secId, comment, callback, asyncState);
        }
        
        private object[] OnEndRecallTradingSet(System.IAsyncResult result) {
            ((DashApplication.ServicePosition.IPosition)(this)).EndRecallTradingSet(result);
            return null;
        }
        
        private void OnRecallTradingSetCompleted(object state) {
            if ((this.RecallTradingSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RecallTradingSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RecallTradingSetAsync(string bizDate, string bookGroup, string secId, string comment) {
            this.RecallTradingSetAsync(bizDate, bookGroup, secId, comment, null);
        }
        
        public void RecallTradingSetAsync(string bizDate, string bookGroup, string secId, string comment, object userState) {
            if ((this.onBeginRecallTradingSetDelegate == null)) {
                this.onBeginRecallTradingSetDelegate = new BeginOperationDelegate(this.OnBeginRecallTradingSet);
            }
            if ((this.onEndRecallTradingSetDelegate == null)) {
                this.onEndRecallTradingSetDelegate = new EndOperationDelegate(this.OnEndRecallTradingSet);
            }
            if ((this.onRecallTradingSetCompletedDelegate == null)) {
                this.onRecallTradingSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRecallTradingSetCompleted);
            }
            base.InvokeAsync(this.onBeginRecallTradingSetDelegate, new object[] {
                        bizDate,
                        bookGroup,
                        secId,
                        comment}, this.onEndRecallTradingSetDelegate, this.onRecallTradingSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginShortSaleBillingBPSItemSet(string bizDate, string accountNumber, string secId, string quantityShorted, string quantityCovered, string settlementDate, string price, string rate, string actUserId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginShortSaleBillingBPSItemSet(bizDate, accountNumber, secId, quantityShorted, quantityCovered, settlementDate, price, rate, actUserId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndShortSaleBillingBPSItemSet(System.IAsyncResult result) {
            return base.Channel.EndShortSaleBillingBPSItemSet(result);
        }
        
        private System.IAsyncResult OnBeginShortSaleBillingBPSItemSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            string accountNumber = ((string)(inValues[1]));
            string secId = ((string)(inValues[2]));
            string quantityShorted = ((string)(inValues[3]));
            string quantityCovered = ((string)(inValues[4]));
            string settlementDate = ((string)(inValues[5]));
            string price = ((string)(inValues[6]));
            string rate = ((string)(inValues[7]));
            string actUserId = ((string)(inValues[8]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginShortSaleBillingBPSItemSet(bizDate, accountNumber, secId, quantityShorted, quantityCovered, settlementDate, price, rate, actUserId, callback, asyncState);
        }
        
        private object[] OnEndShortSaleBillingBPSItemSet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndShortSaleBillingBPSItemSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnShortSaleBillingBPSItemSetCompleted(object state) {
            if ((this.ShortSaleBillingBPSItemSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ShortSaleBillingBPSItemSetCompleted(this, new ShortSaleBillingBPSItemSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ShortSaleBillingBPSItemSetAsync(string bizDate, string accountNumber, string secId, string quantityShorted, string quantityCovered, string settlementDate, string price, string rate, string actUserId) {
            this.ShortSaleBillingBPSItemSetAsync(bizDate, accountNumber, secId, quantityShorted, quantityCovered, settlementDate, price, rate, actUserId, null);
        }
        
        public void ShortSaleBillingBPSItemSetAsync(string bizDate, string accountNumber, string secId, string quantityShorted, string quantityCovered, string settlementDate, string price, string rate, string actUserId, object userState) {
            if ((this.onBeginShortSaleBillingBPSItemSetDelegate == null)) {
                this.onBeginShortSaleBillingBPSItemSetDelegate = new BeginOperationDelegate(this.OnBeginShortSaleBillingBPSItemSet);
            }
            if ((this.onEndShortSaleBillingBPSItemSetDelegate == null)) {
                this.onEndShortSaleBillingBPSItemSetDelegate = new EndOperationDelegate(this.OnEndShortSaleBillingBPSItemSet);
            }
            if ((this.onShortSaleBillingBPSItemSetCompletedDelegate == null)) {
                this.onShortSaleBillingBPSItemSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnShortSaleBillingBPSItemSetCompleted);
            }
            base.InvokeAsync(this.onBeginShortSaleBillingBPSItemSetDelegate, new object[] {
                        bizDate,
                        accountNumber,
                        secId,
                        quantityShorted,
                        quantityCovered,
                        settlementDate,
                        price,
                        rate,
                        actUserId}, this.onEndShortSaleBillingBPSItemSetDelegate, this.onShortSaleBillingBPSItemSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginCollateralizationUtilDetailGet(string bizDate, string classGroup, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCollateralizationUtilDetailGet(bizDate, classGroup, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndCollateralizationUtilDetailGet(System.IAsyncResult result) {
            return base.Channel.EndCollateralizationUtilDetailGet(result);
        }
        
        private System.IAsyncResult OnBeginCollateralizationUtilDetailGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            string classGroup = ((string)(inValues[1]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginCollateralizationUtilDetailGet(bizDate, classGroup, callback, asyncState);
        }
        
        private object[] OnEndCollateralizationUtilDetailGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndCollateralizationUtilDetailGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCollateralizationUtilDetailGetCompleted(object state) {
            if ((this.CollateralizationUtilDetailGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CollateralizationUtilDetailGetCompleted(this, new CollateralizationUtilDetailGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CollateralizationUtilDetailGetAsync(string bizDate, string classGroup) {
            this.CollateralizationUtilDetailGetAsync(bizDate, classGroup, null);
        }
        
        public void CollateralizationUtilDetailGetAsync(string bizDate, string classGroup, object userState) {
            if ((this.onBeginCollateralizationUtilDetailGetDelegate == null)) {
                this.onBeginCollateralizationUtilDetailGetDelegate = new BeginOperationDelegate(this.OnBeginCollateralizationUtilDetailGet);
            }
            if ((this.onEndCollateralizationUtilDetailGetDelegate == null)) {
                this.onEndCollateralizationUtilDetailGetDelegate = new EndOperationDelegate(this.OnEndCollateralizationUtilDetailGet);
            }
            if ((this.onCollateralizationUtilDetailGetCompletedDelegate == null)) {
                this.onCollateralizationUtilDetailGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCollateralizationUtilDetailGetCompleted);
            }
            base.InvokeAsync(this.onBeginCollateralizationUtilDetailGetDelegate, new object[] {
                        bizDate,
                        classGroup}, this.onEndCollateralizationUtilDetailGetDelegate, this.onCollateralizationUtilDetailGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginCollateralizationUtilStartOfDayGet(string bizDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCollateralizationUtilStartOfDayGet(bizDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndCollateralizationUtilStartOfDayGet(System.IAsyncResult result) {
            return base.Channel.EndCollateralizationUtilStartOfDayGet(result);
        }
        
        private System.IAsyncResult OnBeginCollateralizationUtilStartOfDayGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginCollateralizationUtilStartOfDayGet(bizDate, callback, asyncState);
        }
        
        private object[] OnEndCollateralizationUtilStartOfDayGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndCollateralizationUtilStartOfDayGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCollateralizationUtilStartOfDayGetCompleted(object state) {
            if ((this.CollateralizationUtilStartOfDayGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CollateralizationUtilStartOfDayGetCompleted(this, new CollateralizationUtilStartOfDayGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CollateralizationUtilStartOfDayGetAsync(string bizDate) {
            this.CollateralizationUtilStartOfDayGetAsync(bizDate, null);
        }
        
        public void CollateralizationUtilStartOfDayGetAsync(string bizDate, object userState) {
            if ((this.onBeginCollateralizationUtilStartOfDayGetDelegate == null)) {
                this.onBeginCollateralizationUtilStartOfDayGetDelegate = new BeginOperationDelegate(this.OnBeginCollateralizationUtilStartOfDayGet);
            }
            if ((this.onEndCollateralizationUtilStartOfDayGetDelegate == null)) {
                this.onEndCollateralizationUtilStartOfDayGetDelegate = new EndOperationDelegate(this.OnEndCollateralizationUtilStartOfDayGet);
            }
            if ((this.onCollateralizationUtilStartOfDayGetCompletedDelegate == null)) {
                this.onCollateralizationUtilStartOfDayGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCollateralizationUtilStartOfDayGetCompleted);
            }
            base.InvokeAsync(this.onBeginCollateralizationUtilStartOfDayGetDelegate, new object[] {
                        bizDate}, this.onEndCollateralizationUtilStartOfDayGetDelegate, this.onCollateralizationUtilStartOfDayGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginCollateralizationUtilIntraDayGet(string bizDate, string priceThreshold, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCollateralizationUtilIntraDayGet(bizDate, priceThreshold, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndCollateralizationUtilIntraDayGet(System.IAsyncResult result) {
            return base.Channel.EndCollateralizationUtilIntraDayGet(result);
        }
        
        private System.IAsyncResult OnBeginCollateralizationUtilIntraDayGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            string priceThreshold = ((string)(inValues[1]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginCollateralizationUtilIntraDayGet(bizDate, priceThreshold, callback, asyncState);
        }
        
        private object[] OnEndCollateralizationUtilIntraDayGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndCollateralizationUtilIntraDayGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCollateralizationUtilIntraDayGetCompleted(object state) {
            if ((this.CollateralizationUtilIntraDayGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CollateralizationUtilIntraDayGetCompleted(this, new CollateralizationUtilIntraDayGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CollateralizationUtilIntraDayGetAsync(string bizDate, string priceThreshold) {
            this.CollateralizationUtilIntraDayGetAsync(bizDate, priceThreshold, null);
        }
        
        public void CollateralizationUtilIntraDayGetAsync(string bizDate, string priceThreshold, object userState) {
            if ((this.onBeginCollateralizationUtilIntraDayGetDelegate == null)) {
                this.onBeginCollateralizationUtilIntraDayGetDelegate = new BeginOperationDelegate(this.OnBeginCollateralizationUtilIntraDayGet);
            }
            if ((this.onEndCollateralizationUtilIntraDayGetDelegate == null)) {
                this.onEndCollateralizationUtilIntraDayGetDelegate = new EndOperationDelegate(this.OnEndCollateralizationUtilIntraDayGet);
            }
            if ((this.onCollateralizationUtilIntraDayGetCompletedDelegate == null)) {
                this.onCollateralizationUtilIntraDayGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCollateralizationUtilIntraDayGetCompleted);
            }
            base.InvokeAsync(this.onBeginCollateralizationUtilIntraDayGetDelegate, new object[] {
                        bizDate,
                        priceThreshold}, this.onEndCollateralizationUtilIntraDayGetDelegate, this.onCollateralizationUtilIntraDayGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginBorrowsMorningGet(string bizDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBorrowsMorningGet(bizDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndBorrowsMorningGet(System.IAsyncResult result) {
            return base.Channel.EndBorrowsMorningGet(result);
        }
        
        private System.IAsyncResult OnBeginBorrowsMorningGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginBorrowsMorningGet(bizDate, callback, asyncState);
        }
        
        private object[] OnEndBorrowsMorningGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndBorrowsMorningGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBorrowsMorningGetCompleted(object state) {
            if ((this.BorrowsMorningGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BorrowsMorningGetCompleted(this, new BorrowsMorningGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BorrowsMorningGetAsync(string bizDate) {
            this.BorrowsMorningGetAsync(bizDate, null);
        }
        
        public void BorrowsMorningGetAsync(string bizDate, object userState) {
            if ((this.onBeginBorrowsMorningGetDelegate == null)) {
                this.onBeginBorrowsMorningGetDelegate = new BeginOperationDelegate(this.OnBeginBorrowsMorningGet);
            }
            if ((this.onEndBorrowsMorningGetDelegate == null)) {
                this.onEndBorrowsMorningGetDelegate = new EndOperationDelegate(this.OnEndBorrowsMorningGet);
            }
            if ((this.onBorrowsMorningGetCompletedDelegate == null)) {
                this.onBorrowsMorningGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBorrowsMorningGetCompleted);
            }
            base.InvokeAsync(this.onBeginBorrowsMorningGetDelegate, new object[] {
                        bizDate}, this.onEndBorrowsMorningGetDelegate, this.onBorrowsMorningGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginBorrowsMorningSet(string bizDate, string bookGroup, string secId, string quantity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBorrowsMorningSet(bizDate, bookGroup, secId, quantity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DashApplication.ServicePosition.IPosition.EndBorrowsMorningSet(System.IAsyncResult result) {
            base.Channel.EndBorrowsMorningSet(result);
        }
        
        private System.IAsyncResult OnBeginBorrowsMorningSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            string bookGroup = ((string)(inValues[1]));
            string secId = ((string)(inValues[2]));
            string quantity = ((string)(inValues[3]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginBorrowsMorningSet(bizDate, bookGroup, secId, quantity, callback, asyncState);
        }
        
        private object[] OnEndBorrowsMorningSet(System.IAsyncResult result) {
            ((DashApplication.ServicePosition.IPosition)(this)).EndBorrowsMorningSet(result);
            return null;
        }
        
        private void OnBorrowsMorningSetCompleted(object state) {
            if ((this.BorrowsMorningSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BorrowsMorningSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BorrowsMorningSetAsync(string bizDate, string bookGroup, string secId, string quantity) {
            this.BorrowsMorningSetAsync(bizDate, bookGroup, secId, quantity, null);
        }
        
        public void BorrowsMorningSetAsync(string bizDate, string bookGroup, string secId, string quantity, object userState) {
            if ((this.onBeginBorrowsMorningSetDelegate == null)) {
                this.onBeginBorrowsMorningSetDelegate = new BeginOperationDelegate(this.OnBeginBorrowsMorningSet);
            }
            if ((this.onEndBorrowsMorningSetDelegate == null)) {
                this.onEndBorrowsMorningSetDelegate = new EndOperationDelegate(this.OnEndBorrowsMorningSet);
            }
            if ((this.onBorrowsMorningSetCompletedDelegate == null)) {
                this.onBorrowsMorningSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBorrowsMorningSetCompleted);
            }
            base.InvokeAsync(this.onBeginBorrowsMorningSetDelegate, new object[] {
                        bizDate,
                        bookGroup,
                        secId,
                        quantity}, this.onEndBorrowsMorningSetDelegate, this.onBorrowsMorningSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginBorrowsMorningPurge(string bizDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBorrowsMorningPurge(bizDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DashApplication.ServicePosition.IPosition.EndBorrowsMorningPurge(System.IAsyncResult result) {
            base.Channel.EndBorrowsMorningPurge(result);
        }
        
        private System.IAsyncResult OnBeginBorrowsMorningPurge(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginBorrowsMorningPurge(bizDate, callback, asyncState);
        }
        
        private object[] OnEndBorrowsMorningPurge(System.IAsyncResult result) {
            ((DashApplication.ServicePosition.IPosition)(this)).EndBorrowsMorningPurge(result);
            return null;
        }
        
        private void OnBorrowsMorningPurgeCompleted(object state) {
            if ((this.BorrowsMorningPurgeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BorrowsMorningPurgeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BorrowsMorningPurgeAsync(string bizDate) {
            this.BorrowsMorningPurgeAsync(bizDate, null);
        }
        
        public void BorrowsMorningPurgeAsync(string bizDate, object userState) {
            if ((this.onBeginBorrowsMorningPurgeDelegate == null)) {
                this.onBeginBorrowsMorningPurgeDelegate = new BeginOperationDelegate(this.OnBeginBorrowsMorningPurge);
            }
            if ((this.onEndBorrowsMorningPurgeDelegate == null)) {
                this.onEndBorrowsMorningPurgeDelegate = new EndOperationDelegate(this.OnEndBorrowsMorningPurge);
            }
            if ((this.onBorrowsMorningPurgeCompletedDelegate == null)) {
                this.onBorrowsMorningPurgeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBorrowsMorningPurgeCompleted);
            }
            base.InvokeAsync(this.onBeginBorrowsMorningPurgeDelegate, new object[] {
                        bizDate}, this.onEndBorrowsMorningPurgeDelegate, this.onBorrowsMorningPurgeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginCheckListGet(string bizDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckListGet(bizDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndCheckListGet(System.IAsyncResult result) {
            return base.Channel.EndCheckListGet(result);
        }
        
        private System.IAsyncResult OnBeginCheckListGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginCheckListGet(bizDate, callback, asyncState);
        }
        
        private object[] OnEndCheckListGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndCheckListGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckListGetCompleted(object state) {
            if ((this.CheckListGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckListGetCompleted(this, new CheckListGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckListGetAsync(string bizDate) {
            this.CheckListGetAsync(bizDate, null);
        }
        
        public void CheckListGetAsync(string bizDate, object userState) {
            if ((this.onBeginCheckListGetDelegate == null)) {
                this.onBeginCheckListGetDelegate = new BeginOperationDelegate(this.OnBeginCheckListGet);
            }
            if ((this.onEndCheckListGetDelegate == null)) {
                this.onEndCheckListGetDelegate = new EndOperationDelegate(this.OnEndCheckListGet);
            }
            if ((this.onCheckListGetCompletedDelegate == null)) {
                this.onCheckListGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckListGetCompleted);
            }
            base.InvokeAsync(this.onBeginCheckListGetDelegate, new object[] {
                        bizDate}, this.onEndCheckListGetDelegate, this.onCheckListGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginCheckListItemSet(string bizDate, string processId, string itemComment, string itemUserId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckListItemSet(bizDate, processId, itemComment, itemUserId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DashApplication.ServicePosition.IPosition.EndCheckListItemSet(System.IAsyncResult result) {
            base.Channel.EndCheckListItemSet(result);
        }
        
        private System.IAsyncResult OnBeginCheckListItemSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            string processId = ((string)(inValues[1]));
            string itemComment = ((string)(inValues[2]));
            string itemUserId = ((string)(inValues[3]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginCheckListItemSet(bizDate, processId, itemComment, itemUserId, callback, asyncState);
        }
        
        private object[] OnEndCheckListItemSet(System.IAsyncResult result) {
            ((DashApplication.ServicePosition.IPosition)(this)).EndCheckListItemSet(result);
            return null;
        }
        
        private void OnCheckListItemSetCompleted(object state) {
            if ((this.CheckListItemSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckListItemSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckListItemSetAsync(string bizDate, string processId, string itemComment, string itemUserId) {
            this.CheckListItemSetAsync(bizDate, processId, itemComment, itemUserId, null);
        }
        
        public void CheckListItemSetAsync(string bizDate, string processId, string itemComment, string itemUserId, object userState) {
            if ((this.onBeginCheckListItemSetDelegate == null)) {
                this.onBeginCheckListItemSetDelegate = new BeginOperationDelegate(this.OnBeginCheckListItemSet);
            }
            if ((this.onEndCheckListItemSetDelegate == null)) {
                this.onEndCheckListItemSetDelegate = new EndOperationDelegate(this.OnEndCheckListItemSet);
            }
            if ((this.onCheckListItemSetCompletedDelegate == null)) {
                this.onCheckListItemSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckListItemSetCompleted);
            }
            base.InvokeAsync(this.onBeginCheckListItemSetDelegate, new object[] {
                        bizDate,
                        processId,
                        itemComment,
                        itemUserId}, this.onEndCheckListItemSetDelegate, this.onCheckListItemSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginKeyValueGet(string keyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginKeyValueGet(keyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string DashApplication.ServicePosition.IPosition.EndKeyValueGet(System.IAsyncResult result) {
            return base.Channel.EndKeyValueGet(result);
        }
        
        private System.IAsyncResult OnBeginKeyValueGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keyId = ((string)(inValues[0]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginKeyValueGet(keyId, callback, asyncState);
        }
        
        private object[] OnEndKeyValueGet(System.IAsyncResult result) {
            string retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndKeyValueGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnKeyValueGetCompleted(object state) {
            if ((this.KeyValueGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.KeyValueGetCompleted(this, new KeyValueGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void KeyValueGetAsync(string keyId) {
            this.KeyValueGetAsync(keyId, null);
        }
        
        public void KeyValueGetAsync(string keyId, object userState) {
            if ((this.onBeginKeyValueGetDelegate == null)) {
                this.onBeginKeyValueGetDelegate = new BeginOperationDelegate(this.OnBeginKeyValueGet);
            }
            if ((this.onEndKeyValueGetDelegate == null)) {
                this.onEndKeyValueGetDelegate = new EndOperationDelegate(this.OnEndKeyValueGet);
            }
            if ((this.onKeyValueGetCompletedDelegate == null)) {
                this.onKeyValueGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnKeyValueGetCompleted);
            }
            base.InvokeAsync(this.onBeginKeyValueGetDelegate, new object[] {
                        keyId}, this.onEndKeyValueGetDelegate, this.onKeyValueGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginKeyValueSet(string keyId, string keyValue, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginKeyValueSet(keyId, keyValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DashApplication.ServicePosition.IPosition.EndKeyValueSet(System.IAsyncResult result) {
            base.Channel.EndKeyValueSet(result);
        }
        
        private System.IAsyncResult OnBeginKeyValueSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keyId = ((string)(inValues[0]));
            string keyValue = ((string)(inValues[1]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginKeyValueSet(keyId, keyValue, callback, asyncState);
        }
        
        private object[] OnEndKeyValueSet(System.IAsyncResult result) {
            ((DashApplication.ServicePosition.IPosition)(this)).EndKeyValueSet(result);
            return null;
        }
        
        private void OnKeyValueSetCompleted(object state) {
            if ((this.KeyValueSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.KeyValueSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void KeyValueSetAsync(string keyId, string keyValue) {
            this.KeyValueSetAsync(keyId, keyValue, null);
        }
        
        public void KeyValueSetAsync(string keyId, string keyValue, object userState) {
            if ((this.onBeginKeyValueSetDelegate == null)) {
                this.onBeginKeyValueSetDelegate = new BeginOperationDelegate(this.OnBeginKeyValueSet);
            }
            if ((this.onEndKeyValueSetDelegate == null)) {
                this.onEndKeyValueSetDelegate = new EndOperationDelegate(this.OnEndKeyValueSet);
            }
            if ((this.onKeyValueSetCompletedDelegate == null)) {
                this.onKeyValueSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnKeyValueSetCompleted);
            }
            base.InvokeAsync(this.onBeginKeyValueSetDelegate, new object[] {
                        keyId,
                        keyValue}, this.onEndKeyValueSetDelegate, this.onKeyValueSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginBookBalancesGet(string bizDate, string bookGroup, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBookBalancesGet(bizDate, bookGroup, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndBookBalancesGet(System.IAsyncResult result) {
            return base.Channel.EndBookBalancesGet(result);
        }
        
        private System.IAsyncResult OnBeginBookBalancesGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            string bookGroup = ((string)(inValues[1]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginBookBalancesGet(bizDate, bookGroup, callback, asyncState);
        }
        
        private object[] OnEndBookBalancesGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndBookBalancesGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBookBalancesGetCompleted(object state) {
            if ((this.BookBalancesGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BookBalancesGetCompleted(this, new BookBalancesGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BookBalancesGetAsync(string bizDate, string bookGroup) {
            this.BookBalancesGetAsync(bizDate, bookGroup, null);
        }
        
        public void BookBalancesGetAsync(string bizDate, string bookGroup, object userState) {
            if ((this.onBeginBookBalancesGetDelegate == null)) {
                this.onBeginBookBalancesGetDelegate = new BeginOperationDelegate(this.OnBeginBookBalancesGet);
            }
            if ((this.onEndBookBalancesGetDelegate == null)) {
                this.onEndBookBalancesGetDelegate = new EndOperationDelegate(this.OnEndBookBalancesGet);
            }
            if ((this.onBookBalancesGetCompletedDelegate == null)) {
                this.onBookBalancesGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBookBalancesGetCompleted);
            }
            base.InvokeAsync(this.onBeginBookBalancesGetDelegate, new object[] {
                        bizDate,
                        bookGroup}, this.onEndBookBalancesGetDelegate, this.onBookBalancesGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginBookCreditLBookBalancesGet(string bizDate, string bookGroup, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBookCreditLBookBalancesGet(bizDate, bookGroup, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndBookCreditLBookBalancesGet(System.IAsyncResult result) {
            return base.Channel.EndBookCreditLBookBalancesGet(result);
        }
        
        private System.IAsyncResult OnBeginBookCreditLBookBalancesGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            string bookGroup = ((string)(inValues[1]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginBookCreditLBookBalancesGet(bizDate, bookGroup, callback, asyncState);
        }
        
        private object[] OnEndBookCreditLBookBalancesGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndBookCreditLBookBalancesGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBookCreditLBookBalancesGetCompleted(object state) {
            if ((this.BookCreditLBookBalancesGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BookCreditLBookBalancesGetCompleted(this, new BookCreditLBookBalancesGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BookCreditLBookBalancesGetAsync(string bizDate, string bookGroup) {
            this.BookCreditLBookBalancesGetAsync(bizDate, bookGroup, null);
        }
        
        public void BookCreditLBookBalancesGetAsync(string bizDate, string bookGroup, object userState) {
            if ((this.onBeginBookCreditLBookBalancesGetDelegate == null)) {
                this.onBeginBookCreditLBookBalancesGetDelegate = new BeginOperationDelegate(this.OnBeginBookCreditLBookBalancesGet);
            }
            if ((this.onEndBookCreditLBookBalancesGetDelegate == null)) {
                this.onEndBookCreditLBookBalancesGetDelegate = new EndOperationDelegate(this.OnEndBookCreditLBookBalancesGet);
            }
            if ((this.onBookCreditLBookBalancesGetCompletedDelegate == null)) {
                this.onBookCreditLBookBalancesGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBookCreditLBookBalancesGetCompleted);
            }
            base.InvokeAsync(this.onBeginBookCreditLBookBalancesGetDelegate, new object[] {
                        bizDate,
                        bookGroup}, this.onEndBookCreditLBookBalancesGetDelegate, this.onBookCreditLBookBalancesGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginRecallTradingSupplementGet(string bizDatePrior, string bizDate, string bookGroup, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRecallTradingSupplementGet(bizDatePrior, bizDate, bookGroup, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndRecallTradingSupplementGet(System.IAsyncResult result) {
            return base.Channel.EndRecallTradingSupplementGet(result);
        }
        
        private System.IAsyncResult OnBeginRecallTradingSupplementGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDatePrior = ((string)(inValues[0]));
            string bizDate = ((string)(inValues[1]));
            string bookGroup = ((string)(inValues[2]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginRecallTradingSupplementGet(bizDatePrior, bizDate, bookGroup, callback, asyncState);
        }
        
        private object[] OnEndRecallTradingSupplementGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndRecallTradingSupplementGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRecallTradingSupplementGetCompleted(object state) {
            if ((this.RecallTradingSupplementGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RecallTradingSupplementGetCompleted(this, new RecallTradingSupplementGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RecallTradingSupplementGetAsync(string bizDatePrior, string bizDate, string bookGroup) {
            this.RecallTradingSupplementGetAsync(bizDatePrior, bizDate, bookGroup, null);
        }
        
        public void RecallTradingSupplementGetAsync(string bizDatePrior, string bizDate, string bookGroup, object userState) {
            if ((this.onBeginRecallTradingSupplementGetDelegate == null)) {
                this.onBeginRecallTradingSupplementGetDelegate = new BeginOperationDelegate(this.OnBeginRecallTradingSupplementGet);
            }
            if ((this.onEndRecallTradingSupplementGetDelegate == null)) {
                this.onEndRecallTradingSupplementGetDelegate = new EndOperationDelegate(this.OnEndRecallTradingSupplementGet);
            }
            if ((this.onRecallTradingSupplementGetCompletedDelegate == null)) {
                this.onRecallTradingSupplementGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRecallTradingSupplementGetCompleted);
            }
            base.InvokeAsync(this.onBeginRecallTradingSupplementGetDelegate, new object[] {
                        bizDatePrior,
                        bizDate,
                        bookGroup}, this.onEndRecallTradingSupplementGetDelegate, this.onRecallTradingSupplementGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginUserValidationGet(string userName, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserValidationGet(userName, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool DashApplication.ServicePosition.IPosition.EndUserValidationGet(System.IAsyncResult result) {
            return base.Channel.EndUserValidationGet(result);
        }
        
        private System.IAsyncResult OnBeginUserValidationGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginUserValidationGet(userName, password, callback, asyncState);
        }
        
        private object[] OnEndUserValidationGet(System.IAsyncResult result) {
            bool retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndUserValidationGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserValidationGetCompleted(object state) {
            if ((this.UserValidationGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserValidationGetCompleted(this, new UserValidationGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserValidationGetAsync(string userName, string password) {
            this.UserValidationGetAsync(userName, password, null);
        }
        
        public void UserValidationGetAsync(string userName, string password, object userState) {
            if ((this.onBeginUserValidationGetDelegate == null)) {
                this.onBeginUserValidationGetDelegate = new BeginOperationDelegate(this.OnBeginUserValidationGet);
            }
            if ((this.onEndUserValidationGetDelegate == null)) {
                this.onEndUserValidationGetDelegate = new EndOperationDelegate(this.OnEndUserValidationGet);
            }
            if ((this.onUserValidationGetCompletedDelegate == null)) {
                this.onUserValidationGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserValidationGetCompleted);
            }
            base.InvokeAsync(this.onBeginUserValidationGetDelegate, new object[] {
                        userName,
                        password}, this.onEndUserValidationGetDelegate, this.onUserValidationGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginContractDataGet(string bizDate, string bookGroup, string secId, string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginContractDataGet(bizDate, bookGroup, secId, userId, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndContractDataGet(System.IAsyncResult result) {
            return base.Channel.EndContractDataGet(result);
        }
        
        private System.IAsyncResult OnBeginContractDataGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            string bookGroup = ((string)(inValues[1]));
            string secId = ((string)(inValues[2]));
            string userId = ((string)(inValues[3]));
            string functionPath = ((string)(inValues[4]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginContractDataGet(bizDate, bookGroup, secId, userId, functionPath, callback, asyncState);
        }
        
        private object[] OnEndContractDataGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndContractDataGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnContractDataGetCompleted(object state) {
            if ((this.ContractDataGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ContractDataGetCompleted(this, new ContractDataGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ContractDataGetAsync(string bizDate, string bookGroup, string secId, string userId, string functionPath) {
            this.ContractDataGetAsync(bizDate, bookGroup, secId, userId, functionPath, null);
        }
        
        public void ContractDataGetAsync(string bizDate, string bookGroup, string secId, string userId, string functionPath, object userState) {
            if ((this.onBeginContractDataGetDelegate == null)) {
                this.onBeginContractDataGetDelegate = new BeginOperationDelegate(this.OnBeginContractDataGet);
            }
            if ((this.onEndContractDataGetDelegate == null)) {
                this.onEndContractDataGetDelegate = new EndOperationDelegate(this.OnEndContractDataGet);
            }
            if ((this.onContractDataGetCompletedDelegate == null)) {
                this.onContractDataGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnContractDataGetCompleted);
            }
            base.InvokeAsync(this.onBeginContractDataGetDelegate, new object[] {
                        bizDate,
                        bookGroup,
                        secId,
                        userId,
                        functionPath}, this.onEndContractDataGetDelegate, this.onContractDataGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginContractSummaryByCashLoad(string bizDate, string bookGroup, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginContractSummaryByCashLoad(bizDate, bookGroup, localeType, userId, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndContractSummaryByCashLoad(System.IAsyncResult result) {
            return base.Channel.EndContractSummaryByCashLoad(result);
        }
        
        private System.IAsyncResult OnBeginContractSummaryByCashLoad(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            string bookGroup = ((string)(inValues[1]));
            DashApplication.ServicePosition.Locale localeType = ((DashApplication.ServicePosition.Locale)(inValues[2]));
            string userId = ((string)(inValues[3]));
            string functionPath = ((string)(inValues[4]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginContractSummaryByCashLoad(bizDate, bookGroup, localeType, userId, functionPath, callback, asyncState);
        }
        
        private object[] OnEndContractSummaryByCashLoad(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndContractSummaryByCashLoad(result);
            return new object[] {
                    retVal};
        }
        
        private void OnContractSummaryByCashLoadCompleted(object state) {
            if ((this.ContractSummaryByCashLoadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ContractSummaryByCashLoadCompleted(this, new ContractSummaryByCashLoadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ContractSummaryByCashLoadAsync(string bizDate, string bookGroup, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath) {
            this.ContractSummaryByCashLoadAsync(bizDate, bookGroup, localeType, userId, functionPath, null);
        }
        
        public void ContractSummaryByCashLoadAsync(string bizDate, string bookGroup, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, object userState) {
            if ((this.onBeginContractSummaryByCashLoadDelegate == null)) {
                this.onBeginContractSummaryByCashLoadDelegate = new BeginOperationDelegate(this.OnBeginContractSummaryByCashLoad);
            }
            if ((this.onEndContractSummaryByCashLoadDelegate == null)) {
                this.onEndContractSummaryByCashLoadDelegate = new EndOperationDelegate(this.OnEndContractSummaryByCashLoad);
            }
            if ((this.onContractSummaryByCashLoadCompletedDelegate == null)) {
                this.onContractSummaryByCashLoadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnContractSummaryByCashLoadCompleted);
            }
            base.InvokeAsync(this.onBeginContractSummaryByCashLoadDelegate, new object[] {
                        bizDate,
                        bookGroup,
                        localeType,
                        userId,
                        functionPath}, this.onEndContractSummaryByCashLoadDelegate, this.onContractSummaryByCashLoadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginContractSummaryBySecurity(string bizDate, string bookGroup, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginContractSummaryBySecurity(bizDate, bookGroup, localeType, userId, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndContractSummaryBySecurity(System.IAsyncResult result) {
            return base.Channel.EndContractSummaryBySecurity(result);
        }
        
        private System.IAsyncResult OnBeginContractSummaryBySecurity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            string bookGroup = ((string)(inValues[1]));
            DashApplication.ServicePosition.Locale localeType = ((DashApplication.ServicePosition.Locale)(inValues[2]));
            string userId = ((string)(inValues[3]));
            string functionPath = ((string)(inValues[4]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginContractSummaryBySecurity(bizDate, bookGroup, localeType, userId, functionPath, callback, asyncState);
        }
        
        private object[] OnEndContractSummaryBySecurity(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndContractSummaryBySecurity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnContractSummaryBySecurityCompleted(object state) {
            if ((this.ContractSummaryBySecurityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ContractSummaryBySecurityCompleted(this, new ContractSummaryBySecurityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ContractSummaryBySecurityAsync(string bizDate, string bookGroup, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath) {
            this.ContractSummaryBySecurityAsync(bizDate, bookGroup, localeType, userId, functionPath, null);
        }
        
        public void ContractSummaryBySecurityAsync(string bizDate, string bookGroup, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, object userState) {
            if ((this.onBeginContractSummaryBySecurityDelegate == null)) {
                this.onBeginContractSummaryBySecurityDelegate = new BeginOperationDelegate(this.OnBeginContractSummaryBySecurity);
            }
            if ((this.onEndContractSummaryBySecurityDelegate == null)) {
                this.onEndContractSummaryBySecurityDelegate = new EndOperationDelegate(this.OnEndContractSummaryBySecurity);
            }
            if ((this.onContractSummaryBySecurityCompletedDelegate == null)) {
                this.onContractSummaryBySecurityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnContractSummaryBySecurityCompleted);
            }
            base.InvokeAsync(this.onBeginContractSummaryBySecurityDelegate, new object[] {
                        bizDate,
                        bookGroup,
                        localeType,
                        userId,
                        functionPath}, this.onEndContractSummaryBySecurityDelegate, this.onContractSummaryBySecurityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginContractsExcessCollateralSummaryLoad(string bizDate, string bookGroup, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginContractsExcessCollateralSummaryLoad(bizDate, bookGroup, localeType, userId, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndContractsExcessCollateralSummaryLoad(System.IAsyncResult result) {
            return base.Channel.EndContractsExcessCollateralSummaryLoad(result);
        }
        
        private System.IAsyncResult OnBeginContractsExcessCollateralSummaryLoad(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            string bookGroup = ((string)(inValues[1]));
            DashApplication.ServicePosition.Locale localeType = ((DashApplication.ServicePosition.Locale)(inValues[2]));
            string userId = ((string)(inValues[3]));
            string functionPath = ((string)(inValues[4]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginContractsExcessCollateralSummaryLoad(bizDate, bookGroup, localeType, userId, functionPath, callback, asyncState);
        }
        
        private object[] OnEndContractsExcessCollateralSummaryLoad(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndContractsExcessCollateralSummaryLoad(result);
            return new object[] {
                    retVal};
        }
        
        private void OnContractsExcessCollateralSummaryLoadCompleted(object state) {
            if ((this.ContractsExcessCollateralSummaryLoadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ContractsExcessCollateralSummaryLoadCompleted(this, new ContractsExcessCollateralSummaryLoadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ContractsExcessCollateralSummaryLoadAsync(string bizDate, string bookGroup, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath) {
            this.ContractsExcessCollateralSummaryLoadAsync(bizDate, bookGroup, localeType, userId, functionPath, null);
        }
        
        public void ContractsExcessCollateralSummaryLoadAsync(string bizDate, string bookGroup, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, object userState) {
            if ((this.onBeginContractsExcessCollateralSummaryLoadDelegate == null)) {
                this.onBeginContractsExcessCollateralSummaryLoadDelegate = new BeginOperationDelegate(this.OnBeginContractsExcessCollateralSummaryLoad);
            }
            if ((this.onEndContractsExcessCollateralSummaryLoadDelegate == null)) {
                this.onEndContractsExcessCollateralSummaryLoadDelegate = new EndOperationDelegate(this.OnEndContractsExcessCollateralSummaryLoad);
            }
            if ((this.onContractsExcessCollateralSummaryLoadCompletedDelegate == null)) {
                this.onContractsExcessCollateralSummaryLoadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnContractsExcessCollateralSummaryLoadCompleted);
            }
            base.InvokeAsync(this.onBeginContractsExcessCollateralSummaryLoadDelegate, new object[] {
                        bizDate,
                        bookGroup,
                        localeType,
                        userId,
                        functionPath}, this.onEndContractsExcessCollateralSummaryLoadDelegate, this.onContractsExcessCollateralSummaryLoadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginContractSummaryByBooKGroupCashLoad(string bizDate, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginContractSummaryByBooKGroupCashLoad(bizDate, localeType, userId, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndContractSummaryByBooKGroupCashLoad(System.IAsyncResult result) {
            return base.Channel.EndContractSummaryByBooKGroupCashLoad(result);
        }
        
        private System.IAsyncResult OnBeginContractSummaryByBooKGroupCashLoad(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            DashApplication.ServicePosition.Locale localeType = ((DashApplication.ServicePosition.Locale)(inValues[1]));
            string userId = ((string)(inValues[2]));
            string functionPath = ((string)(inValues[3]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginContractSummaryByBooKGroupCashLoad(bizDate, localeType, userId, functionPath, callback, asyncState);
        }
        
        private object[] OnEndContractSummaryByBooKGroupCashLoad(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndContractSummaryByBooKGroupCashLoad(result);
            return new object[] {
                    retVal};
        }
        
        private void OnContractSummaryByBooKGroupCashLoadCompleted(object state) {
            if ((this.ContractSummaryByBooKGroupCashLoadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ContractSummaryByBooKGroupCashLoadCompleted(this, new ContractSummaryByBooKGroupCashLoadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ContractSummaryByBooKGroupCashLoadAsync(string bizDate, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath) {
            this.ContractSummaryByBooKGroupCashLoadAsync(bizDate, localeType, userId, functionPath, null);
        }
        
        public void ContractSummaryByBooKGroupCashLoadAsync(string bizDate, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, object userState) {
            if ((this.onBeginContractSummaryByBooKGroupCashLoadDelegate == null)) {
                this.onBeginContractSummaryByBooKGroupCashLoadDelegate = new BeginOperationDelegate(this.OnBeginContractSummaryByBooKGroupCashLoad);
            }
            if ((this.onEndContractSummaryByBooKGroupCashLoadDelegate == null)) {
                this.onEndContractSummaryByBooKGroupCashLoadDelegate = new EndOperationDelegate(this.OnEndContractSummaryByBooKGroupCashLoad);
            }
            if ((this.onContractSummaryByBooKGroupCashLoadCompletedDelegate == null)) {
                this.onContractSummaryByBooKGroupCashLoadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnContractSummaryByBooKGroupCashLoadCompleted);
            }
            base.InvokeAsync(this.onBeginContractSummaryByBooKGroupCashLoadDelegate, new object[] {
                        bizDate,
                        localeType,
                        userId,
                        functionPath}, this.onEndContractSummaryByBooKGroupCashLoadDelegate, this.onContractSummaryByBooKGroupCashLoadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginContractSummaryByBooKGroupSharesCashLoad(string bizDate, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginContractSummaryByBooKGroupSharesCashLoad(bizDate, localeType, userId, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndContractSummaryByBooKGroupSharesCashLoad(System.IAsyncResult result) {
            return base.Channel.EndContractSummaryByBooKGroupSharesCashLoad(result);
        }
        
        private System.IAsyncResult OnBeginContractSummaryByBooKGroupSharesCashLoad(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            DashApplication.ServicePosition.Locale localeType = ((DashApplication.ServicePosition.Locale)(inValues[1]));
            string userId = ((string)(inValues[2]));
            string functionPath = ((string)(inValues[3]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginContractSummaryByBooKGroupSharesCashLoad(bizDate, localeType, userId, functionPath, callback, asyncState);
        }
        
        private object[] OnEndContractSummaryByBooKGroupSharesCashLoad(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndContractSummaryByBooKGroupSharesCashLoad(result);
            return new object[] {
                    retVal};
        }
        
        private void OnContractSummaryByBooKGroupSharesCashLoadCompleted(object state) {
            if ((this.ContractSummaryByBooKGroupSharesCashLoadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ContractSummaryByBooKGroupSharesCashLoadCompleted(this, new ContractSummaryByBooKGroupSharesCashLoadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ContractSummaryByBooKGroupSharesCashLoadAsync(string bizDate, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath) {
            this.ContractSummaryByBooKGroupSharesCashLoadAsync(bizDate, localeType, userId, functionPath, null);
        }
        
        public void ContractSummaryByBooKGroupSharesCashLoadAsync(string bizDate, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, object userState) {
            if ((this.onBeginContractSummaryByBooKGroupSharesCashLoadDelegate == null)) {
                this.onBeginContractSummaryByBooKGroupSharesCashLoadDelegate = new BeginOperationDelegate(this.OnBeginContractSummaryByBooKGroupSharesCashLoad);
            }
            if ((this.onEndContractSummaryByBooKGroupSharesCashLoadDelegate == null)) {
                this.onEndContractSummaryByBooKGroupSharesCashLoadDelegate = new EndOperationDelegate(this.OnEndContractSummaryByBooKGroupSharesCashLoad);
            }
            if ((this.onContractSummaryByBooKGroupSharesCashLoadCompletedDelegate == null)) {
                this.onContractSummaryByBooKGroupSharesCashLoadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnContractSummaryByBooKGroupSharesCashLoadCompleted);
            }
            base.InvokeAsync(this.onBeginContractSummaryByBooKGroupSharesCashLoadDelegate, new object[] {
                        bizDate,
                        localeType,
                        userId,
                        functionPath}, this.onEndContractSummaryByBooKGroupSharesCashLoadDelegate, this.onContractSummaryByBooKGroupSharesCashLoadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginContractsDetailByBookSummaryLoad(string bizDate, string bookGroup, string book, string currencyIso, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginContractsDetailByBookSummaryLoad(bizDate, bookGroup, book, currencyIso, localeType, userId, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndContractsDetailByBookSummaryLoad(System.IAsyncResult result) {
            return base.Channel.EndContractsDetailByBookSummaryLoad(result);
        }
        
        private System.IAsyncResult OnBeginContractsDetailByBookSummaryLoad(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            string bookGroup = ((string)(inValues[1]));
            string book = ((string)(inValues[2]));
            string currencyIso = ((string)(inValues[3]));
            DashApplication.ServicePosition.Locale localeType = ((DashApplication.ServicePosition.Locale)(inValues[4]));
            string userId = ((string)(inValues[5]));
            string functionPath = ((string)(inValues[6]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginContractsDetailByBookSummaryLoad(bizDate, bookGroup, book, currencyIso, localeType, userId, functionPath, callback, asyncState);
        }
        
        private object[] OnEndContractsDetailByBookSummaryLoad(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndContractsDetailByBookSummaryLoad(result);
            return new object[] {
                    retVal};
        }
        
        private void OnContractsDetailByBookSummaryLoadCompleted(object state) {
            if ((this.ContractsDetailByBookSummaryLoadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ContractsDetailByBookSummaryLoadCompleted(this, new ContractsDetailByBookSummaryLoadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ContractsDetailByBookSummaryLoadAsync(string bizDate, string bookGroup, string book, string currencyIso, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath) {
            this.ContractsDetailByBookSummaryLoadAsync(bizDate, bookGroup, book, currencyIso, localeType, userId, functionPath, null);
        }
        
        public void ContractsDetailByBookSummaryLoadAsync(string bizDate, string bookGroup, string book, string currencyIso, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, object userState) {
            if ((this.onBeginContractsDetailByBookSummaryLoadDelegate == null)) {
                this.onBeginContractsDetailByBookSummaryLoadDelegate = new BeginOperationDelegate(this.OnBeginContractsDetailByBookSummaryLoad);
            }
            if ((this.onEndContractsDetailByBookSummaryLoadDelegate == null)) {
                this.onEndContractsDetailByBookSummaryLoadDelegate = new EndOperationDelegate(this.OnEndContractsDetailByBookSummaryLoad);
            }
            if ((this.onContractsDetailByBookSummaryLoadCompletedDelegate == null)) {
                this.onContractsDetailByBookSummaryLoadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnContractsDetailByBookSummaryLoadCompleted);
            }
            base.InvokeAsync(this.onBeginContractsDetailByBookSummaryLoadDelegate, new object[] {
                        bizDate,
                        bookGroup,
                        book,
                        currencyIso,
                        localeType,
                        userId,
                        functionPath}, this.onEndContractsDetailByBookSummaryLoadDelegate, this.onContractsDetailByBookSummaryLoadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginMarksGet(string bizDate, string bookGroup, string book, string currencyIso, DashApplication.ServicePosition.Locale localeType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMarksGet(bizDate, bookGroup, book, currencyIso, localeType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndMarksGet(System.IAsyncResult result) {
            return base.Channel.EndMarksGet(result);
        }
        
        private System.IAsyncResult OnBeginMarksGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            string bookGroup = ((string)(inValues[1]));
            string book = ((string)(inValues[2]));
            string currencyIso = ((string)(inValues[3]));
            DashApplication.ServicePosition.Locale localeType = ((DashApplication.ServicePosition.Locale)(inValues[4]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginMarksGet(bizDate, bookGroup, book, currencyIso, localeType, callback, asyncState);
        }
        
        private object[] OnEndMarksGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndMarksGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMarksGetCompleted(object state) {
            if ((this.MarksGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MarksGetCompleted(this, new MarksGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MarksGetAsync(string bizDate, string bookGroup, string book, string currencyIso, DashApplication.ServicePosition.Locale localeType) {
            this.MarksGetAsync(bizDate, bookGroup, book, currencyIso, localeType, null);
        }
        
        public void MarksGetAsync(string bizDate, string bookGroup, string book, string currencyIso, DashApplication.ServicePosition.Locale localeType, object userState) {
            if ((this.onBeginMarksGetDelegate == null)) {
                this.onBeginMarksGetDelegate = new BeginOperationDelegate(this.OnBeginMarksGet);
            }
            if ((this.onEndMarksGetDelegate == null)) {
                this.onEndMarksGetDelegate = new EndOperationDelegate(this.OnEndMarksGet);
            }
            if ((this.onMarksGetCompletedDelegate == null)) {
                this.onMarksGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMarksGetCompleted);
            }
            base.InvokeAsync(this.onBeginMarksGetDelegate, new object[] {
                        bizDate,
                        bookGroup,
                        book,
                        currencyIso,
                        localeType}, this.onEndMarksGetDelegate, this.onMarksGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginInventoryHistoryGet(string secId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInventoryHistoryGet(secId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndInventoryHistoryGet(System.IAsyncResult result) {
            return base.Channel.EndInventoryHistoryGet(result);
        }
        
        private System.IAsyncResult OnBeginInventoryHistoryGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string secId = ((string)(inValues[0]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginInventoryHistoryGet(secId, callback, asyncState);
        }
        
        private object[] OnEndInventoryHistoryGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndInventoryHistoryGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInventoryHistoryGetCompleted(object state) {
            if ((this.InventoryHistoryGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InventoryHistoryGetCompleted(this, new InventoryHistoryGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InventoryHistoryGetAsync(string secId) {
            this.InventoryHistoryGetAsync(secId, null);
        }
        
        public void InventoryHistoryGetAsync(string secId, object userState) {
            if ((this.onBeginInventoryHistoryGetDelegate == null)) {
                this.onBeginInventoryHistoryGetDelegate = new BeginOperationDelegate(this.OnBeginInventoryHistoryGet);
            }
            if ((this.onEndInventoryHistoryGetDelegate == null)) {
                this.onEndInventoryHistoryGetDelegate = new EndOperationDelegate(this.OnEndInventoryHistoryGet);
            }
            if ((this.onInventoryHistoryGetCompletedDelegate == null)) {
                this.onInventoryHistoryGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInventoryHistoryGetCompleted);
            }
            base.InvokeAsync(this.onBeginInventoryHistoryGetDelegate, new object[] {
                        secId}, this.onEndInventoryHistoryGetDelegate, this.onInventoryHistoryGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginInventoryHistorySummaryGet(string secId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInventoryHistorySummaryGet(secId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndInventoryHistorySummaryGet(System.IAsyncResult result) {
            return base.Channel.EndInventoryHistorySummaryGet(result);
        }
        
        private System.IAsyncResult OnBeginInventoryHistorySummaryGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string secId = ((string)(inValues[0]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginInventoryHistorySummaryGet(secId, callback, asyncState);
        }
        
        private object[] OnEndInventoryHistorySummaryGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndInventoryHistorySummaryGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInventoryHistorySummaryGetCompleted(object state) {
            if ((this.InventoryHistorySummaryGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InventoryHistorySummaryGetCompleted(this, new InventoryHistorySummaryGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InventoryHistorySummaryGetAsync(string secId) {
            this.InventoryHistorySummaryGetAsync(secId, null);
        }
        
        public void InventoryHistorySummaryGetAsync(string secId, object userState) {
            if ((this.onBeginInventoryHistorySummaryGetDelegate == null)) {
                this.onBeginInventoryHistorySummaryGetDelegate = new BeginOperationDelegate(this.OnBeginInventoryHistorySummaryGet);
            }
            if ((this.onEndInventoryHistorySummaryGetDelegate == null)) {
                this.onEndInventoryHistorySummaryGetDelegate = new EndOperationDelegate(this.OnEndInventoryHistorySummaryGet);
            }
            if ((this.onInventoryHistorySummaryGetCompletedDelegate == null)) {
                this.onInventoryHistorySummaryGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInventoryHistorySummaryGetCompleted);
            }
            base.InvokeAsync(this.onBeginInventoryHistorySummaryGetDelegate, new object[] {
                        secId}, this.onEndInventoryHistorySummaryGetDelegate, this.onInventoryHistorySummaryGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginInventoryDeskGet(string desk, string bizDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInventoryDeskGet(desk, bizDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndInventoryDeskGet(System.IAsyncResult result) {
            return base.Channel.EndInventoryDeskGet(result);
        }
        
        private System.IAsyncResult OnBeginInventoryDeskGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string desk = ((string)(inValues[0]));
            string bizDate = ((string)(inValues[1]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginInventoryDeskGet(desk, bizDate, callback, asyncState);
        }
        
        private object[] OnEndInventoryDeskGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndInventoryDeskGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInventoryDeskGetCompleted(object state) {
            if ((this.InventoryDeskGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InventoryDeskGetCompleted(this, new InventoryDeskGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InventoryDeskGetAsync(string desk, string bizDate) {
            this.InventoryDeskGetAsync(desk, bizDate, null);
        }
        
        public void InventoryDeskGetAsync(string desk, string bizDate, object userState) {
            if ((this.onBeginInventoryDeskGetDelegate == null)) {
                this.onBeginInventoryDeskGetDelegate = new BeginOperationDelegate(this.OnBeginInventoryDeskGet);
            }
            if ((this.onEndInventoryDeskGetDelegate == null)) {
                this.onEndInventoryDeskGetDelegate = new EndOperationDelegate(this.OnEndInventoryDeskGet);
            }
            if ((this.onInventoryDeskGetCompletedDelegate == null)) {
                this.onInventoryDeskGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInventoryDeskGetCompleted);
            }
            base.InvokeAsync(this.onBeginInventoryDeskGetDelegate, new object[] {
                        desk,
                        bizDate}, this.onEndInventoryDeskGetDelegate, this.onInventoryDeskGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginDeskListGet(string bizDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeskListGet(bizDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndDeskListGet(System.IAsyncResult result) {
            return base.Channel.EndDeskListGet(result);
        }
        
        private System.IAsyncResult OnBeginDeskListGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginDeskListGet(bizDate, callback, asyncState);
        }
        
        private object[] OnEndDeskListGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndDeskListGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeskListGetCompleted(object state) {
            if ((this.DeskListGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeskListGetCompleted(this, new DeskListGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeskListGetAsync(string bizDate) {
            this.DeskListGetAsync(bizDate, null);
        }
        
        public void DeskListGetAsync(string bizDate, object userState) {
            if ((this.onBeginDeskListGetDelegate == null)) {
                this.onBeginDeskListGetDelegate = new BeginOperationDelegate(this.OnBeginDeskListGet);
            }
            if ((this.onEndDeskListGetDelegate == null)) {
                this.onEndDeskListGetDelegate = new EndOperationDelegate(this.OnEndDeskListGet);
            }
            if ((this.onDeskListGetCompletedDelegate == null)) {
                this.onDeskListGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeskListGetCompleted);
            }
            base.InvokeAsync(this.onBeginDeskListGetDelegate, new object[] {
                        bizDate}, this.onEndDeskListGetDelegate, this.onDeskListGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginBookGroupGet(string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBookGroupGet(userId, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndBookGroupGet(System.IAsyncResult result) {
            return base.Channel.EndBookGroupGet(result);
        }
        
        private System.IAsyncResult OnBeginBookGroupGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            string functionPath = ((string)(inValues[1]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginBookGroupGet(userId, functionPath, callback, asyncState);
        }
        
        private object[] OnEndBookGroupGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndBookGroupGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBookGroupGetCompleted(object state) {
            if ((this.BookGroupGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BookGroupGetCompleted(this, new BookGroupGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BookGroupGetAsync(string userId, string functionPath) {
            this.BookGroupGetAsync(userId, functionPath, null);
        }
        
        public void BookGroupGetAsync(string userId, string functionPath, object userState) {
            if ((this.onBeginBookGroupGetDelegate == null)) {
                this.onBeginBookGroupGetDelegate = new BeginOperationDelegate(this.OnBeginBookGroupGet);
            }
            if ((this.onEndBookGroupGetDelegate == null)) {
                this.onEndBookGroupGetDelegate = new EndOperationDelegate(this.OnEndBookGroupGet);
            }
            if ((this.onBookGroupGetCompletedDelegate == null)) {
                this.onBookGroupGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBookGroupGetCompleted);
            }
            base.InvokeAsync(this.onBeginBookGroupGetDelegate, new object[] {
                        userId,
                        functionPath}, this.onEndBookGroupGetDelegate, this.onBookGroupGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginHtbProfitabilityGet(string bizDate, DashApplication.ServicePosition.HtbLocale htbLocate, int numOfRecords, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHtbProfitabilityGet(bizDate, htbLocate, numOfRecords, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndHtbProfitabilityGet(System.IAsyncResult result) {
            return base.Channel.EndHtbProfitabilityGet(result);
        }
        
        private System.IAsyncResult OnBeginHtbProfitabilityGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            DashApplication.ServicePosition.HtbLocale htbLocate = ((DashApplication.ServicePosition.HtbLocale)(inValues[1]));
            int numOfRecords = ((int)(inValues[2]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginHtbProfitabilityGet(bizDate, htbLocate, numOfRecords, callback, asyncState);
        }
        
        private object[] OnEndHtbProfitabilityGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndHtbProfitabilityGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHtbProfitabilityGetCompleted(object state) {
            if ((this.HtbProfitabilityGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HtbProfitabilityGetCompleted(this, new HtbProfitabilityGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HtbProfitabilityGetAsync(string bizDate, DashApplication.ServicePosition.HtbLocale htbLocate, int numOfRecords) {
            this.HtbProfitabilityGetAsync(bizDate, htbLocate, numOfRecords, null);
        }
        
        public void HtbProfitabilityGetAsync(string bizDate, DashApplication.ServicePosition.HtbLocale htbLocate, int numOfRecords, object userState) {
            if ((this.onBeginHtbProfitabilityGetDelegate == null)) {
                this.onBeginHtbProfitabilityGetDelegate = new BeginOperationDelegate(this.OnBeginHtbProfitabilityGet);
            }
            if ((this.onEndHtbProfitabilityGetDelegate == null)) {
                this.onEndHtbProfitabilityGetDelegate = new EndOperationDelegate(this.OnEndHtbProfitabilityGet);
            }
            if ((this.onHtbProfitabilityGetCompletedDelegate == null)) {
                this.onHtbProfitabilityGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHtbProfitabilityGetCompleted);
            }
            base.InvokeAsync(this.onBeginHtbProfitabilityGetDelegate, new object[] {
                        bizDate,
                        htbLocate,
                        numOfRecords}, this.onEndHtbProfitabilityGetDelegate, this.onHtbProfitabilityGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginHtbProfitabilitySpreadsGet(string bizDate, DashApplication.ServicePosition.HtbLocale htbLocate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHtbProfitabilitySpreadsGet(bizDate, htbLocate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndHtbProfitabilitySpreadsGet(System.IAsyncResult result) {
            return base.Channel.EndHtbProfitabilitySpreadsGet(result);
        }
        
        private System.IAsyncResult OnBeginHtbProfitabilitySpreadsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            DashApplication.ServicePosition.HtbLocale htbLocate = ((DashApplication.ServicePosition.HtbLocale)(inValues[1]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginHtbProfitabilitySpreadsGet(bizDate, htbLocate, callback, asyncState);
        }
        
        private object[] OnEndHtbProfitabilitySpreadsGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndHtbProfitabilitySpreadsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHtbProfitabilitySpreadsGetCompleted(object state) {
            if ((this.HtbProfitabilitySpreadsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HtbProfitabilitySpreadsGetCompleted(this, new HtbProfitabilitySpreadsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HtbProfitabilitySpreadsGetAsync(string bizDate, DashApplication.ServicePosition.HtbLocale htbLocate) {
            this.HtbProfitabilitySpreadsGetAsync(bizDate, htbLocate, null);
        }
        
        public void HtbProfitabilitySpreadsGetAsync(string bizDate, DashApplication.ServicePosition.HtbLocale htbLocate, object userState) {
            if ((this.onBeginHtbProfitabilitySpreadsGetDelegate == null)) {
                this.onBeginHtbProfitabilitySpreadsGetDelegate = new BeginOperationDelegate(this.OnBeginHtbProfitabilitySpreadsGet);
            }
            if ((this.onEndHtbProfitabilitySpreadsGetDelegate == null)) {
                this.onEndHtbProfitabilitySpreadsGetDelegate = new EndOperationDelegate(this.OnEndHtbProfitabilitySpreadsGet);
            }
            if ((this.onHtbProfitabilitySpreadsGetCompletedDelegate == null)) {
                this.onHtbProfitabilitySpreadsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHtbProfitabilitySpreadsGetCompleted);
            }
            base.InvokeAsync(this.onBeginHtbProfitabilitySpreadsGetDelegate, new object[] {
                        bizDate,
                        htbLocate}, this.onEndHtbProfitabilitySpreadsGetDelegate, this.onHtbProfitabilitySpreadsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginHolidaysGet(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHolidaysGet(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndHolidaysGet(System.IAsyncResult result) {
            return base.Channel.EndHolidaysGet(result);
        }
        
        private System.IAsyncResult OnBeginHolidaysGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginHolidaysGet(callback, asyncState);
        }
        
        private object[] OnEndHolidaysGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndHolidaysGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHolidaysGetCompleted(object state) {
            if ((this.HolidaysGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HolidaysGetCompleted(this, new HolidaysGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HolidaysGetAsync() {
            this.HolidaysGetAsync(null);
        }
        
        public void HolidaysGetAsync(object userState) {
            if ((this.onBeginHolidaysGetDelegate == null)) {
                this.onBeginHolidaysGetDelegate = new BeginOperationDelegate(this.OnBeginHolidaysGet);
            }
            if ((this.onEndHolidaysGetDelegate == null)) {
                this.onEndHolidaysGetDelegate = new EndOperationDelegate(this.OnEndHolidaysGet);
            }
            if ((this.onHolidaysGetCompletedDelegate == null)) {
                this.onHolidaysGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHolidaysGetCompleted);
            }
            base.InvokeAsync(this.onBeginHolidaysGetDelegate, null, this.onEndHolidaysGetDelegate, this.onHolidaysGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginUserCanView(string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserCanView(userId, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool DashApplication.ServicePosition.IPosition.EndUserCanView(System.IAsyncResult result) {
            return base.Channel.EndUserCanView(result);
        }
        
        private System.IAsyncResult OnBeginUserCanView(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            string functionPath = ((string)(inValues[1]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginUserCanView(userId, functionPath, callback, asyncState);
        }
        
        private object[] OnEndUserCanView(System.IAsyncResult result) {
            bool retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndUserCanView(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserCanViewCompleted(object state) {
            if ((this.UserCanViewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserCanViewCompleted(this, new UserCanViewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserCanViewAsync(string userId, string functionPath) {
            this.UserCanViewAsync(userId, functionPath, null);
        }
        
        public void UserCanViewAsync(string userId, string functionPath, object userState) {
            if ((this.onBeginUserCanViewDelegate == null)) {
                this.onBeginUserCanViewDelegate = new BeginOperationDelegate(this.OnBeginUserCanView);
            }
            if ((this.onEndUserCanViewDelegate == null)) {
                this.onEndUserCanViewDelegate = new EndOperationDelegate(this.OnEndUserCanView);
            }
            if ((this.onUserCanViewCompletedDelegate == null)) {
                this.onUserCanViewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserCanViewCompleted);
            }
            base.InvokeAsync(this.onBeginUserCanViewDelegate, new object[] {
                        userId,
                        functionPath}, this.onEndUserCanViewDelegate, this.onUserCanViewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginWebSecurityProfileDataSetGet(string userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebSecurityProfileDataSetGet(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndWebSecurityProfileDataSetGet(System.IAsyncResult result) {
            return base.Channel.EndWebSecurityProfileDataSetGet(result);
        }
        
        private System.IAsyncResult OnBeginWebSecurityProfileDataSetGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginWebSecurityProfileDataSetGet(userId, callback, asyncState);
        }
        
        private object[] OnEndWebSecurityProfileDataSetGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndWebSecurityProfileDataSetGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWebSecurityProfileDataSetGetCompleted(object state) {
            if ((this.WebSecurityProfileDataSetGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebSecurityProfileDataSetGetCompleted(this, new WebSecurityProfileDataSetGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebSecurityProfileDataSetGetAsync(string userId) {
            this.WebSecurityProfileDataSetGetAsync(userId, null);
        }
        
        public void WebSecurityProfileDataSetGetAsync(string userId, object userState) {
            if ((this.onBeginWebSecurityProfileDataSetGetDelegate == null)) {
                this.onBeginWebSecurityProfileDataSetGetDelegate = new BeginOperationDelegate(this.OnBeginWebSecurityProfileDataSetGet);
            }
            if ((this.onEndWebSecurityProfileDataSetGetDelegate == null)) {
                this.onEndWebSecurityProfileDataSetGetDelegate = new EndOperationDelegate(this.OnEndWebSecurityProfileDataSetGet);
            }
            if ((this.onWebSecurityProfileDataSetGetCompletedDelegate == null)) {
                this.onWebSecurityProfileDataSetGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebSecurityProfileDataSetGetCompleted);
            }
            base.InvokeAsync(this.onBeginWebSecurityProfileDataSetGetDelegate, new object[] {
                        userId}, this.onEndWebSecurityProfileDataSetGetDelegate, this.onWebSecurityProfileDataSetGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginInventoryRateGet(string secId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInventoryRateGet(secId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string DashApplication.ServicePosition.IPosition.EndInventoryRateGet(System.IAsyncResult result) {
            return base.Channel.EndInventoryRateGet(result);
        }
        
        private System.IAsyncResult OnBeginInventoryRateGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string secId = ((string)(inValues[0]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginInventoryRateGet(secId, callback, asyncState);
        }
        
        private object[] OnEndInventoryRateGet(System.IAsyncResult result) {
            string retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndInventoryRateGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInventoryRateGetCompleted(object state) {
            if ((this.InventoryRateGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InventoryRateGetCompleted(this, new InventoryRateGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InventoryRateGetAsync(string secId) {
            this.InventoryRateGetAsync(secId, null);
        }
        
        public void InventoryRateGetAsync(string secId, object userState) {
            if ((this.onBeginInventoryRateGetDelegate == null)) {
                this.onBeginInventoryRateGetDelegate = new BeginOperationDelegate(this.OnBeginInventoryRateGet);
            }
            if ((this.onEndInventoryRateGetDelegate == null)) {
                this.onEndInventoryRateGetDelegate = new EndOperationDelegate(this.OnEndInventoryRateGet);
            }
            if ((this.onInventoryRateGetCompletedDelegate == null)) {
                this.onInventoryRateGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInventoryRateGetCompleted);
            }
            base.InvokeAsync(this.onBeginInventoryRateGetDelegate, new object[] {
                        secId}, this.onEndInventoryRateGetDelegate, this.onInventoryRateGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginInventoryRateHistoryGet(string secId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInventoryRateHistoryGet(secId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndInventoryRateHistoryGet(System.IAsyncResult result) {
            return base.Channel.EndInventoryRateHistoryGet(result);
        }
        
        private System.IAsyncResult OnBeginInventoryRateHistoryGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string secId = ((string)(inValues[0]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginInventoryRateHistoryGet(secId, callback, asyncState);
        }
        
        private object[] OnEndInventoryRateHistoryGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndInventoryRateHistoryGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInventoryRateHistoryGetCompleted(object state) {
            if ((this.InventoryRateHistoryGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InventoryRateHistoryGetCompleted(this, new InventoryRateHistoryGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InventoryRateHistoryGetAsync(string secId) {
            this.InventoryRateHistoryGetAsync(secId, null);
        }
        
        public void InventoryRateHistoryGetAsync(string secId, object userState) {
            if ((this.onBeginInventoryRateHistoryGetDelegate == null)) {
                this.onBeginInventoryRateHistoryGetDelegate = new BeginOperationDelegate(this.OnBeginInventoryRateHistoryGet);
            }
            if ((this.onEndInventoryRateHistoryGetDelegate == null)) {
                this.onEndInventoryRateHistoryGetDelegate = new EndOperationDelegate(this.OnEndInventoryRateHistoryGet);
            }
            if ((this.onInventoryRateHistoryGetCompletedDelegate == null)) {
                this.onInventoryRateHistoryGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInventoryRateHistoryGetCompleted);
            }
            base.InvokeAsync(this.onBeginInventoryRateHistoryGetDelegate, new object[] {
                        secId}, this.onEndInventoryRateHistoryGetDelegate, this.onInventoryRateHistoryGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginFileReader(string path, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFileReader(path, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string DashApplication.ServicePosition.IPosition.EndFileReader(System.IAsyncResult result) {
            return base.Channel.EndFileReader(result);
        }
        
        private System.IAsyncResult OnBeginFileReader(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string path = ((string)(inValues[0]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginFileReader(path, callback, asyncState);
        }
        
        private object[] OnEndFileReader(System.IAsyncResult result) {
            string retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndFileReader(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFileReaderCompleted(object state) {
            if ((this.FileReaderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FileReaderCompleted(this, new FileReaderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FileReaderAsync(string path) {
            this.FileReaderAsync(path, null);
        }
        
        public void FileReaderAsync(string path, object userState) {
            if ((this.onBeginFileReaderDelegate == null)) {
                this.onBeginFileReaderDelegate = new BeginOperationDelegate(this.OnBeginFileReader);
            }
            if ((this.onEndFileReaderDelegate == null)) {
                this.onEndFileReaderDelegate = new EndOperationDelegate(this.OnEndFileReader);
            }
            if ((this.onFileReaderCompletedDelegate == null)) {
                this.onFileReaderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFileReaderCompleted);
            }
            base.InvokeAsync(this.onBeginFileReaderDelegate, new object[] {
                        path}, this.onEndFileReaderDelegate, this.onFileReaderCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginWebReportsGet(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebReportsGet(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndWebReportsGet(System.IAsyncResult result) {
            return base.Channel.EndWebReportsGet(result);
        }
        
        private System.IAsyncResult OnBeginWebReportsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginWebReportsGet(callback, asyncState);
        }
        
        private object[] OnEndWebReportsGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndWebReportsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWebReportsGetCompleted(object state) {
            if ((this.WebReportsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebReportsGetCompleted(this, new WebReportsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebReportsGetAsync() {
            this.WebReportsGetAsync(null);
        }
        
        public void WebReportsGetAsync(object userState) {
            if ((this.onBeginWebReportsGetDelegate == null)) {
                this.onBeginWebReportsGetDelegate = new BeginOperationDelegate(this.OnBeginWebReportsGet);
            }
            if ((this.onEndWebReportsGetDelegate == null)) {
                this.onEndWebReportsGetDelegate = new EndOperationDelegate(this.OnEndWebReportsGet);
            }
            if ((this.onWebReportsGetCompletedDelegate == null)) {
                this.onWebReportsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebReportsGetCompleted);
            }
            base.InvokeAsync(this.onBeginWebReportsGetDelegate, null, this.onEndWebReportsGetDelegate, this.onWebReportsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginReportValueSet(string reportName, string reportRecipient, string format, string justify, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReportValueSet(reportName, reportRecipient, format, justify, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool DashApplication.ServicePosition.IPosition.EndReportValueSet(System.IAsyncResult result) {
            return base.Channel.EndReportValueSet(result);
        }
        
        private System.IAsyncResult OnBeginReportValueSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string reportName = ((string)(inValues[0]));
            string reportRecipient = ((string)(inValues[1]));
            string format = ((string)(inValues[2]));
            string justify = ((string)(inValues[3]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginReportValueSet(reportName, reportRecipient, format, justify, callback, asyncState);
        }
        
        private object[] OnEndReportValueSet(System.IAsyncResult result) {
            bool retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndReportValueSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReportValueSetCompleted(object state) {
            if ((this.ReportValueSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReportValueSetCompleted(this, new ReportValueSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReportValueSetAsync(string reportName, string reportRecipient, string format, string justify) {
            this.ReportValueSetAsync(reportName, reportRecipient, format, justify, null);
        }
        
        public void ReportValueSetAsync(string reportName, string reportRecipient, string format, string justify, object userState) {
            if ((this.onBeginReportValueSetDelegate == null)) {
                this.onBeginReportValueSetDelegate = new BeginOperationDelegate(this.OnBeginReportValueSet);
            }
            if ((this.onEndReportValueSetDelegate == null)) {
                this.onEndReportValueSetDelegate = new EndOperationDelegate(this.OnEndReportValueSet);
            }
            if ((this.onReportValueSetCompletedDelegate == null)) {
                this.onReportValueSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReportValueSetCompleted);
            }
            base.InvokeAsync(this.onBeginReportValueSetDelegate, new object[] {
                        reportName,
                        reportRecipient,
                        format,
                        justify}, this.onEndReportValueSetDelegate, this.onReportValueSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginStraddlesGet(string accountList, string locMemo, string accountType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStraddlesGet(accountList, locMemo, accountType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndStraddlesGet(System.IAsyncResult result) {
            return base.Channel.EndStraddlesGet(result);
        }
        
        private System.IAsyncResult OnBeginStraddlesGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accountList = ((string)(inValues[0]));
            string locMemo = ((string)(inValues[1]));
            string accountType = ((string)(inValues[2]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginStraddlesGet(accountList, locMemo, accountType, callback, asyncState);
        }
        
        private object[] OnEndStraddlesGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndStraddlesGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStraddlesGetCompleted(object state) {
            if ((this.StraddlesGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StraddlesGetCompleted(this, new StraddlesGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StraddlesGetAsync(string accountList, string locMemo, string accountType) {
            this.StraddlesGetAsync(accountList, locMemo, accountType, null);
        }
        
        public void StraddlesGetAsync(string accountList, string locMemo, string accountType, object userState) {
            if ((this.onBeginStraddlesGetDelegate == null)) {
                this.onBeginStraddlesGetDelegate = new BeginOperationDelegate(this.OnBeginStraddlesGet);
            }
            if ((this.onEndStraddlesGetDelegate == null)) {
                this.onEndStraddlesGetDelegate = new EndOperationDelegate(this.OnEndStraddlesGet);
            }
            if ((this.onStraddlesGetCompletedDelegate == null)) {
                this.onStraddlesGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStraddlesGetCompleted);
            }
            base.InvokeAsync(this.onBeginStraddlesGetDelegate, new object[] {
                        accountList,
                        locMemo,
                        accountType}, this.onEndStraddlesGetDelegate, this.onStraddlesGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginShortSaleLocatesSourceGet(string tradeDate, string source, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginShortSaleLocatesSourceGet(tradeDate, source, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndShortSaleLocatesSourceGet(System.IAsyncResult result) {
            return base.Channel.EndShortSaleLocatesSourceGet(result);
        }
        
        private System.IAsyncResult OnBeginShortSaleLocatesSourceGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string tradeDate = ((string)(inValues[0]));
            string source = ((string)(inValues[1]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginShortSaleLocatesSourceGet(tradeDate, source, callback, asyncState);
        }
        
        private object[] OnEndShortSaleLocatesSourceGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndShortSaleLocatesSourceGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnShortSaleLocatesSourceGetCompleted(object state) {
            if ((this.ShortSaleLocatesSourceGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ShortSaleLocatesSourceGetCompleted(this, new ShortSaleLocatesSourceGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ShortSaleLocatesSourceGetAsync(string tradeDate, string source) {
            this.ShortSaleLocatesSourceGetAsync(tradeDate, source, null);
        }
        
        public void ShortSaleLocatesSourceGetAsync(string tradeDate, string source, object userState) {
            if ((this.onBeginShortSaleLocatesSourceGetDelegate == null)) {
                this.onBeginShortSaleLocatesSourceGetDelegate = new BeginOperationDelegate(this.OnBeginShortSaleLocatesSourceGet);
            }
            if ((this.onEndShortSaleLocatesSourceGetDelegate == null)) {
                this.onEndShortSaleLocatesSourceGetDelegate = new EndOperationDelegate(this.OnEndShortSaleLocatesSourceGet);
            }
            if ((this.onShortSaleLocatesSourceGetCompletedDelegate == null)) {
                this.onShortSaleLocatesSourceGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnShortSaleLocatesSourceGetCompleted);
            }
            base.InvokeAsync(this.onBeginShortSaleLocatesSourceGetDelegate, new object[] {
                        tradeDate,
                        source}, this.onEndShortSaleLocatesSourceGetDelegate, this.onShortSaleLocatesSourceGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginBankLoanReleaseReportGet(string bizDate, string book, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBankLoanReleaseReportGet(bizDate, book, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndBankLoanReleaseReportGet(System.IAsyncResult result) {
            return base.Channel.EndBankLoanReleaseReportGet(result);
        }
        
        private System.IAsyncResult OnBeginBankLoanReleaseReportGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            string book = ((string)(inValues[1]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginBankLoanReleaseReportGet(bizDate, book, callback, asyncState);
        }
        
        private object[] OnEndBankLoanReleaseReportGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndBankLoanReleaseReportGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBankLoanReleaseReportGetCompleted(object state) {
            if ((this.BankLoanReleaseReportGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BankLoanReleaseReportGetCompleted(this, new BankLoanReleaseReportGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BankLoanReleaseReportGetAsync(string bizDate, string book) {
            this.BankLoanReleaseReportGetAsync(bizDate, book, null);
        }
        
        public void BankLoanReleaseReportGetAsync(string bizDate, string book, object userState) {
            if ((this.onBeginBankLoanReleaseReportGetDelegate == null)) {
                this.onBeginBankLoanReleaseReportGetDelegate = new BeginOperationDelegate(this.OnBeginBankLoanReleaseReportGet);
            }
            if ((this.onEndBankLoanReleaseReportGetDelegate == null)) {
                this.onEndBankLoanReleaseReportGetDelegate = new EndOperationDelegate(this.OnEndBankLoanReleaseReportGet);
            }
            if ((this.onBankLoanReleaseReportGetCompletedDelegate == null)) {
                this.onBankLoanReleaseReportGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBankLoanReleaseReportGetCompleted);
            }
            base.InvokeAsync(this.onBeginBankLoanReleaseReportGetDelegate, new object[] {
                        bizDate,
                        book}, this.onEndBankLoanReleaseReportGetDelegate, this.onBankLoanReleaseReportGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DashApplication.ServicePosition.IPosition.BeginMemoSegLockupGet(string system, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemoSegLockupGet(system, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] DashApplication.ServicePosition.IPosition.EndMemoSegLockupGet(System.IAsyncResult result) {
            return base.Channel.EndMemoSegLockupGet(result);
        }
        
        private System.IAsyncResult OnBeginMemoSegLockupGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string system = ((string)(inValues[0]));
            return ((DashApplication.ServicePosition.IPosition)(this)).BeginMemoSegLockupGet(system, callback, asyncState);
        }
        
        private object[] OnEndMemoSegLockupGet(System.IAsyncResult result) {
            byte[] retVal = ((DashApplication.ServicePosition.IPosition)(this)).EndMemoSegLockupGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemoSegLockupGetCompleted(object state) {
            if ((this.MemoSegLockupGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemoSegLockupGetCompleted(this, new MemoSegLockupGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemoSegLockupGetAsync(string system) {
            this.MemoSegLockupGetAsync(system, null);
        }
        
        public void MemoSegLockupGetAsync(string system, object userState) {
            if ((this.onBeginMemoSegLockupGetDelegate == null)) {
                this.onBeginMemoSegLockupGetDelegate = new BeginOperationDelegate(this.OnBeginMemoSegLockupGet);
            }
            if ((this.onEndMemoSegLockupGetDelegate == null)) {
                this.onEndMemoSegLockupGetDelegate = new EndOperationDelegate(this.OnEndMemoSegLockupGet);
            }
            if ((this.onMemoSegLockupGetCompletedDelegate == null)) {
                this.onMemoSegLockupGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemoSegLockupGetCompleted);
            }
            base.InvokeAsync(this.onBeginMemoSegLockupGetDelegate, new object[] {
                        system}, this.onEndMemoSegLockupGetDelegate, this.onMemoSegLockupGetCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override DashApplication.ServicePosition.IPosition CreateChannel() {
            return new PositionClientChannel(this);
        }
        
        private class PositionClientChannel : ChannelBase<DashApplication.ServicePosition.IPosition>, DashApplication.ServicePosition.IPosition {
            
            public PositionClientChannel(System.ServiceModel.ClientBase<DashApplication.ServicePosition.IPosition> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginMemoSegStartOfDaySet(string bizDate, string system, string secId, string quantity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = bizDate;
                _args[1] = system;
                _args[2] = secId;
                _args[3] = quantity;
                System.IAsyncResult _result = base.BeginInvoke("MemoSegStartOfDaySet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndMemoSegStartOfDaySet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("MemoSegStartOfDaySet", _args, result);
            }
            
            public System.IAsyncResult BeginPenaltyBoxGet(bool showHistory, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = showHistory;
                System.IAsyncResult _result = base.BeginInvoke("PenaltyBoxGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndPenaltyBoxGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("PenaltyBoxGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPenaltyBoxItemSet(string secId, string actUserId, string comment, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = secId;
                _args[1] = actUserId;
                _args[2] = comment;
                System.IAsyncResult _result = base.BeginInvoke("PenaltyBoxItemSet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndPenaltyBoxItemSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("PenaltyBoxItemSet", _args, result);
            }
            
            public System.IAsyncResult BeginPenaltyBoxCommentSet(string processId, string comment, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = processId;
                _args[1] = comment;
                System.IAsyncResult _result = base.BeginInvoke("PenaltyBoxCommentSet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndPenaltyBoxCommentSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("PenaltyBoxCommentSet", _args, result);
            }
            
            public System.IAsyncResult BeginRecallTradingGet(string bizDate, string bookGroup, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = bizDate;
                _args[1] = bookGroup;
                System.IAsyncResult _result = base.BeginInvoke("RecallTradingGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndRecallTradingGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("RecallTradingGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRecallTradingSet(string bizDate, string bookGroup, string secId, string comment, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = bizDate;
                _args[1] = bookGroup;
                _args[2] = secId;
                _args[3] = comment;
                System.IAsyncResult _result = base.BeginInvoke("RecallTradingSet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRecallTradingSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RecallTradingSet", _args, result);
            }
            
            public System.IAsyncResult BeginShortSaleBillingBPSItemSet(string bizDate, string accountNumber, string secId, string quantityShorted, string quantityCovered, string settlementDate, string price, string rate, string actUserId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[9];
                _args[0] = bizDate;
                _args[1] = accountNumber;
                _args[2] = secId;
                _args[3] = quantityShorted;
                _args[4] = quantityCovered;
                _args[5] = settlementDate;
                _args[6] = price;
                _args[7] = rate;
                _args[8] = actUserId;
                System.IAsyncResult _result = base.BeginInvoke("ShortSaleBillingBPSItemSet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndShortSaleBillingBPSItemSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("ShortSaleBillingBPSItemSet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCollateralizationUtilDetailGet(string bizDate, string classGroup, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = bizDate;
                _args[1] = classGroup;
                System.IAsyncResult _result = base.BeginInvoke("CollateralizationUtilDetailGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndCollateralizationUtilDetailGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("CollateralizationUtilDetailGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCollateralizationUtilStartOfDayGet(string bizDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = bizDate;
                System.IAsyncResult _result = base.BeginInvoke("CollateralizationUtilStartOfDayGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndCollateralizationUtilStartOfDayGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("CollateralizationUtilStartOfDayGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCollateralizationUtilIntraDayGet(string bizDate, string priceThreshold, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = bizDate;
                _args[1] = priceThreshold;
                System.IAsyncResult _result = base.BeginInvoke("CollateralizationUtilIntraDayGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndCollateralizationUtilIntraDayGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("CollateralizationUtilIntraDayGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBorrowsMorningGet(string bizDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = bizDate;
                System.IAsyncResult _result = base.BeginInvoke("BorrowsMorningGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndBorrowsMorningGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("BorrowsMorningGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBorrowsMorningSet(string bizDate, string bookGroup, string secId, string quantity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = bizDate;
                _args[1] = bookGroup;
                _args[2] = secId;
                _args[3] = quantity;
                System.IAsyncResult _result = base.BeginInvoke("BorrowsMorningSet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndBorrowsMorningSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("BorrowsMorningSet", _args, result);
            }
            
            public System.IAsyncResult BeginBorrowsMorningPurge(string bizDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = bizDate;
                System.IAsyncResult _result = base.BeginInvoke("BorrowsMorningPurge", _args, callback, asyncState);
                return _result;
            }
            
            public void EndBorrowsMorningPurge(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("BorrowsMorningPurge", _args, result);
            }
            
            public System.IAsyncResult BeginCheckListGet(string bizDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = bizDate;
                System.IAsyncResult _result = base.BeginInvoke("CheckListGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndCheckListGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("CheckListGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckListItemSet(string bizDate, string processId, string itemComment, string itemUserId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = bizDate;
                _args[1] = processId;
                _args[2] = itemComment;
                _args[3] = itemUserId;
                System.IAsyncResult _result = base.BeginInvoke("CheckListItemSet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCheckListItemSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CheckListItemSet", _args, result);
            }
            
            public System.IAsyncResult BeginKeyValueGet(string keyId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = keyId;
                System.IAsyncResult _result = base.BeginInvoke("KeyValueGet", _args, callback, asyncState);
                return _result;
            }
            
            public string EndKeyValueGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("KeyValueGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginKeyValueSet(string keyId, string keyValue, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = keyId;
                _args[1] = keyValue;
                System.IAsyncResult _result = base.BeginInvoke("KeyValueSet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndKeyValueSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("KeyValueSet", _args, result);
            }
            
            public System.IAsyncResult BeginBookBalancesGet(string bizDate, string bookGroup, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = bizDate;
                _args[1] = bookGroup;
                System.IAsyncResult _result = base.BeginInvoke("BookBalancesGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndBookBalancesGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("BookBalancesGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBookCreditLBookBalancesGet(string bizDate, string bookGroup, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = bizDate;
                _args[1] = bookGroup;
                System.IAsyncResult _result = base.BeginInvoke("BookCreditLBookBalancesGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndBookCreditLBookBalancesGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("BookCreditLBookBalancesGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRecallTradingSupplementGet(string bizDatePrior, string bizDate, string bookGroup, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = bizDatePrior;
                _args[1] = bizDate;
                _args[2] = bookGroup;
                System.IAsyncResult _result = base.BeginInvoke("RecallTradingSupplementGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndRecallTradingSupplementGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("RecallTradingSupplementGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserValidationGet(string userName, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userName;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("UserValidationGet", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUserValidationGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UserValidationGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginContractDataGet(string bizDate, string bookGroup, string secId, string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = bizDate;
                _args[1] = bookGroup;
                _args[2] = secId;
                _args[3] = userId;
                _args[4] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("ContractDataGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndContractDataGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("ContractDataGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginContractSummaryByCashLoad(string bizDate, string bookGroup, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = bizDate;
                _args[1] = bookGroup;
                _args[2] = localeType;
                _args[3] = userId;
                _args[4] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("ContractSummaryByCashLoad", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndContractSummaryByCashLoad(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("ContractSummaryByCashLoad", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginContractSummaryBySecurity(string bizDate, string bookGroup, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = bizDate;
                _args[1] = bookGroup;
                _args[2] = localeType;
                _args[3] = userId;
                _args[4] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("ContractSummaryBySecurity", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndContractSummaryBySecurity(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("ContractSummaryBySecurity", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginContractsExcessCollateralSummaryLoad(string bizDate, string bookGroup, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = bizDate;
                _args[1] = bookGroup;
                _args[2] = localeType;
                _args[3] = userId;
                _args[4] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("ContractsExcessCollateralSummaryLoad", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndContractsExcessCollateralSummaryLoad(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("ContractsExcessCollateralSummaryLoad", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginContractSummaryByBooKGroupCashLoad(string bizDate, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = bizDate;
                _args[1] = localeType;
                _args[2] = userId;
                _args[3] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("ContractSummaryByBooKGroupCashLoad", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndContractSummaryByBooKGroupCashLoad(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("ContractSummaryByBooKGroupCashLoad", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginContractSummaryByBooKGroupSharesCashLoad(string bizDate, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = bizDate;
                _args[1] = localeType;
                _args[2] = userId;
                _args[3] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("ContractSummaryByBooKGroupSharesCashLoad", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndContractSummaryByBooKGroupSharesCashLoad(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("ContractSummaryByBooKGroupSharesCashLoad", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginContractsDetailByBookSummaryLoad(string bizDate, string bookGroup, string book, string currencyIso, DashApplication.ServicePosition.Locale localeType, string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = bizDate;
                _args[1] = bookGroup;
                _args[2] = book;
                _args[3] = currencyIso;
                _args[4] = localeType;
                _args[5] = userId;
                _args[6] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("ContractsDetailByBookSummaryLoad", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndContractsDetailByBookSummaryLoad(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("ContractsDetailByBookSummaryLoad", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMarksGet(string bizDate, string bookGroup, string book, string currencyIso, DashApplication.ServicePosition.Locale localeType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = bizDate;
                _args[1] = bookGroup;
                _args[2] = book;
                _args[3] = currencyIso;
                _args[4] = localeType;
                System.IAsyncResult _result = base.BeginInvoke("MarksGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndMarksGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("MarksGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInventoryHistoryGet(string secId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = secId;
                System.IAsyncResult _result = base.BeginInvoke("InventoryHistoryGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndInventoryHistoryGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("InventoryHistoryGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInventoryHistorySummaryGet(string secId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = secId;
                System.IAsyncResult _result = base.BeginInvoke("InventoryHistorySummaryGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndInventoryHistorySummaryGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("InventoryHistorySummaryGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInventoryDeskGet(string desk, string bizDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = desk;
                _args[1] = bizDate;
                System.IAsyncResult _result = base.BeginInvoke("InventoryDeskGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndInventoryDeskGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("InventoryDeskGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeskListGet(string bizDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = bizDate;
                System.IAsyncResult _result = base.BeginInvoke("DeskListGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndDeskListGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("DeskListGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBookGroupGet(string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("BookGroupGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndBookGroupGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("BookGroupGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHtbProfitabilityGet(string bizDate, DashApplication.ServicePosition.HtbLocale htbLocate, int numOfRecords, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = bizDate;
                _args[1] = htbLocate;
                _args[2] = numOfRecords;
                System.IAsyncResult _result = base.BeginInvoke("HtbProfitabilityGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndHtbProfitabilityGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("HtbProfitabilityGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHtbProfitabilitySpreadsGet(string bizDate, DashApplication.ServicePosition.HtbLocale htbLocate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = bizDate;
                _args[1] = htbLocate;
                System.IAsyncResult _result = base.BeginInvoke("HtbProfitabilitySpreadsGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndHtbProfitabilitySpreadsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("HtbProfitabilitySpreadsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHolidaysGet(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("HolidaysGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndHolidaysGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("HolidaysGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserCanView(string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("UserCanView", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUserCanView(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UserCanView", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWebSecurityProfileDataSetGet(string userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("WebSecurityProfileDataSetGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndWebSecurityProfileDataSetGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("WebSecurityProfileDataSetGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInventoryRateGet(string secId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = secId;
                System.IAsyncResult _result = base.BeginInvoke("InventoryRateGet", _args, callback, asyncState);
                return _result;
            }
            
            public string EndInventoryRateGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("InventoryRateGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInventoryRateHistoryGet(string secId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = secId;
                System.IAsyncResult _result = base.BeginInvoke("InventoryRateHistoryGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndInventoryRateHistoryGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("InventoryRateHistoryGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFileReader(string path, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = path;
                System.IAsyncResult _result = base.BeginInvoke("FileReader", _args, callback, asyncState);
                return _result;
            }
            
            public string EndFileReader(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("FileReader", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWebReportsGet(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("WebReportsGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndWebReportsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("WebReportsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReportValueSet(string reportName, string reportRecipient, string format, string justify, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = reportName;
                _args[1] = reportRecipient;
                _args[2] = format;
                _args[3] = justify;
                System.IAsyncResult _result = base.BeginInvoke("ReportValueSet", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndReportValueSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ReportValueSet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginStraddlesGet(string accountList, string locMemo, string accountType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = accountList;
                _args[1] = locMemo;
                _args[2] = accountType;
                System.IAsyncResult _result = base.BeginInvoke("StraddlesGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndStraddlesGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("StraddlesGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginShortSaleLocatesSourceGet(string tradeDate, string source, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = tradeDate;
                _args[1] = source;
                System.IAsyncResult _result = base.BeginInvoke("ShortSaleLocatesSourceGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndShortSaleLocatesSourceGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("ShortSaleLocatesSourceGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBankLoanReleaseReportGet(string bizDate, string book, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = bizDate;
                _args[1] = book;
                System.IAsyncResult _result = base.BeginInvoke("BankLoanReleaseReportGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndBankLoanReleaseReportGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("BankLoanReleaseReportGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemoSegLockupGet(string system, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = system;
                System.IAsyncResult _result = base.BeginInvoke("MemoSegLockupGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndMemoSegLockupGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("MemoSegLockupGet", _args, result)));
                return _result;
            }
        }
    }
}
