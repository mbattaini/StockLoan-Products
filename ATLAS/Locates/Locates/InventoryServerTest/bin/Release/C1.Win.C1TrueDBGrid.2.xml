<?xml version="1.0"?>
<doc>
    <assembly>
        <name>C1.Win.C1TrueDBGrid.2</name>
    </assembly>
    <members>
        <member name="M:C1.C1Zip.C1ZStreamReader.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamReader"/> class.
            </summary>
            <param name="baseStream">Input stream that contains the compressed data.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.#ctor(System.IO.Stream,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamReader"/> class.
            </summary>
            <param name="baseStream">Input stream that contains the compressed data.</param>
            <param name="zip">Specifies whether the compressed stream was created in zip format.</param>
            <param name="sizeCompressed">Specifies the number of compressed bytes to read from the stream.</param>
            <remarks>
            The <paramref name="sizeCompressed"/> parameter is needed only when a single stream contains
            several compressed streams (in zip files for example). If this parameter is not 
            specified, it is assumed that the stream contains a single stream of compressed data.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamReader"/> class.
            </summary>
            <param name="baseStream">Input stream that contains the compressed data.</param>
            <param name="zip">Specifies whether the compressed stream was created in zip format.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.#ctor(System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamReader"/> class.
            </summary>
            <param name="baseStream">Input stream that contains the compressed data.</param>
            <param name="header">Specifies whether the compressed stream contains header information (should be False for streams in zip files).</param>
            <param name="crc32">Specifies whether the compressed stream contains a CRC32 checksum (should be True for streams in zip files).</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.#ctor(System.IO.Stream,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamReader"/> class.
            </summary>
            <param name="baseStream">Input stream that contains the compressed data.</param>
            <param name="zip">Specifies whether the compressed stream was created in zip format.</param>
            <param name="sizeCompressed">Specifies the number of compressed bytes to read from the stream.</param>
            <param name="method">Specifies the method that was used to compress the stream.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.SetLength(System.Int64)">
            <summary>
            Sets the number of compressed bytes to read from the underlying stream.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the underlying compressed stream, decompressing them into
            a buffer, then advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buf">An array of bytes. When this method returns, <paramref name="buff"/> contains the specified byte array with the values between <paramref name="offset"/>and (<paramref name="offset"/> + <paramref name="count"/>) replaced by the uncompressed data read from the stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buff"/> at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of (decompressed) bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer. This may be less than the number of bytes 
            requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            This method is overridden and is not supported by the <see cref="T:C1.C1Zip.C1ZStreamReader"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying 
            stream.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.Close">
            <summary>
            <para>Closes the current stream compressor and flushed any pending data into the base stream.</para>
            <para>If the <see cref="P:C1.C1Zip.C1ZStreamReader.OwnsBaseStream"/> property is set to True (the default value), 
            then this method also closes the base stream and releases any resources (such as sockets 
            and file handles) associated with it.</para>
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamReader.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream 
            by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>The unsigned byte cast to an <see cref="T:System.Int32"/>, or -1 if at 
            the end of the stream.
            </returns>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamReader.BaseStream">
            <summary>
            Gets the underlying stream that contains the compressed data.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamReader.OwnsBaseStream">
            <summary>
            Gets or sets whether calling the <see cref="M:C1.C1Zip.C1ZStreamReader.Close"/> method will also
            close the underlying stream (see <see cref="P:C1.C1Zip.C1ZStreamReader.BaseStream"/>).
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamReader.SizeCompressed">
            <summary>
            Gets the number of bytes in the stream (compressed bytes).
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamReader.SizeUncompressed">
            <summary>
            Gets the number of bytes that were compressed into the stream (uncompressed bytes).
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamReader.CanRead">
            <summary>
            Always returns True.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamReader.CanWrite">
            <summary>
            Always returns False.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamReader.CanSeek">
            <summary>
            Always returns False.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamReader.Length">
            <summary>
            Gets the length of the compressed stream if it is known (or -1 if the
            length of the compressed stream is unknown).
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamReader.Position">
            <summary>
            Gets the position within the stream (read-only).
            </summary>
        </member>
        <member name="F:C1.C1Zip.CompressionLevelEnum.NoCompression">
            <summary>
            No Compression.
            </summary>
        </member>
        <member name="F:C1.C1Zip.CompressionLevelEnum.BestSpeed">
            <summary>
            Low compression, highest speed.
            </summary>
        </member>
        <member name="F:C1.C1Zip.CompressionLevelEnum.BestCompression">
            <summary>
            Highest compression, low speed.
            </summary>
        </member>
        <member name="F:C1.C1Zip.CompressionLevelEnum.DefaultCompression">
            <summary>
            High compression, high speed.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamWriter"/> class.
            </summary>
            <param name="baseStream">Output stream that will contain the compressed data.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamWriter"/> class.
            </summary>
            <param name="baseStream">Output stream that will contain the compressed data.</param>
            <param name="zip">Specifies whether the compressed stream should be compatible with zip files.</param>
            <remarks>
            <para>Streams in zip files are different from regular zlib streams in two aspects:</para>
            <para>(1) zip streams do not contain any local header information (the information is stored in the zip file headers instead) and</para>
            <para>(2) zip streams use a CRC32 checksum instead of the adler32 checksum used by zlib streams.</para>
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.#ctor(System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamWriter"/> class.
            </summary>
            <param name="baseStream">Output stream that will contain the compressed data.</param>
            <param name="header">Include header information in compressed stream (should be False for streams in zip files).</param>
            <param name="crc32">Include CRC32 checksum in compressed stream (should be True for streams in zip files).</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.#ctor(System.IO.Stream,C1.C1Zip.CompressionLevelEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamWriter"/> class.
            </summary>
            <param name="baseStream">Output stream that will contain the compressed data.</param>
            <param name="level">Compression level to use when compressing data.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.#ctor(System.IO.Stream,C1.C1Zip.CompressionLevelEnum,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamWriter"/> class.
            </summary>
            <param name="baseStream">Output stream that will contain the compressed data.</param>
            <param name="level">Compression level to use when compressing data.</param>
            <param name="zip">Specifies whether the compressed stream should be compatible with zip files.</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.#ctor(System.IO.Stream,C1.C1Zip.CompressionLevelEnum,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Zip.C1ZStreamWriter"/> class.
            </summary>
            <param name="baseStream">Output stream that will contain the compressed data.</param>
            <param name="level">Compression level to use when compressing data.</param>
            <param name="header">Include header information in compressed stream (should be False for streams in zip files).</param>
            <param name="crc32">Include CRC32 checksum in compressed stream (should be True for streams in zip files).</param>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.SetLength(System.Int64)">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current 
            position within this stream by the number of bytes written.
            </summary>
            <param name="buf">An array of bytes. This method copies <paramref name="count"/> bytes from
            <paramref name="buf"/> to the current stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buf"/> at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <remarks>
            The data is compressed as it is written into the stream. Writing <paramref name="count"/> bytes
            into the stream will usually advance the position by a number smaller than <paramref name="count"/>.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying 
            stream.
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.Close">
            <summary>
            <para>Closes the current stream compressor and flushed any pending data into the base stream.</para>
            <para>If the <see cref="P:C1.C1Zip.C1ZStreamWriter.OwnsBaseStream"/> property is set to True (the default value), 
            then this method also closes the base stream and releases any resources (such as sockets 
            and file handles) associated with it.</para>
            </summary>
        </member>
        <member name="M:C1.C1Zip.C1ZStreamWriter.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="value">Value to be written to the stream.</param>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.BaseStream">
            <summary>
            Gets the underlying stream that receives the compressed data.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.OwnsBaseStream">
            <summary>
            Gets or sets whether calling the <see cref="M:C1.C1Zip.C1ZStreamWriter.Close"/> method will also
            close the underlying stream (see <see cref="P:C1.C1Zip.C1ZStreamWriter.BaseStream"/>).
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.Checksum">
            <summary>
            Gets the checksum value used to check the integrity of the stream.
            </summary>
            <remarks>
            The checksum used may be an Adler or crc32 value depending on how
            the <see cref="T:C1.C1Zip.C1ZStreamWriter"/> was created.
            </remarks>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.SizeCompressed">
            <summary>
            Gets the number of bytes in the stream (compressed bytes).
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.SizeUncompressed">
            <summary>
            Gets the number of bytes that were compressed into the stream (uncompressed bytes).
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.ZStream">
            <summary>
            Gets the ZStream instance wrapped by this <see cref="T:C1.C1Zip.C1ZStreamWriter"/>.
            </summary>
            <remarks>
            This property is useful only in advanced applications that need to customize 
            the low-level behavior of the compressor. It is not needed in common applications.
            </remarks>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.CanRead">
            <summary>
            Always returns False.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.CanWrite">
            <summary>
            Always returns True.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.CanSeek">
            <summary>
            Always returns False.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.Length">
            <summary>
            Returns the length of the underlying stream, in bytes.
            </summary>
        </member>
        <member name="P:C1.C1Zip.C1ZStreamWriter.Position">
            <summary>
            Gets the position within the stream (read-only).
            </summary>
        </member>
        <member name="T:C1.C1Zip.StringTables">
            <summary>
            Provide localization for error messages in Japanese.
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZLib.IChecksum">
            <summary>
            Interface ICheckSum
            implemented by the Adler32 and CRC32 objects.
            Adler32 is a faster checksum used by the native ZLib
            CRC32   is the default checksum used in ZIP files
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZLib.CRC32">
            <summary>
            Summary description for CRC32.
            methods are called Adler to keep zlib source code
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZLib.Deflate">
            <summary>
            Summary description for Deflate.
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZLib.InfBlocks">
            <summary>
            Summary description for InfBlocks.
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZLib.InfCodes">
            <summary>
            Summary description for InfCodes.
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZLib.Inflate">
            <summary>
            Summary description for Inflate.
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZLib.InfTree">
            <summary>
            Summary description for InfTree.
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZLib.StaticTree">
            <summary>
            Summary description for StaticTree.
            </summary>
        </member>
        <member name="T:C1.C1Zip.ZLib.Tree">
            <summary>
            Summary description for Tree.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.Z_OK">
            <summary>
            No error.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.Z_STREAM_END">
            <summary>
            End of stream detected.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.Z_NEED_DICT">
            <summary>
            A preset dictionary is needed at this point.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.Z_ERRNO">
            <summary>
            File error.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.Z_STREAM_ERROR">
            <summary>
            Stream structure is inconsistent (input/output buffers are null for example).
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.Z_DATA_ERROR">
            <summary>
            Input data is corrupted (wrong format or checksum).
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.Z_MEM_ERROR">
            <summary>
            Not enough memory.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.Z_BUF_ERROR">
            <summary>
            No progress possible or no room in output buffer.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.Z_VERSION_ERROR">
            <summary>
            Incompatible ZLIB version.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.next_in">
            <summary>
            Input buffer.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.next_in_index">
            <summary>
            Position of cursor into input buffer.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.avail_in">
            <summary>
            Number of bytes available in the input buffer.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.total_in">
            <summary>
            Total number of input bytes read so far.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.next_out">
            <summary>
            Output buffer.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.next_out_index">
            <summary>
            Position of cursor into the output buffer.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.avail_out">
            <summary>
            Number of free bytes remaining in output buffer.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.total_out">
            <summary>
            Total number of bytes output so far.
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.msg">
            <summary>
            Description of the last error (null if no errors).
            </summary>
        </member>
        <member name="F:C1.C1Zip.ZLib.ZStream.adler">
            <summary>
            Current checksum value (Adler or CRC32).
            </summary>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.#ctor">
            <summary>
            Initializes a new instance of the <b>ZStream</b> class using an Adler checksum.
            </summary>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <b>ZStream</b> class.
            </summary>
            <param name="crc32"><b>True</b> to use a CRC32 checksum, <b>False</b> to use an Adler checksum.</param>
            <remarks>
            CRC32 checksums are the standard used in zip files. Adler checksums are the default
            used by ZLIB. Adler checksums are faster to calculate, but are not compatible with the zip format.
            </remarks>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.inflateInit">
            <summary>
            Initializes the internal stream state for decompression.
            </summary>
            <returns>Zero on success, an error code on failure.</returns>
            <remarks>
            <para>The fields <see cref="F:C1.C1Zip.ZLib.ZStream.next_in"/> and <see cref="F:C1.C1Zip.ZLib.ZStream.avail_in"/> must be 
            initialized before by the caller.</para>
            <para><b>inflateInit</b> does not perform any decompression apart from reading the 
            zlib header if present: data decompression is done by the <see cref="M:C1.C1Zip.ZLib.ZStream.inflate(System.Int32)"/> 
            method. Therefore, the <b>next_in</b> and <b>avail_in</b> may be modified, but 
            <b>next_out</b> and <b>avail_out</b> are unchanged.</para>
            </remarks>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.inflateInit(System.Int32)">
            <summary>
            Initializes the internal stream state for decompression.
            </summary>
            <param name="bits">Size of the LZ77 sliding compression window in bits (the default value is 15 bits).</param>
            <returns>Zero on success, an error code on failure.</returns>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.inflate(System.Int32)">
            <summary>
            Decompresses as much data as possible until the input buffer is exhausted or 
            the output buffer is full.
            </summary>
            <param name="flush">How to flush data into the output buffer (default value is 2).</param>
            <returns>
            <b>Z_OK</b> if some progress has been made (more input processed or more output produced), 
            <b>Z_STREAM_END</b> if the end of the compressed data has been reached and all 
            uncompressed output has been produced, 
            <b>Z_NEED_DICT</b> if a preset dictionary is needed at this point, 
            <b>Z_DATA_ERROR</b> if the input data was corrupted (input stream not conforming to 
            the zlib format or incorrect checksum), 
            <b>Z_STREAM_ERROR</b> if the stream structure was inconsistent (for example if 
            <b>next_in</b> or <b>next_out</b> was null), 
            <b>Z_MEM_ERROR</b> if there was not enough memory,
            <b>Z_BUF_ERROR</b> if no progress is possible or if there was not enough room in the 
            output buffer when <b>Z_FINISH</b> is used.
            </returns>
            <remarks>
            <para><b>inflate</b> performs one or both of the following actions:</para>
            
            <para>1. Decompress more input starting at <b>next_in</b> and update <b>next_in</b>
            and <b>avail_in</b> accordingly. If not all input can be processed (because there 
            is not enough room in the output buffer), <b>next_in</b> is updated and processing 
            will resume at this point for the next call to inflate.</para>
            
            <para>2. Provide more output starting at <b>next_out</b> and update <b>next_out</b>
            and <b>avail_out</b> accordingly. <b>inflate</b> provides as much output as 
            possible, until there is no more input data or no more space in the output buffer.</para>
            
            <para>Before the call to inflate, the application should ensure that at least one of the 
            actions is possible, by providing more input and/or consuming more output, and 
            updating the <b>next_*</b> and <b>avail_*</b> values accordingly.</para>
            
            <para>If <b>inflate</b> returns Zero and <b>avail_out</b> == 0, it must be called again 
            after making room in the output buffer because there might be more output pending.</para>
            
            <para>The application can consume the uncompressed output when it wants, for example when 
            the output buffer is full (<b>avail_out</b> == 0), or after each call of <b>inflate</b>.</para>
            
            <para>This method may introduce some output latency (reading input without producing 
            any output) except when forced to flush.</para>
            </remarks>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.inflateEnd">
            <summary>
            Frees all dynamically allocated data structures for this stream, 
            discards any unprocessed input, and does not flush any pending output.
            </summary>
            <returns>Zero on success, an error code on failure.</returns>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.inflateSync">
            <summary>
            Skips invalid compressed data until a full flush point is found, 
            or until all available input is skipped. No output is provided.
            </summary>
            <returns>Zero on success, an error code on failure.</returns>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.inflateSetDictionary(System.Byte[],System.Int32)">
            <summary>
            Initializes the decompression dictionary from the given uncompressed byte sequence.
            </summary>
            <param name="dictionary">Data in the dictionary.</param>
            <param name="dictLength">Number of bytes in the dictionary.</param>
            <returns>Zero on success, an error code on failure.</returns>
            <remarks>
            <para>This method must be called immediately after a call of <see cref="M:C1.C1Zip.ZLib.ZStream.inflate(System.Int32)"/> 
            if this call returned <b>Z_NEED_DICT</b>. The dictionary chosen by the compressor 
            can be determined from the <b>Adler32</b> value returned by this call to <b>inflate</b>.</para>
            <para>The compressor and decompressor must use exactly the same dictionary 
            (see the <see cref="M:C1.C1Zip.ZLib.ZStream.deflateSetDictionary(System.Byte[],System.Int32)"/> method).</para>
            </remarks>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.deflateInit(System.Int32)">
            <summary>
            Initializes the internal stream state for compression.
            </summary>
            <param name="level">Compression level between zero and nine (0-9).</param>
            <returns>Zero on success, an error code on failure.</returns>
            <remarks>
            <para>Compression level 1 gives best speed, 9 gives best compression.</para>
            <para>Compression level zero gives no compression at all (the input data is simply copied a block at a time).</para>
            <para>The default compression level is 6, which provides a compromise between speed and compression.</para>
            </remarks>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.deflateInit(System.Int32,System.Int32)">
            <summary>
            Initializes the internal stream state for compression.
            </summary>
            <param name="level">Compression level between zero and nine (0-9).</param>
            <param name="bits">Size of the LZ77 sliding compression window in bits (the default value is 15 bits).</param>
            <returns>Zero on success, an error code on failure.</returns>
            <remarks>
            <para>Compression level 1 gives best speed, 9 gives best compression.</para>
            <para>Compression level zero gives no compression at all (the input data is simply copied a block at a time).</para>
            <para>The default compression level is 6, which provides a compromise between speed and compression.</para>
            </remarks>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.deflate(System.Int32)">
            <summary>
            Compresses as much data as possible, and stops when the input buffer becomes empty or the 
            output buffer becomes full.
            </summary>
            <param name="flush">Non-zero to force some data to be flushed into the output buffer.</param>
            <returns>Zero on success, an error code on failure.</returns>
            <remarks>
            <para><b>deflate</b> performs one or both of the following actions:</para>
            <para>1. Compress more input starting at <b>next_in</b> and update <b>next_in</b> and 
            <b>avail_in</b> accordingly. If not all input can be processed (because there is not 
            enough room in the output buffer), <b>next_in</b> and <b>avail_in</b> are updated and 
            processing will resume at this point for the next call to <b>deflate</b>.</para>
            <para>2. Provide more output starting at <b>next_out</b> and update <b>next_out</b> and 
            <b>avail_out</b> accordingly. This action is forced if the parameter <paramref name="flush"/> is 
            non zero. Forcing flush frequently degrades the compression ratio, so this parameter 
            should be set only when necessary (in interactive applications). Some output may be 
            provided even if flush is not set</para>
            <para>This method may introduce some output latency (reading input without producing 
            any output) except when forced to flush.</para>
            <para>If <b>deflate</b> returns with <b>avail_out</b> == 0, this method must be called 
            again with the same value of the <paramref name="flush"/> parameter and more output space 
            until the flush is complete (<b>deflate</b> returns with <b>avail_out</b> != 0).</para>
            </remarks>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.deflateEnd">
            <summary>
            Frees all dynamically allocated data structures for this stream, 
            discards any unprocessed input, and does not flush any pending output.
            </summary>
            <returns>Zero on success, an error code on failure.</returns>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.deflateParams(System.Int32,System.Int32)">
            <summary>
            Dynamically updates the compression level and compression strategy.
            </summary>
            <param name="level">Compression level between zero and nine (0-9).</param>
            <param name="strategy">Compression strategy (0-2).</param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Zip.ZLib.ZStream.deflateSetDictionary(System.Byte[],System.Int32)">
            <summary>
            Initializes the compression dictionary from the given byte sequence without 
            producing any compressed output.
            </summary>
            <param name="dictionary">Data in the dictionary.</param>
            <param name="dictLength">Number of bytes in the dictionary.</param>
            <returns>Zero on success, an error code on failure.</returns>
            <remarks>
            <para>This method must be called immediately after <see cref="M:C1.C1Zip.ZLib.ZStream.deflateInit(System.Int32)"/>,
            before any call to <see cref="M:C1.C1Zip.ZLib.ZStream.deflate(System.Int32)"/>.</para>
            <para>The compressor and decompressor must use exactly the same dictionary 
            (see <see cref="M:C1.C1Zip.ZLib.ZStream.inflateSetDictionary(System.Byte[],System.Int32)"/>).</para>
            </remarks>
        </member>
        <member name="T:C1.C1Zip.ZLib.ZStreamException">
            <summary>
            ZStreamException
            </summary>
        </member>
        <member name="F:C1.Design.ColorPickerControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Design.ColorPickerControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Design.ColorPickerControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Design.C1InputMaskPicker.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Design.C1InputMaskPicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Design.C1InputMaskPicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Design.C1InputMaskPickerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Design.C1InputMaskPickerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Design.C1InputMaskPickerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:C1.Design.C1InputMaskPickerForm.EditMask">
            <summary>
            Gets or sets the mask
            </summary>
        </member>
        <member name="P:C1.Design.C1InputMaskPickerForm.UpdateWithLiterals">
            <summary>
            Gets or sets a value indicating whether the underlying datasource should be updated with the literals in the mask.
            </summary>
        </member>
        <member name="M:C1.Win.AboutForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:C1.Win.LicensingForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Util.Localization.C1DescriptionAttribute">
            <summary>
            ------------------------------------------------------------------------
            C1DescriptionAttribute replaces the DescriptionAttribute
            and uses the C1Localizer class to return the localized Attribute string
            </summary>
        </member>
        <member name="T:C1.Util.Localization.C1CategoryAttribute">
            <summary>
            ------------------------------------------------------------------------
            C1CategoryAttribute replaces the CategoryAttribute
            and uses the C1Localizer class to return the localized Attribute string
            </summary>
        </member>
        <member name="T:C1.Util.Localization.C1Localizer">
            <summary>
            ------------------------------------------------------------------------
            C1Localizer contains static methods to load and look up resources
            </summary>
        </member>
        <member name="T:C1.Util.Win.AmbientPropertyMonitor">
            <summary>
            A helper class for implementing an ambient property on a control.
            </summary>
            <remarks>
            Usage:
            An instance of AmbientPropertyMonitor must be created by the host control with the reference
            to that host as the parameter.
            The AmbientPropertyMonitor subscribes to the following events:
            <list type="bullet">
            <item>ParentChanged on the host and the whole parents' chain;
            </item>
            <item>(ambient property name)Changed or INotifyPropertyChanged on the host and all parents in the chain.
            NOTE: For the AmbientPropertyMonitor to work correctly, all controls that have the target property declared
            must also provide either a property changed event, or implement INotifyPropertyChanged and fire
            it at appropriate moments.
            </item>
            </list>
            <para>The AmbientPropertyMonitor monitors changes of the ambient property value on the host and all parents,
            and if a change occurs applies the value of the ambient property on the closest parent
            to that property on the host control, unless it has been changed independently of the AmbientPropertyMonitor
            (AmbientPropertyMonitor assumes that when it is created, the ambient property on the host has default,
            unchanged value).
            </para>
            <para>It is recommended that all controls declaring the target property also provide
            the Reset(property) and ShouldSerialize(property) methods, calling the
            <see cref="M:C1.Util.Win.AmbientPropertyMonitor.ResetValue"/> and <see cref="P:C1.Util.Win.AmbientPropertyMonitor.IsValueAmbient"/> methods as needed.
            </para>
            </remarks>
        </member>
        <member name="F:C1.Util.Win.AmbientPropertyMonitor._pName">
            <summary>
            The target property name.
            </summary>
        </member>
        <member name="F:C1.Util.Win.AmbientPropertyMonitor._parentChain">
            <summary>
            At all times, should contain the up-to-date parent chain,
            starting with the host itself. Needed to keep track of
            parent changes, and changes of ambient property on the parents.
            </summary>
        </member>
        <member name="F:C1.Util.Win.AmbientPropertyMonitor._internalChange">
            <summary>
            Prevents raising the _propertySetByUser while we adjust the
            property ourselves.
            </summary>
        </member>
        <member name="F:C1.Util.Win.AmbientPropertyMonitor._propertySetByUser">
            <summary>
            If true, we consider the property to have a value explicitly set
            ty the user, so we do not update it anymore until reset.
            </summary>
        </member>
        <member name="M:C1.Util.Win.AmbientPropertyMonitor.#ctor(System.Windows.Forms.Control,System.String)">
            <summary>
            Initializes a new instance of the AmbientPropertyMonitor class.
            </summary>
            <param name="host">Control on which the ambient property will be monitored.</param>
            <param name="propertyName">The name of the monitored property.
            The type of the property MUST be an enumeration.</param>
            <remarks>
            An instance of this class must be created in the constructor 
            of the host control.
            It is assumed that the value of the ambient property that will be monitored
            by the AmbientPropertyMonitor has not been set yet (i.e. has the default value)
            at the time the AmbientPropertyMonitor is constructed.
            </remarks>
        </member>
        <member name="M:C1.Util.Win.AmbientPropertyMonitor.ResetValue">
            <summary>
            Notifies the AmbientPropertyMonitor that the value of the monitored property
            has been reset. If the host control is currently parented to a container
            which itself defines the monitored property, the value from that parent
            is assigned to the property on the host.
            </summary>
            <remarks>
            It is recommended that the host defines a Reset method for the target
            property, and calls this method from that. E.g.:
            <code>
            private AmbientPropertyMonitor __ambientVisualStyleMonitor = null;
            ...
            ctor() {
                __ambientVisualStyleMonitor = new AmbientPropertyMonitor(this, "VisualStyle");
                ...
            }
            public VisualStyle VisualStyle {
                get { ... }
                set { ... }
            }
            protected void ResetVisualStyle() {
                ...
                __ambientVisualStyleMonitor.ResetValue();
            }
            </code>
            </remarks>
        </member>
        <member name="P:C1.Util.Win.AmbientPropertyMonitor.IsValueAmbient">
            <summary>
            Gets the value indicating whether the monitored property
            currently has the ambient value, i.e. the value has been set
            (by the AmbientPropertyMonitor) based on the value of a parent of the host.
            </summary>
            <remarks>
            It is recommended that the host defines a ShouldSerialize method for the target
            property, tests IsValueAmbient in that method, and returns false if IsValueAmbient
            returns true. E.g.:
            <code>
            private AmbientPropertyMonitor __ambientVisualStyleMonitor = null;
            ...
            ctor() {
                __ambientVisualStyleMonitor = new AmbientPropertyMonitor(this, "VisualStyle");
                ...
            }
            public VisualStyle VisualStyle {
                get { ... }
                set { ... }
            }
            protected bool ShouldSerializeVisualStyle() {
                if (__ambientVisualStyleMonitor.IsValueAmbient)
                    return false;
                ...
            }
            </code>
            </remarks>
        </member>
        <member name="T:C1.Util.Win.Win32.DM">
            <summary>
            Fiels of DEVMODE structure.
            </summary>
        </member>
        <member name="T:C1.Util.Win.Win32.GetDeviceCapsConsts">
            <summary>
            GetDeviceCaps() constants
            </summary>
        </member>
        <member name="T:C1.Util.Win.Win32.SORT">
            <summary>
            Sorting IDs.
            </summary>
        </member>
        <member name="T:C1.Util.Win.Win32.LANG">
            <summary>
            Primary language IDs.
            </summary>
        </member>
        <member name="T:C1.Util.Win.Win32.SUBLANG">
             <summary>
              Sublanguage IDs.
            
              The name immediately following SUBLANG_ dictates which primary
              language ID that sublanguage ID can be combined with to form a
              valid language ID.
             </summary>
        </member>
        <member name="T:C1.Util.Win.Win32.LOCALE">
            <summary>
            Locale Types.
            </summary>
        </member>
        <member name="T:C1.Util.Win.Win32.FixFpu">
            <summary>
            usage:
             using (FixFpu ff = new FixFpu())
             { do printer stuff }
            or
             do printer stuff
             FixFpu.Doit();
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.C1Anchor">
            <summary>
            Represents the anchor within document, this anchor can be associated with
            any RenderObject.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1Anchor.Name">
            <summary>
            Gets the name of the anchor (must be unique within the document).
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1Anchor.Description">
            <summary>
            Gets the description of the anchor.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1Anchor.UserData">
            <summary>
            Gets the custom user's data associated with the anchor.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.C1AnchorText">
            <summary>
            Represents the anchor within text object:
            RenderText, RenderParagraph, RenderRichText.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1AnchorText.Position">
            <summary>
            Gets the position of anchor withint text, zero based.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.C1AnchorCollection">
            <summary>
            Collection of C1Anchor objects.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.C1HyperlinkStateEnum">
            <summary>
            Represents the state of hyperlink.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.C1HyperlinkStateEnum.Normal">
            <summary>
            An unvisited hyperlink.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.C1HyperlinkStateEnum.Visited">
            <summary>
            A hyperlink that has been visited.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.C1HyperlinkStateEnum.Hover">
            <summary>
            A hyperlink under the mouse pointer.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.C1HyperlinkStateEnum.Active">
            <summary>
            A hyperlink that has been clicked, but not yet visited.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.C1Hyperlink">
            <summary>
            Represents the hyperlink in document, can be associated with
            RenderObject or ParagraphObject.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1Hyperlink.StatusText">
            <summary>
            Text shown in the status line when the mouse is over the link
            (when the document is previewed by C1PrintPreview).
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1Hyperlink.LinkTarget">
            <summary>Determines where the hyperlink points to.</summary>
            <remarks>
            <para>Currently the target may be described by an object of one of the following classes:</para>
            <list type="bullet">
            <item><term>C1LinkTargetAnchor</term>
                <description>Anchor inside the current document.</description></item>
            <item><term>C1LinkTargetExternalAnchor</term>
                <description>Anchor inside a previously saved C1D document.</description></item>
            <item><term>C1LinkTargetFile</term>
                <description>External document, program or URL (the ShellExecute API is used to invoke the link).</description></item>
            <item><term>C1LinkTargetPage</term>
                <description>Another page inside the current document.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:C1.C1PreviewClient.C1Hyperlink.UserData">
            <summary>
            Arbitrary data associated with the hyperlink.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1Hyperlink.State">
            <summary>
            The hyperlink's status.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.C1LinkTarget">
            <summary>
            Determines the target of the hyperlink. This is an abstract class, it cannot be used directly.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.C1LinkTargetUser">
            <summary>
            This class starts a new document when a hyperlink with this type of LinkTarget 
            is clicked. When such a hyperlink is activated (clicked), 
            the UserHyperlinkJump event is fired.
            This class does not have any public properties or methods of its own.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.C1LinkTargetAnchor">
            <summary>
            Describes a link target inside the current document.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1LinkTargetAnchor.AnchorName">
            <summary>
            The name of the C1Anchor object.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.C1LinkTargetExternalAnchor">
            <summary>
            Jump to an anchor withtin an external C1Preview document.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1LinkTargetExternalAnchor.DocumentFileName">
            <summary>
            Gets the name of file of external C1Preview document.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.C1LinkTargetFile">
            <summary>
            Describes a link to an external document, file or URL.
            The link is performed using the ShellExecute API.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1LinkTargetFile.FileName">
            <summary>
            Specifies the file or object on which to execute the specified verb.
            </summary>
            <remarks>
            To specify a Shell namespace object, pass the fully qualified parse name.
            Note that not all verbs are supported on all objects. 
            For example, not all document types support the "print" verb.
            </remarks>
        </member>
        <member name="P:C1.C1PreviewClient.C1LinkTargetFile.Command">
            <summary>
            String, referred to in this case as a verb, 
            that specifies the action to be performed.
            </summary>
            <remarks>
            <para>The set of available verbs depends on the particular file or folder. 
            Generally, the actions available from an object's shortcut menu are 
            available verbs.</para>
            <para>For more information about verbs and their availability, see Object Verbs. 
            See Extending Shortcut Menus for further discussion of shortcut menus.</para>
            <para>The following verbs are commonly used.</para>
            <list type="table">
            <item><term>edit</term>
            Launches an editor and opens the document for editing. If FileName is not a document file, the function will fail.
            </item>
            <item><term>explore</term>
            <description>Explores the folder specified by FileName.</description>
            </item>
            <item><term>find</term>
            <description>Initiates a search starting from the specified directory.</description>
            </item>
            <item><term>open</term>
            <description>Opens the file specified by the FileName parameter.
            The file can be an executable file, a document file, or a folder.</description>
            </item>
            <item><term>print</term>
            <description>Prints the document file specified by FileName.
            If FileName is not a document file, the function will fail.</description>
            </item>
            <item><term>Empty string</term>
            <description>For systems prior to Microsoft? Windows? 2000, the default verb is used 
            if it is valid and available in the registry. If not, the "open" verb is used.
            For Windows 2000 and later systems, the default verb is used if available. 
            If not, the "open" verb is used. If neither verb is available, 
            the system uses the first verb listed in the registry.</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:C1.C1PreviewClient.C1LinkTargetFile.Parameters">
            <summary>
            If the FileName parameter specifies an executable file, Parameters is a string 
            that specifies the parameters to be passed to the application. 
            The format of this string is determined by the verb that is to be invoked. 
            If FileName specifies a document file, Parameters should be an empty string.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1LinkTargetFile.Directory">
            <summary>
            String that specifies the default directory.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.PageJumpTypeEnum">
            <summary>
            Describes the supported modes of moving between pages.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageJumpTypeEnum.First">
            <summary>
            Move to the first page.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageJumpTypeEnum.Previous">
            <summary>
            Move to the previous page.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageJumpTypeEnum.Next">
            <summary>
            Move to the next page.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageJumpTypeEnum.Last">
            <summary>
            Move to the last page.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageJumpTypeEnum.Absolute">
            <summary>
            Move directly to the specified page.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageJumpTypeEnum.Relative">
            <summary>
            Move to the page specified relative to the current page.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.C1LinkTargetPage">
            <summary>
            This class defines a link target to another page in a some document.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1LinkTargetPage.PageJumpType">
            <summary>
            Gets the type of jump between pages.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1LinkTargetPage.PageNo">
            <summary>
            Specifies the number of page to jump, depending on 
            PageJumpType it specifies the absolute or relative jump.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.C1LinkTargetDocumentLocation">
            <summary>
            This class defines a link target to object within document
            supporting the IDocumentLocation interface,
            currently this document is supported by the:
            RenderObject, Page.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1LinkTargetDocumentLocation.DocumentLocation">
            <summary>
            Gets the IDocumentLocation object
            identifying the place within document.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.C1PageSettings">
            <summary>
            Describes the page's properties of document.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.C1PageSettings.Compare(C1.C1PreviewClient.C1PageSettings)">
            <summary>
            Compares this C1PageSettings with other C1PageSettings object.
            </summary>
            <param name="other">C1PageSettings object to compare to.</param>
            <returns>Returns true if this C1PageSettings object equals other C1PageSettings object.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.C1PageSettings.ToPageSettings(C1.C1PreviewClient.C1PrintDocument,System.Drawing.Printing.PrinterSettings)">
            <summary>
            Creates and initializes a new instance of PageSettings class
            based on the properties of the current object.
            </summary>
            <param name="document">The C1PrintDocument object providing the default units
            (if some sizes in this object specified in default units) and DPI
            (if some sizes specified in UnitTypeEnum.Pixel).
            Can be null, but in that case the current object must not contain sizes
            using UnitTypeEnum.Default or UnitTypeEnum.Pixel units.</param>
            <param name="printerSettings">Printer settings for the target page settings.
            Can be null in which case the default printer is used.</param>
            <returns>The newly created PageSettings object.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.C1PageSettings.ToPageSettings(C1.C1PreviewClient.C1PrintDocument)">
            <summary>
            Creates and initializes a new instance of PageSettings class
            based on the properties of the current object.
            </summary>
            <param name="document">The C1PrintDocument object providing the default units
            (if some sizes in this object specified in default units) and DPI
            (if some sizes specified in UnitTypeEnum.Pixel).
            Can be null, but in that case the current object must not contain sizes
            using UnitTypeEnum.Default or UnitTypeEnum.Pixel units.</param>
            <returns>The newly created PageSettings object.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.C1PageSettings.ToPageSettings">
            <summary>
            Creates and initializes a new instance of PageSettings class
            based on the properties of the current object.
            </summary>
            <returns>The newly created PageSettings object.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.C1PageSettings.GetCurrentLocaleDefaultPaperSize(System.Double@,System.Double@,System.Double@,C1.C1PreviewClient.UnitTypeEnum@)">
            <summary>
            Retrieves the default paper size for the current locale.
            </summary>
            <returns>The locale-specific default paper size.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.C1PageSettings.CreateDefaultPageSettings">
            <summary>
            Creates the C1PageSettings object with default settings, on the
            basis of the current printer or system locale.
            </summary>
            <returns>The created C1PageSettings object.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.C1PageSettings.UsePrinterPaperSize">
            <summary>
            Gets or sets a value indicating whether to use the printer paper size
            when generating the document.
            This property does not affect the values of 
            <see cref="P:C1.C1PreviewClient.C1PageSettings.Landscape"/>,
            <see cref="P:C1.C1PreviewClient.C1PageSettings.Width"/>,
            <see cref="P:C1.C1PreviewClient.C1PageSettings.Height"/> and
            <see cref="P:C1.C1PreviewClient.C1PageSettings.PaperKind"/> properties.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PageSettings.PageLayout">
            <summary>
            Gets the PageLayout object containing this object, can be null if
            this object is not linked with PageLayout.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PageSettings.Landscape">
            <summary>
            Gets or sets a value indicating whether the page is printed in landscape or portrait orientation.
            Changing this property causes swap the height and width.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PageSettings.Width">
            <summary>
            Gets or sets the width of the paper.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PageSettings.Height">
            <summary>
            Gets or sets the height of the paper.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PageSettings.PaperKind">
            <summary>
            Gets the type of paper.
            Changing of this property causes change of Width and Height.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PageSettings.Color">
            <summary>
            Gets or sets a value indicating whether the page should be printed in color.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PageSettings.LeftMargin">
            <summary>
            Gets or sets the left margin width.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PageSettings.TopMargin">
            <summary>
            Gets or sets the top margin width.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PageSettings.RightMargin">
            <summary>
            Gets or sets the right margin width.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PageSettings.BottomMargin">
            <summary>
            Gets or sets the bottom margin width.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.C1PrintDocument">
            <summary>
            ComponentOne Document.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.IStyleOwner">
            <summary>
            Defines a class that can have the Style property.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.IStyleOwner.GetProp(System.Int32)">
            <summary>
            Simple returns value of style property. This method called if value
            does not exist in the style, before resolving ambient/non ambient etc.
            </summary>
            <param name="propKey">Code of property (Style.c_propXXX constant).</param>
            <returns>Value of property.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.IStyleOwner.AmbientParent">
            <summary>
            Gets the parent for ambient properties.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.IStyleOwner.Style">
            <summary>
            Gets the style of this IStyleOwner.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.IStyleOwner.Dictionary">
            <summary>
            Gets the dictionary object used to store images.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.ICollectionOwner">
            <summary>
            Through this interface the owner object can receive the notifications
            from OwnedCollection.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.IDocumentLocation">
            <summary>
            Describes location within document. Each location is identified by page
            and rectangle on page. Units or rectangle depend on C1Preview.ResolvedUnit
            property.
            This interface implemented by:
            Page, RenderObject, C1Anchor.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.C1PrintDocument.c_DocumentVersion">
            <summary>
            Increment this constant (minor version) every time when you change the
            serializable properties / objects of C1PrintDocument or nested objects.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.C1PrintDocument.c_AssemblyVersion">
            <summary>
            Holds the AssemblyVersion of C1.C1Preview.2.dll, used
            to get access to assembly version of this dll from "client" code.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.C1PrintDocument._creationGraphicsShouldBeDisposed">
            <summary>
            Indicates that the CreationGraphics object should be disposed
            when new value assigned to CreationGraphics property.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.C1PrintDocument.SetPropertiesToDefault">
            <summary>
            Resets all document's properties to default values.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.C1PrintDocument.OnLongOperation(System.Double,System.Boolean)">
            <summary>
            Called to indicate the progress of document generating.
            </summary>
            <param name="complete">How much is complete (from 0 to 1).</param>
            <param name="canCancel">Whether the generating can be cancelled.</param>
            <returns>Returns true if generation is *not* aborted.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.C1PrintDocument.InitDocument">
            <summary>
            Performs some initializations: creates the sub-objects (PageHeader, PageFooter etc)
            initializes DefaultPageSettings and so on.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.C1PrintDocument.GetFonts">
            <summary>
            Returns the array of fonts used in document.
            </summary>
            <returns>Returns the array of Font objects.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.C1PrintDocument.GetUniqueFonts">
            <summary>
            Returns the <see cref="T:C1.C1PreviewClient.C1PrintDocument.UniqueFonts"/> object with all fonts
            used in this document.
            </summary>
            <returns>The <see cref="T:C1.C1PreviewClient.C1PrintDocument.UniqueFonts"/> object.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.C1PrintDocument.Clear">
            <summary>
            Clears the document, all its properties will be set to default values
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.C1PrintDocument.FromFile(System.String)">
            <summary>
            Creates a new instance of C1PrintDocument from the specified file.
            </summary>
            <param name="fileName">A string that contains the name of the file from which to create the C1PrintDocument.</param>
            <returns>The C1PrintDocument that was created.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.C1PrintDocument.FromStream(System.IO.Stream)">
            <summary>
            Creates a new instance of C1PrintDocument from the specified data stream.
            </summary>
            <param name="stream">A Stream that contains the data for the C1PrintDocument.</param>
            <returns>The C1PrintDocument that was created.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.C1PrintDocument.SelectBestMeasurementDevice">
            <summary>
            Selects the optimal device which can be used for MeasurementGraphics,
            it search for printer with "square" dpi (DpiX == DpiY) large or equal than 300,
            if such printer does not exist then screen Graphics is used.
            Parameters of selected device can be read from MeasurementXXX properties.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.C1PrintDocument.CreateGraphicsForDpi(System.Single)">
            <summary>
            Creates the Graphics object with specified dpi.
            </summary>
            <param name="dpi">The requested dpi.</param>
            <returns>Returns the created Graphics object or null, if it can't be created for specified dpi.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.MaxPages">
            <summary>
            Gets or sets the value limiting the maximum number of pages
            in the generated document.
            <para>
            The default value is -1, indicating that the number of pages
            in the document is unlimited.
            </para>
            <para>
            This property is only relevant when the document is
            created using the <see cref="M:C1.C1PreviewClient.C1PrintDocument.Generate"/> method.
            </para>
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.CreationMode">
            <summary>
            Gets the mode of document creation.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.CreationDpi">
            <summary>
            Gets the dpi which is used during document creation.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.CreationGraphics">
            <summary>
            Gets or sets the Graphics object used to generate the document.
            This graphics used to calculate text sizes, measuring RTF text etc.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.EmfType">
            <summary>
            Gets or sets the type of metafiles created by this document.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.DocumentInfo">
            <summary>
            Gets or sets common info about document: author, caption, and so on.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.ResolvedUnit">
            <summary>
            Gets or sets the units of measurement in which bounds of objects' fragment will
            specified. This property can't be changed when document is in
            generating of its content.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.PageLayout">
            <summary>
            Gets or sets the page layout for the document, page layout includes:
            page settings (width, height, margins, and so on), page header, page footer and columns definition.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.PageLayouts">
            <summary>
            Gets the page layouts used in document.
            Each page layout includes: 
            page settings (width, height, margins, and so on), page header, page footer and columns definition.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.Stacking">
            <summary>
            Gets or sets the stacking rules for the document.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.DefaultUnit">
            <summary>
            Defines the default unit of measurement. When lengths are set without 
            specifying unit of measurement this unit is assumed.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.Body">
            <summary>
            Gets the object representing the page body.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.Tags">
            <summary>
            Gets the collection of document's tags which are defined by user.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.ThrowExceptionOnError">
            <summary>
            Indicates that the exception must be raised when error occurs during generating,
            if this flag is false then Generate method will return false and exception
            not will be raised. This property is false by default.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.AllowNonReflowableDocs">
            <summary>
            Gets or sets the value indicating whether methods can be called on the document
            that would result in the document becoming non-reflowable. If false (the default),
            invoking such methods causes an exception to be thrown.
            (If the document is non-reflowable, the document will not automatically reflow
            in the preview when the end user changes page settings.)
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.ClipPage">
            <summary>
            Gets or sets the value indicating whether to clip the content to page margins.
            The default value is true.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.DisableUserReflow">
            <summary>
            Gets or sets the value indicating whether the end user should be allowed
            to reflow the document with different page settings. This value is only a hint
            to the document viewer, it is the viewer's responsibility to respect that hint.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.DoEvents">
            <summary>
            Specifies whether <see cref="T:C1.C1PreviewClient.C1PrintDocument"/> should handle Windows messages while generating the document.
            </summary>
            <remarks>
            <para>Setting this property to true allows users to resize forms, click buttons, etc. while documents are 
            being generated. This makes applications more responsive, and is necessary if you want to provide a
            "Cancel" button to stop the document generation (otherwise the user wouldn't be able to click the
            button until the generation was complete).</para>
            <para>Setting this property to false will cause documents to generate slightly faster.</para>
            </remarks>
            <example>
            <para>The code below implements "Generate" and "Cancel" buttons attached to a <see cref="T:C1.C1PreviewClient.C1PrintDocument"/>.</para>
            <para>The "Generate" button checks whether the document is busy before starting to generate it.
            This is necessary because the user could click the "Generate" button several times in a row, before the document got a 
            chance to finish generating. (Calling the <see cref="M:C1.C1PreviewClient.C1PrintDocument.Generate"/> method while the component is busy throws an 
            exception.)</para>
            <para>The "Cancel" button checks whether the document is currently generating, and sets the <see cref="!:Cancel"/> 
            property to true if it is.</para>
            <code>
            _doc.DoEvents = true;
            
            private void Generate_Click(object sender, EventArgs e)
            {
               if (_doc.BusyState != BusyStateEnum.Ready)
                   Console.WriteLine("Cannot generate now, document is busy");
               else 
                   _doc.Generate();
            }
            private void Cancel_Click(object sender, EventArgs e) 
            {
               if (_doc.BusyState != BusyStateEnum.Ready) 
                   _doc.Cancel = true;
               else 
                   Console.WriteLine("Document is not generating, nothing to cancel");
            }
            </code>
            </example>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.Style">
            <summary>
            Main style of document.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.Outlines">
            <summary>
            Gets the document's outlines.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.Dictionary">
            <summary>
            Gets the document's dictionary.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.UsePrinterForDefaultPageSettings">
            <summary>
            Gets or sets the value indicating whether the default page settings are
            retrieved from the default printer (may slow things down if the printer
            is a network one) or calculated based on the current locale.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.DocumentFormatVersion">
            <summary>
            Gets the version of C1D format.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.FormatVersion">
            <summary>
            Gets the C1FormatVersion object describing the version
            of C1D format supported by this assembly.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.MeasurementDpi">
            <summary>
            Gets the DPI of MeasurementGraphics.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.MeasurementPrinterName">
            <summary>
            Gets or sets the printer name providing the Graphics which is used
            for measuring the layout of document.
            This property is used only
            when MeasurementDevice is MeasurementDeviceEnum.Printer.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.MeasurementDevice">
            <summary>
            Gets or sets the type of device providing the Graphics which is used
            for measuring the layout of document.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1PrintDocument.MeasurementGraphics">
            <summary>
            Gets the Graphics object which is used 
            for measuring the layout of document.
            </summary>
        </member>
        <member name="E:C1.C1PreviewClient.C1PrintDocument.DefaultUnitChanged">
            <summary>
            Occurs when the value of the DefaultUnit was changed.
            </summary>
        </member>
        <member name="E:C1.C1PreviewClient.C1PrintDocument.ResolvedUnitChanged">
            <summary>
            Occurs when the value of the ResolvedUnit was changed.
            </summary>
        </member>
        <member name="E:C1.C1PreviewClient.C1PrintDocument.LongOperation">
            <summary>
            Indicate the progress of document generation.
            </summary>
        </member>
        <member name="E:C1.C1PreviewClient.C1PrintDocument.BusyStateChanged">
            <summary>
            Occurs when the value of the BusyState was changed.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.NewPageTypeEnum.Default">
            <summary>
            Type of page (vertical or horizontal)
            is determinated on the basis of the current stacking rules.
            Vertical page is added if Stacking.Type is Block and Stacking.Direction is TopToBottom.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.ControlBreakBase">
            <summary>
            Represents the base class for actions which can be performed 
            before or after rendering an object.
            Such action can be: starting new page, new column etc.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.DictionaryItem">
            <summary>
            Base class for all dictionary items.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.IOwnedCollectionItem">
            <summary>
            Items of the OwnedCollection must implement this interface.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.DictionaryItem.Name">
            <summary>
            Unique name of item.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Dictionary">
            <summary>
            Represents the C1PrintDocument dictionary,
            can be used to holding the Images, Icons, etc.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.OwnedCollection">
            <summary>
            Base class for RenderObjectCollection and ParagraphObjectCollection.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.OwnedCollection.GetItemType">
            <summary>
            If this method returns not null then only objects of this type
            can be added to the collection.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.OwnedCollection.IndexOf(System.Object)">
            <summary>
            Searches for the specified Object and returns the zero-based index 
            of the first occurrence within the entire collection.
            </summary>
            <param name="obj">The Object to locate in the collection. The value can be a null reference.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.OwnedCollection.Exchange(System.Int32,System.Int32)">
            <summary>
            Swap two items in collection.
            </summary>
            <param name="item1">Index of first item.</param>
            <param name="item2">Index of second item.</param>
        </member>
        <member name="P:C1.C1PreviewClient.OwnedCollection.Owner">
            <summary>
            Gets the owner of collection.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Dictionary.Item(System.String)">
            <summary>
            Returns the DictionaryItem object by its name.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Dictionary.Item(System.Int32)">
            <summary>
            Returns the DictionaryItem object by its index.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.DictionaryImage">
            <summary>
            Represents an image in dictionary.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.DictionaryIcon">
            <summary>
            Represents an icon in dictionary.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.DocumentBody">
            <summary>
            Represents the body of document, manages the generating of the document.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.DocumentBody.Document">
            <summary>
            Returns the C1Preview object containing this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.DocumentBody.Stacking">
            <summary>
            Stacking rules.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.DocumentInfoFields">
            <summary>
            Enumerates fields of DocumentInfo.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DocumentInfoFields.None">
            <summary>
            No fields.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DocumentInfoFields.Title">
            <summary>
            The title of the document.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DocumentInfoFields.Author">
            <summary>
            The author of the document.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DocumentInfoFields.Operator">
            <summary>
            The person who last made changes to the document.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DocumentInfoFields.Manager">
            <summary>
            The manager of the author.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DocumentInfoFields.Company">
            <summary>
            The company of the author.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DocumentInfoFields.Subject">
            <summary>
            The subject of the document.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DocumentInfoFields.Comment">
            <summary>
            The document comments.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DocumentInfoFields.CreationTime">
            <summary>
            The date and time when the document was created.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DocumentInfoFields.RevisionTime">
            <summary>
            The date and time when the document was last modified.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DocumentInfoFields.Creator">
            <summary>
            The application that created the original document.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DocumentInfoFields.Keywords">
            <summary>
            The keywords for the document.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DocumentInfoFields.Producer">
            <summary>
            The application that created the document.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DocumentInfoFields.All">
            <summary>
            All fields.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.DocumentInfo">
            <summary>
            Represents the common information about the C1Preview:
            author, subject, creation time, and so on.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Util.FastList">
            <summary>
            Represents the list which provides a fast search of elements in self.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.Util.FastList.FindObjectIndex(System.Object,System.Int32@)">
            <summary>
            Searches for position of object, if object exists in list then index contains
            its position and function returns true, otherwise the function returns
            false and index contains the index of position for object.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.EventCollection">
            <summary>
            Represents a collection that fires events when changing.
            </summary>
        </member>
        <member name="E:C1.C1PreviewClient.EventCollection.Changing">
            <summary>
            Occurs before changing of collection.
            </summary>
        </member>
        <member name="E:C1.C1PreviewClient.EventCollection.Changed">
            <summary>
            Occurs after changing of collection.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.EventCollectionChangeTypeEnum">
            <summary>
            Defines the types of collection's changing.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.EventCollectionChangeEventHandler">
            <summary>
            Represents the method that will handler an event occuring when
            collection changing.
            </summary>
            <param name="sender">The source of event.</param>
            <param name="e">The parameters of event.</param>
        </member>
        <member name="T:C1.C1PreviewClient.EventCollectionChangeEventArgs">
            <summary>
            Contains the data for events which occurs the EventCollection changed.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.EventCollectionChangeEventArgs.ChangeType">
            <summary>
            Gets the type of collection's changing.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.EventCollectionChangeEventArgs.OldItem">
            <summary>
            Gets the old object at specified index.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.EventCollectionChangeEventArgs.NewItem">
            <summary>
            Gets the new object at specified index.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.EventCollectionChangeEventArgs.Index">
            <summary>
            Gets the index within collection where changing occurs.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.PageNumberingChange">
            <summary>
            Describes the changing of the page numbering: to absolute number or increment from current value.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.PageNumberingChange.Parse(System.String,System.Boolean)">
            <summary>
            Converts a string to the PageNumberingChange object.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="throwException">Indicates the exception should be thrown if string can not be converted to PageNumberingChange.</param>
            <returns>The PageNumberingChange object or null if string is invalid and throwException is false.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.PageNumberingChange.Mode">
            <summary>
            Gets or sets value describing how the page number will be changed.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.PageNumberingChange.Value">
            <summary>
            Gets or sets the value used to change current page number,
            using of value depends on Mode property: set for Set, added for Increment.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.TypeConverterBase">
            <summary>
            Base for a simple type converter to/from strings.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.StackingRulesEnum">
            <summary>
            Defines the stacking rules: block flow or inline flow, LeftToRight or TopToBottom.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.StackingRulesEnum.BlockTopToBottom">
            <summary>
            Objects are placed one beneath the other within the container.
            When the bottom edge of the current page is reached, a new page is added.
            This is the default.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.StackingRulesEnum.BlockLeftToRight">
            <summary>
            Objects are placed one next to another, from left to right.
            When the right edge of the current page is reached, a new horizontal page is added
            (a horizontal page logically extends the preceding page to the right;
            C1PreviewPane respects this location by default, showing such pages in a row).
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.StackingRulesEnum.InlineLeftToRight">
            <summary>
            Objects are placed inline, one next to another, from left to right.
            When the right edge of the current page is reached, the sequence wraps to the next line.
            A new page is added when the bottom of the current page is reached.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.MeasurementDeviceEnum">
            <summary>
            Defines the device (printer or screen) used to measure document elements.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.MeasurementDeviceEnum.Printer">
            <summary>
            Use printer device to measure document elements.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.MeasurementDeviceEnum.Screen">
            <summary>
            Use system screen device to measure document elements.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DocumentCreationMode.Unknown">
            <summary>
            Document was not generated, so its creation mode is unknown.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DocumentCreationMode.Generate">
            <summary>
            Document was created with using Generate() method.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DocumentCreationMode.StartEndDoc">
            <summary>
            Document was created with using StartDoc() / EndDoc() methods.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.PageNumberingChangeModeEnum">
            <summary>
            Describes the type of changing of the page numbering.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageNumberingChangeModeEnum.Set">
            <summary>
            Set page number to absolute value.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageNumberingChangeModeEnum.Increment">
            <summary>
            Change the page number on specified value.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.GraphicsUtils.SaveImageToStream(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves the image into stream, if image is a metafile then it will be saved
            *AS METAFILE* (the standard Metafile.Save method saves metafile in PNG format).
            </summary>
            <param name="image">Image to save.</param>
            <param name="imageFormat">Format in which image must be saved, if image is Metafile then this parameter ignored.</param>
            <returns>Returns the MemoryStream object containing image data or null if error occurs during saving.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.GraphicsUtils.IsColorEmpty(System.Drawing.Color)">
            <summary>
            Returns true if specified color is Empty (Color.Empty) or Transparent (Color.Transparent).
            </summary>
            <param name="color">Color structure to test.</param>
        </member>
        <member name="M:C1.C1PreviewClient.GraphicsUtils.GetScreenDpi(System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Returns the logical and physical screen's resolution.
            </summary>
            <param name="logicalDpiX">Contains a logical horizontal resolution on exit.</param>
            <param name="logicalDpiY">Contains a logical vertical resolution on exit.</param>
            <param name="physicalDpiX">Contains a physical horizontal resolution on exit.</param>
            <param name="physicalDpiY">Contains a physical vertical resolution on exit.</param>
        </member>
        <member name="T:C1.C1PreviewClient.IC1Printable">
            <summary>
            This interface should be implemented by a control
            to support its rendering through RenderC1Printable object
            in C1PrintDocument.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.IC1Printable.C1PrintableGetImage">
            <summary>
            Gets the content of control as Image.
            </summary>
            <returns>The Image object representing a control content.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.IC1Printable.C1PrintableGetTree">
            <summary>
            Gets the content of control as C1 document
            that is serialized in stream.
            This document can be built with using C1PrintDocumentClient.
            </summary>
            <returns>The stream object containing the document tree.</returns>
        </member>
        <member name="T:C1.C1PreviewClient.PageDirectionEnum">
            <summary>
            Describes the direction in which the new page should be started.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageDirectionEnum.Default">
            <summary>
            Type of page (vertical or horizontal)
            is determinated on the basis of the current stacking rules.
            Vertical page is added if Stacking is StackingRulesEnum.BlockTopToBottom.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageDirectionEnum.Vertical">
            <summary>
            Vertical page direction - i.e. logically the next page is below the current one.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageDirectionEnum.Horizontal">
            <summary>
            Horizontal page direction - i.e. logically the next page is to the right of the current one.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.LayoutChangeBase">
            <summary>
            Represents the base class for actions which can be performed 
            before or after rendering an object.
            Actions like: start new page, column, change columns layout.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.LayoutChangeNewPage">
            <summary>
            Desribes the page break action.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.LayoutChangeNewColumn">
            <summary>
            Describes the column break action.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.LayoutChangeNewLine">
            <summary>
            Describes the line break action on inline flow.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.LayoutChangeNoBreak">
            <summary>
            Describes the action that does no produce the page break, but changes
            the page layout for next page.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.LongOperationEventArgs">
            <summary>
            Describes arguments for the event fired periodically by a potentially
            long operation. Allows to provide feedback to the user and may also
            allow to cancel the operation.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.LongOperationEventArgs.#ctor">
            <summary>
            Creates a new instance of LongOperationEventArgs with default
            properties (Complete=0, CanCancel=false).
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.LongOperationEventArgs.#ctor(System.Double)">
            <summary>
            Creates a new instance of LongOperationEventArgs with the
            specified complete value and CanCancel=false.
            </summary>
            <param name="complete">How much is complete (from 0 to 1).</param>
        </member>
        <member name="M:C1.C1PreviewClient.LongOperationEventArgs.#ctor(System.Double,System.Boolean)">
            <summary>
            Creates a new instance of LongOperationEventArgs with the
            specified complete and CanCancel values.
            </summary>
            <param name="complete">How much is complete (from 0 to 1).</param>
            <param name="canCancel">Whether the operation can be cancelled.</param>
        </member>
        <member name="M:C1.C1PreviewClient.LongOperationEventArgs.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of LongOperationEventArgs with the
            specified CanCancel value and Complete=0.
            </summary>
            <param name="canCancel">Whether the operation can be cancelled.</param>
        </member>
        <member name="P:C1.C1PreviewClient.OutlineNodeCollection.Item(System.Int32)">
            <summary>
            Returns the RenderObject object by its index.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.PageColumnDef">
            <summary>
            Defines parameters of a single page column.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.PageColumnDef.Width">
            <summary>
            Width of the column.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.PageColumnDef.Spacing">
            <summary>
            Spacing between current column and next column.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.PageColumnDefCollection">
            <summary>
            Represents the collection of page columns definitions which are
            items of type PageColumnDef.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.PageColumnDefCollection.Add">
            <summary>
            Add column with default parameters, width is auto, spacing - 5mm.
            </summary>
            <returns>Returns the index of added column in collection.</returns>
        </member>
        <member name="T:C1.C1PreviewClient.PageLayoutKindEnum">
            <summary>
            Defines the various kinds of page layouts within document.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageLayoutKindEnum.None">
            <summary>
            The page layout does not linked with document.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageLayoutKindEnum.Default">
            <summary>
            Default page layout.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageLayoutKindEnum.FirstPage">
            <summary>
            Page layout of first page.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageLayoutKindEnum.LastPage">
            <summary>
            Page layout of last page.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageLayoutKindEnum.EvenPages">
            <summary>
            Page layout of even pages.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageLayoutKindEnum.OddPages">
            <summary>
            Page layout of odd pages.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.PageLayout">
            <summary>
            Represents the page layout of C1PrintDocument.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.PageLayout.AssignFrom(C1.C1PreviewClient.PageLayout,System.Boolean,System.Boolean)">
            <summary>
            Copies properties from another PageLayout object.
            This method used internally within C1PrintDocument
            during report generation.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.PageLayout.MixWith(C1.C1PreviewClient.PageLayout)">
            <summary>
            Mix this PageLayout object with specified PageLayout object.
            </summary>
            <param name="pageLayout">The PageLayout object that should be mixed with this object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.PageLayout.IsEmpty">
            <summary>
            Returns true if PageLayout has no redefined fields.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.PageLayout.Compare(C1.C1PreviewClient.PageLayout)">
            <summary>
            Compares this PageLayout with other PageLayout object.
            </summary>
            <param name="other">PageLayout object to compare to.</param>
            <returns>Returns true if this PageLayout object equals other PageLayout object.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.PageLayout.GetOwnedObjectCount">
            <summary>
            Calculates the count of render objects used in this PageLayout object.
            </summary>
            <returns>Returns the count of render objects used in this PageLayout object.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.PageLayout.Clone">
            <summary>
            Creates a new PageLayout object that is a copy of the current instance. 
            All nested objects (render objects, page settings) are cloned.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.PageLayout.AssignFrom(C1.C1PreviewClient.PageLayout)">
            <summary>
            Copies properties from another PageLayout object.
            All nested objects (render objects, page settings) are cloned.
            </summary>
            <param name="source">The another PageLayout object.</param>
        </member>
        <member name="P:C1.C1PreviewClient.PageLayout.Document">
            <summary>
            Gets the C1PrintDocument object to which this object is connected.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.PageLayout.Kind">
            <summary>
            Gets the kind of page layout in document.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.PageLayout.PageSettings">
            <summary>
            Gets or sets the page settings associated with this page layout.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.PageLayout.PageHeader">
            <summary>
            Gets or sets the page header associated with this page layout.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.PageLayout.PageFooter">
            <summary>
            Gets or sets the page footer associated with this page layout.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.PageLayout.Watermark">
            <summary>
            Gets or sets the watermark associated with this page layout.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.PageLayout.Overlay">
            <summary>
            Gets or sets the overlay associated with this page layout.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.PageLayout.HasColumns">
            <summary>
            Gets the value indicating whether this page layout contains multiple columns.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.PageLayout.Columns">
            <summary>
            Gets the collection of columns defined for this page layout.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.DocumentPageLayouts">
            <summary>
            Describes the page layouts used in document.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.DocumentPageLayouts.Owner">
            <summary>
            Gets the C1PrintDocument object containing this DocumentPageLayouts object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.DocumentPageLayouts.Item(C1.C1PreviewClient.PageLayoutKindEnum)">
            <summary>
            Enumerates all page layouts by kind,
            can return null if page layout with specified kind does not exist.
            </summary>
            <param name="kind">Kind of page layout object.</param>
            <returns>The page layout object with specified kind.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.DocumentPageLayouts.FirstPage">
            <summary>
            Gets or sets the layout for first page of document.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.DocumentPageLayouts.LastPage">
            <summary>
            Gets or sets the layout for last page of document.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.DocumentPageLayouts.EvenPages">
            <summary>
            Gets or sets the layout for even pages of document.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.DocumentPageLayouts.OddPages">
            <summary>
            Gets or sets the layout for odd pages of document.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.DocumentPageLayouts.Default">
            <summary>
            Gets or sets the default page layot of document.
            This page layout can be overriden in the
            FirstPage, EventPages, OddPages properties.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.DocumentPageLayouts.PrintHeaderOnFirstPage">
            <summary>
            Gets or sets a value indicating whether the page header should
            print on the first page of the document.
            This property overrides other related properties when set to false.
            The default value is true.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.DocumentPageLayouts.PrintFooterOnFirstPage">
            <summary>
            Gets or sets a value indicating whether the page footer should
            print on the first page of the document.
            This property overrides other related properties when set to false.
            The default value is true.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.DocumentPageLayouts.PrintHeaderOnLastPage">
            <summary>
            Gets or sets a value indicating whether the page header should
            print on the last page of the document.
            This property overrides other related properties when set to false.
            The default value is true.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.DocumentPageLayouts.PrintFooterOnLastPage">
            <summary>
            Gets or sets a value indicating whether the page footer should
            print on the last page of the document.
            This property overrides other related properties when set to false.
            The default value is true.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.DocumentPageLayouts.SuppressEmptyLastPage">
            <summary>
            Gets or sets a value indicating whether to suppress adding an empty page
            at the end of the document if the last object in the document contains
            a page break after itself.
            The default value is false.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.PrinterUtil.CreatePrinterIC(System.String)">
            <summary>
            Creates the information context for specified printer,
            this context can be used for measurement operations, NOT FOR DRAWING.
            </summary>
            <param name="printerName">Name of printer.</param>
            <returns>The handle of context or IntPtr.Zero if error occurs.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.PrinterUtil.GetPrinterDpi(System.String)">
            <summary>
            Gets the dpi of specified printer.
            </summary>
            <param name="printerName">Name of printer.</param>
            <returns>The PointF structure, PointF.X is horizontal dpi, PointF.Y is vertical dpi. Returns PointF.Empty if error occurs.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.PrinterUtil.IsPrinterValid(System.String)">
            <summary>
            Tests is the specified printer name.
            </summary>
            <param name="printerName">Name of printer.</param>
            <returns>Returns the true if printer name is valid.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.PrinterUtil.FindBestPrinter(System.Single,System.Single@)">
            <summary>
            Searches for the printer with specified minimal dpi, the horizontal and
            vertical dpi of printer must be same.
            </summary>
            <param name="minDpi">The minimal possible dpi. If this parameter is zero then the first printer with "square" dpi will be selected.</param>
            <param name="bestPrinterDpi">OUT: The dpi of the searched printer or 0 if printer is not found.</param>
            <returns>The name of searched printer or null if search fails.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.PropsHashtable.Clear">
            <summary>
            Clears a collection.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.PropsHashtable.GetPropIndex(System.Int32)">
            <summary>
            Gets index of property in _keys and _values arrays.
            </summary>
            <param name="propKey">Key of property.</param>
            <returns>Returns index of property value in the Values array it is zero-based.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.PropsHashtable.SetPropValue(System.Int32,System.Object)">
            <summary>
            Sets value of property.
            </summary>
            <param name="propKey">Key of property.</param>
            <param name="value">Value of property.</param>
        </member>
        <member name="M:C1.C1PreviewClient.PropsHashtable.DeletePropValue(System.Int32)">
            <summary>
            Deletes tyhe property value from collection.
            </summary>
            <param name="propKey">Key of property.</param>
        </member>
        <member name="M:C1.C1PreviewClient.PropsHashtable.IsEmpty">
            <summary>
            Returns true if collection is empty.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.PropsHashtable.IsPropExists(System.Int32)">
            <summary>
            Returns true if value of specified property is defined.
            </summary>
            <param name="propKey">Key of property.</param>
        </member>
        <member name="T:C1.C1PreviewClient.RenderObject">
            <summary>
            Base class for all render objects.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.InitRenderObject">
            <summary>
            Performs some initializations.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.GetFlag(System.Int32)">
            <summary>
            Returns the value of flag. The object has private field:
            <code>
            private int _flags;
            </code>
            This field can be used for storing various boolean properties 
            (CanSplitHorz, CanSplitVert etc), for example CanSplitHorz property defined as:
            <code>
            public bool CanSplitHorz
            {
                get { return GetFlag(c_flgCanSplitVert); }
                set { SetFlag(c_flgCanSplitVert, value); }
            }
            </code>
            </summary>
            <param name="flagMask">Mask of flag.</param>
            <returns>Returns true if specified flag is set.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.SetFlag(System.Int32,System.Boolean)">
            <summary>
            Sets value of flag.
            <seealso cref="M:C1.C1PreviewClient.RenderObject.GetFlag(System.Int32)"/>
            </summary>
            <param name="flagMask">Mask of flag.</param>
            <param name="value">Value of flag.</param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.OnChildAdd(C1.C1PreviewClient.RenderObject)">
            <summary>
            Called after adding new child RenderObject object to the Children collection.
            User can throw exception if this object can't be added as the child for this object.
            </summary>
            <param name="child">Child RenderObject object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.OnChildRemove(C1.C1PreviewClient.RenderObject)">
            <summary>
            Called after removing child RenderObject object from the Children collection.
            User can throw exception if this object can't be removed.
            </summary>
            <param name="child">Child RenderObject object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.OnParentAdd(C1.C1PreviewClient.RenderObject)">
            <summary>
            Called after adding this object to the Children collection
            of another object.
            User can throw exception if this object can't be added as the child for this object.
            </summary>
            <param name="parent">The new parent object for this object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.OnParentRemove(C1.C1PreviewClient.RenderObject)">
            <summary>
            Called after removing this object from the Children collection
            of another object.
            </summary>
            <param name="parent">The parent object of this object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.GetWidth">
            <summary>
            Override this method to perform additional actions when value of the Width property of object is being read.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.SetWidth(C1.C1PreviewClient.Unit)">
            <summary>
            Override this method to perform additional actions when value of the Width property of object is being defined.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.GetHeight">
            <summary>
            Override this method to perform additional actions when value of the Height property of object is being read.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.SetHeight(C1.C1PreviewClient.Unit)">
            <summary>
            Override this method to perform additional actions when value of the Height property of object is being defined.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.SetSplitVertBehavior(C1.C1PreviewClient.SplitBehaviorEnum)">
            <summary>
            Override this method to perform additional actions when value of the SplitVertBehavior property of object is being defined.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.SetSplitHorzBehavior(C1.C1PreviewClient.SplitBehaviorEnum)">
            <summary>
            Override this method to perform additional actions when value of the SplitHorzBehavior property of object is being defined.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.GetAssignChildren">
            <summary>
            Override this method and return false if you want manually copy of children
            objects for this object. This method returns true by default.
            </summary>
            <returns>Boolean value indicating that the children objects must be copied in the AssignFrom method.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.GetActualWidth">
            <summary>
            Override this method to return actual width of object that is used
            when document resolved.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.GetActualHeight">
            <summary>
            Override this method to return actual height of object that is used
            when document resolved.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.AssignFrom(C1.C1PreviewClient.RenderObject,System.Boolean,System.Boolean)">
            <summary>
            Copies properties from another object.
            The list of fragments is not copied and not changed (Fragments property).
            Properties UserData, PageNumberingChange are copied by references.
            The Name property is not copied.
            </summary>
            <param name="source">The source object, properties of which are copied.</param>
            <param name="assignDataBinding">Indicates that the DataBinding property should be copied.</param>
            <param name="assignChildren">Indicates that the list of children should be copied.</param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.AssignFrom(C1.C1PreviewClient.RenderObject,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Copies properties from another object.
            The list of fragments is not copied and not changed (Fragments property).
            Properties UserData, PageNumberingChange are copied by references.
            The Name property is not copied.
            </summary>
            <param name="source">The source object, properties of which are copied.</param>
            <param name="assignDataBinding">Indicates that the DataBinding property should be copied.</param>
            <param name="assignChildren">Indicates that the list of children should be copied.</param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.AssignFrom(C1.C1PreviewClient.RenderObject)">
            <summary>
            Copies properties of another object.
            The list of fragments is not copied and not changed (Fragments property).
            Properties UserData, PageNumberingChange are copied by references.
            The Name property is not copied.
            </summary>
            <param name="source">The source object, properties of which are copied.</param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.Clone(System.Boolean,System.Boolean)">
            <summary>
            Creates the clone of object.
            </summary>
            <param name="assignDataBinding">Indicates the the DataBinding property should be assigned to the newly created object.</param>
            <param name="assignChildren">Indicates the the Children list should be assigned to the newly created object.</param>
            <returns>Returns the newly created object.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.Clone(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates the clone of object.
            </summary>
            <param name="assignDataBinding">Indicates the DataBinding property should be assigned to the newly created object.</param>
            <param name="assignChildren">Indicates the Children list should be assigned to the newly created object.</param>
            <param name="assignAnchors">Indicates the Anchors list should be assigned to the newly created object.</param>
            <param name="assignHyperlink">Indicates the Hyperlink should be assigned to the newly created object.</param>
            <param name="assignName">Indicates the Name should be assigned to the newly created object.</param>
            <returns>Returns the newly created object.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.Clone">
            <summary>
            Creates the clone of object.
            </summary>
            <returns>Returns the newly created object.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.GetOwnedObjectCount">
            <summary>
            Calculates the number of objects which are owned by this object.
            </summary>
            <remarks>
            <para>This method takes into account:</para>
            <list type="bullet">
            <item><description>Child objects (and their children)</description></item>
            <item><description>Objects which are specified in page layouts as PageHeader, PageFooter etc.</description></item>
            </list>
            </remarks>
            <returns>The number of owned objects.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObject.GetNestedObjectCount">
            <summary>
            Calculates the count of objects which are nested within this object.
            This method takes into account child objects and their children.
            </summary>
            <returns>Returns the count of nested objects.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.ActualWidth">
            <summary>
            Gets the actual width of object used when document resolved.
            This property may differs from Width for example if object is placed
            in the table's column with auto-with and Width is "parent.width" then
            this property returns auto.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.ActualHeight">
            <summary>
            Gets the actual height of object used when document resolved.
            This property may differs from Height for example if object is placed
            in the table's row with auto-height and Height is "parent.height" then
            this property returns auto.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.TableCellInt">
            <summary>
            The cell of RenderTable containing this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.Document">
            <summary>
            Gets the C1Preview object containing this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.Collection">
            <summary>
            Gets the RenderObjectCollection object containing this object,
            returns null if object has no Owner or its Owner is not RenderObjectCollection.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.IndexInOwner">
            <summary>
            Gets the index in owner object, returns the -1 if no owner.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.Parent">
            <summary>
            Gets the parent RenderObject object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.Name">
            <summary>
            Unique name of object, can be string.Empty or *unique* within of _owner.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.UserData">
            <summary>
            Gets or sets some data associated with object by user.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.HasChildren">
            <summary>
            Returns true if object has child objects.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.Children">
            <summary>
            Returns collection of child objects.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.SplitVertBehavior">
            <summary>
            Gets or sets the value determining how the object is treated
            when it is too high to fit in the vertical space available on the current page.
            </summary>
            <seealso cref="P:C1.C1PreviewClient.RenderObject.SplitHorzBehavior"/>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.SplitHorzBehavior">
            <summary>
            Gets or sets the value determining how the object is treated
            when it is too wide to fit in the horizontal space available on the current page.
            </summary>
            <seealso cref="P:C1.C1PreviewClient.RenderObject.SplitVertBehavior"/>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.CanSplitHorz">
            <summary>
            Indicates whether the object can be split horizontally if it falls on a page break.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.CanSplitVert">
            <summary>
            Indicates whether the object can be split vertically if it falls on a page break.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.ZOrder">
            <summary>
            Gets or sets the Z-order of object, the object with smaller ZOrder
            will be displayed other the object with larger ZOrder.
            By default ZOrder of all objects is zero.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.X">
            <summary>
            X coordinate of object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.Y">
            <summary>
            Y coordinate of object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.Width">
            <summary>
            Width of object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.Height">
            <summary>
            Height of object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.BreakBefore">
            <summary>
            Gets or sets the type of break before this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.BreakAfter">
            <summary>
            Gets or sets the type of break after this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.LayoutChangeBefore">
            <summary>
            Gets or sets the LayoutChangeBase object
            defining the change of page layout before object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.LayoutChangeAfter">
            <summary>
            Gets or sets the LayoutChangeBase object
            defining the change of page layout after object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.Style">
            <summary>
            Style of this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.RepeatBordersHorz">
            <summary>
            Indicates whether horizontal borders of object must be repeated when horizontal splitting.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.RepeatBordersVert">
            <summary>
            Indicates whether vertical borders of object must be repeated when vertical splitting.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.PageNumberingChange">
            <summary>
            Gets or sets the PageNumberingChange object describing the
            change of page number.
            </summary>
            <value></value>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.Hyperlink">
            <summary>
            Gets or sets the hyperlink associated with this render object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.Anchors">
            <summary>
            Gets the collection of anchors within this render object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.TableCell">
            <summary>
            Gets the TableCell object containing this object, this property is 
            null if object not in RenderTable.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.KeepTogether">
            <summary>
            Gets or sets a render object which should be printed on the same page
            as the current object. The specified object must have the same
            <see cref="P:C1.C1PreviewClient.RenderObject.Parent"/> as the current object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObject.Visibility">
            <summary>
            Gets or sets the value indicating the visibility of the object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderArea.HeaderVert">
            <summary>
            Gets or sets a render object that will be repeated on all pages (or columns)
            if the current render area is split vertically when it is too high to fit on
            a single page.
            </summary>
            <remarks>
            The specified render object should not be a child of another render object.
            It can be a child of the current render area; if it is not, it will be
            added to the current render area's <see cref="!:Children"/> collection.
            </remarks>
        </member>
        <member name="P:C1.C1PreviewClient.RenderArea.HeaderHorz">
            <summary>
            Gets or sets a render object that will be repeated on all "horizontal" pages
            if the current render area is split horizontally when it is too wide to fit on
            a single page.
            </summary>
            <remarks>
            The specified render object should not be a child of another render object.
            It can be a child of the current render area; if it is not, it will be
            added to the current render area's <see cref="!:Children"/> collection.
            </remarks>
        </member>
        <member name="T:C1.C1PreviewClient.RenderEmpty">
            <summary>
            Represents RO that renders images.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.RenderGraphics">
            <summary>
            Represents RO that render images.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.RenderGraphics.Clear">
            <summary>
            Clears the current graphics.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderGraphics.EmfType">
            <summary>
            Gets or sets the type of metafile created by this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderGraphics.Graphics">
            <summary>
            Graphics object to draw on.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderGraphics.ReferenceGraphics">
            <summary>
            Gets the reference graphics used to create an underlying metafiles.
            This property is shortcut to the Document.CreationGraphics property
            and can return null if this RenderGraphics object is not connected to the
            document.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.RenderImage">
            <summary>
            Represents RO that renders images.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderImage.Image">
            <summary>
            Defines an image to render.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderImage.ImageName">
            <summary>
            Gets or sets the name of image in document's dictionary.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.SplitBehaviorEnum">
            <summary>
            Defines the splitting behavior of a render object.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.SplitBehaviorEnum.Never">
            <summary>
            The object should not be split between pages
            (i.e. should always be kept together on a single page).
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.SplitBehaviorEnum.SplitIfNeeded">
            <summary>
            The object can be split if it does not fit onto the current page.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.SplitBehaviorEnum.SplitIfLarge">
            <summary>
            The object can be split only if it is too large to fit on an empty 
            page. In that case, the object is split immediately. Otherwise, a 
            new page is started and the object is placed on it without 
            splitting.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.SplitBehaviorEnum.SplitNewPage">
            <summary>
            If the object does not fit on the current page (column),
            a new page (column) is started; if the object does not fit
            on that page (column), it is split as needed after that.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.BreakEnum">
            <summary>
            Defines the various breaks which can be forced before or after render object.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.BreakEnum.None">
            <summary>
            No break.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.BreakEnum.Page">
            <summary>
            New page should be started.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.BreakEnum.Column">
            <summary>
            New column should be started.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.BreakEnum.Line">
            <summary>
            New line on inline flow should be started.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.VisibilityEnum">
            <summary>
            Specifies the visibility of an object.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.VisibilityEnum.Visible">
            <summary>
            Object is visible.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.VisibilityEnum.Hidden">
            <summary>
            Object is not visible, but takes up space and affects the layout of other objects as if it were visible.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.VisibilityEnum.Collapse">
            <summary>
            Object is not visible, its size is zero and it does not affect the layout of other objects.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.IRenderObjectContainer">
            <summary>
            This interface must be implemented by object which works as owner 
            for the RenderObject objects.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.RenderObjectCollection">
            <summary>
            Represents the collection of RenderObject objects.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.RenderObjectCollection.FindByAnchorName(System.String,C1.C1PreviewClient.C1Anchor@)">
            <summary>
            Searches the render object by name of anchor which it contains.
            </summary>
            <param name="anchorName">The name of anchor to search.</param>
            <param name="anchor">OUT: contains the C1Anchor object with searched name.</param>
            <returns>Returns the found render object or null if not found.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObjectCollection.Item(System.String)">
            <summary>
            Returns the RenderObject object by its name.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderObjectCollection.Item(System.Int32)">
            <summary>
            Returns the RenderObject object by its index.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.RenderParagraph">
            <summary>
            Describes a paragraph render object.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.RenderTextBase">
            <summary>
            Base class for RenderText and RenderParagraph classes.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTextBase.HasText">
            <summary>
            Returns true if object has a text.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTextBase.TextLength">
            <summary>
            Returns the length of text. Do not use this property to check exists
            text or not, use HasText instead.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTextBase.TabPositions">
            <summary>
            Collection of tabs in text.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTextBase.HasTabPositions">
            <summary>
            Gets the value indicating whether the TabPositions collection is not empty.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.RenderParagraph.#ctor">
            <summary>
            Initializes a new instance of the RenderParagraph class.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.RenderParagraph.#ctor(C1.C1PreviewClient.Style)">
            <summary>
            Initializes a new instance of the RenderParagraph class.
            </summary>
            <param name="style">The style to use for this RenderParagraph object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderParagraph.#ctor(System.Drawing.Font)">
            <summary>
            Initializes a new instance of the RenderParagraph class.
            </summary>
            <param name="font">The font to use for this RenderParagraph object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderParagraph.#ctor(System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the RenderParagraph class.
            </summary>
            <param name="font">The font to use for this RenderParagraph object.</param>
            <param name="textColor">The text color to use for this RenderParagraph object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderParagraph.#ctor(System.Drawing.Font,System.Drawing.Color,C1.C1PreviewClient.AlignHorzEnum)">
            <summary>
            Initializes a new instance of the RenderParagraph class.
            </summary>
            <param name="font">The font to use for this RenderParagraph object.</param>
            <param name="textColor">The text color to use for this RenderParagraph object.</param>
            <param name="horzAlign">The horizontal alignment to use for this RenderParagraph object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderParagraph.#ctor(System.Drawing.Font,C1.C1PreviewClient.AlignHorzEnum)">
            <summary>
            Initializes a new instance of the RenderParagraph class.
            </summary>
            <param name="font">The font to use for this RenderParagraph object.</param>
            <param name="horzAlign">The horizontal alignment to use for this RenderParagraph object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderParagraph.#ctor(C1.C1PreviewClient.AlignHorzEnum)">
            <summary>
            Initializes a new instance of the RenderParagraph class.
            </summary>
            <param name="horzAlign">The horizontal alignment to use for this RenderParagraph object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderParagraph.#ctor(C1.C1PreviewClient.C1PrintDocument)">
            <summary>
            For internal use only.
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderParagraph.#ctor(C1.C1PreviewClient.C1PrintDocument,C1.C1PreviewClient.Style)">
            <summary>
            For internal use only.
            </summary>
            <param name="document"></param>
            <param name="style"></param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderParagraph.#ctor(C1.C1PreviewClient.C1PrintDocument,System.Drawing.Font)">
            <summary>
            For internal use only.
            </summary>
            <param name="document"></param>
            <param name="font"></param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderParagraph.#ctor(C1.C1PreviewClient.C1PrintDocument,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            For internal use only.
            </summary>
            <param name="document"></param>
            <param name="font"></param>
            <param name="textColor"></param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderParagraph.#ctor(C1.C1PreviewClient.C1PrintDocument,System.Drawing.Font,System.Drawing.Color,C1.C1PreviewClient.AlignHorzEnum)">
            <summary>
            For internal use only.
            </summary>
            <param name="document"></param>
            <param name="font"></param>
            <param name="textColor"></param>
            <param name="horzAlign"></param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderParagraph.#ctor(C1.C1PreviewClient.C1PrintDocument,System.Drawing.Font,C1.C1PreviewClient.AlignHorzEnum)">
            <summary>
            For internal use only.
            </summary>
            <param name="document"></param>
            <param name="font"></param>
            <param name="horzAlign"></param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderParagraph.#ctor(C1.C1PreviewClient.C1PrintDocument,C1.C1PreviewClient.AlignHorzEnum)">
            <summary>
            For internal use only.
            </summary>
            <param name="document"></param>
            <param name="horzAlign"></param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderParagraph.AssignFrom(C1.C1PreviewClient.RenderObject,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Assigns the properties of the current object from the specified RenderParagraph object.
            </summary>
            <param name="source">The object to copy the properties from.</param>
        </member>
        <member name="P:C1.C1PreviewClient.RenderParagraph.Content">
            <summary>
            Gets the ParagraphObjectCollection representing the content of this RenderParagraph object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderParagraph.HasContent">
            <summary>
            Gets the value indicating whether the current RenderParagraph object has any content.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderParagraph.HasText">
            <summary>
            Overridden. Gets the value indicating whether the current RenderParagraph object has any content.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderParagraph.TextLength">
            <summary>
            Gets the length of text in paragraph each non text object has one char length.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.ParagraphObject">
            <summary>
            Represents a part of a RenderParagraph object - text, hyperlink or inline image.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObject.#ctor">
            <summary>
            Initializes a new instance of the ParagraphObject class.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObject.AssignFrom(C1.C1PreviewClient.ParagraphObject)">
            <summary>
            Assigns the properties of the current object from the specified ParagraphObject.
            </summary>
            <param name="source">The object to copy the properties from.</param>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObject.Clone">
            <summary>
            Clones the current ParagraphObject.
            </summary>
            <returns>The newly created object.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.ParagraphObject.Hyperlink">
            <summary>
            Gets or sets the hyperlink associated with this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ParagraphObject.Style">
            <summary>
            Gets the style associated with this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ParagraphObject.Owner">
            <summary>
            Gets the ParagraphObjectCollection representing the content of the paragraph
            containing this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ParagraphObject.RenderParagraph">
            <summary>
            Gets the RenderParagraph containing this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ParagraphObject.Document">
            <summary>
            Gets the C1PrintDocument containing this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ParagraphObject.IndexInOwner">
            <summary>
            Gets the index of this object in the ParagraphObjectCollection.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ParagraphObject.PositionInText">
            <summary>
            Gets the position of this ParagraphObject in the text.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ParagraphObject.TextLength">
            <summary>
            Gets the length of this ParagraphObject in chars.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.ParagraphText">
            <summary>
            Represents a text which is a part of a RenderParagraph.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphText.#ctor">
            <summary>
            Initializes a new instance of the ParagraphText class.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphText.#ctor(System.String,C1.C1PreviewClient.Style)">
            <summary>
            Initializes a new instance of the ParagraphText class.
            </summary>
            <param name="text">The text of this ParagraphText object.</param>
            <param name="style">The style to use for this ParagraphText object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphText.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ParagraphText class.
            </summary>
            <param name="text">The text of this ParagraphText object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphText.#ctor(System.String,System.Drawing.Font)">
            <summary>
            Initializes a new instance of the ParagraphText class.
            </summary>
            <param name="text">The text of this ParagraphText object.</param>
            <param name="font">The font to use for this ParagraphText object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphText.#ctor(System.String,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the ParagraphText class.
            </summary>
            <param name="text">The text of this ParagraphText object.</param>
            <param name="textColor">The text color to use for this ParagraphText object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphText.#ctor(System.String,C1.C1PreviewClient.TextPositionEnum)">
            <summary>
            Initializes a new instance of the ParagraphText class.
            </summary>
            <param name="text">The text of this ParagraphText object.</param>
            <param name="textPosition">The text position to use for this ParagraphText object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphText.#ctor(System.String,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the ParagraphText class.
            </summary>
            <param name="text">The text of this ParagraphText object.</param>
            <param name="font">The font to use for this ParagraphText object.</param>
            <param name="textColor">The text color to use for this ParagraphText object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphText.#ctor(System.String,System.Drawing.Font,C1.C1PreviewClient.TextPositionEnum)">
            <summary>
            Initializes a new instance of the ParagraphText class.
            </summary>
            <param name="text">The text of this ParagraphText object.</param>
            <param name="font">The font to use for this ParagraphText object.</param>
            <param name="textPosition">The text position to use for this ParagraphText object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphText.#ctor(System.String,System.Drawing.Color,C1.C1PreviewClient.TextPositionEnum)">
            <summary>
            Initializes a new instance of the ParagraphText class.
            </summary>
            <param name="text">The text of this ParagraphText object.</param>
            <param name="textColor">The text color to use for this ParagraphText object.</param>
            <param name="textPosition">The text position to use for this ParagraphText object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphText.#ctor(System.String,System.Drawing.Font,System.Drawing.Color,C1.C1PreviewClient.TextPositionEnum)">
            <summary>
            Initializes a new instance of the ParagraphText class.
            </summary>
            <param name="text">The text of this ParagraphText object.</param>
            <param name="font">The font to use for this ParagraphText object.</param>
            <param name="textColor">The text color to use for this ParagraphText object.</param>
            <param name="textPosition">The text position to use for this ParagraphText object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphText.GetLength">
            <summary>
            Overridden. Returns the length of this ParagraphText object.
            </summary>
            <returns>The text length.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphText.AssignFrom(C1.C1PreviewClient.ParagraphObject)">
            <summary>
            Assigns the properties of the current object from the specified ParagraphText object.
            </summary>
            <param name="source">The object to copy the properties from.</param>
        </member>
        <member name="P:C1.C1PreviewClient.ParagraphText.Text">
            <summary>
            Gets or sets the text represented by this ParagraphText.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.ParagraphImage">
            <summary>
            Represents an inline image which is a part of a RenderParagraph.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphImage.#ctor">
            <summary>
            Initializes a new instance of the ParagraphImage class. 
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphImage.#ctor(System.Drawing.Image,C1.C1PreviewClient.Style)">
            <summary>
            Initializes a new instance of the ParagraphImage class. 
            </summary>
            <param name="image">The image of this ParagraphImage object.</param>
            <param name="style">The style to use for this ParagraphImage object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphImage.#ctor(System.Drawing.Image)">
            <summary>
            Initializes a new instance of the ParagraphImage class. 
            </summary>
            <param name="image">The image of this ParagraphImage object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphImage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ParagraphImage class. 
            </summary>
            <param name="imageName">The dictionary name of the image of this ParagraphImage object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphImage.GetLength">
            <summary>
            Overridden. Returns the length of this ParagraphImage object.
            </summary>
            <returns>Always returns 1.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphImage.AssignFrom(C1.C1PreviewClient.ParagraphObject)">
            <summary>
            Assigns the properties of the current object from the specified ParagraphImage object.
            </summary>
            <param name="source">The object to copy the properties from.</param>
        </member>
        <member name="P:C1.C1PreviewClient.ParagraphImage.Image">
            <summary>
            Gets or sets the image represented by this ParagraphImage object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ParagraphImage.ImageName">
            <summary>
            Gets or sets the dictionary name of the image represented by this ParagraphImage object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ParagraphImage.C1#C1PreviewClient#IDictionaryItemLinkOwner#Dictionary">
            <summary>
            Gets the dictionary associated with this ParagraphImage object.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.ParagraphObjectCollection">
            <summary>
            Represents a collection of ParagraphObject objects,
            which comprise the content of a RenderParagraph objects.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.Add(C1.C1PreviewClient.ParagraphObject)">
            <summary>
            Adds ParagraphObject to this collection.
            </summary>
            <param name="po">The ParagraphObject to add.</param>
            <returns>The index of the newly added object in the collection.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.Remove(C1.C1PreviewClient.ParagraphObject)">
            <summary>
            Removes the specified object from the collection.
            </summary>
            <param name="po">The object to remove.</param>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddText(System.String)">
            <summary>
            Adds the specified text string to the current paragraph.
            </summary>
            <param name="text">The string to add.</param>
            <returns>The ParagraphText object created to represent the specified text string.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddText(System.String,C1.C1PreviewClient.Style)">
            <summary>
            Adds the specified text string to the current paragraph.
            </summary>
            <param name="text">The string to add.</param>
            <param name="style">The style to use to render the string.</param>
            <returns>The ParagraphText object created to represent the specified text string.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddText(System.String,System.Drawing.Font)">
            <summary>
            Adds the specified text string to the current paragraph.
            </summary>
            <param name="text">The string to add.</param>
            <param name="font">The font to use to render the string.</param>
            <returns>The ParagraphText object created to represent the specified text string.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddText(System.String,System.Drawing.Color)">
            <summary>
            Adds the specified text string to the current paragraph.
            </summary>
            <param name="text">The string to add.</param>
            <param name="textColor">The text color to use to render the string.</param>
            <returns>The ParagraphText object created to represent the specified text string.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddText(System.String,C1.C1PreviewClient.TextPositionEnum)">
            <summary>
            Adds the specified text string to the current paragraph.
            </summary>
            <param name="text">The string to add.</param>
            <param name="textPosition">The text position to use to render the string.</param>
            <returns>The ParagraphText object created to represent the specified text string.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddText(System.String,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Adds the specified text string to the current paragraph.
            </summary>
            <param name="text">The string to add.</param>
            <param name="font">The font to use to render the string.</param>
            <param name="textColor">The text color to use to render the string.</param>
            <returns>The ParagraphText object created to represent the specified text string.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddText(System.String,System.Drawing.Font,C1.C1PreviewClient.TextPositionEnum)">
            <summary>
            Adds the specified text string to the current paragraph.
            </summary>
            <param name="text">The string to add.</param>
            <param name="font">The font to use to render the string.</param>
            <param name="textPosition">The text position to use to render the string.</param>
            <returns>The ParagraphText object created to represent the specified text string.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddText(System.String,System.Drawing.Color,C1.C1PreviewClient.TextPositionEnum)">
            <summary>
            Adds the specified text string to the current paragraph.
            </summary>
            <param name="text">The string to add.</param>
            <param name="textColor">The text color to use to render the string.</param>
            <param name="textPosition">The text position to use to render the string.</param>
            <returns>The ParagraphText object created to represent the specified text string.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddText(System.String,System.Drawing.Font,System.Drawing.Color,C1.C1PreviewClient.TextPositionEnum)">
            <summary>
            Adds the specified text string to the current paragraph.
            </summary>
            <param name="text">The string to add.</param>
            <param name="font">The font to use to render the string.</param>
            <param name="textColor">The text color to use to render the string.</param>
            <param name="textPosition">The text position to use to render the string.</param>
            <returns>The ParagraphText object created to represent the specified text string.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddHyperlink(System.String,System.String)">
            <summary>
            Adds a hyperlink to the current paragraph.
            </summary>
            <param name="text">The string representing the hyperlink.</param>
            <param name="anchorName">The name of the anchor which is the target of this hyperlink.</param>
            <returns>The ParagraphText object created to represent the hyperlink.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddHyperlink(System.String,System.String,C1.C1PreviewClient.Style)">
            <summary>
            Adds a hyperlink to the current paragraph.
            </summary>
            <param name="text">The string representing the hyperlink.</param>
            <param name="anchorName">The name of the anchor which is the target of this hyperlink.</param>
            <param name="style">The style to use to render this hyperlink.</param>
            <returns>The ParagraphText object created to represent the hyperlink.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddHyperlink(System.String,C1.C1PreviewClient.C1LinkTarget)">
            <summary>
            Adds a hyperlink to the current paragraph.
            </summary>
            <param name="text">The string representing the hyperlink.</param>
            <param name="target">The target of this hyperlink.</param>
            <returns>The ParagraphText object created to represent the hyperlink.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddHyperlink(System.String,C1.C1PreviewClient.C1LinkTarget,C1.C1PreviewClient.Style)">
            <summary>
            Adds a hyperlink to the current paragraph.
            </summary>
            <param name="text">The string representing the hyperlink.</param>
            <param name="target">The target of this hyperlink.</param>
            <param name="style">The style to use to render this hyperlink.</param>
            <returns>The ParagraphText object created to represent the hyperlink.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddHyperlink(System.String,C1.C1PreviewClient.RenderObject)">
            <summary>
            Adds a hyperlink to the current paragraph.
            </summary>
            <param name="text">The string representing the hyperlink.</param>
            <param name="renderObject">The RenderObject which is the target of this hyperlink.</param>
            <returns>The ParagraphText object created to represent the hyperlink.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddHyperlink(System.String,C1.C1PreviewClient.ParagraphObject)">
            <summary>
            Adds a hyperlink to the current paragraph.
            </summary>
            <param name="text">The string representing the hyperlink.</param>
            <param name="paragraphObject">The ParagraphObject which is the target of this hyperlink.</param>
            <returns>The ParagraphText object created to represent the hyperlink.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddHyperlink(System.Drawing.Image,System.String)">
            <summary>
            Adds a hyperlink to the current paragraph.
            </summary>
            <param name="image">The image representing the hyperlink.</param>
            <param name="anchorName">The name of the anchor which is the target of this hyperlink.</param>
            <returns>The ParagraphImage object created to represent the hyperlink.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddHyperlink(System.Drawing.Image,C1.C1PreviewClient.C1LinkTarget)">
            <summary>
            Adds a hyperlink to the current paragraph.
            </summary>
            <param name="image">The image representing the hyperlink.</param>
            <param name="target">The target of this hyperlink.</param>
            <param name="style">The style to use to render this hyperlink.</param>
            <returns>The ParagraphImage object created to represent the hyperlink.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddHyperlink(System.Drawing.Image,C1.C1PreviewClient.RenderObject)">
            <summary>
            Adds a hyperlink to the current paragraph.
            </summary>
            <param name="image">The image representing the hyperlink.</param>
            <param name="renderObject">The RenderObject which is the target of this hyperlink.</param>
            <returns>The ParagraphImage object created to represent the hyperlink.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddHyperlink(System.Drawing.Image,C1.C1PreviewClient.ParagraphObject)">
            <summary>
            Adds a hyperlink to the current paragraph.
            </summary>
            <param name="image">The image representing the hyperlink.</param>
            <param name="paragraphObject">The ParagraphObject which is the target of this hyperlink.</param>
            <returns>The ParagraphImage object created to represent the hyperlink.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddImage(System.Drawing.Image)">
            <summary>
            Adds an inline image to the current paragraph.
            </summary>
            <param name="image">The image to add to the paragraph.</param>
            <returns>The ParagraphImage object created to represent the image.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddImage(System.String)">
            <summary>
            Adds an inline image to the current paragraph.
            </summary>
            <param name="imageName">The dictionary name of the image to add to the paragraph.</param>
            <returns>The ParagraphImage object created to represent the image.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.ParagraphObjectCollection.AddImage(System.Drawing.Image,C1.C1PreviewClient.Style)">
            <summary>
            Adds an inline image to the current paragraph.
            </summary>
            <param name="image">The image to add to the paragraph.</param>
            <param name="style">The style to use to render the image.</param>
            <returns>The ParagraphImage object created to represent the image.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.ParagraphObjectCollection.RenderParagraph">
            <summary>
            Gets the RenderParagraph object containing this ParagraphObject.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ParagraphObjectCollection.Item(System.Int32)">
            <summary>
            Indicates the ParagraphObject at the specified indexed location in the collection.
            </summary>
            <param name="index">The index of the ParagraphObject to retrieve from the collection.</param>
            <returns>The ParagraphObject located at the specified index location within the collection.</returns>
        </member>
        <member name="T:C1.C1PreviewClient.RenderRichText">
            <summary>
            Represents RO that renders RTF text.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderRichText.HasRtf">
            <summary>
            Returns true if object has a RTF text.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderRichText.Rtf">
            <summary>
            Rtf formatted text.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderRichText.DetectUrls">
            <summary>
            Gets or sets a value indicating whether or not the RenderRichText 
            will automatically format a Uniform Resource Locator (URL) 
            when it is found into the assigned Rtf text.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.ShapeProps">
            <summary>
            Describes the geometric properties of the shape,
            this is a base class.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.RenderShapeBase">
            <summary>
            Base class for ROs that renders shapes.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.LinePropsBase">
            <summary>
            Base class for properties of the RenderLine and RenderPolygon objects.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.RenderLineBase">
            <summary>
            Represents the base class for all line-like shapes
            (RenderLine, RenderPolygon etc).
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.LineProps">
            <summary>
            Represents the geometric properties of the RenderLine object.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.RenderLine">
            <summary>
            Represents render object that renders a line.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.PolygonProps">
            <summary>
            Represents the geometric properties of the RenderPolygon object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.PolygonProps.Points">
            <summary>
            Points defining a polyline.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.PolygonProps.Closed">
            <summary>
            Indicates whether a polyline is closed or opened.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.RenderPolygon">
            <summary>
            Represents RO that renders polygon, if Closed is true then
            polygon will be filled.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.RectangleProps">
            <summary>
            The base class of properties of all rectangle-based shapes like
            rectangle, ellipse, arc, pie.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.RenderRectangle">
            <summary>
            Represents RO that renders a rectangle.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.RenderEllipse">
            <summary>
            Represents RO that renders ellipse.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.EllipsePartProps">
            <summary>
            Represents the properties of shape which is a part of ellipse - arc or pie.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.EllipsePartProps.StartAngle">
            <summary>
            Angle measured in degrees clockwise from the x-axis to the first side of the pie shape. 
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.EllipsePartProps.SweepAngle">
            <summary>
            Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.RenderPie">
            <summary>
            Represents RO that renders ellipse-based wedge.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.RenderArc">
            <summary>
            Represents RO that renders ellipse-based wedge.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.RoundRectangleProps">
            <summary>
            Represents properties of the RenderRoundRectanlge object.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.RenderRoundRectangle">
            <summary>
            Represents RO that renders a rounded rectangle.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.ThreeStateEnum">
            <summary>
            Defines a value which can be in one of three states: undefined, true or false.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.ThreeStateEnum.Undefined">
            <summary>
            The value is undefined.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.ThreeStateEnum.True">
            <summary>
            The value is true.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.ThreeStateEnum.False">
            <summary>
            The value is false.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.TableSizingModeEnum">
            <summary>
            Defines table sizing modes.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.TableSizingModeEnum.Default">
            <summary>
            At table level, default is Auto for rows, and Fixed for columns;
            at row/column level, default inherits from the table.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.TableSizingModeEnum.Fixed">
            <summary>
            Size (height for rows, width for columns) should be explicitly
            specified (if omitted, is determined by the available space
            and row/column count).
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.TableSizingModeEnum.Auto">
            <summary>
            Size (height for rows, width for columns) is calculated
            automatically based on the content.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.CellSplitBehaviorEnum">
            <summary>
            Defines various options for the splitting of content of cells.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.CellSplitBehaviorEnum.Split">
            <summary>
            The content of cell should be split.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.CellSplitBehaviorEnum.Copy">
            <summary>
            The content of cell should be copied each time when it splits.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.CellSplitBehaviorEnum.Cut">
            <summary>
            The content of cell should be cut on first time and displayed only once.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.PageBreakBehaviorEnum">
            <summary>
            Defines various options for the insertion of page breaks.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageBreakBehaviorEnum.Default">
            <summary>
            A page break may be inserted if needed.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageBreakBehaviorEnum.MustBreak">
            <summary>
            A page break is always inserted.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageBreakBehaviorEnum.PreferredBreak">
            <summary>
            If a page break is needed it should be inserted here.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.PageBreakBehaviorEnum.NoBreak">
            <summary>
            A page break can not be inserted.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.TableVector">
            <summary>
            Base class for columns and rows of table.
            One TableVector object can be used in many tables.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.TableVector.AssignFrom(C1.C1PreviewClient.TableVector)">
            <summary>
            Copies properties of anoter TableVector object.
            Number property is not copied.
            </summary>
            <param name="source">The source object properties of which are copied.</param>
        </member>
        <member name="P:C1.C1PreviewClient.TableVector.Owner">
            <summary>
            Gets the TableVectorCollection object containing this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVector.Table">
            <summary>
            Gets the RenderTable object containing this vector.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVector.Ordinal">
            <summary>
            Gets the index of vector, it is zero-based.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVector.Number">
            <summary>
            Gets the index of vector, it is zero-based.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVector.Size">
            <summary>
            Gets or sets the size of vector (width for column, height for row).
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVector.PageBreakBehavior">
            <summary>
            Gets or sets the value determining how page breaks are inserted before this column or row.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVector.CanSplit">
            <summary>
            Gets or sets the value indicating whether the vector (row or column) can split.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVector.Visible">
            <summary>
            Controls the visibility of a table vector. Default value - true.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVector.Style">
            <summary>
            Gets the style of vector.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVector.SizingMode">
            <summary>
            Gets or sets the value determining how the size of the current vector
            is calculated.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.StretchRowEnum">
            <summary>
            Defines the modes of stretching of row.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.StretchRowEnum.Default">
            <summary>
            The stretching of row depends on RenderTable.StretchRows property.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.StretchRowEnum.Yes">
            <summary>
            The row will be stretched.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.StretchRowEnum.No">
            <summary>
            The stretching of row is disabled.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.StretchRowEnum.IfLastOnPage">
            <summary>
            The row will be stretched if it is last on page.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.TableRow">
            <summary>
            Represents row of table.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableRow.Owner">
            <summary>
            Gets the TableRowCollection object containing this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableRow.Height">
            <summary>
            Gets or sets the height of the current row.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableRow.Stretch">
            <summary>
            Gets or sets the stretching mode of the current row.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.StretchColumnEnum">
            <summary>
            Defines the modes of stretching of column.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.StretchColumnEnum.Default">
            <summary>
            The stretchin of column depends on RenderTable.StretchColumns property.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.StretchColumnEnum.Yes">
            <summary>
            The column will be stretched.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.StretchColumnEnum.No">
            <summary>
            The stretching of column is disabled.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.StretchColumnEnum.IfLastOnPage">
            <summary>
            The column will be stretched if it is last on page.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.TableCol">
            <summary>
            Represents column of table.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCol.Owner">
            <summary>
            Gets the TableColCollection object containing this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCol.Width">
            <summary>
            Gets or sets the width of the current column.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCol.Stretch">
            <summary>
            Gets or sets the stretching mode of the current column.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.TableVectorCollection">
            <summary>
            Collection of TableVector objects.
            This is base class for collections of columns and rows.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.TableVectorCollection.GetMaxVectorOrdinal">
            <summary>
            Returns the vector with maximum ordinal or -1 if collection does not contains vectors.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.TableVectorCollection.Insert(System.Int32,System.Int32)">
            <summary>
            Inserts the vectors at specified position.
            </summary>
            <param name="position">Position to insert to.</param>
            <param name="count">Count of vectors to insert.</param>
        </member>
        <member name="M:C1.C1PreviewClient.TableVectorCollection.Delete(System.Int32,System.Int32)">
            <summary>
            Deletes vectors at specified position.
            </summary>
            <param name="position">Index of first vector to delete from.</param>
            <param name="count">Count of vectors to delete.</param>
        </member>
        <member name="M:C1.C1PreviewClient.TableVectorCollection.Delete(System.Int32)">
            <summary>
            Deletes vector at specified position.
            </summary>
            <param name="position">Index of vector to delete.</param>
        </member>
        <member name="M:C1.C1PreviewClient.TableVectorCollection.Insert(System.Int32)">
            <summary>
            Inserts vector at specified position.
            </summary>
            <param name="position">Position to insert to.</param>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorCollection.Cells">
            <summary>
            Gets the owner's TableCellCollection object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorCollection.UserGroups">
            <summary>
            Gets the owner's UserCellGroupCollection object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorCollection.Owner">
            <summary>
            Gets RenderTable object containing this collection.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorCollection.Groups">
            <summary>
            Gets the TableVectorGroupCollection object corresponding this vectors collection.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorCollection.Count">
            <summary>
            Gets or sets the "logical" count of vectors.
            If you set this property to -1 then count of vectors (columns or rows)
            will be calculated automatically.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorCollection.VectorCount">
            <summary>
            Gets the real count of vectors in collection
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.TableRowCollection">
            <summary>
            Collection of TableRow objects.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.TableRowCollection.FindRow(System.Int32)">
            <summary>
            Searches the row by its index.
            </summary>
            <param name="number">Index of row, zero based.</param>
            <returns>Returns the TableRow object or null.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.TableRowCollection.Item(System.Int32)">
            <summary>
            Gets the TableRow object by its index, if row with specified index is
            not found then new TableRow object will be created.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.TableColCollection">
            <summary>
            Collection of TableCol objects.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.TableColCollection.FindCol(System.Int32)">
            <summary>
            Searches the column by its index.
            </summary>
            <param name="number">Index of column, zero based.</param>
            <returns>Returns the TableCol object or null.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.TableColCollection.Item(System.Int32)">
            <summary>
            Gets the TableCol object by its index, if column with specified number is
            not found then new TableCol object will be created.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.TableCell">
            <summary>
            Represents cell of table.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.TableCell.AssignFrom(C1.C1PreviewClient.TableCell)">
            <summary>
            Copies properties of anoter TableVector object.
            Row and Col properties are not copied.
            RenderObject property is copied *not as reference* - the new instance
            of RenderObject is created and assigned to this.RenderObject.
            </summary>
            <param name="source">The source object properties of which are copied.</param>
        </member>
        <member name="M:C1.C1PreviewClient.TableCell.IsVisible">
            <summary>
            Determines is cell visible or not.
            Cell is visible if it has one visible row and one visible column at least.
            Column or row is visible if its Visible property is true.
            </summary>
            <returns>Returns true if cell is visible and false otherwise.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.TableCell.Tag">
            <summary>
            Gets or sets the custom, user-defined data associated with a cell.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCell.Owner">
            <summary>
            Gets the TableCellCollection object containing this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCell.Row">
            <summary>
            Gets the index of row of cell.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCell.Col">
            <summary>
            Gets the index of column of cell.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCell.RowNo">
            <summary>
            Gets the index of row of cell.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCell.ColNo">
            <summary>
            Gets the index of column of cell.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCell.SpanCols">
            <summary>
            Count columns in cell span.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCell.SpanRows">
            <summary>
            Count rows in cell span.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCell.LastCol">
            <summary>
            Gets the number of last column in span, if SpanCols is 1 then LastColNo equals ColNo.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCell.LastRow">
            <summary>
            Gets the number of last row in span, if SpanRows is 1 then LastRowsNo equals RowNo.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCell.RenderObject">
            <summary>
            Gets or sets the RenderObject in cell.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCell.Text">
            <summary>
            Gets or sets the text in cell if cell has not RenderText object then string.Empty returned.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCell.Image">
            <summary>
            Gets or sets the image in cell if cell has not RenderImage object then null returned.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCell.Style">
            <summary>
            Gets the style of cell.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCell.RepeatGridLinesVert">
            <summary>
            Gets or sets the value indicating whether horizontal gridlines should
            be drawn when the cell is split.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCell.RepeatGridLinesHorz">
            <summary>
            Gets or sets the value indicating whether vertical gridlines should
            be drawn when the cell is split.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Serialization.IC1SerializableObject">
            <summary>
            This interface is used to allow objects to receive notifications from
            Serializer.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.TableCellCollection.FindCell(System.Int32,System.Int32)">
            <summary>
            Searches a cell by row and column indexes.
            </summary>
            <param name="rowNo">Index or row, zero-based.</param>
            <param name="colNo">Index or column, zero-based.</param>
            <returns>Returns the found cell or null.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.TableCellCollection.GetRightBottomBounds">
            <summary>
            Gets the bounds of cells area.
            </summary>
            <returns>Size structure, field Width contains index of right-most column +1, field Height contains index of bottom-most row + 1.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.TableCellCollection.Count">
            <summary>
            Gets the count of objects in collection.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCellCollection.Item(System.Int32)">
            <summary>
            Gets the TableCell object by its index.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCellCollection.MaxCol">
            <summary>
            Contains the number of right-most column.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCellCollection.MaxRow">
            <summary>
            Contains the number of bottom-most row.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCellCollection.Owner">
            <summary>
            Gets the RenderTable object containing this cells' collection.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableCellCollection.Item(System.Int32,System.Int32)">
            <summary>
            Gets the TableCell object by row and column.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.TableHeaderEnum">
            <summary>
            Defines how the table header is repeated.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.TableHeaderEnum.None">
            <summary>
            The header is printed once at the top of the table.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.TableHeaderEnum.Page">
            <summary>
            The header is repeated at the top of each page. If there are multiple columns
            per page, the header is repeated only at the top of the first column on the page.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.TableHeaderEnum.Column">
            <summary>
            The header is repeated only if there are multiple columns per page, at the top
            of each column except the first on the page. If there is only one column,
            the header is not printed at all.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.TableHeaderEnum.All">
            <summary>
            The header is repeated at the top of all pages. If there are multiple columns per page,
            the header is repeated at the top of each column.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.TableFooterEnum">
            <summary>
            Defines how the table footer is repeated.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.TableFooterEnum.None">
            <summary>
            The footer is printed once at the end of the table.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.TableFooterEnum.Page">
            <summary>
            The footer is repeated at the bottom of each page. If there are multiple columns
            per page, the footer is repeated only at the bottom of the last column on the page.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.TableFooterEnum.Column">
            <summary>
            The footer is repeated only if there are multiple columns per page, at the bottom
            of each column except the last on the page. If there is only one column,
            the footer is not printed at all.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.TableFooterEnum.All">
            <summary>
            The footer is repeated at the bottom of all pages. If there are multiple columns per page,
            the footer is repeated at the bottom of each column.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorGroup.Owner">
            <summary>
            Gets the TableVectorGroupCollection object containing this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorGroup.Table">
            <summary>
            Gets the RenderTable object containing this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorGroup.Position">
            <summary>
            Gets the index of column or row from which groups begins.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorGroup.Count">
            <summary>
            Gets count of rows or columns in the group.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorGroup.LastPosition">
            <summary>
            Gets the number of column or row with which group ends.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorGroup.CanSplit">
            <summary>
            Indicates whether the group can be split between pages.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorGroup.PageHeader">
            <summary>
            Indicates whether the group should be reprinted as header on each page where table exists.
            Only one group in the table can has this flag.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorGroup.PageFooter">
            <summary>
            Indicates whether the group should be reprinted as footer on each page where table exists.
            Only one group in the table can has this flag.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorGroup.ColumnHeader">
            <summary>
            Indicates whether the group should be reprinted as header on each column where table exists.
            Only one group in the table can has this flag.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorGroup.ColumnFooter">
            <summary>
            Indicates whether the group should be reprinted as footer on each column where table exists.
            Only one group in the table can has this flag.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorGroup.Style">
            <summary>
            Gets the Style of group.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorGroup.StartNumber">
            <summary>
            Gets the index of column or row from which groups begins.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorGroup.LastNumber">
            <summary>
            Gets the number of column or row with which group ends.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.TableVectorGroupCollection.GetBound">
            <summary>
            Gets the bound of grous area, the number of right-most or bottom-most
            group +1.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.TableVectorGroupCollection.FindGroup(System.Int32,System.Int32)">
            <summary>
            Searches the TableVectorGroup object with specified coordinates and returns its index,
            returns -1 if group with specified coordinates does not exist.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.TableVectorGroupCollection.FindGroupsAtPos(System.Int32)">
            <summary>
            Searches a groups containing this index of vector.
            Groups are sorted by the Count parameter.
            </summary>
            <param name="number">Index of vector.</param>
            <returns>Returns the list of searched groups.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.TableVectorGroupCollection.Item(System.Int32,System.Int32)">
            <summary>
            Gets the TableVectorGroup object.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.UserCellGroup">
            <summary>
            Represents the cells group defined by the user.
            Each cell group is defined by the collection of rectangles.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.UserCellGroup.Owner">
            <summary>
            Gets the UserCellGroupCollection object containing this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.UserCellGroup.Table">
            <summary>
            Gets the RenderTable object containing this object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.UserCellGroup.Style">
            <summary>
            Gets the style of group of cells.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.UserCellGroup.Ranges">
            <summary>
            Gets the array of rectangles defining the cells in group.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.UserCellGroupCollection">
            <summary>
            Represents the collection of UserCellGroup objects.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.UserCellGroupCollection.GetRightBottomBounds">
            <summary>
            Gets the bounds of area of user groups.
            </summary>
            <returns>Size structure, field Width contains number of right-most column +1, field Height contains number of bottom-most row + 1.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.UserCellGroupCollection.Owner">
            <summary>
            Gets the RenderTable object containing this object.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.StretchTableEnum">
            <summary>
            Defines the modes of stretching the columns of table.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.StretchTableEnum.None">
            <summary>
            Columns or rows of table do no stretch.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.StretchTableEnum.AllVectors">
            <summary>
            All columns or rows of table are stretched to fill the whole page.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.StretchTableEnum.AllColumns">
            <summary>
            All columns of table are stretched to fill the whole page.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.StretchTableEnum.LastVectorOnPage">
            <summary>
            Only last column or row on each page is stretched to fill the whole page.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.StretchTableEnum.LastColumnOnPage">
            <summary>
            Only last column on each page is stretched to fill the whole page.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.RenderTable">
            <summary>
            Represents RenderObject that renders tables.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.RenderTable.AssignFrom(C1.C1PreviewClient.RenderObject,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Copies properties of another object.
            The list of fragments is not copied and not changed (Fragments property).
            Properties UserData, PageNumberingChange are copied by references.
            The Name property is not copied.
            </summary>
            <param name="source">The source object, properties of which are copied.</param>
            <param name="assignDataBinding">Indicates that the DataBinding property should be copied.</param>
            <param name="assignChildren">Indicates that the list of children should be copied.</param>
            <param name="assignElements">Indicates that the Rows, Cols, Cells, RowGroups, ColGroups, UserCellGroups properties should be copied.</param>
        </member>
        <member name="M:C1.C1PreviewClient.RenderTable.AssignFrom(C1.C1PreviewClient.RenderObject,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Copies properties of another object.
            The list of fragments is not copied and not changed (Fragments property).
            Properties UserData, PageNumberingChange are copied by references.
            The Name property is not copied.
            </summary>
            <param name="source">The source object, properties of which are copied.</param>
            <param name="assignDataBinding">Indicates that the DataBinding property should be copied.</param>
            <param name="assignChildren">Indicates that the list of children should be copied.</param>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTable.RowSizingMode">
            <summary>
            Gets or sets the value determining how the heights of table rows are
            calculated. Default is Auto.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTable.ColumnSizingMode">
            <summary>
            Gets or sets the value determining how the widths of table columns are
            calculated. Default is Fixed.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTable.Rows">
            <summary>
            Gets the collection of table's rows.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTable.Cols">
            <summary>
            Gets the collection of table's columns.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTable.RowGroups">
            <summary>
            Gets the TableVectorGroupCollection object representing the groups of rows.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTable.ColGroups">
            <summary>
            Gets the TableVectorGroupCollection object representing the groups of columns.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTable.Cells">
            <summary>
            Gets the collection of cells.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTable.UserCellGroups">
            <summary>
            Gets the collection of groups of cells defined by the user.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTable.Stretch">
            <summary>
            Gets or sets the mode of stretching of table columns.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTable.StretchColumns">
            <summary>
            Gets or sets the column stretching mode.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTable.StretchRows">
            <summary>
            Gets or sets the row stretching mode.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTable.VertPageHeaderOnFirstPage">
            <summary>
            Gets or sets the value indicating whether the vertical
            page header should be printed on the first page.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTable.HorzPageHeaderOnFirstPage">
            <summary>
            Gets or sets the value indicating whether the horizontal
            page header should be printed on the first page.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTable.VertPageFooterOnLastPage">
            <summary>
            Gets or sets the value indicating whether the vertical
            page footer should be printed on the first page.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTable.HorzPageFooterOnLastPage">
            <summary>
            Gets or sets the value indicating whether the horizontal
            page footer should be printed on the first page.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTable.RepeatGridLinesVert">
            <summary>
            Gets or sets the value indicating whether vertical gridlines should
            be drawn when cells are split.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTable.RepeatGridLinesHorz">
            <summary>
            Gets or sets the value indicating whether horizontal gridlines should
            be drawn when cells are split.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderText.Text">
            <summary>
            Text to render.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.TabPosition">
            <summary>
            Represents the tab in paragraph of text.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TabPosition.Position">
            <summary>
            Gets or sets the position of text.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TabPosition.Alignment">
            <summary>
            Gets or sets the alignment of text at this tab.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TabPosition.FillChar">
            <summary>
            Gets or sets the char used to fill the tab space.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.TabPositionCollection">
            <summary>
            Collection of the TabPosition objects.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.RenderTocItem">
            <summary>
            Represents the item of table of content.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTocItem.TextLength">
            <summary>
            Gets the length of text in paragraph each non text object has one char length.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderTocItem.Level">
            <summary>
            Gets or sets the level of item in the TOC.
            Level defines the indent of item from the left edge of object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderToc.ShowPageNumbers">
            <summary>
            Gets or sets the value indicating whether the page numbers should
            be display in TOC.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderToc.PageNumbersAtRight">
            <summary>
            Gets or sets the value indicating whether the page numbers should be aligned
            to right edge of TOC.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.RenderToc.FillChar">
            <summary>
            Gets or sets the char used to fill the empty space between
            title and page number.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Serialization.C1TypeSerializationEnum">
            <summary>
            Determines how item types are serialized
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.Serialization.C1TypeSerializationEnum.Default">
            <summary>
            Item type is serialized with using of alias.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.Serialization.C1TypeSerializationEnum.FullName">
            <summary>
            Item type is serialized as a fully qualified name
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.Serialization.C1TypeSerializationEnum.AssemblyQualifiedName">
            <summary>
            Item type is serialized as a fully qualified name and assembly name
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Serialization.C1TypeSerializationAttribute">
            <summary>
            Forces the serializer to serialize the type name of a property or field.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Serialization.C1TypeSerializationAttribute.Type">
            <summary>
            Defines how the type name of a property of field will be serialized.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Serialization.C1CollectionSerializationAttribute">
            <summary>
            This attribute defines additional properties for collections properties or fields.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Serialization.C1CollectionSerializationAttribute.ItemsAreReferences">
            <summary>
            Collection's items are references.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Serialization.C1CollectionSerializationAttribute.ItemsAreReferencesDest">
            <summary>
            Collection's items can be referenced by other properties.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Serialization.C1ParentReferenceAttribute">
            <summary>
            Allows to mark field or property as "parent reference".
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Serialization.C1ClassSerializationAttribute">
            <summary>
            Allows to define additional properties for class.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Serialization.C1ClassSerializationAttribute.DefaultSerializationOff">
            <summary>
            Indicates that by default the public fields or properties are not serialized.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Serialization.C1ClassSerializationAttribute.IgnoreTypeConverter">
            <summary>
            Indicates that the type converter specified for class should be ignored
            and not used during serialization.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Serialization.C1SerializeContentAttribute">
            <summary>
            Indicates that the content of property or field should be serialized.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Serialization.C1CheckSerializableAttribute">
            <summary>
            Indicates that the object should be serialized only if it supports deserialization.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Serialization.C1IgnoreDeserializeErrorAttribute">
            <summary>
            Indicates that the error occurs on deserialization value of this property should be ignored.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.Serialization.C1FormatVersion.Parse(System.String,System.Boolean)">
            <summary>
            Converts a string to the C1FormatVersion object.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="throwException">Indicates the exception should be thrown if string can not be converted to C1FormatVersion.</param>
            <returns>Returns instance of C1FormatVersion object or null.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.Serialization.C1FormatVersion.FormatVersion">
            <summary>
            Gets the version of C1D document format.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Serialization.C1FormatVersion.AssemblyVersion">
            <summary>
            Gets the AssemblyVersion of C1.C1Preview.2.dll assemly
            that supports this FormatVersion.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Serialization.Serializer">
            <summary>
            Serializes and deserializes objects into and from XML.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.Serialization.Serializer.GetAssemblyQualifiedTypeName(System.Type)">
            <summary>
            Returns the "almost" fully qualified type name - i.e. with assembly name,
            but without version, culture, and public key.
            </summary>
            <param name="type">Type</param>
            <returns>Type name, assembly name</returns>
        </member>
        <member name="M:C1.C1PreviewClient.Serialization.Serializer.WriteNamespaces(System.Xml.XmlTextWriter,System.Xml.Serialization.XmlSerializerNamespaces)">
            <summary>
            Used to write the namespaces as attributes for the initial object
            </summary>
            <param name="writer"></param>
            <param name="namespaces"></param>
        </member>
        <member name="M:C1.C1PreviewClient.Serialization.Serializer.IsReference(System.String,System.Int64@)">
            <summary>
            Checks is passed string a reference on some object or not.
            </summary>
            <param name="s">The string to check.</param>
            <param name="referenceId">Contains the reference value if string is a reference.</param>
            <returns></returns>
        </member>
        <member name="M:C1.C1PreviewClient.Serialization.Serializer.RegisterTypeAlias(System.Type,System.String)">
            <summary>
            Registers new type's alias.
            </summary>
            <param name="type">Type object.</param>
            <param name="alias">Alias for type.</param>
        </member>
        <member name="M:C1.C1PreviewClient.Serialization.Serializer.IsTypeAliasValid(System.Type,System.String)">
            <summary>
            Checks the type's alias can be registered the or not.
            </summary>
            <param name="type">Type object.</param>
            <param name="alias">Alias for type.</param>
            <returns>Returns true if alias is valid and can be registered.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.Serialization.Serializer.Serialize(System.String,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
            <summary>
            Serializes the specified Object and writes the XML-document instance to a file. 
            </summary>
            <param name="fileName">Name of destination file.</param>
            <param name="o">The Object to serialize.</param>
            <param name="namespaces">The XmlSerializerNamespaces referenced by the object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.Serialization.Serializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.Xml.XmlTextWriter@)">
            <summary>
            Serializes the specified Object and writes the XML-document instance to a file using the specified Stream. 
            DOES NOT close the underlying stream. Useful for copying objects.
            Caller is responsible to call out writer.Close() to close writer and underlying stream.
            </summary>
            <param name="stream">The Stream used to write the XML-document instance</param>
            <param name="o">The Object to serialize</param>
            <param name="namespaces">The XmlSerializerNamespaces referenced by the object</param>
            <param name="writer">The XmlWriter object reference. Call writer.Close after working with stream/writer.</param> 
        </member>
        <member name="M:C1.C1PreviewClient.Serialization.Serializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
            <summary>
            Serializes the specified Object and writes the XML-document instance to a file using the specified Stream.
            </summary>
            <param name="stream">The Stream used to write the XML-document instance</param>
            <param name="o">The Object to serialize</param>
            <param name="namespaces">The XmlSerializerNamespaces referenced by the object</param>
        </member>
        <member name="M:C1.C1PreviewClient.Serialization.Serializer.Serialize(System.Xml.XmlTextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
            <summary>
            Serializes the specified Object and writes the XML-document instance to a file using the specified XmlWriter
            </summary>
            <param name="writer">The XmlWriter used to write the XML-document instance</param>
            <param name="o">The Object to serialize.</param>
            <param name="namespaces">The XmlSerializerNamespaces referenced by the object.</param>
        </member>
        <member name="M:C1.C1PreviewClient.Serialization.Serializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
            <summary>
            Serializes the specified object to an XML formatted string.
            </summary>
            <param name="o">The Object to serialize.</param>
            <param name="namespaces">The XmlSerializerNamespaces referenced by the object.</param>
            <returns>String with results of serialization.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.Serialization.Serializer.Deserialize(System.IO.Stream,System.Type)">
            <summary>
            Deserializes an XML-document instance
            </summary>
            <param name="stream">The Stream containing the XML-document instance to deserialize</param>
            <param name="type">The type of object being deserialized</param>
            <returns>The Object being deserialized</returns>
        </member>
        <member name="M:C1.C1PreviewClient.Serialization.Serializer.CreateFormattedSerializer">
            <summary>
            Creates a Serializer class instances that formats the output XML.
            </summary>
            <returns>The created Serializer object.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.Serialization.Serializer.MapType(System.Xml.XmlTextWriter,System.Object)">
            <summary>
            Enumerates and serializes all fields and properties.
            </summary>
            <param name="writer">The XmlWriter used to write the XML-document instance</param>
            <param name="o">The Object to serialize.</param>
        </member>
        <member name="P:C1.C1PreviewClient.Serialization.Serializer.Formatting">
            <summary>
            Sets or returns formatting used by the XML writer.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Serialization.Serializer.Indentation">
            <summary>
            Sets or returns indentation used by the XML writer.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Serialization.Serializer.Aliases">
            <summary>
            Holds the aliases for types.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Serialization.Serializer.TypeInfoCache">
            <summary>
            Caches information about types during serialization.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.Serialization.Serializer.TypeInfoCache.GetTypeInfo(System.Type)">
            <summary>
            Gets information about a type, if type does not exist in cache
            then the new TypeInfo object is created for it.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Serialization.Serializer.TypeInfo">
            <summary>
            Caches serialization information about a type.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.Serialization.Serializer.TypeInfoItem.IsCollection">
            <summary>
            Indicates that the property/field is a collection.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.Serialization.Serializer.TypeInfoItem.IsArray">
            <summary>
            Indicates that the property/field is an array.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.Serialization.Serializer.TypeInfoItem.IsAttribute">
            <summary>
            Indicates that the property/field must be serialized as attribute.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.Serialization.Serializer.TypeInfoItem.IsReference">
            <summary>
            Indicates that the property/field should be serialized as reference.
            This field can be true only for *non* value properties/fields.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.Serialization.Serializer.TypeInfoItem.IsReferenceDest">
            <summary>
            Indicates that the property/field contains an object
            on which can reference properties/fields of other objects.
            This field can be true only for non value fields/properties,
            also these properties / fields should be serialized as XML elements (IsAttribute = false).
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.Serialization.Serializer.TypeInfoItem.IsItemsAreReferences">
            <summary>
            Like IsReference but for items in collection.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.Serialization.Serializer.TypeInfoItem.IsItemsAreReferencesDest">
            <summary>
            Like IsReferenceDest but for items in collection.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.Serialization.Serializer.TypeInfoItem.IsSerializeContent">
            <summary>
            Indicates that the content of property will be serialized.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.Serialization.Serializer.TypeInfoItem.CheckSerializable">
            <summary>
            Indicates that the property should be serialized only if sit supports deserialzation.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.Serialization.Serializer.TypeInfoItem.IgnoreDeserializeError">
            <summary>
            Indicates that the error occurs during deserialization value of this property should be ignored.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.Serialization.Serializer.TypeInfoItem.TypeSerialization">
            <summary>
            Defines how the type name of property/field should be serialized.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.Serialization.Serializer.TypeInfoItem.IsSerializationNeeded(System.Object,System.Object@)">
            <summary>
            Checks is serialization of the field/property needed or not.
            Serialization is needed if:
            2. ShouldSerializeXXX method is not defined in obj for member described by this TypeInfoItem object
            or this method returns true for value specified by propValue parameter.
            1. propValue does not equal DefaultValue for member described by this TypeInfoItem object.
            </summary>
            <param name="obj">Object containing property or field described by this TypeInfoItem object.</param>
            <param name="propValue">Contains value of property on exit.</param>
            <returns>Returns true if property of obj must be serialized.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.Serialization.Serializer.TypeInfoItem.GetValue(System.Object)">
            <summary>
            Returns the value of the field/property described by this TypeInfoItem class.
            </summary>
            <param name="obj">Object property/field of that is described by this TypeInfoItem object.</param>
        </member>
        <member name="T:C1.C1PreviewClient.Serialization.C1DBrush">
            <summary>
            Serializes the Brush class as XmlElement.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Serialization.C1DImageData">
            <summary>
            Class with the only purpose in life - serialize images.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Serialization.C1DIconData">
            <summary>
            Class with the only purpose in life - serialize icons.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.FlowAlignEnum">
            <summary>
            Defines modes of alignment on block flow.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.FlowAlignEnum.Default">
            <summary>
            For child objects, the alignment specified on the parent is used.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.FlowAlignEnum.Near">
            <summary>
            Objects are aligned left for top to bottom flow, bottom for left to right flow.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.FlowAlignEnum.Center">
            <summary>
            Objects are centered.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.FlowAlignEnum.Far">
            <summary>
            Objects are aligned right for top to bottom flow, top for left to right flow.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.AlignHorzEnum">
            <summary>
            Defines modes of horizontal alignment of text.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.AlignHorzEnum.Left">
            <summary>
            Align text to the left.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.AlignHorzEnum.Center">
            <summary>
            Center text horizontally.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.AlignHorzEnum.Right">
            <summary>
            Align text to the right.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.AlignHorzEnum.Justify">
            <summary>
            Justify text horizontally.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.AlignVertEnum">
            <summary>
            Defines modes of vertical alignment of text.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.AlignVertEnum.Top">
            <summary>
            Align text to the top.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.AlignVertEnum.Center">
            <summary>
            Center text vertically.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.AlignVertEnum.Bottom">
            <summary>
            Align text to the bottom.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.AlignVertEnum.Justify">
            <summary>
            Justify text vertically.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.ImageAlignHorzEnum">
            <summary>
            Defines modes of horizontal alignment of image.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.ImageAlignHorzEnum.Left">
            <summary>
            Align image to the left.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.ImageAlignHorzEnum.Center">
            <summary>
            Center image horizontally.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.ImageAlignHorzEnum.Right">
            <summary>
            Align image to the right.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.ImageAlignVertEnum">
            <summary>
            Defines modes of vertical alignment of image.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.ImageAlignVertEnum.Top">
            <summary>
            Align image to the top.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.ImageAlignVertEnum.Center">
            <summary>
            Center image vertically.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.ImageAlignVertEnum.Bottom">
            <summary>
            Align image to the bottom.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.TextPositionEnum">
            <summary>
            Defines the text position (normal, subscript or superscript).
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.TextPositionEnum.Normal">
            <summary>
            Text is positioned normally.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.TextPositionEnum.Subscript">
            <summary>
            Text is positioned as subscript.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.TextPositionEnum.Superscript">
            <summary>
            Text is positioned as superscript.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.ImageAlign">
            <summary>
            Describes the image alignment.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ImageAlign.AlignHorz">
            <summary>
            Horizontal alignment of an image.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ImageAlign.AlignVert">
            <summary>
            Vertical alignment of an image.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ImageAlign.StretchHorz">
            <summary>
            Gets or sets the value indicating whether an image is stretched 
            horizontally to fit layout rectangle or it has a natural width.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ImageAlign.StretchVert">
            <summary>
            Gets or sets the value indicating whether an image is stretched 
            vertically to fit layout rectangle or it has a natural height.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ImageAlign.KeepAspectRatio">
            <summary>
            Keeps aspect ratio. Useful when StretchHorz or StretchVert is true.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ImageAlign.TileHorz">
            <summary>
            The image is tiled horizontally. 
            If StretchHorz is true then this property is ignored.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ImageAlign.TileVert">
            <summary>
            The image is tiled vertically. 
            If StretchVert is true then this property is ignored.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ImageAlign.BestFit">
            <summary>
            This property is a composition (function) of the StretchHorz, StretchVert and
            KeepAspectRatio properties.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.ImageAlign.Default">
            <summary>
            Gets default image alignment.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Offsets">
            <summary>
            Describes Padding and Spacing.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Offsets.Left">
            <summary>
            Gets or sets left offset, only absolute units can be used: "10mm", "1pt", and so on.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Offsets.Top">
            <summary>
            Gets or sets top offset, only absolute units can be used: "10mm", "1pt", and so on.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Offsets.Right">
            <summary>
            Gets or sets right offset, only absolute units can be used: "10mm", "1pt", and so on.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Offsets.Bottom">
            <summary>
            Gets or sets bottom offset, only absolute units can be used: "10mm", "1pt", and so on.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Offsets.All">
            <summary>
            Sets the all offsets.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.LineDef">
            <summary>
            Defines the line's rendering attributes. This is immutable class.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LineDef.Color">
            <summary>
            Gets or sets color of line.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LineDef.Width">
            <summary>
            Gets or sets width of line.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LineDef.BackColor">
            <summary>
            Gets the back color of pen - color of spaces between dashes.
            This property does not used if Style is DashStyle.Solid.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LineDef.DashStyle">
            <summary>
            Gets the style used for dashed lines drawn with this LineDef.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LineDef.DashPattern">
            <summary>
            Gets an array of custom dashes and spaces.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LineDef.Empty">
            <summary>
            Represents the empty line with Color.Empty and Unit.Empty.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LineDef.Default">
            <summary>
            Represents the default solid line with Color.Black and "0.5pt".
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LineDef.DefaultBold">
            <summary>
            Represents the default solid bold line with Color.Black and "2pt".
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Borders">
            <summary>
            Describes borders around rectangular area.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Borders.Left">
            <summary>
            Gets or sets left border.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Borders.Top">
            <summary>
            Gets or sets top border.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Borders.Right">
            <summary>
            Gets or sets right border.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Borders.Bottom">
            <summary>
            Gets or sets bottom border.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Borders.All">
            <summary>
            Sets the border for all edges of an object.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.GridLines">
            <summary>
            Describes the lines within of table's area.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.GridLines.Left">
            <summary>
            Gets or sets left border.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.GridLines.Top">
            <summary>
            Gets or sets top border.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.GridLines.Right">
            <summary>
            Gets or sets right border.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.GridLines.Bottom">
            <summary>
            Gets or sets bottom border.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.GridLines.Vert">
            <summary>
            Gets or sets vertical lines within table's area.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.GridLines.Horz">
            <summary>
            Gets or sets horizontal lines within table's area.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.GridLines.All">
            <summary>
            Sets the all lines.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.C1HyperlinkAttrs">
            <summary>
            The visual style of hyperlink.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.C1HyperlinkTextAttrs">
            <summary>
            Determines the attributes used to highlight a hyperlink inside a text.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1HyperlinkTextAttrs.BackColor">
            <summary>
            The background color. If the value is Color.Empty or Color.Transparent, 
            the hyperlinks background color is not changed.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1HyperlinkTextAttrs.ForeColor">
            <summary>
            The foreground (text) color. If the value is Color.Empty or Color.Transparent, 
            the hyperlinks text color is not changed.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1HyperlinkTextAttrs.Underline">
            <summary>
            If the value is true, the hyperlinks text is underlined.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1HyperlinkTextAttrs.VisitedDefault">
            <summary>
            Gets the default attributes of visited hyperlinks.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1HyperlinkTextAttrs.NormalDefault">
            <summary>
            Gets the default attributes of "normal" (not visited and not highlighted) hyperlinks.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.C1HyperlinkTextAttrs.HoverDefault">
            <summary>
            Gets the default attributes of highlighted hyperlinks.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Style">
            <summary>
            Represents the style for a user.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.Style.GetPropValue(System.Int32)">
            <summary>
            Gets value of "style" property.
            </summary>
            <param name="propKey">Key of property (c_propXXX constant).</param>
        </member>
        <member name="M:C1.C1PreviewClient.Style.GetPropValueNoDef(System.Int32)">
            <summary>
            Gets value of "style" property.
            If style has no this property and all its parents has no this property
            then null is returned (NOT DEFAULT VALUE).
            </summary>
            <param name="propKey">Key of property (c_propXXX constant).</param>
        </member>
        <member name="M:C1.C1PreviewClient.Style.GetPropValueNoDefTable(System.Int32)">
            <summary>
            This method used only in RenderTable objects and its subobjects TableCell,
            TableVector etc.
            </summary>
            <param name="propKey">Key of property (c_propXXX constant).</param>
        </member>
        <member name="M:C1.C1PreviewClient.Style.GetPropValue(System.Int32,System.Object)">
            <summary>
            Gets value of property of this object (Children, Parent etc).
            </summary>
            <param name="propKey">Key of property (c_propXXX constant).</param>
            <param name="defaultValue">This value will be returned if useParentStyle is false and style has no specified property.</param>
        </member>
        <member name="M:C1.C1PreviewClient.Style.SetPropValueIfNotSame(System.Int32,System.Object)">
            <summary>
            Sets value of property if its value is not equals to current value.
            </summary>
            <param name="propKey">Key of property (c_propXXX constant).</param>
            <param name="value">Value of property.</param>
        </member>
        <member name="M:C1.C1PreviewClient.Style.IsEmpty">
            <summary>
            Returns true if style has no properties.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.Style.AssignNonInheritedFrom(C1.C1PreviewClient.Style)">
            <summary>
            Copies all non inherited properties from another Style object,
            also copies Parent, AmbientParent properties.
            </summary>
            <param name="style">Source Style object.</param>
        </member>
        <member name="P:C1.C1PreviewClient.Style.Parent">
            <summary>
            Gets the parent style.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.Parents">
            <summary>
            Sets both parents (Parent and AmbientParent) to the same value.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.Children">
            <summary>
            Gets collection of child styles.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.HasChildren">
            <summary>
            Indicates that style has child styles.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.AmbientParent">
            <summary>
            Gets the ambient parent style.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.BackgroundImageName">
            <summary>
            Gets or sets the name of background image
            in the document's dictionary.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.Brush">
            <summary>
            Gets or sets brush used to fill object.
            If for style both BackColor and Brush are specified then the BackColor will be used.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.TextColor">
            <summary>
            Gets or sets the color of a text.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.TextAngle">
            <summary>
            Gets or sets the angle of a text, in degree.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.TextAlignHorz">
            <summary>
            Gets or sets the horizontal alignment of text.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.TextAlignVert">
            <summary>
            Gets or sets the vertical alignment of text.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.LineSpacing">
            <summary>
            Gets or sets the line spacing of a text in %, 100 means default line spacing.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.WordWrap">
            <summary>
            Indicates whether a render object automatically wraps words to the 
            beginning of the next line when necessary. 
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.TextPosition">
            <summary>
            Gets or sets the style of text: SuperScript, SubScript, Normal.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.HyperlinkAttrs">
            <summary>
            Gets or sets attributes of "normal" (not visited and not highlighted) hyperlink.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.VisitedHyperlinkAttrs">
            <summary>
            Gets or sets attributes of visited hyperlink.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.HoverHyperlinkAttrs">
            <summary>
            Gets or sets attributes of highlighted hyperlink.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.ActiveHyperlinkAttrs">
            <summary>
            Gets or sets attributes of active hyperlink.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.MeasureTrailingSpaces">
            <summary>
            By default the boundary rectangle formed during text rendering
            excludes the space at the end of each line. 
            Set this property to true to include that space in measurement.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.Padding">
            <summary>
            Gets or sets padding widths.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.Spacing">
            <summary>
            Gets or sets spacing widths.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.Borders">
            <summary>
            Gets or sets the border around rendering.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.GridLines">
            <summary>
            Gets or sets the lines in table's area.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.ImageAlign">
            <summary>
            Gets or sets the alignment of the picture.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.BackgroundImageAlign">
            <summary>
            Gets or sets the alignment of the background picture.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.BackColor">
            <summary>
            Gets or sets the background color.
            If for style both BackColor and Brush are specified then the BackColor will be used.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.MinOrphanLines">
            <summary>
            Gets or sets the minimal count of orphan lines in text.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.ClientAreaOnly">
            <summary>
            Gets or sets the value indicating whether client area or whole area of control will be rendered.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.ShapeFillBrush">
            <summary>
            Gets or sets brush used to fill internal area of shape objects (RenderRectangle, RenderEllipse, etc).
            If for style both ShapeFillColor and ShapeFillBrush are specified then the ShapeFillColor will be used.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.ShapeFillColor">
            <summary>
            Gets or sets the color used to fill internal area of shape objects (RenderRectangle, RenderEllipse, etc).
            If for style both ShapeFillColor and ShapeFillBrush are specified then the ShapeFillColor will be used.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.ShapeLine">
            <summary>
            Gets or sets the style of line used to draw the shape objects (RenderLine, RenderRectangle etc).
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.FlowAlign">
            <summary>
            Gets or sets the align of object in its parent on block flow.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.FlowAlignChildren">
            <summary>
            Gets or sets the align of object's children on block flow.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.TextIndent">
            <summary>
            Gets or sets a value that indicates how far to
            indent the first line of a paragraph of text.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.Font">
            <summary>
            Gets or sets font.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.FontName">
            <summary>
            Gets or sets the face name of this font.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.FontSize">
            <summary>
            Gets or sets the em-size of this font measured in the units specified by the Unit property.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.FontBold">
            <summary>
            Gets or sets a value that indicates whether this font is bold.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.FontItalic">
            <summary>
            Gets or sets a value that indicates whether this font is italic.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.FontUnderline">
            <summary>
            Gets or sets a value that indicates whether this font is underline.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Style.FontStrikeout">
            <summary>
            Gets or sets a value that indicates whether this font is strikeout.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.StyleCollection">
            <summary>
            Collection of Style objects.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.StyleCollection.Add">
            <summary>
            Creates new Style object and adds it to the collection.
            </summary>
            <returns>Created style object.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.TagBase.Name">
            <summary>
            Gets or sets the unique name of tag.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.TagBase.Value">
            <summary>
            Gets or sets value of tag.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Tag">
            <summary>
            Represents the user-defined tag.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.TagCollection">
            <summary>
            Collection of the Tag objects.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.ReferenceEnum">
            <summary>
            Describes the types of references between objects.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.ReferenceEnum.Parent">
            <summary>
            Reference to the parent object.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.ReferenceEnum.Next">
            <summary>
            Reference to the next object on the same level.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.ReferenceEnum.Prev">
            <summary>
            Reference to the previous object on the same level.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.ReferenceEnum.Self">
            <summary>
            Reference to the current object.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.ReferenceEnum.Name">
            <summary>
            Reference to the object by its name.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.ReferenceEnum.Page">
            <summary>
            Reference to the page.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.ReferenceEnum.Column">
            <summary>
            Reference to the column on page.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.ReferenceEnum.Id">
            <summary>
            Reference to the object by its Id.
            This type of refernce used only for backward compatibility.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.DimensionEnum">
            <summary>
            Describes the possible dimensions of object.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DimensionEnum.Default">
            <summary>
            The default dimension.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DimensionEnum.Left">
            <summary>
            The left side of an object.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DimensionEnum.Top">
            <summary>
            The top side of an object.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DimensionEnum.Right">
            <summary>
            The right side of an object.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DimensionEnum.Bottom">
            <summary>
            The bottom side of an object.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DimensionEnum.Width">
            <summary>
            The width of an object.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.DimensionEnum.Height">
            <summary>
            The height of an object.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.UnitTypeEnum">
            <summary>
            Specifies the unit of measure for the given data.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.UnitTypeEnum.Document">
            <summary>
            Specifies the document unit (1/300 inch) as the unit of measure.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.UnitTypeEnum.Inch">
            <summary>
            Specifies the inch as the unit of measure.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.UnitTypeEnum.Mm">
            <summary>
            Specifies the millimeter as the unit of measure.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.UnitTypeEnum.Pica">
            <summary>
            Specifies the pica unit (1/6 inch) as the unit of measure.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.UnitTypeEnum.Pixel">
            <summary>
            Specifies a device pixel as the unit of measure.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.UnitTypeEnum.Point">
            <summary>
            Specifies a printer's point (1/72 inch) as the unit of measure.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.UnitTypeEnum.Twip">
            <summary>
            Specifies a twip (1/1440 inch) as the unit of measure.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.UnitTypeEnum.InHs">
            <summary>
            Specifies a hundredths of an inch as the unit of measure.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.UnitTypeEnum.Display">
            <summary>
            Specifies 1/75 inch as the unit of measure.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.UnitTypeEnum.Cm">
            <summary>
            Specifies centimetre's as the unit of measure.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.UnitTypeEnum.Em">
            <summary>
            Measurement is relative to the height of the element's font. 
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.UnitTypeEnum.Ex">
            <summary>
            Measurement is relative to the height of the lowercase letter x of the element's font.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.UnitTypeEnum.LineSpacing">
            <summary>
            Measurement is relative to the spacing between two lines of element's font.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.LengthBase">
            <summary>
            Represents a simple coordinate or size of object. This is an abstract class.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.LengthBase.StringToUnitType(System.String,C1.C1PreviewClient.UnitTypeEnum@)">
            <summary>
            Converts a string to a UnitTypeEnum value. The string can be one of the following:
            "def", "doc", "in", "mm", "pc", "pix", "pt", "tw", "inhs".
            This method is case-insensitive.
            </summary>
            <param name="s">The string to convert. If it is null or empty, units are set to UnitTypeEnum.Default.</param>
            <param name="units">On exit, contains the UnitTypeEnum value.</param>
            <returns>Returns true if no error occurs, false otherwise.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.LengthBase.UnitTypeToString(C1.C1PreviewClient.UnitTypeEnum)">
            <summary>
            Converts a UnitTypeEnum value to the string representation.
            <list type="bullet">
            <item><description><term>Default</term>Empty string</description></item>
            <item><description><term>Document</term>"doc"</description></item>
            <item><description><term>Inch</term>"in"</description></item>
            <item><description><term>Millimeter</term>"mm"</description></item>
            <item><description><term>Pica</term>"pc"</description></item>
            <item><description><term>Pixel</term>"pix"</description></item>
            <item><description><term>Point</term>"pt"</description></item>
            <item><description><term>Twip</term>"tw"</description></item>
            <item><description><term>InHs</term>"inhs"</description></item>
            </list>
            </summary>
            <param name="units">Value to convert.</param>
            <returns></returns>
        </member>
        <member name="M:C1.C1PreviewClient.LengthBase.StringToDimension(System.String,C1.C1PreviewClient.DimensionEnum@)">
            <summary>
            Converts a string to DimensionEnum. String can have value from:
            ("left", "top", "right", "bottom", "width", "height", "relleft", "reltop", "relright", "relbottom").
            Method is case insensitive.
            </summary>
            <param name="s">String to convert, if s is null or empty then units will be RefDim.Default.</param>
            <param name="dim">Contains a dimension on exit.</param>
            <returns>Returns true if no error occurs.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.LengthBase.Parse(System.String,System.Boolean)">
            <summary>
            Analyzes a passed string and creates an instance 
            of the LengthBase class on the basis of this string.
            </summary>
            <param name="s">String to analyze.</param>
            <param name="throwException">Indicates whether an exception must be raised if string has an error and can't be converted to the LengthBase.</param>
            <returns>Returns an instance LengthAbs or LengthRef or LengthExp or LengthAuto class, returns a null value if throwException equals false and s has an error.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.LengthBase.IsAuto">
            <summary>
            Returns true if coordinate is auto.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthBase.IsEmpty">
            <summary>
            Returns true if coordinate linked with empty (zero) coordinate.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthBase.Auto">
            <summary>
            Gets instance of the LengthAuto class representing an auto dimension.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.LengthAuto">
            <summary>
            Represents the "auto" size or coordinate, only one instance of this class can be created.
            Use property LengthBase.Auto to access to this instance.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.LengthAbs">
            <summary>
            Represents the dimension like: "5mm", "10in", "20", and so on.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.LengthAbs.Compare(C1.C1PreviewClient.LengthAbs,C1.C1PreviewClient.C1PrintDocument,System.Drawing.Font)">
            <summary>
            Compares the current LengthAbs object with another LengthAbs object.
            </summary>
            <param name="other">The other LengthAbs object to compare the current one with.</param>
            <returns>0 if lengths are equal,
            -1 if this length is less than the other,
            1 if this length is greater than the other,
            -2 if the length units cannot be compared.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.LengthAbs.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthAbs.Units">
            <summary>
            Gets the unit of measure of value.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthAbs.Predefined.Empty">
            <summary>
            Gets instance of the LengthAbs class 
            (defined as new LengthAbs(0, UnitTypeEnum.Mm)) representing an empty dimension.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthAbs.Predefined.LineWidth">
            <summary>
            Gets instance of the LengthAbs class 
            (defined as new LengthAbs(1f, UnitTypeEnum.Point))
            representing an default width of line (border, grid etc).
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthAbs.Predefined.BoldLineWidth">
            <summary>
            Gets instance of the LengthAbs class 
            (defined as new LengthAbs(2f, UnitTypeEnum.Point))
            representing an default width of bold line (border, grid etc).
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.LengthRef">
            <summary>
            Represents the unit which references to dimension of another object like: 
            "MyObject.Right", "Parent.Width", "Prev.Width" or MyObject.MySubObject.Width.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthRef.Elements">
            <summary>
            Array of references used in the LengthRef, for example dimension "parent.MyChild.width"
            will be represented by two UnitRefElem objects for "parent" and "MyChild".
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthRef.Dimension">
            <summary>
            Dimension of referenced object.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.LengthRef.UnitRefElem">
            <summary>
            Describes one object in reference.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.LengthRef.UnitRefElem.Source">
            <summary>
            Specifies the referenced object (page, column, other object).
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.LengthRef.UnitRefElem.SourceName">
            <summary>
            Specifies the name of object if Source = RefSource.Name
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.LengthRef.UnitRefElem.SourceNo">
            <summary>
            Specifies the number, used if Source = RefSource.Page or RefSource.Column
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.LengthRef.Predefined">
            <summary>
            Holds some predefined LengthRef objects.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthRef.Predefined.ParentLeft">
            <summary>
            Represents "Parent.Left" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthRef.Predefined.ParentTop">
            <summary>
            Represents "Parent.Top" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthRef.Predefined.ParentWidth">
            <summary>
            Represents "Parent.Width" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthRef.Predefined.ParentHeight">
            <summary>
            Represents "Parent.Height" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthRef.Predefined.PrevRight">
            <summary>
            Represents "Prev.Right" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthRef.Predefined.PrevBottom">
            <summary>
            Represents "Prev.Bottom" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthRef.Predefined.PrevHeight">
            <summary>
            Represents "Prev.Height" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthRef.Predefined.NextHeight">
            <summary>
            Represents "Next.Height" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthRef.Predefined.Parent">
            <summary>
            Represents "Parent.Default" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthRef.Predefined.Self">
            <summary>
            Represents "Self.Default" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthRef.Predefined.ParentRight">
            <summary>
            Represents "Parent.Right" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthRef.Predefined.ParentBottom">
            <summary>
            Represents "Parent.Bottom" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthRef.Predefined.SelfWidth">
            <summary>
            Represents "Self.Width" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthRef.Predefined.SelfHeight">
            <summary>
            Represents "Self.Height" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthRef.Predefined.PageWidth">
            <summary>
            Represents the "Page.Width" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthRef.Predefined.PageHeight">
            <summary>
            Represents the "Page.Height" reference.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.LengthExp">
            <summary>
            Represents the unit which holds an expression using the LengthRef or LengthAbs classes like:
            "parent.width + 5mm", "80%parent.width", and so on
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthExp.Elements">
            <summary>
            Represents an expression, expression may contains:
            LengthBase objects, Numbers (int, double etc) and objects derived from LengthExp.Op class.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthExp.Operations">
            <summary>
            The array of registered operations.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthExp.UnaryOperations">
            <summary>
            The array of registered unary operations.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthExp.Functions">
            <summary>
            The array of registered functions.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.LengthExp.Predefined">
            <summary>
            Holds some predefined LengthExp objects.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthExp.Predefined.RightAlign">
            <summary>
            Represents "Parent.Right - Self.Width" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthExp.Predefined.BottomAlign">
            <summary>
            Represents "Parent.Bottom - Self.Height" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthExp.Predefined.HorzCenterAlign">
            <summary>
            Represents "(Parent.Width - Self.Width) / 2" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthExp.Predefined.VertCenterAlign">
            <summary>
            Represents "(Parent.Height - Self.Height) / 2" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthExp.Predefined.HorzCenter">
            <summary>
            Represents "Self.Width / 2" reference.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.LengthExp.Predefined.VertCenter">
            <summary>
            Represents "Self.Height / 2" reference.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Unit">
            <summary>
            Auxiliary class, provides access to LengthBase object as string,
            number or directly LengthBase object.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Unit.IsAuto">
            <summary>
            Gets the value indicating whether this Unit is specified as "auto".
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Unit.IsAbs">
            <summary>
            Gets the value indicating whether this Unit defines
            an absolute value such as "1mm", "1em" etc.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Unit.IsParentWidth">
            <summary>
            Gets the value indicating whether this Unit is specified as "parent.width".
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Unit.IsParentHeight">
            <summary>
            Gets the value indicating whether this Unit is specified as "parent.height".
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Unit.IsParent">
            <summary>
            Gets the value indicating whether this Unit is specified as "parent".
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.Unit.AsUnit">
            <summary>
            Gets the LengthBase object representing this unit.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.UnitPoint">
            <summary>
            Defines a point represented by two Unit structures.
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.UnitPoint.Parse(System.String,C1.C1PreviewClient.UnitPoint@,System.Boolean)">
            <summary>
            Converts a string to the UnitPoint structure.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="result">The UnitPoint structure.</param>
            <param name="throwException">Indicates the exception should be thrown if string can not be converted to UnitPoint.</param>
            <returns>Returns true if no error occurs.</returns>
        </member>
        <member name="P:C1.C1PreviewClient.UnitPoint.X">
            <summary>
            Gets or sets the x-coordinate of this Point.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.UnitPoint.Y">
            <summary>
            Gets or sets the y-coordinate of this Point.
            </summary>
        </member>
        <member name="P:C1.C1PreviewClient.UnitPoint.Empty">
            <summary>
            Represents a null Point.
            </summary>
        </member>
        <member name="T:C1.C1PreviewClient.Utils">
            <summary>
            Contains common functions.
            </summary>
        </member>
        <member name="F:C1.C1PreviewClient.Utils.FloatFormatInfo">
            <summary>
            The special NumberFormatInfo object used to convert numbers
            in C1PrintDocument, its fields are initialized as:
            NumberDecimalSeparator is "."
            CurrencyDecimalSeparator is "."
            </summary>
        </member>
        <member name="M:C1.C1PreviewClient.Utils.IndexInArray(System.String[],System.String)">
            <summary>
            Returns the index of string in array of strings.
            Search is case sensitive.
            </summary>
            <param name="a">Array of strings.</param>
            <param name="s">String to search.</param>
            <returns>Index of string in array of -1.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.Utils.TryParseInt(System.String,System.Int32@)">
            <summary>
            Converts the string representation of a number to its 32-bit 
            signed integer equivalent. 
            A return value indicates whether the operation succeeded. 
            This functions uses FloatFormatInfo as format provider.
            </summary>
            <param name="s">A string containing a number to convert.</param>
            <param name="result">When this method returns, contains the 32-bit signed integer value equivalent to the number contained in s, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the s parameter is null, is not of the correct format, or represents a number less than MinValue or greater than MaxValue. This parameter is passed uninitialized. </param>
            <returns>true if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.Utils.TryParseDouble(System.String,System.Double@)">
            <summary>
            Converts the string representation of a number to its double-precision 
            floating-point number equivalent. 
            A return value indicates whether the conversion succeeded or failed.
            This functions uses FloatFormatInfo as format provider.
            </summary>
            <param name="s">A string containing a number to convert.</param>
            <param name="result">When this method returns, contains a double-precision floating-point number equivalent to the numeric value or symbol contained in s, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the s parameter is null, is not in a format compliant with style, represents a number less than MinValue or greater than MaxValue, or if style is not a valid combination of NumberStyles enumerated constants. This parameter is passed uninitialized.</param>
            <returns>true if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.Utils.ColorArrayToString(System.Drawing.Color[])">
            <summary>
            Converts the array of colors to string.
            </summary>
            <param name="a">Array to convert.</param>
            <returns>Returns the string representing a color array.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.Utils.ColorArrayFromString(System.String)">
            <summary>
            Converts a string to array of colors.
            </summary>
            <param name="s">String to process.</param>
            <returns>Array of colors or null if s is null.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.Utils.FloatArrayToString(System.Single[],System.Char)">
            <summary>
            Converts the array of floats to string.
            </summary>
            <param name="a">Array to convert.</param>
            <param name="delimiter">Specifies the delimiter between numbers in string (should not be a [.]).</param>
            <returns>Returns the string representing a float array.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.Utils.FloatArrayFromString(System.String,System.Char)">
            <summary>
            Converts a string to array of floats.
            </summary>
            <param name="s">String to process.</param>
            <param name="delimiter">Specifies the delimiter between numbers in string (should not be a [.]).</param>
            <returns>Array of floats or null if s is null.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.Utils.IsArraysEqual(System.Single[],System.Single[])">
            <summary>
            Compares two array of floats.
            </summary>
            <param name="a1">First array of float values.</param>
            <param name="a2">Second array of float values.</param>
            <returns>Returns true if arrays equals.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.Utils.ColorToString(System.Drawing.Color)">
            <summary>
            Converts color to string, use this method instead of Color.Name.
            </summary>
            <param name="color">Color structure to convert.</param>
            <returns>The string representing a color.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.Utils.ColorFromString(System.String)">
            <summary>
            Converts string to color, use this method instead of Color.FromName(),
            because the Color.FromName() works incorrectly sometimes.
            </summary>
            <param name="s">String to convert.</param>
            <returns>The color.</returns>
        </member>
        <member name="M:C1.C1PreviewClient.Utils.ConvertUnits(System.Double,C1.C1PreviewClient.UnitTypeEnum,C1.C1PreviewClient.UnitTypeEnum,System.Single,System.Single)">
            <summary>
            Converts the value from one measurement's units to other.
            </summary>
            <param name="from">Source measurement's units.</param>
            <param name="to">Destination measurement's units.</param>
            <param name="value">Value to convert.</param>
            <param name="dpi">DPI, used when from or to parameters equal UnitTypeEnum.Pixel.</param>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.BaseControls.MaskedTextBox">
            <summary>
            Summary description for MaskedTextBox.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.BaseControls.MaskedTextBox.IsValid">
            <summary>
            Returns true if the current control content is valid
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.BaseControls.MaskedTextBox.CharFromPos(System.Drawing.Point)">
            <summary>
            Returns the character nearest the given point.
            </summary>
            <param name="pt"></param>
            X,Y coordinate in client space
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.BaseControls.MaskedTextBox.Content">
            <summary>
            Content property:
            Gets the non-literal characters in the control.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.BaseControls.MaskedTextBox.PlaceHolder">
            <summary>
            PlaceHolder property:
            Gets or sets the characters used to show spaces where user is supposed to type.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.BaseControls.MaskedTextBox.CurrentLine">
            <summary>
            CurrentLine property:
            Gets the number of the line where the cursor is.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.BaseControls.MaskedTextBox.LineCount">
            <summary>
            LineCount property:
            Gets the number of lines in the control.
            </summary>
        </member>
        <member name="T:C1.Util.Win32">
            <summary>
            Summary description for WinUser.
            </summary>
            CAUTION: Use this attribute with extreme care. Incorrect use can create security weaknesses.
            This attribute can be applied to methods that want to call into native code without incurring 
            the performance loss of a run-time security check in doing so. The assertion and subsequent 
            demands performed when calling unmanaged code is omitted at run time, resulting in substantial 
            performance savings. Only code that has been granted the UnmanagedCode permission can do this 
            (see SecurityPermissionFlag). Using this attribute in a class or module applies to 
            all contained methods.
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.BaseGrid.Frame">
             <summary>
             Summary description for BaseGridFrame.
             </summary>
            
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.BaseGrid.Frame.m_serializing">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.#ctor">
            <summary>
            Ctor for the split container class.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.Dispose(System.Boolean)">
            <summary>
            Called when the class is being disposed.
            </summary>
            <param name="disposing">
            True to cleanup.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnBindingContextChanged(System.EventArgs)">
            <summary>
            Raised when the Binding Context changes.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.BeginInit">
            <summary>
            ISupportInitialize interface.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.EndInit">
            <summary>
            ISupportInitialize interface.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnVisibleChanged(System.EventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.initializeStyles">
            <summary>
            Initializes root and named styles.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnSizeChanged(System.EventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnResize(System.EventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnBackColorChanged(System.EventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnFontChanged(System.EventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnLeave(System.EventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnLostFocus(System.EventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnGotFocus(System.EventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnEnter(System.EventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.IsInputChar(System.Char)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="charCode"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.echoKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.saveImages">
            <summary>
            Helper method for serializing images.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.reinitViews">
            <summary>
            Recomputes the sizes of the splits based on the client size of the control.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnCursorChanged(System.EventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnMouseLeave(System.EventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnClick(System.EventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnDoubleClick(System.EventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame._drawCaption(System.Windows.Forms.PaintEventArgs)">
            <summary>
            painting
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Inherited from Control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.setControlDirty">
             <summary>
             Style listeners
             </summary>
             <returns></returns>
            
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.SetDataSource(System.Object,System.Windows.Forms.BindingMemberInfo,System.Boolean)">
            <summary>
            Called when the datasource changes.
            </summary>
            <param name="datasource">The new datasource.</param>
            <param name="newDisplayMember">The new datamember.</param>
            <param name="force">True to force a new binding.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.GetFirstVisibleRow">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.GetVisibleRowCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.ScrollToRow(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.DataSourceDisposed(System.Object,System.EventArgs)">
            <summary>
            notifications from the datasource
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <summary>
                Handle the Disposed event from the data source - typically used at design time
                so the we know that the data source has been removed from the design surface
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.CurrencyItemChanged(System.Object,System.Windows.Forms.ItemChangedEventArgs)">
             <summary>
                 Handle the Item Changed Event on the CurrencyManager
             </summary>
            
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.CurrentPositionChanged(System.Object,System.EventArgs)">
            <summary>
                Handle the Position Changed Event on the CurrencyManager
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.canCreateSplits">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.BaseGrid.Frame._ambientVisualStyleMonitor">
            <summary>
            Provides ambient behavior for the VisualStyle property.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.ResetVisualStyle">
            <summary>
            Resets <see cref="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.VisualStyle"/> to the default value.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.ShouldSerializeVisualStyle">
            <summary>
            Tests whether <see cref="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.VisualStyle"/> should be serialized.
            </summary>
            <returns>True if <see cref="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.VisualStyle"/> should be serialized, false otherwise.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnAfterColUpdate(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Raised after the datasource has been updated for a column.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnAfterDelete(System.EventArgs)">
            <summary>
            Raised after a row has been deleted.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnAfterInsert(System.EventArgs)">
            <summary>
            Raised after a row has been inserted.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnAfterUpdate(System.EventArgs)">
            <summary>
            Raised after a row has been updated.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnBeforeColUpdate(C1.Win.C1TrueDBGrid.BeforeColUpdateEventArgs)">
            <summary>
            Raised before a column has been updated.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnBeforeDelete(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Raised before a row is deleted.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnBeforeInsert(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Raised before a row is inserted.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnBeforeUpdate(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Raised before a row is updated.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnColResize(C1.Win.C1TrueDBGrid.ColResizeEventArgs)">
            <summary>
            Raised when a column has been resized.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnHeadClick(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Raised when a column header has been clicked.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnFootClick(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Raised when a column footer has been clicked.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnOwnerDrawCell(C1.Win.C1TrueDBGrid.OwnerDrawCellEventArgs)">
            <summary>
            Raised when a cell has to be rendered.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnOwnerDrawCellPrint(C1.Win.C1TrueDBGrid.OwnerDrawCellEventArgs)">
            <summary>
            Raised when a cell has to be printed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnOwnerDrawPageHeader(C1.Win.C1TrueDBGrid.OwnerDrawPageEventArgs)">
            <summary>
            Raised when Page header needs to be printed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnOwnerDrawPageFooter(C1.Win.C1TrueDBGrid.OwnerDrawPageEventArgs)">
            <summary>
            Raised when a Page footer needs to be printed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnBeforeRowColChange(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Raised before a row or column currency is changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnRowColChange(C1.Win.C1TrueDBGrid.RowColChangeEventArgs)">
            <summary>
            Raised after a row or column currency has been changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnRowResize(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Raised before a row is resized.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.On_Scroll(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Raised when the grid scrolls.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnSelChange(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Raised when a selection has changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnSplitChange(System.EventArgs)">
            <summary>
            Raised when split currency has changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnSplitRemoved(System.EventArgs)">
            <summary>
            Raised when a split has been removed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnChange(System.EventArgs)">
            <summary>
            Raised when the grids cell content has been modified.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnUnboundColumnFetch(C1.Win.C1TrueDBGrid.UnboundColumnFetchEventArgs)">
            <summary>
            Raised to fetch data for an unbound column.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnUnboundColumnUpdated(C1.Win.C1TrueDBGrid.UnboundColumnFetchEventArgs)">
            <summary>
            Raised when an unbound column has been updated.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnAfterColEdit(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Raised after a column has been edited.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnBeforeColEdit(C1.Win.C1TrueDBGrid.BeforeColEditEventArgs)">
            <summary>
            Raised before a column edit.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnColEdit(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Raised when a column has been edited.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnFirstRowChange(C1.Win.C1TrueDBGrid.SplitEventArgs)">
            <summary>
            Raised when the top row has changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnLeftColChange(C1.Win.C1TrueDBGrid.SplitEventArgs)">
            <summary>
            Raised when the left column has changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnFormatText(C1.Win.C1TrueDBGrid.FormatTextEventArgs)">
            <summary>
            Raised when a cell value needs custom formatting.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnButtonClick(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Raised when a button in a cell has been clicked.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnComboSelect(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Raised when a value in the combobox has been selected.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnValueItemError(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Raised when a value item is selected that's not in the ValueItems collection.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnFetchCellStyle(C1.Win.C1TrueDBGrid.FetchCellStyleEventArgs)">
            <summary>
            Raised when a custom style is to be used for rendering a cell.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnFetchGroupCellStyle(C1.Win.C1TrueDBGrid.FetchCellStyleEventArgs)">
            <summary>
            Raised when a custom style is to be used for renderind a grouped cell.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnFetchRowStyle(C1.Win.C1TrueDBGrid.FetchRowStyleEventArgs)">
            <summary>
            Raised when a custom style is to be used for a row.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.On_AddNew(System.EventArgs)">
            <summary>
            Raised when a new row is added.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnColMove(C1.Win.C1TrueDBGrid.ColMoveEventArgs)">
            <summary>
            Raised when a column is dragged.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnFetchCellTips(C1.Win.C1TrueDBGrid.FetchCellTipsEventArgs)">
            <summary>
            Raised when a cell tip is to be displayed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.On_Init(System.EventArgs)">
            <summary>
            Raised when the grid is initialized.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnDataSourceChanged(System.EventArgs)">
            <summary>
            Raised when the datasource is changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnCollapse(C1.Win.C1TrueDBGrid.BandEventArgs)">
            <summary>
            Raised when a band is collasped in a hierarchical grid.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnExpand(C1.Win.C1TrueDBGrid.BandEventArgs)">
            <summary>
            Raised when a band is expanded in a hierarchical grid.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnGroupColMove(C1.Win.C1TrueDBGrid.GroupColMoveEventArgs)">
            <summary>
            Raised when a grouped column is moved.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnGroupHeadClick(C1.Win.C1TrueDBGrid.GroupColEventArgs)">
            <summary>
            Raised when a column header in the grouping area is clicked.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnFetchScrollTips(C1.Win.C1TrueDBGrid.FetchScrollTipsEventArgs)">
            <summary>
            Raised when scroll tips are to be displayed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnFilterChange(System.EventArgs)">
            <summary>
            Raised when a filter condition has changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnFilterButtonClick(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Raised when a button in the filter bar is clicked.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnBeforeOpen(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Raised before a child grid is displayed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnBeforeClose(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Rasied before a child grid is closed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnSort(C1.Win.C1TrueDBGrid.FilterEventArgs)">
            <summary>
            Raised when the datasource is sorted by clicking the column header.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnFilter(C1.Win.C1TrueDBGrid.FilterEventArgs)">
            <summary>
            Raised when AllowFilter is false.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnAfterFilter(C1.Win.C1TrueDBGrid.FilterEventArgs)">
            <summary>
            Raised after the datasource has been filtered.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnAfterSort(C1.Win.C1TrueDBGrid.FilterEventArgs)">
            <summary>
            Raised after the datasource has been sorted.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnError(C1.Win.C1TrueDBGrid.ErrorEventArgs)">
            <summary>
            Raised when the grid encounters an error through the UI.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnGroupText(C1.Win.C1TrueDBGrid.GroupTextEventArgs)">
            <summary>
            Raised when custom values are to be used for the group text.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnGroupAggregate(C1.Win.C1TrueDBGrid.GroupTextEventArgs)">
            <summary>
            Raised when custom aggregates are used for a grouped grid.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.OnGroupInterval(C1.Win.C1TrueDBGrid.GroupIntervalEventArgs)">
            <summary>
            Raised when custom group intervals are used for a grouped grid.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.SetDataBinding(System.Object,System.String,System.Boolean)">
            <summary>
            Binds the grid at runtime
            </summary>
            <param name="dataSource">Source of the data</param>
            <param name="dataMember">The table to bind to within the object returned by the DataSource property</param>
            <param name="holdFields">True to preserve design time layout</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.SetDataBinding(System.Object,System.String)">
            <summary>
            Binds the grid at runtime
            </summary>
            <param name="dataSource">Source of the data</param>
            <param name="dataMember">The table to bind to within the object returned by the DataSource property</param>
            <remarks>The call to SetDataBinding(object dataSource, string dataMember) assumes false for the holdFields arguments.</remarks>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.SetDataBinding">
            <summary>
            Configures the grid for use without a datasource.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.AddRow(System.String)">
            <summary>
            Adds a row to an unbound grid.
            </summary>
            <param name="data">The data used to populate the new row.  Column data is delimited by ';' char.</param>
            <returns>The index of the row that was added.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.AddRow(System.String,System.Char)">
            <summary>
            Adds a row to an unbound grid.
            </summary>
            <param name="data">The data used to populate the new row.</param>
            <param name="separator">Character used to separate the data fields.</param>
            <returns>The index of the row that was added.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.AddRows(System.Int32)">
            <summary>
            Adds the number of given rows to an unbound grid.
            </summary>
            <param name="count">The number of rows to add.</param>
            <returns>The index of the first row that was added.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.Delete(System.Int32)">
            <summary>
            Deletes the given row from an unbound grid.
            </summary>
            <param name="index">The index of the row to remove.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.Frame.Delete(System.Int32,System.Int32)">
            <summary>
            Deletes a range of rows from an unbound grid.
            </summary>
            <param name="index">The starting index of the row to remove.</param>
            <param name="count">The number of rows to remove.</param>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.CreateParams">
            <Summary>
                Allows us to set the borderstyle.
            </Summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.RowPosition">
            <summary>
            Gets the current position from the currency manager.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.BorderStyle">
            <summary>
            Gets or sets the border for the control.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.AllowSort">
            <summary>
            Gets or sets a value indicating the ability of the grid to automatically sort data when a column header is clicked.
            </summary>
            <remarks>
            <para>If True, and if the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.DataView" /> property is set to GroupBy, the grid will automatically filter column data upon grouping action.</para>
            <para>If False, the grid will fire the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Sort" /> event.</para>
            <para>If the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.DataView" /> property is set to Group By and the user attempts to drag a column header into the grouping area, the grid will automatically sort the column data.</para>
            <para>If False, the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Sort" /> event allows the application to sort the data.</para>
            </remarks>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.AllowFilter">
            <summary>
            Gets or sets a value indicating the ability of the grid to automatically filter data.
            </summary>
            <remarks>
            <para>If True, and if the Filter Bar is active, the grid will automatically filter data.</para>
            <para>If False, the grid will fire the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Filter" /> event.</para>
            <para>If the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FilterBar" /> property is true and the user attempts to filter column data, the grid will automatically filter the column data according to the value in the Filter Bar.</para>
            <para>If False, the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Filter" /> event allows the application to filter the data.</para>
            </remarks>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.Caption">
            <summary>
            Gets or sets the grid's caption.
            </summary>
            <remarks>
            <para>For a <see cref="T:C1.Win.C1TrueDBGrid.C1TrueDBGrid" /> control, this property determines the text displayed in the caption bar at the top of the grid.</para>
            <para>Setting the Caption property to an empty string for a <see cref="T:C1.Win.C1TrueDBGrid.C1TrueDBGrid" /> control hides its caption bar.</para>
            <para>For a <see cref="T:C1.Win.C1TrueDBGrid.C1DataColumn" /> object, this property determines the text displayed in the object's heading area.</para>
            <para>Setting the Caption property to an empty string for a <see cref="T:C1.Win.C1TrueDBGrid.C1DataColumn" /> object clears the text in the column's heading area but does not hide the heading. Column captions are only displayed if the grid's <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ColumnHeaders" /> property is set to True.</para>
            <para>Setting the Caption property to an empty string for a <see cref="T:C1.Win.C1TrueDBGrid.Split"/> object hides the heading area, even if other splits have non-empty captions.</para>
            </remarks>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.CaptionHeight">
            <summary>
            Gets or sets the height of the grid's caption.
            </summary>
            <remarks>This property requires that the <see cref="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.Caption" /> property of the grid has a value.</remarks>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.RowHeight">
            <summary>
            Gets or sets the height of grid rows.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.DataMember">
            <summary>
            Gets or sets the specific data member in a multimember data source that the grid binds to.
            </summary>
            <remarks>
            <para>This property returns or sets the name of the data member used to populate the grid. Typically, a data member represents a database table or query.</para>
            <para>A bound <see cref="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.DataSource" /> can expose multiple sets of data that consumers can bind to. Each set of data is called a data member, and is identified by a unique string.</para>
            </remarks>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.DataSource">
            <summary>
            Gets or sets the source containing a list of values used to populate the items within the control.
            </summary>
            <remarks>The DataSource property specifies the list of values used to bind a <see cref="T:C1.Win.C1TrueDBGrid.C1TrueDBGrid" /> or <see cref="T:C1.Win.C1TrueDBGrid.C1TrueDBDropdown" /> control.</remarks>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.DoubleBuffer">
            <summary>
            Gets or sets a value indicating whether the control should use an off-screen buffer when painting to redue flicker.
            </summary>
            <remarks>
            <para>Setting this value to False may cause the grid to flicker when the control is painting.</para>
            <para>You may want to set DoubleBuffer to False to increase performance when deploying applications that run on terminal servers.</para>
            </remarks>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.FlatStyle">
            <summary>
            Gets or sets the general appearance of 3D elements for the entire grid.  
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.ScrollTrack">
            <summary>
            Gets or sets a value that controls how the grid scrolls when the scroll thumb is moved.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.PropBag">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.Images">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.RowCount">
            <summary>
            Gets the number of rows in an unbound grid.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.UseColumnStyles">
            <summary>
            Gets or sets a value indicating whether Style information is applied from the datasource.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.VisualStyle">
            <summary>
            Gets or sets a value that determines the overall appearance of the control.
            </summary>
            <remarks>
            <para>This property allows you to quickly customize the appearance of the grid so
            it matches the appearance of your application.</para>
            <para>The settings available include <b>System</b>, various Microsoft Office color 
            schemes, and <b>Custom</b>, which relies on the controls standard styles and appearance 
            properties.</para>
            </remarks>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.BaseGrid.View">
            <summary>
            Base class for splits.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.BaseGrid.View.disposed">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.BaseGrid.View.m_colSize">
            <summary>
            moving sizing info
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.BaseGrid.View._internalTextEditor">
            <summary>
            editor
            </summary>
            
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.#ctor(C1.Win.C1TrueDBGrid.BaseGrid.View)">
            <summary>
            creates a View from another view
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.Dispose">
            <summary>
            Releases the resources used by the view.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the view.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.ToString">
            <summary>
            Returns the string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.getCellStyle(System.Int32,System.Int32,System.String)">
            <summary>
            Returns the style associated with a given cell.
            </summary>
            <param name="row">Row to fetch the style for.</param>
            <param name="col">Column to fetch the style for.</param>
            <param name="celltext">The text of the cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.shouldDrawLines(System.Int32,System.Int32)">
            <summary>
            Returns a value indicating whether a line should be rendered for a given row and column.
            </summary>
            <param name="row">The row index.</param>
            <param name="col">The column index.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.needsVertSB">
            <summary>
            scrollbar helpers
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.onScrollBarVisible(System.Object,System.Boolean)">
            <summary>
            Raised when the scrollbar visibility changes.
            </summary>
            <param name="sb">The scrollbar object.</param>
            <param name="visible">The new visible state.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.newLeft(System.Int32)">
            <summary>
            
            </summary>
            <param name="newleft"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.clipRowRect(System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.clickButton(System.Drawing.Point)">
            <summary>
            mouse handlers
            </summary>
            <param name="p"></param>
            
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.beginHorizontalResizing(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.ThreadSafeAutoScroll">
            <summary>
            Scrolls the view either right or left during column move operations.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.AutoScroll(System.Object,System.Timers.ElapsedEventArgs)">
            <param name="myObject"></param>
            <param name="myEventArgs"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.insertionPos(System.Int32,System.Drawing.Point)">
            <summary>
            returns true if we displaying the insertion point on the leftside of the rect
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.setAutoSizeRowHeight(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="row"></param>
            <param name="height"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.AutoSizeRow(System.Int32)">
            <summary>
            autosizes the height of the given row
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.displayCollectionAdded(C1.Win.C1TrueDBGrid.C1DisplayColumnCollection)">
            <summary>
            
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.displayCollectionRemoved(C1.Win.C1TrueDBGrid.C1DisplayColumnCollection,System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="c"></param>
            <param name="idx"></param>
            <param name="val"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.displayCollectionRemoveComplete(C1.Win.C1TrueDBGrid.C1DisplayColumnCollection)">
            <summary>
            
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.displayCollectionCleared(C1.Win.C1TrueDBGrid.C1DisplayColumnCollection)">
            <summary>
            
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.displayCollectionClearedComplete(C1.Win.C1TrueDBGrid.C1DisplayColumnCollection)">
            <summary>
            
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.shouldExit">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.repositionEditor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.RowVisibilityChanged(C1.Win.C1TrueDBGrid.BaseGrid.ViewRow)">
            <summary>
            
            </summary>
            <param name="vr"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.MoveRow(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="oldrow"></param>
            <param name="newrow"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.clipDataRect(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.checkMousePoint(System.Drawing.Point)">
            <summary>
            checks to see if the mouse is over a 3d element
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.OnHeadingStyleChanged(System.Object,C1.Win.C1TrueDBGrid.Styles.GridStyleEventArgs)">
            <summary>
            Style listeners
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.OnDisplayColumnChanged(C1.Win.C1TrueDBGrid.C1DisplayColumn.ColumnChangedEnum,C1.Win.C1TrueDBGrid.C1DisplayColumn)">
            <summary>
            Called when C1DisplayColumn properties have been changed.
            </summary>
            <param name="what"></param>
            <param name="dc"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.removeCol(C1.Win.C1TrueDBGrid.C1DataColumn)">
            <summary>
            
            </summary>
            <param name="dc"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.addCol(C1.Win.C1TrueDBGrid.C1DataColumn)">
            <summary>
            
            </summary>
            <param name="dc"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.expandGroupRow(System.Int32)">
            <summary>
            
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.collapseGroupRow(System.Int32)">
            <summary>
            
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.updateGroupList(C1.Win.C1TrueDBGrid.C1DisplayColumnCollection)">
            <summary>
            
            </summary>
            <param name="groupings"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.clearGroupList">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.hasRowError(System.Int32)">
            <summary>
            
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.View.hasColError(System.Int32,C1.Win.C1TrueDBGrid.C1DataColumn)">
            <summary>
            
            </summary>
            <param name="row"></param>
            <param name="dc"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.View.ClientRect">
             <summary>
             potential properties
             </summary>
            
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.View.BorderSide">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.View.BorderStyle">
            <summary>
            Gets or sets the type of border rendered for a split.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.baseTypeConverter">
            <summary>
            Base class for typeconverter.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.baseTypeConverter.ObjFromString(System.String)">
            <summary>
            Returns an object from it's string representation.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.baseTypeConverter.StringFromObj(System.Object)">
            <summary>
            Returns a string representation from a given object.
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.baseTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the source type is string.
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.baseTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true of the type of string.
            </summary>
            <param name="context"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.baseTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Overloaded. Returns whether this converter can convert an object of one type to the type of this converter.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.baseTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overloaded. Converts the given value object to the specified type.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.BitmapTypeConverter">
            <summary>
            Typeconverter for bitmaps.  Used for serialization.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BitmapTypeConverter.ObjFromString(System.String)">
            <summary>
            Override.  Returns the object given a string.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BitmapTypeConverter.StringFromObj(System.Object)">
            <summary>
            Override.  Returns a string given an object.
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GenericTypeConverter">
            <summary>
            Expandable object converter that doesn't handle strings.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.GenericTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overloaded. Returns whether this converter can convert an object of one type to the type of this converter.
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.GenericTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overloaded. Returns whether this converter can convert the object to the specified type.
            </summary>
            <param name="context"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.DataTypeConverter">
            <summary>
            GridDataTypeConverter
            Uses a drop-down list box to select values of type Type
            (e.g. Column.DataType property).
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.BaseGrid.FlatModeHelper">
            <summary>
            Helper class to manage FlatMode = Popup.  Where 3D elements,
            col headings, buttons, record selectors are drawn flat except when
            the mouse is over them.  Then they take on a 3D appearance
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.RelationState">
            <summary>
            Defined the relationship of a column.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.RelationState.None">
            <summary>
            Column is not related.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.RelationState.Parent">
            <summary>
            Column is the parent.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.RelationState.Child">
            <summary>
            Column is the child.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.C1DataColumn">
            <summary>
            Represents a column that defines binding information for the datasource.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumn.#ctor">
            <summary>
            Creates a new instance of this object.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumn.#ctor(System.String,System.Type)">
            <summary>
            Creates a new instance of this object.
            </summary>
            <param name="caption">The column caption.</param>
            <param name="datatype">The data type.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumn.#ctor(System.String,System.String,System.Type)">
            <summary>
            Creates a new instance of this object.
            </summary>
            <param name="caption">The column caption.</param>
            <param name="datafield">The field from the data source.</param>
            <param name="datatype">The data type.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumn.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumn.ResetButtonPicture">
            <summary>
            Resets ButtonPicture to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumn.ResetFilterButtonPicture">
            <summary>
            Resets FilterButtonPicture to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumn.CellText(System.Int32)">
            <summary>
            Gets the display value for a cell in a given row.
            </summary>
            <param name="row">The row to fetch.</param>
            <returns>The display value.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumn.CellValue(System.Int32)">
            <summary>
            Gets the cell value for a given row.
            </summary>
            <param name="row">The row to fetch.</param>
            <returns>The underlying data from the data source.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumn.Refresh">
            <summary>
            Invalidate the current column in all visible rows.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumn.RefreshCell">
            <summary>
            Invalidate the current cell.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumn.RefreshCell(System.Int32)">
            <summary>
            Invalidate the cell at the given row.
            </summary>
            <param name="row">Row to invalidate.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumn.Refetch">
            <summary>
            Repopulate the entire grid from the data source.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumn.RefetchCell">
            <summary>
            Repopulates the current cell from the data source.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumn.RefetchCell(System.Int32)">
            <summary>
            Repopulates the specified data from the data source.
            </summary>
            <param name="row">The row to refetch.</param>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.Level">
            <summary>
            Gets or sets the level of this column in a hierarchical data source.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.Relation">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.RelationState">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.Aggregate">
            <summary>
            Gets or sets the type of aggregate computed for a grouped row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.ButtonPicture">
            <summary>
            Gets or sets the image shown in a dropdown button in a column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.buttonPicIdx">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.Caption">
            <summary>
            Gets or sets the text in the column header.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.DataChanged">
            <summary>
            Gets or sets a value indicating whether data in this column has been modified.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.DataField">
            <summary>
            Gets or sets the database field name for a column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.DataWidth">
            <summary>
            Gets or sets the maximum number of characters which may be entered for cells in this column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.DefaultValue">
            <summary>
            Gets or sets the default value for a column when a new row is added by the grid.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.EditMask">
            <summary>
            Gets or sets the edit mask for a column.
            </summary>
            <remarks>
                <para>The <see cref="P:C1.Win.C1TrueDBGrid.C1DataColumn.EditMask"/> property allows an input mask to be specified for automatic input formatting and validation. The mask syntax is similar to the one used by Microsoft Access. Setting the input mask for a column will prevent the user from entering any information in the cell that is not in the format of the <see cref="P:C1.Win.C1TrueDBGrid.C1DataColumn.EditMask"/> string.</para>
                <para>The <see cref="P:C1.Win.C1TrueDBGrid.C1DataColumn.EditMask"/> must be a string composed of the following symbols:</para>
                <para><b>Wildcards</b></para>
                <list type="table">
                  <item><term>0</term><description>Digit.</description></item>
                  <item><term>9</term><description>Digit or space.</description></item>
                  <item><term>#</term><description>Digit or sign.</description></item>
                  <item><term>L</term><description>Letter.</description></item>
                  <item><term>?</term><description>Letter or space.</description></item>
                  <item><term>A</term><description>Letter or digit.</description></item>
                  <item><term>a</term><description>Letter, digit or space.</description></item>
                  <item><term>&amp;</term><description>Any character.</description></item>
                </list>
                <para><b>Localized characters</b></para>
                <list type="table">
                  <item><term>.</term><description>Localized decimal separator.</description></item>
                  <item><term>,</term><description>Localized thousand separator.</description></item>
                  <item><term>:</term><description>Localized time separator.</description></item>
                  <item><term>/</term><description>Localized date separator.</description></item>
                </list>
                <para><b>Command characters</b></para>
                <list type="table">
                  <item><term>\</term><description>Next character is taken as a literal.</description></item>
                  <item><term>&gt;</term><description>Translate letters to uppercase.</description></item>
                  <item><term>&lt;</term><description>Translate letters to lowercase.</description></item>
                </list>
            </remarks>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.EditMaskUpdate">
            <summary>
            Gets or sets a value indicating whether literal characters in the edit mask are stored to the underlying data source.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.Editor">
            <summary>
            Gets or sets the editor that is used to edit cell data.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.EnableDateTimeEditor">
            <summary>
            Gets or sets a value indicating whether a DateTime picker is used to edit this column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.FilterButtonPicture">
            <summary>
            Gets or sets the image show in the filter button for the column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.filterButtonPicIdx">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.FilterKeys">
            <summary>
            Gets or sets the key used to initiate the filtering operation as the user types in the filterbar.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.FooterText">
            <summary>
            Gets or sets the text displayed in the column footer.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.FilterEscape">
            <summary>
            Gets or sets the characters that should be escaped when applying the filter criteria to the datasource.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.FilterOperator">
            <summary>
            Gets or sets the operator that is used for a filter expression.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.FilterText">
            <summary>
            Gets or sets the data associated with the value of the filter for a column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.FilterDropdown">
            <summary>
            Gets or sets a value indicating whether a dropdown list is displayed in the filter cell that lists all the values of the field.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.NumberFormat">
            <summary>
            Gets or sets the formmating string for a column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.ValueItems">
            <summary>
            Gets the <see cref="P:C1.Win.C1TrueDBGrid.C1DataColumn.ValueItems"/> object for this column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.Text">
            <summary>
            Gets or sets the display value for the current cell.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.Value">
            <summary>
            Gets or sets the value of the current cell.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.Tag">
            <summary>
            Gets or sets a user defined objects associated with this column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.DropDown">
            <summary>
            Gets or sets the C1TrueDBDropdown control associated with this column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.SortDirection">
            <summary>
            Gets or sets the state of the sorting glyph in the column caption.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.GroupInfo">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1DataColumn.GroupInfo"/> associated with this column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumn.DropDownCtl">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.DropDownTypeEditor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.DropDownTypeEditor.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.DropDownTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.DropDownTypeEditor.OnListBoxClick(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.DropDownTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GridEditorDatePicker">
            <summary>
            Summary description for GridEditor.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Style">
            <summary>
            Represents an object used to render grid elements.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Style.#ctor">
            <summary>
            Creates a new instance of this object.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Style.Dispose">
            <summary>
            Called when the class is being disposed.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Style.Dispose(System.Boolean)">
            <summary>
            Called when the class is being disposed.
            </summary>
            <param name="disposing">
            True to cleanup.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Style.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Style.Render(System.Drawing.Graphics,System.Drawing.Rectangle,System.String)">
            <summary>
            Renders the given string using the style properties.
            </summary>
            <param name="g">Graphics object to render too.</param>
            <param name="r">Rectangle to render in.</param>
            <param name="s">String to render.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Style.ResetBackColor">
            <summary>
            Reset BackColor to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Style.ResetForeColor">
            <summary>
            Resets ForeColor to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Style.ResetFont">
            <summary>
            Resets Font to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Style.ResetHorizontalAlignment">
            <summary>
            Resets HorizontalAlignment to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Style.ResetVerticalAlignment">
            <summary>
            Resets VerticalAlignment to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Style.ResetBackgroundPictureDrawMode">
            <summary>
            Resets BackgroundPictureDrawMode to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Style.ResetBackgroundImage">
            <summary>
            Resets the BackgroundImage to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Style.ResetForeGroundPicturePosition">
            <summary>
            Resets ForGroundImagePosition to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Style.ResetForegroundImage">
            <summary>
            Resets ForegroundImage to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Style.ResetLocked">
            <summary>
            Resets Locked to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Style.ResetWrapText">
            <summary>
            Resets WrapText to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Style.ResetTrimming">
            <summary>
            Resets Trimming to its default value.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Style.Reset">
            <summary>
            Resets all specialized attributes.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.Borders">
            <summary>
            Gets the <see cref="T:C1.Win.C1TrueDBGrid.GridBorders"/> associated with this Style.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.BackColor">
            <summary>
            Gets or sets the background color associated with a Style.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.BackColor2">
            <summary>
            Gets or sets the background color associated with a Style.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.ForeColor">
            <summary>
            Gets or sets the foreground color associated with a Style.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.Font">
            <summary>
            Gets or sets the Font associated with a Style.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal text alignment.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.VerticalAlignment">
            <summary>
            Gets or sets the vertical text alignment.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.BackgroundPictureDrawMode">
            <summary>
            Gets or sets the rendering method for a <see cref="P:C1.Win.C1TrueDBGrid.Style.BackgroundImage"/>.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.BackgroundImage">
            <summary>
            Gets or sets the background image associated with a Style.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.ForeGroundPicturePosition">
            <summary>
            Gets or sets the position that the ForGroupImage is rendered.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.ForegroundImage">
            <summary>
            Gets or sets the foreground image associated with a style.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.Locked">
            <summary>
            Gets or sets a value indicating whether data entry is permitted for the assocated object.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.WrapText">
            <summary>
            Gets or sets a value indicating whether text is word-wrapped when it does not fit into a layout shape.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.Name">
            <summary>
            Gets or sets the name of the Style.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.Trimming">
            <summary>
            Gets or sets the trim characters for a string that does not completely fit into a layout shape.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.Padding">
            <summary>
            Gets or sets the spacing between cell content and its edges.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.parent">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.me">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.backimgIdx">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Style.foreimgIdx">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GridBorders">
            <summary>
            Represents the border in a <see cref="T:C1.Win.C1TrueDBGrid.Style"/>
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GridBorders.BorderType">
            <summary>
            Gets or sets the type of border.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GridBorders.Left">
            <summary>
            Gets or sets the width of the left border.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GridBorders.Right">
            <summary>
            Gets or sets the width of the right border.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GridBorders.Top">
            <summary>
            Gets or sets the width of the top border.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GridBorders.Bottom">
            <summary>
            Gets or sets the width of the bottom border.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GridBorders.Color">
            <summary>
            Gets or sets the color of the border.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.C1EmbeddedEditor">
            <summary>
            Summary description for GridEditorLateBind.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.ValueItems">
            <summary>
            Represents an object that defines how cells are rendered.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ValueItems.AnnotatePicture">
            <summary>
            Gets or sets a value indicating whether both Value and Display Value are rendenered when Display value is an image.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ValueItems.CycleOnClick">
            <summary>
            Gets or sets a value indicating whether users can cycle through <see cref="T:C1.Win.C1TrueDBGrid.ValueItem"/> by clicking on a cell.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ValueItems.DefaultItem">
            <summary>
            Gets or sets the index of the default <see cref="T:C1.Win.C1TrueDBGrid.ValueItem"/> or -1 for no default.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ValueItems.MaxComboItems">
            <summary>
            Gets or sets the maximum number of visible rows in the combobox.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ValueItems.Presentation">
            <summary>
            Gets or sets the method in which cells are rendered.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ValueItems.Translate">
            <summary>
            Gets or sets a value indicating whether data values are translated using matching <see cref="T:C1.Win.C1TrueDBGrid.ValueItem"/>.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ValueItems.Validate">
            <summary>
            Gets or sets a value indicating whether values entered by the user must match on of the <see cref="T:C1.Win.C1TrueDBGrid.ValueItem"/> objects.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ValueItems.Values">
            <summary>
            Gets the collection of Value/Display Value pairs.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ValueItems.internalValues">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.ValueItemCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Win.C1TrueDBGrid.ValueItem"/> objects.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.ValueItemCollection.Add(C1.Win.C1TrueDBGrid.ValueItem)">
            <summary>
            Adds a <see cref="T:C1.Win.C1TrueDBGrid.ValueItem"/> to the end of the collection.
            </summary>
            <param name="vi">The ValueItem to add.</param>
            <returns>The index at which the ValueItem has been added.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.ValueItemCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.ValueItemCollection.Insert(System.Int32,C1.Win.C1TrueDBGrid.ValueItem)">
            <summary>
            Inserts a <see cref="T:C1.Win.C1TrueDBGrid.ValueItem"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which the ValueItem should be inserted.</param>
            <param name="vi">The ValueItem to insert.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.ValueItemCollection.IndexOf(C1.Win.C1TrueDBGrid.ValueItem)">
            <summary>
            Gets the index of the specified <see cref="T:C1.Win.C1TrueDBGrid.ValueItem"/>.
            </summary>
            <param name="vi">The ValueItem to search.</param>
            <returns>The index of the ValueItem.</returns>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ValueItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the specified <see cref="T:C1.Win.C1TrueDBGrid.ValueItem"/> from the collection at the specified index.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.ValueItem">
            <summary>
            Represents an object that defines a value/display value pair.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.ValueItem.#ctor">
            <summary>
            Initializes a new instance of the ValueItem class.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.ValueItem.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the ValueItem class.
            </summary>
            <param name="value">Underlying data value.</param>
            <param name="displayValue">Translated value.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.ValueItem.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ValueItem.Value">
            <summary>
            Gets or sets the raw (untranslated) value of this item.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ValueItem.DisplayValue">
            <summary>
            Gets or sets the display value of this item.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ValueItem.ImgIdx">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ValueItem.dispVal">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.C1DisplayColumn">
            <summary>
            Represents the columns in a split.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DisplayColumn.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DisplayColumn.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the component.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DisplayColumn.AddCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,C1.Win.C1TrueDBGrid.Style)">
            <summary>
            Controls the <see cref="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.Style"/> used to change the appearance for cells meeting the specified condition.
            </summary>
            <param name="condition">
            Combination of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> enumerations.
            </param>
            <param name="style">
            <see cref="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.Style"/> object that specifies appearance attributes.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DisplayColumn.AddRegexCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,C1.Win.C1TrueDBGrid.Style,System.String)">
            <summary>
            Controls the <see cref="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.Style"/> used to change the appearance of cells according to their contents.
            </summary>
            <param name="condition">
            Combination of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> enumerations.
            </param>
            <param name="style">
            <see cref="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.Style"/> object that specifies appearance attributes.
            </param>
            <param name="regex">
            A regular expression string.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DisplayColumn.ClearCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag)">
            <summary>
            Removes a cell condition established with a previous call to the <see cref="M:C1.Win.C1TrueDBGrid.C1DisplayColumn.AddCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,C1.Win.C1TrueDBGrid.Style)"/> method.
            </summary>
            <param name="condition">
            Combination of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> enumerations.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DisplayColumn.ClearRegexCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag)">
            <summary>
            Removes a cell condition established with a previous call to the <see cref="M:C1.Win.C1TrueDBGrid.C1DisplayColumn.AddRegexCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,C1.Win.C1TrueDBGrid.Style,System.String)"/> method.
            </summary>
            <param name="condition">
            Combination of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> enumerations.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DisplayColumn.ClearRegexCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,System.String)">
            <summary>
            Removes a cell condition established with a previous call to the <see cref="M:C1.Win.C1TrueDBGrid.C1DisplayColumn.AddRegexCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,C1.Win.C1TrueDBGrid.Style,System.String)"/> method.
            </summary>
            <param name="condition">
            Combination of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> enumerations.
            </param>
            <param name="regex">
            A regular expression string.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DisplayColumn.AutoSize">
            <summary>
            Adjusts the width of a column to accommodate the longest visible field within that column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.AutoDropDown">
            <summary>
            Gets or sets a value indicating whether the dropdown opens automatically when a key is typed.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.AutoComplete">
            <summary>
            Gets or sets a value indicating whether the dropdown auto fills the edit portion with the matched entry.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.CellTop">
            <summary>
            Gets the vertical offset of the top of the cell for the current row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.DropDownList">
            <summary>
            Gets or sets a value indicating whether the dropdown acts like a dropdown list (text portion is not editable).
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.HeadingStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.Style"/> that controls the appearance of the column headers.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.Style">
            <summary>
            Gets or sets the root <see cref="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.Style"/> for this column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.FooterStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.Style"/> object that controls the appearance of column footers.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.EditorStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.Style"/> used for the cell editor.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.GroupHeaderStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.Style"/> used to render the cell in the grouped header row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.GroupFooterStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.Style"/> used to render the cell in the grouped footer row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.Visible">
            <summary>
            Gets or sets a value indicating the visibility of a column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.ColumnDivider">
            <summary>
            Gets or sets the style of the border drawn between columns.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.Width">
            <summary>
            Gets or sets the width of a column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.Height">
            <summary>
            Gets or sets the height of the column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.AllowFocus">
            <summary>
            Gets or sets a value indicating the ability of a column to receive focus.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.Locked">
            <summary>
            Gets or sets a value indicating whether editing is permitted in a column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.Merge">
            <summary>
            Gets or sets a value indicating whether contiguous like-value cells of this column are merged into one large cell.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.SubLine">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.AllowSizing">
            <summary>
            Gets or sets a value indicating whether column resizing is allowed.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.ButtonText">
            <summary>
            Gets or sets a value indicating whether cells in this column look like buttons.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.ButtonAlways">
            <summary>
            Gets or sets a value indicating whether buttons will be displayed when the cell does not contain focus.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.Button">
            <summary>
            Gets or sets a value indicating whether a dropdown button will be displayed in this column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.FilterButton">
            <summary>
            Gets or sets a value indicating whether a dropdown button will be displayed in this column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.MinWidth">
            <summary>
            Gets or sets the minimum width a column can be resized to when in <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SpringMode"/>.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.HeaderDivider">
            <summary>
            Gets or sets a value indicating whether to display the column divider in the header area.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.FooterDivider">
            <summary>
            Gets or sets a value indicating whether to display the column divider in the footer area.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.FetchStyle">
            <summary>
            Gets or sets a value indicating whether the FetchCellStyle event will be raised for a column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.ButtonHeader">
            <summary>
            Gets or sets a value indicating whether a column header will act like a button.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.ButtonFooter">
            <summary>
            Gets or sets a value indicating whether a column footer will act like a button.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.OwnerDraw">
            <summary>
            Gets or sets a value indicating whether cells in this column are drawn by the user in the OwnerDrawCell event.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.DataColumn">
            <summary>
            Gets the associted <see cref="T:C1.Win.C1TrueDBGrid.C1DataColumn"/> associated with this object.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.DCIdx">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.Name">
            <summary>
            Gets the caption of the associated <see cref="T:C1.Win.C1TrueDBGrid.C1DataColumn"/> objects.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.C1DisplayColumn.ColumnChangedEnum">
            <summary>
            Enumerates the type of changes made to a display column for event listeners
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.GridLinesTypeConverter">
            <summary>
            TypeConverter for the GridLines object.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.GridLinesTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.GridLinesTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.GridLinesTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.GridLinesTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.GridLines">
            <summary>
            Represents the line used for row and column dividers.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.GridLines.#ctor">
            <summary>
            Creates a new instance of this object.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.GridLines.Color">
            <summary>
            Gets or sets the color of lines used for row and column dividers.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.GridLines.Style">
            <summary>
            Gets or sets the style of lines used for row and column dividers.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.BaseGrid.ViewList">
            <summary>
            Class to manage all the views
            
            TODO:  mechanism for persistence
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.ViewList.resetColumnIndex">
            <summary>
            Sets the column index to the first visible column.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.ViewList.ResetCurrentColumn">
            <summary>
            Sets the column index to the first visible column.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.ViewList.InsertHorzView(System.Int32)">
            <summary>
            Inserts a new horizontal view
            
            </summary>
            <param name="idx">index of new view position</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.ViewList.ComputeViewSize(System.Drawing.Rectangle)">
            <summary>
            computes the size of all views based upong width and height of views
            </summary>
            <param name="frameRect">Area in which all the views live</param>
            
            TODO: add fixed view sizes, we now assume everything is scalable
            TODO: add different types of view divider widths
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.ViewList.ComputeViewSize(System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Adjust the views width and heights
            </summary>
            <param name="oldRect">Old frames client area</param>
            <param name="newRect">New frames client area</param>
            
            TODO: fixed horizontal views need to be accounted for
            TODO: account for different view sizing borders
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.BaseGrid.ViewRowList">
            <summary>
            Represents a collection of ViewRow objects.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.ViewRowList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:C1.Win.C1TrueDBGrid.BaseGrid.ViewRow"/> at the specified index.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.BaseGrid.ViewRow">
            <summary>
            Represents a row in a split.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.BaseGrid.ViewRow.AutoSize">
            <summary>
            Adjust the size of the row to fully display cell data.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.ViewRow.Visible">
            <summary>
            Gets or sets the visiblity of a row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.ViewRow.RowType">
            <summary>
            Gets the type of row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.ViewRow.Height">
            <summary>
            Gets or sets the height of a row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BaseGrid.ViewRow.Width">
            <summary>
            Gets or sets the width of a row.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.C1TrueDBGrid">
            <summary>
            C1TrueDBGrid control object.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.#ctor">
            <summary>
            The C1TrueDBGrid control.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Dispose(System.Boolean)">
            <summary>
            Called when the class is being disposed.
            </summary>
            <param name="disposing">
            True to cleanup.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GetCallingAssembly">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.CreateAccessibilityInstance">
            <summary>
            Creates a new accessibility object for the control.
            </summary>
            <returns>A new <see cref="T:System.Windows.Forms.AccessibleObject"/> for the control.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.initializeStyles">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RowDividerChanged(System.Object,System.EventArgs)">
            <summary>
            notifications
            </summary>
            
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.canCreateSplits">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnImeModeChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GetVisibleRowCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AddRow(System.String)">
            <summary>
            Adds a row to an unbound grid.
            </summary>
            <param name="data">The data used to populate the new row.  Column data is delimited by ';' char.</param>
            <returns>The index of the row that was added.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AddRow(System.String,System.Char)">
            <summary>
            Adds a row to an unbound grid.
            </summary>
            <param name="data">The data used to populate the new row.</param>
            <param name="separator">Character used to separate the data fields.</param>
            <returns>The index of the row that was added.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AddRows(System.Int32)">
            <summary>
            Adds the number of given rows to an unbound grid.
            </summary>
            <param name="count">The number of rows to add.</param>
            <returns>The index of the first row that was added.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SuspendBinding">
            <summary>
            Instructs the grid to temporarily ignore IBindingList.ListChange notifications from the data source.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ResumeBinding">
            <summary>
            Resumes IBindingList.ListChange notifications from the data source to the grid.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AddCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,C1.Win.C1TrueDBGrid.Style)">
            <summary>
            Controls the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style"/> used to change the appearance for cells meeting the specified condition.
            </summary>
            <param name="condition">
            Combination of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> enumerations.
            </param>
            <param name="style">
            <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style"/> object that specifies appearance attributes.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AddRegexCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,C1.Win.C1TrueDBGrid.Style,System.String)">
            <summary>
            Controls the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style"/> used to change the appearance of cells according to their contents.
            </summary>
            <param name="condition">
            Combination of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> enumerations.
            </param>
            <param name="style">
            <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style"/> object that specifies appearance attributes.
            </param>
            <param name="regex">
            A regular expression string.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RowBookmark(System.Int32)">
            <summary>
            Returns the row index of the DataSource for a display row index.
            </summary>
            <param name="row">
            The row index of the grid.
            </param>
            <returns>
            The underlying row index of the DataSource.
            </returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ClearCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag)">
            <summary>
            Removes a cell condition established with a previous call to the <see cref="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AddCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,C1.Win.C1TrueDBGrid.Style)"/> method.
            </summary>
            <param name="condition">
            Combination of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> enumerations.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ClearRegexCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag)">
            <summary>
            Removes a cell condition established with a previous call to the <see cref="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AddRegexCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,C1.Win.C1TrueDBGrid.Style,System.String)"/> method.
            </summary>
            <param name="condition">
            Combination of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> enumerations.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ClearRegexCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,System.String)">
            <summary>
            Removes a cell condition established with a previous call to the <see cref="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AddRegexCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,C1.Win.C1TrueDBGrid.Style,System.String)"/> method.
            </summary>
            <param name="condition">
            Combination of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> enumerations.
            </param>
            <param name="regex">
            A regular expression string.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ClearFields">
            <summary>
            Restores the default grid layout.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ColContaining(System.Int32)">
            <summary>
            Returns the column index for the column containing the specified X coordinate.
            </summary>
            <param name="x">
            The horizontal coordinate (X value) in pixels.
            </param>
            <returns>
            The index of the column in the <see cref="P:C1.Win.C1TrueDBGrid.Split.DisplayColumns"/> collection beneath the specified X coordinate. 
            </returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RowContaining(System.Int32)">
            <summary>
            Returns the zero-based index of the display row containing the Y specified coordinate.
            </summary>
            <param name="y">
            The vertical coordinate (Y value) in pixels.
            </param>
            <returns>
            The display row index beneath the specified Y coordinate.
            </returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RowTop(System.Int32)">
            <summary>
            Returns the Y coordinate of the top of a visible row.
            </summary>
            <param name="row">
            The displayed row index.
            </param>
            <returns>
            The Y coordinate of the specified display row, based on the client coordinates of the grid.
            </returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ScrollGrid(System.Int32,System.Int32)">
            <summary>
            Scrolls the grid data area by the specified number of rows and columns.
            </summary>
            <param name="cols">
            Number of columns to scroll.
            </param>
            <param name="rows">
            Number of rows to scroll.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.HoldFields">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.PointAt(System.Drawing.Point)">
            <summary>
            Returns one of the <see cref="T:C1.Win.C1TrueDBGrid.PointAtEnum"/> enumerations, which indicates the kind of grid element beneath the specified coordinate.
            </summary>
            <param name="p">
            The Point in client coordinates.
            </param>
            <returns>
            The <see cref="T:C1.Win.C1TrueDBGrid.PointAtEnum"/> enumerations under the given coordinate.
            </returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.PointAt(System.Int32,System.Int32)">
            <summary>
            Returns one of the <see cref="T:C1.Win.C1TrueDBGrid.PointAtEnum"/> constants, which indicates the kind of grid element beneath the specified coordinate.
            </summary>
            <param name="x">
            The x-coordinate.
            </param>
            <param name="y">
            The y-coordinate.
            </param>
            <returns>
            The <see cref="T:C1.Win.C1TrueDBGrid.PointAtEnum"/> enumerations under the given coordinate.
            </returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Rebind(System.Boolean)">
            <summary>
            Reinitializes grid with data from its data source.
            </summary>
            <param name="holdFields">
            True to preserves current column layout.  False retrieves the schema from the datasource.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Rebind">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SplitContaining(System.Int32,System.Int32)">
            <summary>
            Returns the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SplitIndex"/> of the split containing the specified coordinate.
            </summary>
            <param name="x">
            The x-coordinate.
            </param>
            <param name="y">
            The y-coordinate.
            </param>
            <returns>
            The <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SplitIndex"/> beneath the specified coordinate pair.
            </returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.UpdateData">
            <summary>
            Updates any changes on the current row to the data source.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.MoveRelative(System.Int32)">
            <summary>
            Moves the current row positions of the grid by the given offset.
            </summary>
            <param name="offset">
            The number of records to move. A positive value indicates forward movement; a negative value indicates backward movement.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.MoveRelative(System.Int32,System.Int32)">
            <summary>
            Moves the current row positions of the grid by the given offset from the given row.
            </summary>
            <param name="offset">
            The number of records to move. A positive value indicates forward movement; a negative value indicates backward movement.
            </param>
            <param name="row">
            The origin of the relative movement.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.MoveLast">
            <summary>
            Positions to the last row of the datasource.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.MoveFirst">
            <summary>
            Positions to the first row of the datasource.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.MoveNext">
            <summary>
            Positions to the next row of the datasource.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.MovePrevious">
            <summary>
            Positions to the previous row of the datasource.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Delete">
            <summary>
            Deletes the current row.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.LoadLayout(System.String)">
            <summary>
            Loads a saved layout from the given file.
            </summary>
            <param name="filename">
            The file containing a saved layout.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.LoadLayout(System.IO.Stream)">
            <summary>
            Loads a saved layout from the given stream.
            </summary>
            <param name="stream">
            The Stream containing a saved layout.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SaveLayout(System.String)">
            <summary>
            Saves the grid's layout.
            </summary>
            <param name="filename">
            File to contain the grid layout.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SaveLayout(System.IO.Stream)">
            <summary>
            Saves the grid's layout.
            </summary>
            <param name="stream">
            The Stream to contain the grid layout.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SaveLayout(System.String,System.Boolean)">
            <summary>
            Saves the grid's layout.
            </summary>
            <param name="filename">
            File to contain the grid layout.
            </param>
            <param name="withDefaultValues">
            Specifies whether default values are serialized.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SaveLayout(System.IO.Stream,System.Boolean)">
            <summary>
            Saves the grid's layout.
            </summary>
            <param name="stream">
            The Stream to contain the grid layout.
            </param>
            <param name="withDefaultValues">
            Specifies whether default values are serialized.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.CellContaining(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Returns the cell position for a set of coordinates.
            </summary>
            <param name="x">
            The x-coordinate.
            </param>
            <param name="y">
            The y-coordinate.
            </param>
            <param name="row">
            The row under the coordinate pair.
            </param>
            <param name="col">
            The column index under the coordinate pair.
            </param>
            <returns>
            A value indicating whether a data cell is beneath the specified coordinate pair. 
            </returns>
            <remarks>
            <para>The CellContaining method combines the <see cref="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ColContaining(System.Int32)"/> and <see cref="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RowContaining(System.Int32)"/> methods into one call. If the coordinate pair specified by x and y points to a data cell, this method returns True, and the rowindex and colindex arguments receive zero-based indexes that identify the cell.</para>
            <para>This method is useful when working with mouse and drag events when trying to determine where the user clicked or dropped another control in terms of a grid cell.</para>
            <para>If the specified coordinate is outside of the grid's data area, this method returns False. Use the <see cref="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.PointAt(System.Int32,System.Int32)"/> method to determine what kind of grid element, if any, is beneath the specified coordinate.</para>
            </remarks>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RefreshRow">
            <summary>
            Invalidates the current row.
            </summary>
            <remarks>
            The RefreshRow method causes a repaint of the entire row in the grid. Normally, the grid repaints automatically as needed. However, if handlers have been written for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OwnerDrawCell"/> event, use this method to force a row to be repainted and hence cause the appropriate events to fire.
            </remarks>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RefreshRow(System.Int32)">
            <summary>
            Invalidates the current row.
            </summary>
            <param name="row">
            The row to refresh.
            </param>
            <remarks>
            The RefreshRow method causes a repaint of the entire row in the grid. Normally, the grid repaints automatically as needed. However, if handlers have been written for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OwnerDrawCell"/> event, use this method to force a row to be repainted and hence cause the appropriate events to fire.
            </remarks>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RefreshCol">
            <summary>
            Invalidates the current column.
            </summary>
            <remarks>
            The RefreshCol method causes a repaint of the entire column in the grid. Normally, the grid repaints automatically as needed. However, if handlers have been written for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OwnerDrawCell"/> event, use this method to force a column to be repainted and hence cause the appropriate events to fire.
            </remarks>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RefreshCol(System.Int32)">
            <summary>
            Invalidates the specified column.
            </summary>
            <param name="col">
            The split column index to repaint.
            </param>
            <remarks>
            The RefreshCol method causes a repaint of the entire column in the grid. Normally, the grid repaints automatically as needed. However, if handlers have been written for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OwnerDrawCell"/> event, use this method to force a column to be repainted and hence cause the appropriate events to fire.
            </remarks>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RefetchRow">
            <summary>
            Retreives data from the datasource for the current row and refreshes the row.
            </summary>
            <remarks>
            <para>The RefetchRow method repopulates the specified row from a data source. It also repaints the row, firing all events necessary for redisplay.</para>
            <para>By default, the grid retrieves data automatically as needed. In some circumstances, the underlying datasource may change without the grid receiving notification that a change has occurred.  The RefetchRow method is provided for this purpose.</para>
            </remarks>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RefetchRow(System.Int32)">
            <summary>
            Retreives data from the datasource for the specified row and refreshes the row.
            </summary>
            <param name="row">
            The row to refetch.
            </param>
            <remarks>
            <para>The RefetchRow method repopulates the specified row from a data source. It also repaints the row, firing all events necessary for redisplay.</para>
            <para>By default, the grid retrieves data automatically as needed. In some circumstances, the underlying datasource may change without the grid receiving notification that a change has occurred.  The RefetchRow method is provided for this purpose.</para>
            </remarks>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExpandGroupRow(System.Int32)">
            <summary>
            Expands the given row in GroupBy DataView.
            </summary>
            <param name="row">
            The row to expand.
            </param>
            <remarks>
            <para>Expanding/collapsing a row in a GroupBy grid also expands/collapses the row in a split that shares the same vertical scroll group.</para>
            <para></para>
            </remarks>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.CollapseGroupRow(System.Int32)">
            <summary>
            Collapses a grouped row.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GetBand(System.Int32)">
            <summary>
            Obtains the band given a column index.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GetBandRow(System.Int32,System.Int32)">
            <summary>
            Obtains the underlying row object for the given band and row.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RowExpanded(System.Int32)">
            <summary>
            Obtains the expanded state of a band for a hierarchical grid.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.CollapseBand(System.Int32)">
            <summary>
            Collapses a gvien band in a hierarchical grid.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExpandBand(System.Int32)">
            <summary>
            Expand the given band in a hierarchical grid.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.CollapseChild">
            <summary>
            Closes the Child Grid.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExpandChild">
            <summary>
            Displays the Child grid.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExportToHTML(System.String)">
            <summary>
            Exports the grid to an HTML file.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExportToPDF(System.String)">
            <summary>
            Exports the grid to a PDF file.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExportToRTF(System.String)">
            <summary>
            Exports the grid to an RTF file.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExportToExcel(System.String)">
            <summary>
            Exports the grid to a XLS file.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExportToExcel(System.String,System.Boolean)">
            <summary>
            Exports the grid to a XLS file.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExportTo">
            <summary>
            Opens a dialog in which the user can select the export format.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExportTo(System.String)">
            <summary>
            Exports the grid based upon the file extension.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExportToDelimitedFile(System.String,C1.Win.C1TrueDBGrid.RowSelectorEnum)">
            <summary>
            Exports the specified rows from the grid to the specified file as delimited text.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExportToDelimitedFile(System.String,C1.Win.C1TrueDBGrid.RowSelectorEnum,System.String)">
            <summary>
            Exports the specified rows from the grid to the specified file as delimited text.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExportToDelimitedFile(System.String,C1.Win.C1TrueDBGrid.RowSelectorEnum,System.String,System.String)">
            <summary>
            Exports the specified rows from the grid to the specified file as delimited text.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExportToDelimitedFile(System.String,C1.Win.C1TrueDBGrid.RowSelectorEnum,System.String,System.String,System.String)">
            <summary>
            Exports the specified rows from the grid to the specified file as delimited text.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExportToDelimitedFile(System.String,C1.Win.C1TrueDBGrid.RowSelectorEnum,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Exports the specified rows from the grid to the specified file as delimited text.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExportToDelimitedFile(System.String,C1.Win.C1TrueDBGrid.RowSelectorEnum,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Exports the specified rows from the grid to the specified file as delimited text.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.InsertVerticalSplit(System.Int32)">
            <summary>
            Inserts vertical splits at the given position.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RemoveVerticalSplit(System.Int32)">
            <summary>
            Removes all vertical splits at the given index.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.reinitViews">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.InsertHorizontalSplit(System.Int32)">
            <summary>
            Inserts new horizontal splits at the given position.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RemoveHorizontalSplit(System.Int32)">
            <summary>
            Removes all the horizontal splits at the given index.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Refresh">
            <summary>
            Clears any cached styles and forces the grid to repaint.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnAfterColUpdate(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Raises the AfterColUpdate event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnAfterDelete(System.EventArgs)">
            <summary>
            Raises the AfterDelete event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnAfterInsert(System.EventArgs)">
            <summary>
            Raises the AfterInsert event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnAfterUpdate(System.EventArgs)">
            <summary>
            Raises the AfterUpdate event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnBeforeColUpdate(C1.Win.C1TrueDBGrid.BeforeColUpdateEventArgs)">
            <summary>
            Raises the BeforeColUpdate event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnBeforeDelete(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Raises the BeforeDelete event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnBeforeInsert(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Raises the BeforeInsert event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnBeforeUpdate(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Raises the BeforeUpdate event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnColResize(C1.Win.C1TrueDBGrid.ColResizeEventArgs)">
            <summary>
            Raises the ColResize event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnHeadClick(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Raises the HeadClick event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnFootClick(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Raises the FootClick event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnOwnerDrawCell(C1.Win.C1TrueDBGrid.OwnerDrawCellEventArgs)">
            <summary>
            Raises the OwnerDrawCell event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnOwnerDrawCellPrint(C1.Win.C1TrueDBGrid.OwnerDrawCellEventArgs)">
            <summary>
            Raises the OwnerDrawCellPrint event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnOwnerDrawPageHeader(C1.Win.C1TrueDBGrid.OwnerDrawPageEventArgs)">
            <summary>
            Raises the OwnerDrawPageHeader event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnOwnerDrawPageFooter(C1.Win.C1TrueDBGrid.OwnerDrawPageEventArgs)">
            <summary>
            Raises the OwnerDrawPageFooter event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnBeforeRowColChange(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Raises the BeforeRowColChange event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnRowColChange(C1.Win.C1TrueDBGrid.RowColChangeEventArgs)">
            <summary>
            Raises the RowColChange event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnRowResize(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Raises the RowResize event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.On_Scroll(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Raises the Scroll event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnSelChange(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Raises the SelChange event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.hasOnSelChangeEvent">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnSplitChange(System.EventArgs)">
            <summary>
            Raises the SplitChange event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnChange(System.EventArgs)">
            <summary>
            Raises the Change event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnUnboundColumnFetch(C1.Win.C1TrueDBGrid.UnboundColumnFetchEventArgs)">
            <summary>
            Raises the UnboundColumnFetch event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnUnboundColumnUpdated(C1.Win.C1TrueDBGrid.UnboundColumnFetchEventArgs)">
            <summary>
            Raises the UnboundColumnUpdated event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnAfterColEdit(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Raises the AfterColEdit event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnBeforeColEdit(C1.Win.C1TrueDBGrid.BeforeColEditEventArgs)">
            <summary>
            Raises the BeforeColEdit event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnColEdit(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Raises the ColEdit event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnFirstRowChange(C1.Win.C1TrueDBGrid.SplitEventArgs)">
            <summary>
            Raises the FirstRowChange event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnLeftColChange(C1.Win.C1TrueDBGrid.SplitEventArgs)">
            <summary>
            Raises the LeftColChange event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnFormatText(C1.Win.C1TrueDBGrid.FormatTextEventArgs)">
            <summary>
            Raises the FromatText event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnButtonClick(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Raises the ButtonClick event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnComboSelect(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Raises the ComboSelect event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnValueItemError(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Raises the ValueItemError event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnFetchCellStyle(C1.Win.C1TrueDBGrid.FetchCellStyleEventArgs)">
            <summary>
            Raises the FetchCellStyle event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnFetchGroupCellStyle(C1.Win.C1TrueDBGrid.FetchCellStyleEventArgs)">
            <summary>
            Raises the FetchGroupCellStyle event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnFetchRowStyle(C1.Win.C1TrueDBGrid.FetchRowStyleEventArgs)">
            <summary>
            Raises the FetchRowStyle event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.On_AddNew(System.EventArgs)">
            <summary>
            Raises the OnAddNew event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnColMove(C1.Win.C1TrueDBGrid.ColMoveEventArgs)">
            <summary>
            Raises the ColMove event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnFetchCellTips(C1.Win.C1TrueDBGrid.FetchCellTipsEventArgs)">
            <summary>
            Raises the FetchCellTips event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.On_Init(System.EventArgs)">
            <summary>
            Raises the OnInit event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnDataSourceChanged(System.EventArgs)">
            <summary>
            Raises the DataSourceChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnCollapse(C1.Win.C1TrueDBGrid.BandEventArgs)">
            <summary>
            Raises the Collapse event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnExpand(C1.Win.C1TrueDBGrid.BandEventArgs)">
            <summary>
            Raises the Expand event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnGroupColMove(C1.Win.C1TrueDBGrid.GroupColMoveEventArgs)">
            <summary>
            Raises the GroupColMove event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnGroupText(C1.Win.C1TrueDBGrid.GroupTextEventArgs)">
            <summary>
            Raises the GroupText event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnGroupAggregate(C1.Win.C1TrueDBGrid.GroupTextEventArgs)">
            <summary>
            Raises the GroupAggregate event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnGroupHeadClick(C1.Win.C1TrueDBGrid.GroupColEventArgs)">
            <summary>
            Raises the GroupHeadClick event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnGroupInterval(C1.Win.C1TrueDBGrid.GroupIntervalEventArgs)">
            <summary>
            Raises the GroupInterval event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnFetchScrollTips(C1.Win.C1TrueDBGrid.FetchScrollTipsEventArgs)">
            <summary>
            Raises the FetchScrollTips event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnFilterChange(System.EventArgs)">
            <summary>
            Raises the FilterChange event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnFilterButtonClick(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Raises the FilterButtonClick event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnBeforeOpen(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Raises the BeforeOpen event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnBeforeClose(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Raises the BeforeClose event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnSort(C1.Win.C1TrueDBGrid.FilterEventArgs)">
            <summary>
            Raises the Sort event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnFilter(C1.Win.C1TrueDBGrid.FilterEventArgs)">
            <summary>
            Raises the Filter event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnAfterFilter(C1.Win.C1TrueDBGrid.FilterEventArgs)">
            <summary>
            Raises the AfterFilter event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnAfterSort(C1.Win.C1TrueDBGrid.FilterEventArgs)">
            <summary>
            Raises the AfterSort event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnError(C1.Win.C1TrueDBGrid.ErrorEventArgs)">
            <summary>
            Raises the Error event
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Item(System.Int32)">
            <summary>
            Gets the row object associated with the given row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the cell value at the given row and column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Item(System.Int32,System.String)">
            <summary>
            Gets or sets the cell value at the given row and column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AddNewMode">
            <summary>
            Gets a value that describes the current AddNew state.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AllowDelete">
            <summary>
            Gets or sets a value indicating the ability to delete records from the grid.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AllowAddNew">
            <summary>
            Gets or sets a value indicating the ability to add new rows.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AllowArrows">
            <summary>
            Gets or sets a value indicating whether arrow keys can be used to navigate around the grid.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AllowColMove">
            <summary>
            Gets or sets a value indicating the ability to move columns in the grid.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AllowColSelect">
            <summary>
            Gets or sets a value indicating the ability to select columns in the grid.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AllowDrag">
            <summary>
            Gets or sets a value indicating the ability to drag from the grid.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AllowRowSelect">
            <summary>
            Gets or sets a value indicating the ability to select rows in the grid.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AllowUpdate">
            <summary>
            Gets or sets a value indicating the ability of a user to modify data.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AllowUpdateOnBlur">
            <summary>
            Gets or sets a value indicating how the grid updates modifed data when the grid loses focus.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Bands">
            <summary>
            Gets the number of levels within a hierarchical grid.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Bookmark">
            <summary>
            Gets or sets the current row position of the underlying CurrencyManager.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.CellTips">
            <summary>
            Gets or sets whether the grid displays a pop-up text window when the cursor is idle.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.CellTipsDelay">
            <summary>
            Gets or sets the amount of time in milliseconds before the cell tip window is displayed.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.CellTipsWidth">
            <summary>
            Gets or sets the width of the cell tip window.
            </summary>
            <remarks>
            <para>
            The CellTipsWidth property returns or sets the width of the cell tip window in pixels.
            </para>
            <para>
            By default, this property is set to zero, which causes the cell tip window to grow or shrink to accommodate the cell tip text. Override this behavior and give the cell tip window a fixed width by specifying a non-zero value for this property.
            </para>
            </remarks>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Col">
            <summary>
            Gets or sets the column position of the current cell in the current split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.CollapseColor">
            <summary>
            Gets or sets the color of the collapse icon.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FocusedSplit">
            <summary>
            Gets the Split that has focus.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.DefColWidth">
            <summary>
            Gets or sets the default width for all grid columns.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExpandColor">
            <summary>
            Gets or sets the color of the expand icon in hierarchical grids.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ColumnHeaders">
            <summary>
            Gets or sets a value indicating the visibility of column headers.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ColumnFooters">
            <summary>
            Gets or sets a value indicating the visibility of column footers.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Columns">
            <summary>
            Gets the collection of C1DataColumn objects.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.CurrentCellVisible">
            <summary>
            Gets or sets a value indicating the visibility of the current cell in a split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.DataChanged">
            <summary>
            Gets or sets a value indicating the modification status of the current row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.DestinationSplit">
            <summary>
            Gets the split index which will be current after cell movement.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.DestinationRow">
            <summary>
            Gets the row which will be current after cell movement.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.DestinationCol">
            <summary>
            Gets the column which will be current after cell movement.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.EditActive">
            <summary>
            Gets or sets a value indicating the editing status of the current cell.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.EditDropDown">
            <summary>
            Gets or sets a value indicating whether editing will take place in a popup window or within cell boundaries.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.EmptyRows">
            <summary>
            Gets or sets a value that determines how the grid displays rows below the last data row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ErrorImage">
            <summary>
            Gets or sets the image used for ErrorProvider.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExtendRightColumn">
            <summary>
            Gets or sets a value that determines how the last column will extend to fill the dead area of the grid.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ExposeCellMode">
            <summary>
            Gets or sets how the rightmost column reacts when clicked by the user.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FetchRowStyles">
            <summary>
            Gets or sets a value indicating whether the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FetchRowStyle"/> event will be raised.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FilterActive">
            <summary>
            Gets or sets a value indicating whether the filter bar has focus.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FilterBar">
            <summary>
            Gets or sets a value indicating the visibility of the FilterBar.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FirstRow">
            <summary>
            Gets or sets the row index for the first visible row in a grid or split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.LeftCol">
            <summary>
            Gets or sets the zero-based index of the leftmost column in a grid or split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.MarqueeStyle">
            <summary>
            Gets or sets the MarqueeStyle for a grid.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.MatchEntryTimeOut">
            <summary>
            Gets or sets the time (milliseconds) in which the incremental search string will reset for a dropdown when the <see cref="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.DropDownList"/> property is True.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.MultiSelect">
            <summary>
            Gets or sets the selection state of the grid.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.PictureCurrentRow">
            <summary>
            Gets or sets the Image used in the record selector to indicate the Current row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.PictureModifiedRow">
            <summary>
            Gets or sets the Image used in the record selector to indicate the Modified row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.PictureAddnewRow">
            <summary>
            Gets or sets the Image used in the record selector to indicate the AddNew row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.PictureFilterBar">
            <summary>
            Gets or sets the Image used in the record selector to indicate the FilterBar row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.PictureStandardRow">
            <summary>
            Gets or sets the Image used in the record selector to indicate the Standard row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.PictureHeaderRow">
            <summary>
            Gets or sets the Image used in the record selector to indicate the Header row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.PictureFooterRow">
            <summary>
            Gets or sets the Image used in the record selector to indicate the Footer row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.PrintInfo">
            <summary>
            Gets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.PrintInfo"/> object.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.PreviewInfo">
            <summary>
            Gets the <see cref="T:C1.Win.C1TrueDBGrid.PrintPreviewWinSettings"/> object.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RecordSelectors">
            <summary>
            Gets or sets a value indicating the visibility of row headers for a grid or split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RecordSelectorWidth">
            <summary>
            Gets or sets the width of the row headers.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Row">
            <summary>
            Gets or sets the the current row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ScrollTips">
            <summary>
            Gets or sets a value that determines whether the grid displays a pop-up text window when the scrollbar thumb is dragged.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SelectedRows">
            <summary>
            Gets the collection of rows that are currently selected.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SelectedCols">
            <summary>
            Gets the collection of columns that are currently selected.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SelectionLength">
            <summary>
            Gets or sets the number of characters selected within the grid's editing window.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SelectionStart">
            <summary>
            Gets or sets the starting point of the text selection within the grid's editing window.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SelectedText">
            <summary>
            Gets or sets the string containing the currently selected text within the grid's editing window.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SelRange">
            <summary>
            Gets a value indicating whether a range of cells has been selected.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SplitIndex">
            <summary>
            Gets or sets the index of the current <see cref="T:C1.Win.C1TrueDBGrid.Split"/> within the <see cref="T:C1.Win.C1TrueDBGrid.SplitCollection"/>.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SpringMode">
            <summary>
            Gets or sets a value that determines how columns will resize when the grid is resized.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.TabAcrossSplits">
            <summary>
            Gets or sets a value indicating the behavior of the tab and arrow keys at split borders.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.TabAction">
            <summary>
            Gets or sets the behavior of the tab key.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.VisibleCols">
            <summary>
            Gets the number of visible columns in the current Split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.VisibleRows">
            <summary>
            Gets the number of visible rows in the current Split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.WrapCellPointer">
            <summary>
            Gets or sets a value indicating the behavior of Tab and arrow keys at row boundaries.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.VScrollBar">
            <summary>
            Gets the <see cref="T:C1.Win.C1TrueDBGrid.Util.VBar"/> object that controls the appearance of the vertical scrollbar.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.HScrollBar">
            <summary>
            Gets the <see cref="T:C1.Win.C1TrueDBGrid.Util.HBar"/> object that controls the appearance of the horizontal scrollbar.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.DataView">
            <summary>
            Gets or sets the layout by which the grid will display data.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.DirectionAfterEnter">
            <summary>
            Gets or sets a value that determines the relative position of the next cell when the user presses the Enter key.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GroupByCaption">
            <summary>
            Gets or sets the text displayed in the grouping area when no columns have been grouped.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GroupedColumns">
            <summary>
            Gets the collection of columns that are grouped.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GroupByAreaVisible">
            <summary>
            Gets or sets a value indicating the visibility of the Grouping area of the grid when the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.DataView"/> property is set to GroupBy.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GroupByRectangle">
            <summary>
            Gets the rectangle occupied by the grouping area.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.DeadAreaBackColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.LinesPerRow">
            <summary>
            Gets or sets the number of subrows of the grid when the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.DataView"/> property is set to MutlipleLinesFixed.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.MaintainRowCurrency">
            <summary>
            Gets or sets a value indicating the behavior of the grid and row currency when the grid's datasource is sorted.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RowDivider">
            <summary>
            Gets or sets the style of the border drawn between grid rows.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RowSubDividerColor">
            <summary>
            Gets or sets the color of the subrow divider in a multi-line grid.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ChildGrid">
            <summary>
            Gets or sets the C1TrueDBGrid control used as a child grid in a hierarchical presentation.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.CaptionStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style"/> object that controls the appearance of the caption area.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.EditorStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style"/> object that controls the appearance of the cell editor within a grid.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.EvenRowStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style"/> object that controls the appearance of an even-numbered row when using <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AlternatingRows"/>.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FilterBarStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style"/> object that controls the appearance of the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FilterBar"/>.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FooterStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style"/> object that controls the appearance of column footers.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GroupStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style"/> object that controls the appearance of grouping area.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.HeadingStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style"/> object that controls the appearance of the grids column headers.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.HighLightRowStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style"/> object that controls the current row/cell when the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.MarqueeStyle"/> is set to Highlight Row/Cell.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.InactiveStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style"/> object that controls the grids caption when it doesn't have focus.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OddRowStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style"/> object that controls the appearance of an odd-numbered row when using <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AlternatingRows"/>.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RecordSelectorStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style"/> object that controls the appearance of the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RecordSelectors"/>.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SelectedStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style"/> object that controls the appearance of selected rows and columns.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style">
            <summary>
            Gets or sets the root <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style"/> object.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Styles">
            <summary>
            Gets the collection of named <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Style"/> objects.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AlternatingRows">
            <summary>
            Gets or sets a value indicating whether the grid or split uses the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OddRowStyle"/> for odd-numbered rows and <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.EvenRowStyle"/> for even-numbered rows.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AllowRowSizing">
            <summary>
            Gets or sets how interactive row resizing is performed.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AllowHorizontalSplit">
            <summary>
            Gets or sets a value indicating whether a user is allowed to create horizontal splits.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AllowVerticalSplit">
            <summary>
            Gets or sets a value indicating whether a user is allowed to create vertical splits.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Splits">
            <summary>
            Gets the collection of <see cref="T:C1.Win.C1TrueDBGrid.Split"/> objects.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ViewColumnWidth">
            <summary>
            Gets or sets the width of a column when the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.DataView"/> is set to Inverted or Form.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ViewCaptionWidth">
            <summary>
            Gets or sets the width of the column caption when the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.DataView"/> is set to Inverted or Form.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AfterColUpdate">
            <summary>
            Occurs after a cell has been updated.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AfterDelete">
            <summary>
            Occurs after a row has been deleted.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AfterInsert">
            <summary>
            Occurs after a row has been added.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AfterUpdate">
            <summary>
            Occurs after a row has been updated.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.BeforeColUpdate">
            <summary>
            Occurs before a cell is updated to the datasource.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.BeforeDelete">
            <summary>
            Occurs before a row is deleted.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.BeforeInsert">
            <summary>
            Occurs before a new row is added to the datasource.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.BeforeUpdate">
            <summary>
            Occurs before a row is updated to the datasource.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ColResize">
            <summary>
            Occurs whenever a column is resized.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.HeadClick">
            <summary>
            Occrus whenever a column header is clicked.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FootClick">
            <summary>
            Occurs whenever a column footer is clicked.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OwnerDrawCell">
            <summary>
            Occurs before a cell is rendered and the <see cref="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.OwnerDraw"/> is true.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OwnerDrawCellPrint">
            <summary>
            Occurs before a cell is to be printed and the <see cref="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.OwnerDraw"/> is true.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OwnerDrawPageHeader">
            <summary>
            Occurs before the page header is to be printed.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OwnerDrawPageFooter">
            <summary>
            Occurs before the page footer is to be printed.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.BeforeRowColChange">
            <summary>
            Occurs prior to focus moving to another cell.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RowColChange">
            <summary>
            Occurs when the focus moves to a different cell.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RowResize">
            <summary>
            Occrus whenever the user resizes a row.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Scroll">
            <summary>
            Occurs whenever the user scrolls the grid.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SelChange">
            <summary>
            Occurs whenever the user selected a different range of rows or columns.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SplitChange">
            <summary>
            Occurs whenever a Split changes focus.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Change">
            <summary>
            Occurs whenever the user changes the value of a cell.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.UnboundColumnFetch">
            <summary>
            Occurs when the grid needs to access the value of an unbound column.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.UnboundColumnUpdated">
            <summary>
            Occurs when the value of an unbound column has been updated.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AfterColEdit">
            <summary>
            Occurs after editing is completed.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.BeforeColEdit">
            <summary>
            Occurs before a cell enters edit mode.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ColEdit">
            <summary>
            Occurs whenever a cell first enters edit mode.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FirstRowChange">
            <summary>
            Occurs whenever the first row changes.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.LeftColChange">
            <summary>
            Occurs whenever the left column changes.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FormatText">
            <summary>
            Occurs whenever a cell is about to be rendered and whose <see cref="P:C1.Win.C1TrueDBGrid.C1DataColumn.NumberFormat"/> property has been set to FormatTextEvent.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ButtonClick">
            <summary>
            Occurs whenever a button is clicked in a cell.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ComboSelect">
            <summary>
            Occurs whenever a selection has been made to the built-in combo or TrueDBDropdown.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ValueItemError">
            <summary>
            Occurs whenever a user attempts to enter invalid data into a column that is using valueitems.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FetchCellStyle">
            <summary>
            Occurs whenever a cell is to be rendered and the <see cref="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.FetchStyle"/> is true.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FetchGroupCellStyle">
            <summary>
            Occurs whenever a grouped cell that contains an aggregate is to be rendered and <see cref="P:C1.Win.C1TrueDBGrid.C1DisplayColumn.FetchStyle"/> is true.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FetchRowStyle">
            <summary>
            Occurs whenever the grid renders a row and the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FetchRowStyles"/> property has been set.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnAddNew">
            <summary>
            Occurs whenever an AddNew operation has been initiated.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ColMove">
            <summary>
            Occurs whenever the user has finished moving a column.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FetchCellTips">
            <summary>
            Occurs when the grid needs to display CellTips.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OnInit">
            <summary>
            Occurs after the grid has been initialized.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.DataSourceChanged">
            <summary>
            Occurs whenever the datasource changes.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.LayoutReady">
            <summary>
            
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Collapse">
            <summary>
            Occurs whenever a hierarchical row is collapsed.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Expand">
            <summary>
            Occurs whenever a hierarchical row is expanded.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GroupColMove">
            <summary>
            Occurs whenever a column is moved into or out of the grouping area.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GroupText">
            <summary>
            Occurs when the <see cref="P:C1.Win.C1TrueDBGrid.GroupInfo.HeaderText"/> property is set to custom.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GroupAggregate">
            <summary>
            Occurs when the <see cref="P:C1.Win.C1TrueDBGrid.C1DataColumn.Aggregate"/> is set to Custom for a grouped row.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GroupHeadClick">
            <summary>
            Occurs whenever a column in the grouping area is clicked.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GroupInterval">
            <summary>
            Occurs whenever a row is being grouped and a custom interval has been specified.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FetchScrollTips">
            <summary>
            Occurs whenever the grid has focus and the scrollbar thumb is moved using the mouse.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FilterChange">
            <summary>
            Occurs when the contents of a cell in the filterbar changes.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FilterButtonClick">
            <summary>
            Occurs when a button is clicked in the filterbar.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.BeforeOpen">
            <summary>
            Occurs when the user attempts to open a child grid.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.BeforeClose">
            <summary>
            Occurs when the user attempts to close a child grid.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Sort">
            <summary>
            Occurs when the user drags a column into the grouping area.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Filter">
            <summary>
            Occurs when the user types in the filterbar and the <see cref="P:C1.Win.C1TrueDBGrid.BaseGrid.Frame.AllowFilter"/> property is false.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AfterFilter">
            <summary>
            Occurs after the datasource has been filtered.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AfterSort">
            <summary>
            Occurs after a column has been sorted.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Error">
            <summary>
            Occurs whenever an exception is thrown during end user interaction.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Split">
            <summary>
            Represents a horizontal or vertical pane to display and edit data.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Split.Dispose(System.Boolean)">
            <summary>
            Called when the class is being disposed.
            </summary>
            <param name="disposing">
            True to cleanup.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Split.getFilterTextRect(System.Int32)">
            <summary>
            
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Split.getFilterRect(System.Int32)">
            <summary>
            
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Split.clipDataRect(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Split.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Split.shouldMerge(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            returns true if the data at the given row is the same as the passed in string
            </summary>
            <param name="str"></param>
            <param name="row">absolute row number</param>
            <param name="col"></param>
            <param name="delta"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Split.OnGetCellRange(System.Int32,System.Int32)">
            <summary>
            Returns the upper and lower bounds for a merged column.
            </summary>
            <param name="row">Starting row</param>
            <param name="col">Starting colum.</param>
            <returns>The CellRange object that defines the rows and columns for a merged cell.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Split.GetCellRange(System.Int32,System.Int32)">
            <summary>
            finds the upper and lower bounds for a merged column
            </summary>
            <param name="row">row number, relative </param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Split.shouldExit">
            <summary>
            short circuits exiting the editor on row change when actively filtering
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Split.repositionEditor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Split.filterColumnAt(System.Drawing.Point,System.Int32@)">
            <summary>
            
            </summary>
            <param name="p"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Split.checkMousePoint(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Split.AddCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,C1.Win.C1TrueDBGrid.Style)">
            <summary>
            Controls the <see cref="P:C1.Win.C1TrueDBGrid.Split.Style"/> used to change the appearance for cells meeting the specified condition.
            </summary>
            <param name="condition">
            Combination of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> enumerations.
            </param>
            <param name="style">
            <see cref="P:C1.Win.C1TrueDBGrid.Split.Style"/> object that specifies appearance attributes.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Split.AddRegexCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,C1.Win.C1TrueDBGrid.Style,System.String)">
            <summary>
            Controls the <see cref="P:C1.Win.C1TrueDBGrid.Split.Style"/> used to change the appearance of cells according to their contents.
            </summary>
            <param name="condition">
            Combination of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> enumerations.
            </param>
            <param name="style">
            <see cref="P:C1.Win.C1TrueDBGrid.Split.Style"/> object that specifies appearance attributes.
            </param>
            <param name="regex">
            A regular expression string.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Split.ClearCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag)">
            <summary>
            Removes a cell condition established with a previous call to the <see cref="M:C1.Win.C1TrueDBGrid.Split.AddCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,C1.Win.C1TrueDBGrid.Style)"/> method.
            </summary>
            <param name="condition">
            Combination of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> enumerations.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Split.ClearRegexCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag)">
            <summary>
            Removes a cell condition established with a previous call to the <see cref="M:C1.Win.C1TrueDBGrid.Split.AddCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,C1.Win.C1TrueDBGrid.Style)"/> method.
            </summary>
            <param name="condition">
            Combination of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> enumerations.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Split.ClearRegexCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,System.String)">
            <summary>
            Removes a cell condition established with a previous call to the <see cref="M:C1.Win.C1TrueDBGrid.Split.AddRegexCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,C1.Win.C1TrueDBGrid.Style,System.String)"/> method.
            </summary>
            <param name="condition">
            Combination of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> enumerations.
            </param>
            <param name="regex">
            A regular expression string.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Split.GetCellBounds(System.Int32,System.Int32)">
            <summary>
            Returns the Rectangle for the given Row and Column
            </summary>
            <param name="Row">Visible row number</param>
            <param name="Col">Visible column index</param>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.HBarHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.HBarStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.VBarHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.VBarStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.SubRows">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.AllowFocus">
            <summary>
            Gets or sets a value indicating whether the split can recive focus.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.AllowColMove">
            <summary>
            Gets or sets a value indicating the ability to move columns.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.AllowColSelect">
            <summary>
            Gets or sets a value indicating the ability to select columns.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.AllowRowSelect">
            <summary>
            Gets or sets a value indicating the ability to select rows.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.Name">
            <summary>
            Gets or sets the name of a split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.AllowRowSizing">
            <summary>
            Gets or sets how interactive row resizing is performed.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.AllowHorizontalSizing">
            <summary>
            Gets or sets a value indicating whether a user is allowed to resize horizontal splits.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.AllowVerticalSizing">
            <summary>
            Gets or sets a value indicating whether a user is allowed to resize vertical splits.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.AlternatingRowStyle">
            <summary>
            Gets or sets a value indicating whether the split uses the <see cref="P:C1.Win.C1TrueDBGrid.Split.OddRowStyle"/> for odd-numbered rows and <see cref="P:C1.Win.C1TrueDBGrid.Split.EvenRowStyle"/> for even-numbered rows.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.Caption">
            <summary>
            Gets or sets the caption.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.CaptionHeight">
            <summary>
            Gets or sets the height of the caption.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.ColumnHeaders">
            <summary>
            Gets or sets a value indicating the visibility of column headers.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.ColumnCaptionHeight">
            <summary>
            Gets or sets the height of the column captions.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.ColumnFooterHeight">
            <summary>
            Gets or sets the height of column footers.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.CurrentCellVisible">
            <summary>
            Gets or sets a value indicating the visibility of the current cell in a split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.ExtendRightColumn">
            <summary>
            Gets or sets a value that determines how the last column will extend to fill the dead area of the split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.FetchRowStyles">
            <summary>
            Gets or sets a value indicating whether the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FetchRowStyle"/> event will be raised.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.FilterActive">
            <summary>
            Gets or sets a value indicating whether the filter bar has focus.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.FilterBar">
            <summary>
            Gets or sets a value indicating the visibility of the FilterBar.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.FirstRow">
            <summary>
            Gets or sets the row index for the first visible row in a split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.GroupColumns">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.LeftCol">
            <summary>
            Gets or sets the left most visible column for a split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.MarqueeStyle">
            <summary>
            Gets or sets the MarqueeStyle for a Split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.Locked">
            <summary>
            Gets or sets a value indicating if the cells of a split can be edited.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.RecordSelectorWidth">
            <summary>
            Gets or sets the width of the row headers.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.DefRecSelWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.RecordSelectors">
            <summary>
            Gets or sets a value indicating the visibility of row headers for Split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.Rows">
            <summary>
            Gets the collection of Rows displayed in the Split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.VerticalScrollGroup">
            <summary>
            Gets or sets the group which synchronizes verticall scrolling between splits. 
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.MinWidth">
            <summary>
            Gets or sets the minimum width that a split can be interactively resized.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.MinHeight">
            <summary>
            Gets or sets the minimum height that a split can be interactively resized.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.HorizontalScrollGroup">
            <summary>
            Gets or sets the group which synchronizes horizontal scrolling between splits. 
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.HorizontalOffset">
            <summary>
            Gets or sets the position of the Horizontal scrollbar.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.VerticalOffset">
            <summary>
            Gets or sets the position of the Vertical scrollbar.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.SpringMode">
            <summary>
            Gets or sets a value that determines how columns will resize when the grid is resized.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.VScrollBar">
            <summary>
            Gets the <see cref="T:C1.Win.C1TrueDBGrid.Util.VBar"/> object that controls the appearance of the vertical scrollbar.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.HScrollBar">
            <summary>
            Gets the <see cref="T:C1.Win.C1TrueDBGrid.Util.HBar"/> object that controls the appearance of the horizontal scrollbar.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.SplitSize">
            <summary>
            Gets or sets the size of a split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.Height">
            <summary>
            Gets or sets the height of a split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.SplitSizeMode">
            <summary>
            Gets or sets a value indicating how the <see cref="P:C1.Win.C1TrueDBGrid.Split.SplitSize"/> property is used to determine the actual size of a split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.CaptionStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.Split.Style"/> object that controls the appearance of the caption area.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.EditorStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.Split.Style"/> object that controls the appearance of the cell editor within a grid.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.EvenRowStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.Split.Style"/> object that controls the appearance of an even-numbered row when using <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AlternatingRows"/>.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.FilterBarStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.Split.Style"/> object that controls the appearance of the <see cref="P:C1.Win.C1TrueDBGrid.Split.FilterBar"/>.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.FooterStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.Split.Style"/> object that controls the appearance of column footers.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.GroupStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.HeadingStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.Split.Style"/> object that controls the appearance of the grids column headers.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.HighLightRowStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.Split.Style"/> object that controls the current row/cell when the <see cref="P:C1.Win.C1TrueDBGrid.Split.MarqueeStyle"/> is set to Highlight Row/Cell.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.InactiveStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.Split.Style"/> object that controls the grids caption when it doesn't have focus.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.OddRowStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.Split.Style"/> object that controls the appearance of an odd-numbered row when using <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AlternatingRows"/>.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.RecordSelectorStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.Split.Style"/> object that controls the appearance of the <see cref="P:C1.Win.C1TrueDBGrid.Split.RecordSelectors"/>.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.SelectedStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.Split.Style"/> object that controls the appearance of selected rows and columns.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.Style">
            <summary>
            Gets or sets the root <see cref="P:C1.Win.C1TrueDBGrid.Split.Style"/> object for the Split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.DisplayColumns">
            <summary>
            Gets a collection of <see cref="T:C1.Win.C1TrueDBGrid.C1DisplayColumn"/> objects.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Split.internalCols">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.HierarchicalView.RemoveChildRow(C1.Win.C1TrueDBGrid.HierarchicalView.ChildRow)">
            <summary>
            Removes the child row and all its children
            </summary>
            <param name="cr"></param>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GridStyleCollection">
            <summary>
            Represents a collection of named <see cref="T:C1.Win.C1TrueDBGrid.Style"/>.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.GridStyleCollection.#ctor(C1.Win.C1TrueDBGrid.BaseGrid.Frame)">
            <summary>
            
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.GridStyleCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.GridStyleCollection.Add(C1.Win.C1TrueDBGrid.Style)">
            <summary>
            Adds a <see cref="T:C1.Win.C1TrueDBGrid.Style"/> to the end of the collection.
            </summary>
            <param name="style">The Style to add.</param>
            <returns>The index at which the <see cref="T:C1.Win.C1TrueDBGrid.Style"/> has been added.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.GridStyleCollection.Insert(System.Int32,C1.Win.C1TrueDBGrid.Style)">
            <summary>
            Inserts a <see cref="T:C1.Win.C1TrueDBGrid.Style"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which the Style should be inserted.</param>
            <param name="style">The Style to insert.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.GridStyleCollection.IndexOf(C1.Win.C1TrueDBGrid.Style)">
            <summary>
            Gets the index of the specified <see cref="T:C1.Win.C1TrueDBGrid.Style"/>.
            </summary>
            <param name="style"></param>
            <returns>The index of the Style.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.GridStyleCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:C1.Win.C1TrueDBGrid.Style"/> at the specified index.
            </summary>
            <param name="index">Teh zero-based index of the Style to remove.</param>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GridStyleCollection.Item(System.Int32)">
            <summary>
            Gets the specified Style from the collection given its index.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GridStyleCollection.Item(System.String)">
            <summary>
            Gets the specified Style from the collection given its name.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.C1DisplayColumnCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Win.C1TrueDBGrid.C1DisplayColumn"/> in a <see cref="T:C1.Win.C1TrueDBGrid.Split"/>.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DisplayColumnCollection.Insert(System.Int32,C1.Win.C1TrueDBGrid.C1DisplayColumn)">
            <summary>
            Inserts a <see cref="T:C1.Win.C1TrueDBGrid.C1DisplayColumn"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which the C1DisplayColumn should be inserted.</param>
            <param name="vc">The C1DataColumn to insert.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DisplayColumnCollection.IndexOf(C1.Win.C1TrueDBGrid.C1DisplayColumn)">
            <summary>
            Gets the index of the <see cref="T:C1.Win.C1TrueDBGrid.C1DisplayColumn"/>.
            </summary>
            <param name="vc"></param>
            <returns>The index of the C1DisplayColumn.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DisplayColumnCollection.IndexOf(C1.Win.C1TrueDBGrid.C1DataColumn)">
            <summary>
            Gets the index of the <see cref="T:C1.Win.C1TrueDBGrid.C1DisplayColumn"/> specified by the <see cref="T:C1.Win.C1TrueDBGrid.C1DataColumn"/>.
            </summary>
            <param name="dc"></param>
            <returns>The index of the C1DisplayColumn.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DisplayColumnCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DisplayColumnCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DisplayColumnCollection.OnClear">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DisplayColumnCollection.OnClearComplete">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumnCollection.Item(System.Int32)">
            <summary>
            Gets the specified <see cref="T:C1.Win.C1TrueDBGrid.C1DisplayColumn"/> from the collection at the specified index.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumnCollection.Item(C1.Win.C1TrueDBGrid.C1DataColumn)">
            <summary>
            Gets the specified <see cref="T:C1.Win.C1TrueDBGrid.C1DisplayColumn"/> from the collection wich contains the specified <see cref="T:C1.Win.C1TrueDBGrid.C1DataColumn"/>.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DisplayColumnCollection.Item(System.String)">
            <summary>
            Gets the specified <see cref="T:C1.Win.C1TrueDBGrid.C1DisplayColumn"/> from the collection with the specified name.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.C1DataColumnCollection">
            <summary>
            Contains a collection of <see cref="T:C1.Win.C1TrueDBGrid.C1DataColumn"/> objects.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumnCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumnCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumnCollection.Add(C1.Win.C1TrueDBGrid.C1DataColumn)">
            <summary>
            Adds a C1DataColumn to the end of the collection.
            </summary>
            <param name="dc">The C1DataColumn to add.</param>
            <returns>The index at which the C1DataColumn has been added.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumnCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the C1DataColumn at the specified index.
            </summary>
            <param name="index">The zero-based index of the row to remove.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumnCollection.Insert(System.Int32,C1.Win.C1TrueDBGrid.C1DataColumn)">
            <summary>
            Inserts a <see cref="T:C1.Win.C1TrueDBGrid.C1DataColumn"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which the C1DataColumn should be inserted.</param>
            <param name="dc">The C1DataColumn to insert.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DataColumnCollection.IndexOf(C1.Win.C1TrueDBGrid.C1DataColumn)">
            <summary>
            Gets the index of the specified <see cref="T:C1.Win.C1TrueDBGrid.C1DataColumn"/>.
            </summary>
            <param name="dc"></param>
            <returns>The index of the the C1DataColumn.</returns>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumnCollection.Item(System.Int32)">
            <summary>
            Gets the specified C1DataColumn from the collection at the specified index.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DataColumnCollection.Item(System.String)">
            <summary>
            Gets the specified C1DataColumn from the collection with the specified name.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.SelectedColumnCollection">
            <summary>
            Contains a collection of <see cref="T:C1.Win.C1TrueDBGrid.C1DataColumn"/> objects that represent columns that are selected.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.SelectedColumnCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.SelectedColumnCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the C1DataColumn at the specified index.
            </summary>
            <param name="index">The zero-based index of the row to remove.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.SelectedColumnCollection.Add(C1.Win.C1TrueDBGrid.C1DataColumn)">
            <summary>
            Adds a C1DataColumn to the end of the collection.
            </summary>
            <param name="dc">The C1DataColumn to add.</param>
            <returns>The index at which the C1DataColumn has been added.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.SelectedColumnCollection.Insert(System.Int32,C1.Win.C1TrueDBGrid.C1DataColumn)">
            <summary>
            Inserts a <see cref="T:C1.Win.C1TrueDBGrid.C1DataColumn"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which the C1DataColumn should be inserted.</param>
            <param name="dc">The C1DataColumn to insert.</param>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GroupedColumnCollection">
            <summary>
            Contains a collection of <see cref="T:C1.Win.C1TrueDBGrid.C1DataColumn"/> objects that represent columns that are grouped.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.GroupedColumnCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.GroupedColumnCollection.Exchange(System.Int32,System.Int32)">
            <summary>
            Exchanges the C1DataColumn objects at the specified index.
            </summary>
            <param name="src">The zero-based index of the first C1DataColumn.</param>
            <param name="dst">The zero-based index of the second C1DataColumn.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.GroupedColumnCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the C1DataColumn at the specified index.
            </summary>
            <param name="index">The zero-based index of the row to remove.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.GroupedColumnCollection.Add(C1.Win.C1TrueDBGrid.C1DataColumn)">
            <summary>
            Adds a C1DataColumn to the end of the collection.
            </summary>
            <param name="dc">The C1DataColumn to add.</param>
            <returns>The index at which the C1DataColumn has been added.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.GroupedColumnCollection.Insert(System.Int32,C1.Win.C1TrueDBGrid.C1DataColumn)">
            <summary>
            Inserts a <see cref="T:C1.Win.C1TrueDBGrid.C1DataColumn"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which the C1DataColumn should be inserted.</param>
            <param name="dc">The C1DataColumn to insert.</param>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.SelectedRowCollection">
            <summary>
            Represents a collection of Selected rows.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.SelectedRowCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.SelectedRowCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the row at the specified index.
            </summary>
            <param name="index">The zero-based index of the row to remove.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.SelectedRowCollection.Add(System.Int32)">
            <summary>
            Adds a row to the end of the collection.
            </summary>
            <param name="row">Row number to add.</param>
            <returns>The index at which the row has been added.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.SelectedRowCollection.Insert(System.Int32,System.Int32)">
            <summary>
            Inserts a row at the specified index.
            </summary>
            <param name="index">The zero-based index at which row should be inserted.</param>
            <param name="row">The row to insert.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.SelectedRowCollection.IndexOf(System.Int32)">
            <summary>
            Gets the index of the specified row.
            </summary>
            <param name="row"></param>
            <returns>The index of the row.</returns>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.SelectedRowCollection.Item(System.Int32)">
            <summary>
            Gets or sets the specified Row index from the collection.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.SplitCollectionEditor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.SplitCollectionEditor.#ctor(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.SplitCollectionEditor.CreateCollectionForm">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.SplitCollection">
            <summary>
            Represents a collection of Split objects.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.IMemberTypeEncoder">
            <summary>
            This interface is used to allow objects and collection to serialize
            types of their members in a custom way.
            If a collection implements this interface, TypeToString is invoked during
            serialization of collection items, and for all items for which it returns a
            non-null string, that string is used as the element name of the item.
            If a class implements this interface, AND a member of that class has
            attribute TypeNameSerialization.Custom, AND does not have attribute
            XmlAttribute (i.e. is serialized as an element), TypeToString is invoked
            on the owner when that member is serialized, and if that returns a non-null
            string, that string is used as the value of TypeName attribute.
            When deserializing a collection which implements this interface,
            StringToType is invoked for each new item in the collection, and if that
            returns a non-null type, that type is used to create the item. Otherwise,
            TypeNameSerialization attribute is used.
            When deserializing a class which implements this interface, StringToType
            is invoked on that class for members with TypeNameSerialization.Custom
            attribute set.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.IMemberTypeEncoder.TypeToString(System.Object)">
            <summary>
            Returns a string representing the type of the object
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.IMemberTypeEncoder.StringToType(System.String)">
            <summary>
            Returns the type restored from the serialized string
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.SplitCollection.TypeToString(System.Object)">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.SplitCollection.StringToType(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.SplitCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.SplitCollection.IndexOf(C1.Win.C1TrueDBGrid.BaseGrid.View)">
            <summary>
            Gets the index if the specified Split.
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.SplitCollection.Item(System.Int32)">
            <summary>
            Gets the specified Split object from the collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.SplitCollection.Item(System.String)">
            <summary>
            Gets the specified Split object from the collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.SplitCollection.Item(System.Int32,System.Int32)">
            <summary>
            Gets the specified Split object from the collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.SplitCollection.RowCount">
            <summary>
            Gets the number of vertical splits in the collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.SplitCollection.ColCount">
            <summary>
            Gets the number of horizontal splits in the collection.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.C1PropImagesCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1PropImagesCollection.Add(System.Drawing.Image)">
            <summary>
            
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.C1DropDataColumn">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DropDataColumn.#ctor(System.ComponentModel.PropertyDescriptor,C1.Win.C1TrueDBGrid.BaseGrid.Frame)">
            <summary>
            
            </summary>
            <param name="p"></param>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1DropDataColumn.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.C1DropDisplayColumn">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1DropDisplayColumn.DCIdx">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.C1TrueDBDropdown">
            <summary>
            C1TrueDBDropdown control.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.#ctor">
            <summary>
            Creates a new instance of the object.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Dispose(System.Boolean)">
            <summary>
            Called when the class is being disposed.
            </summary>
            <param name="disposing">
            True to cleanup.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.initializeStyles">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.RowDividerChanged(System.Object,System.EventArgs)">
            <summary>
            notifications
            </summary>
            
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.AddCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,C1.Win.C1TrueDBGrid.Style)">
            <summary>
            Controls the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Style"/> used to change the appearance for cells meeting the specified condition.
            </summary>
            <param name="condition">
            Combination of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> enumerations.
            </param>
            <param name="style">
            <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Style"/> object that specifies appearance attributes.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.AddRegexCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,C1.Win.C1TrueDBGrid.Style,System.String)">
            <summary>
            Controls the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Style"/> used to change the appearance of cells according to their contents.
            </summary>
            <param name="condition">
            Combination of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> enumerations.
            </param>
            <param name="style">
            <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Style"/> object that specifies appearance attributes.
            </param>
            <param name="regex">
            A regular expression string.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.ClearCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag)">
            <summary>
            Restores the default layout.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.ClearRegexCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag)">
            <summary>
            Removes a cell condition established with a previous call to the <see cref="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.AddRegexCellStyle(C1.Win.C1TrueDBGrid.CellStyleFlag,C1.Win.C1TrueDBGrid.Style,System.String)"/> method.
            </summary>
            <param name="condition">
            Combination of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> enumerations.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.ClearFields">
            <summary>
            Restores the default layout.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.ColContaining(System.Int32)">
            <summary>
            Returns the column index for the column containing the specified X coordinate.
            </summary>
            <param name="x">
            The horizontal coordinate (X value) in pixels.
            </param>
            <returns>
            The index of the column in the <see cref="P:C1.Win.C1TrueDBGrid.Split.DisplayColumns"/> collection beneath the specified X coordinate. 
            </returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.RowContaining(System.Int32)">
            <summary>
            Returns the zero-based index of the display row containing the Y specified coordinate.
            </summary>
            <param name="y">
            The vertical coordinate (Y value) in pixels.
            </param>
            <returns>
            The display row index beneath the specified Y coordinate.
            </returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.HoldFields">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Rebind(System.Boolean)">
            <summary>
            Reinitializes grid with data from its data source.
            </summary>
            <param name="holdFields">
            True to preserves current column layout.  False retrieves the schema from the datasource.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Rebind">
             <summary>
            
             </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.ScrollCtl(System.Int32,System.Int32)">
            <summary>
            Scrolls the data area by the specified number of rows and columns
            </summary>
            <param name="Cols"></param>
            <param name="Rows"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnColMove(C1.Win.C1TrueDBGrid.ColMoveEventArgs)">
            <summary>
            Occurs when the user has moved a column.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnColResize(C1.Win.C1TrueDBGrid.ColResizeEventArgs)">
            <summary>
            Occurs when the user has resized a column.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnDataSourceChanged(System.EventArgs)">
            <summary>
            Occurs when the grids DataSource has changed.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnDropDownOpen(System.EventArgs)">
            <summary>
            Occurs when the dropdown closes.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnDropDownClose(System.EventArgs)">
            <summary>
            Occurs when the dropdown closes.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnFetchRowStyle(C1.Win.C1TrueDBGrid.FetchRowStyleEventArgs)">
            <summary>
            Occurs whenever the grid is about to display a row of data and the FetchRowStyles property is True.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnFirstRowChange(C1.Win.C1TrueDBGrid.SplitEventArgs)">
            <summary>
            Occurs when the first displayed row of a control or split is changed.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnFootClick(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Occurs when the user clicks on the column footer.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnFormatText(C1.Win.C1TrueDBGrid.FormatTextEventArgs)">
            <summary>
            Occurs when the grid is about to display cell data in a column whose NumberFormat property is set to the string FormatText Event.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnHeadClick(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Occurs when the user clicks on the column header.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnLeftColChange(C1.Win.C1TrueDBGrid.SplitEventArgs)">
            <summary>
            Occurs when the first visible column of a grid or split is changed.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnRowChange(System.EventArgs)">
            <summary>
            Occurs when the row focus changes.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnRowResize(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Occurs when the user has finished resizing a grid row.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.On_Scroll(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Occurs when the user scrolls the grid.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnSelChange(C1.Win.C1TrueDBGrid.CancelEventArgs)">
            <summary>
            Occurs when the user selects a different range of rows or columns.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnUnboundColumnFetch(C1.Win.C1TrueDBGrid.UnboundColumnFetchEventArgs)">
            <summary>
            Occurs when the grid needs to display the value of a cell in an unbound column.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnValueItemError(C1.Win.C1TrueDBGrid.ColEventArgs)">
            <summary>
            Occurs when the user attempts to enter invalid data into a column that is using value lists.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnFetchScrollTips(C1.Win.C1TrueDBGrid.FetchScrollTipsEventArgs)">
            <summary>
            Occurs whenever the grid has focus and the scrollbar thumb is moved using the mouse.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.GetCurrentSelIndex">
            <summary>
            Gets the current selected index.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.WndProc(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.AllowColMove">
            <summary>
            Exposed object model
            </summary>
            
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.AllowColSelect">
            <summary>
            Gets or sets a value indicating the ability to select columns.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.AllowRowSizing">
            <summary>
            Gets or sets how interactive row resizing is performed.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.AlternatingRows">
            <summary>
            Gets or sets a value indicating whether the dropdown uses the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OddRowStyle"/> for odd-numbered rows and <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.EvenRowStyle"/> for even-numbered rows.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Bookmark">
            <summary>
            Gets or sets the current row position of the underlying CurrencyManager.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Col">
            <summary>
            Gets or sets the column position.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.ColumnFooters">
            <summary>
            Gets or sets a value indicating the visibility of column footers.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.ColumnCaptionHeight">
            <summary>
            Gets or sets the height of column captions.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.ColumnFooterHeight">
            <summary>
            Gets or sets the height of column footers.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.ColumnHeaders">
            <summary>
            Gets or sets a value indicating the visibility of column headers.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Columns">
            <summary>
            Gets the collection of C1DataColumn objects.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.DisplayColumns">
            <summary>
            Gets the collection of C1DisplayColumn objects.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.CurrentCellVisible">
            <summary>
            Gets or sets a value indicating the visibility of the current cell.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.DataField">
            <summary>
            Gets or sets the name of the column used to update the associated grid column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.ValueMember">
            <summary>
            Gets or sets the property used to update the associated grid column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.DeadAreaBackColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.DefColWidth">
            <summary>
            Gets or sets the default width for all grid columns.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.DropdownWidth">
            <summary>
            Gets or sets the width of the dropdown.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.EmptyRows">
            <summary>
            Gets or sets a value that determines how the grid displays rows below the last data row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.EvenRowStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Style"/> object that controls the appearance of an even-numbered row when using <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.AlternatingRows"/>.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.ExtendRightColumn">
            <summary>
            Gets or sets a value that determines how the last column will extend to fill the dead area of the dropdown.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.FetchRowStyles">
            <summary>
            Gets or sets a value indicating whether the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.FetchRowStyle"/> event will be raised.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.FirstRow">
            <summary>
            Gets or sets the row index for the first visible row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.FooterStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Style"/> object that controls the appearance of column footers.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.HeadingStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Style"/> object that controls the appearance of the grids column headers.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.HighLightRowStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Style"/> object that controls the appearance of a highlighted row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.IntegralHeight">
            <summary>
            Gets or sets a value indicating whether the control should resize to avoid showing partial items.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.LayoutFileName">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.LayoutName">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.LayoutURL">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.LeftCol">
            <summary>
            Gets or sets the zero-based index of the leftmost column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.ListField">
            <summary>
            Gets or sets the name of the column used for incremental search.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.DisplayMember">
            <summary>
            Gets or sets the property used used for incremental search.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.OddRowStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Style"/> object that controls the appearance of an odd-numbered row when using <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.AlternatingRows"/>.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Row">
            <summary>
            Gets or sets the the current row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.RowDivider">
            <summary>
            Gets or sets the style of the border drawn between rows.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.RowSubDividerColor">
            <summary>
            Gets or sets the color of the subrow divider in a multi-line dropdown.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.RowTracking">
            <summary>
            Gets or sets a value that determines if rows are highlighted under the mouse.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.VScrollBar">
            <summary>
            Gets the <see cref="T:C1.Win.C1TrueDBGrid.Util.VBar"/> object that controls the appearance of the vertical scrollbar.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.HScrollBar">
            <summary>
            Gets the <see cref="T:C1.Win.C1TrueDBGrid.Util.HBar"/> object that controls the appearance of the horizontal scrollbar.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.ScrollTips">
            <summary>
            Gets or sets a value that determines whether the grid displays a pop-up text window when the scrollbar thumb is dragged.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Style">
            <summary>
            Gets or sets the root <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Style"/> object.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Styles">
            <summary>
            Gets the collection of named <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Style"/> objects.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.ValueTranslate">
            <summary>
            Gets or sets a value that determines how the grid display values in a column.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.VisibleCols">
            <summary>
            Gets the number of visible columns in the dropdown.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.VisibleRows">
            <summary>
            Gets the number of visible rows in the dropdown.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.ColMove">
            <summary>
            Occurs when the user has moved a column.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.ColResize">
            <summary>
            Occurs when the user has resized a column.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.DataSourceChanged">
            <summary>
            Occurs when the grids DataSource has changed.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.DropDownOpen">
            <summary>
            Occurs when the dropdown closes.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.DropDownClose">
            <summary>
            Occurs when the dropdown closes.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.FetchRowStyle">
            <summary>
            Occurs whenever the grid is about to display a row of data and the FetchRowStyles property is True.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.FirstRowChange">
            <summary>
            Occurs when the first displayed row of a control or split is changed.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.FootClick">
            <summary>
            Occurs when the user clicks on the column footer.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.FormatText">
            <summary>
            Occurs when the grid is about to display cell data in a column whose NumberFormat property is set to the string FormatText Event.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.HeadClick">
            <summary>
            Occurs when the user clicks on the column header.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.LeftColChange">
            <summary>
            Occurs when the first visible column of a grid or split is changed.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.RowChange">
            <summary>
            Occurs when the row focus changes.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.RowResize">
            <summary>
            Occurs when the user has finished resizing a grid row.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Scroll">
            <summary>
            Occurs when the user scrolls the grid.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.SelChange">
            <summary>
            Occurs when the user selects a different range of rows or columns.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.UnboundColumnFetch">
            <summary>
            Occurs when the grid needs to display the value of a cell in an unbound column.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.ValueItemError">
            <summary>
            Occurs when the user attempts to enter invalid data into a column that is using value lists.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.FetchScrollTips">
            <summary>
            Occurs whenever the grid has focus and the scrollbar thumb is moved using the mouse.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.CaptionStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Style"/> object that controls the appearance of the caption area.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.RecordSelectorStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBDropdown.Style"/> object that controls the appearance of the RecordSelectors.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.DropDownForm">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.DropDownForm.#ctor(C1.Win.C1TrueDBGrid.BaseGrid.Frame)">
            <summary>
            
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.DropDownForm.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.DropDownForm.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.DropDownForm.OnActivated(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.DropDownForm.OnDeactivate(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.DropDownForm.CloseDropDown">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.DropDownForm.CloseDropDown(System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.DropDownForm.CreateHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.DropDownForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.DropDownForm.CreateParams">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.DropdownView">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.DropdownView.beginHorizontalResizing(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="p"></param>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.DropdownView.DropDown">
            <summary>
            splits properties
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.SortDirEnum">
            <summary>
            Specifies the glyph used to denote a sort direction in the column header.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.SortDirEnum.None">
            <summary>
            Column is not sorted.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.SortDirEnum.Ascending">
            <summary>
            Column is sorted in ascending order.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.SortDirEnum.Descending">
            <summary>
            Column is sorted in descending order.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.MultiSelectEnum">
            <summary>
            Specifies the UI behavior for selecting rows and columns.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.MultiSelectEnum.None">
            <summary>
            Multiple selection is disabled but single selection is permitted. When the user clicks a record selector, the current selection is cleared, and the clicked row is then selected and added to either the SelectedRows or SelectedCols collections. The Ctrl and Shift keys are ignored, and the user can only select one row at a time.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.MultiSelectEnum.Simple">
            <summary>
            Multiple selection is enabled using the mouse. When the user clicks a record selector, the selection is cleared and the clicked row is selected and added to either the SelectedRows or Selected Cols collections. However, if the user holds down the Ctrl key while clicking, the clicked row is added to the current selection. The user can also select a range of rows by selecting the first row in the range, then selecting the last row in the range while holding down the Shift key.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.MultiSelectEnum.Extended">
            <summary>
            Multiple selection is enabled using the mouse. The user can also select records with the following key combinations: Shift + Up Arrow, Shift + Down Arrow, Shift + PgUp, and Shift + PgDn. NOTE:  The user will not be able to select a single cell, instead the entire corresponding row will be selected.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.FlatModeEnum">
            <summary>
            Specifies how 3D elements are rendered.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.FlatModeEnum.Standard">
            <summary>
            The grid’s column headers and recordselectors are rendered with an inset three-dimensional look
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.FlatModeEnum.Flat">
            <summary>
            Three-dimensional elements appear flat
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.FlatModeEnum.Popup">
            <summary>
            Three-dimensional elements are flat, but when the user drags the cursor over a column heading or recordselector, they become three-dimensional and appear to pop up.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.FlatModeEnum.System">
            <summary>
            Three-dimensional elements uses XP Themes if available.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.SizeModeEnum">
            <summary>
            Specifies the sizing mode for splits.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.SizeModeEnum.Scalable">
            <summary>
            The <see cref="P:C1.Win.C1TrueDBGrid.Split.SplitSize"/> indicates the relative size of the split with respect to other scalable splits. 
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.SizeModeEnum.Exact">
            <summary>
            The <see cref="P:C1.Win.C1TrueDBGrid.Split.SplitSize"/> indicates the size of the split in pixels.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.SizeModeEnum.NumberOfColumns">
            <summary>
            The <see cref="P:C1.Win.C1TrueDBGrid.Split.SplitSize"/> indicates the number of columns displayed in the split.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.AlignVertEnum">
            <summary>
            Specifies the vertical alignment of text or images in a cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AlignVertEnum.Top">
            <summary>
            Text is rendered at the top of the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AlignVertEnum.Center">
            <summary>
            Text is rendered at the center of the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AlignVertEnum.Bottom">
            <summary>
            Text is rendered at the bottom of the cell.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.AlignHorzEnum">
            <summary>
            Specifies the horizontal alignment of text or images in a cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AlignHorzEnum.General">
            <summary>
            Text is aligned Near and numeric values Far
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AlignHorzEnum.Near">
            <summary>
            Text is aligned to the left.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AlignHorzEnum.Center">
            <summary>
            Text is aligned centered.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AlignHorzEnum.Far">
            <summary>
            Text is aligned to the right.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AlignHorzEnum.Justify">
            <summary>
            Text is aligned with respect to the cells boundries.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.ScrollBarStyleEnum">
            <summary>
            Specifies the visibility of ScrollBars.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.ScrollBarStyleEnum.None">
            <summary>
            ScrollBars are never displayed.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.ScrollBarStyleEnum.Always">
            <summary>
            ScrollBars are always displayed.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.ScrollBarStyleEnum.Automatic">
            <summary>
            ScrollBars are displayed only if the object's contents extend beyond its borders.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.LineStyleEnum">
            <summary>
            Specifies the line style for row and column dividers.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.LineStyleEnum.None">
            <summary>
            No line.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.LineStyleEnum.Single">
            <summary>
            Single line.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.LineStyleEnum.Double">
            <summary>
            Double line.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.LineStyleEnum.Raised">
            <summary>
            Line with 3D raised appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.LineStyleEnum.Inset">
            <summary>
            Line with 3D inset appearance.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.DataViewEnum">
            <summary>
            Specifies how the grid displays its data.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.DataViewEnum.Normal">
            <summary>
            The grid will only display flat files and will not support a hierarchical view. If the data source is a hierarchical dataset, the grid will only display data from the master table.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.DataViewEnum.Inverted">
            <summary>
            Rows will be represented horizontally and columns vertically.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.DataViewEnum.Form">
            <summary>
            The data will be displayed in a convenient data entry form.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.DataViewEnum.GroupBy">
            <summary>
            A grouping area is created at the top of the grid; any columns that are placed into this area become part of the GroupedColumn collection. When in group mode, grid columns can be moved into or out of the grouping area with the Add and RemoveAt methods, respectively. Users can also perform this action by selecting and dragging a column into or out of the grouping. Users can customize the display of the grouped row with styles and automatically compute aggregates for columns that are grouped. The expanded/collapsed state of the grouping can also be specified.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.DataViewEnum.MultipleLines">
            <summary>
            The grid will display all the fields in the current grid area with multiple lines.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.DataViewEnum.Hierarchical">
            <summary>
            The grid will display DataSets in a hierarchical format. At run time, users can expand and collapse hierarchical recordset Bands using a treeview-like interface.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.DataViewEnum.MultipleLinesFixed">
            <summary>
            The grid will display all the fields in the current grid area with multiple lines. The number of subrows does not change once set.  The number of subrows can be set using the LinesPerRow property.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.AddNewModeEnum">
            <summary>
            Provides a description of the current addnew state with respect to the current cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AddNewModeEnum.NoAddNew">
            <summary>
            The current cell is not on the addnew row.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AddNewModeEnum.AddNewCurrent">
            <summary>
            The current cell is on the addnew row.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AddNewModeEnum.AddNewPending">
            <summary>
            There is an Add New operation pending.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.CellTipEnum">
            <summary>
            Specifies the behavior of the pop-up window when the cursor is idle over the grid.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.CellTipEnum.NoCellTips">
            <summary>
            No cell tips will be displayed.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.CellTipEnum.Anchored">
            <summary>
            Cell tips will be displayed in the bounding rectable of the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.CellTipEnum.Floating">
            <summary>
            Cell tips will be displayed under the mouse cursor.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.ExposeCellModeEnum">
            <summary>
            Specifies how the grid exposes the rightmost column when it gets focus.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.ExposeCellModeEnum.ScrollOnSelect">
            <summary>
            The grid will scroll to the left to display the rightmost column in its entirety.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.ExposeCellModeEnum.ScrollOnEdit">
            <summary>
            The grid will not move when the rightmost column is clicked initially. However, if the user attempts to edit the cell, then the grid will scroll to the left to display the rightmost column in its entirety.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.ExposeCellModeEnum.ScrollNever">
            <summary>
            The grid will always leave the rightmost column clipped.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.ForeGroundPicturePositionEnum">
            <summary>
            Specifies the location of the foreground image in a cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.ForeGroundPicturePositionEnum.Near">
            <summary>
            Image is rendered in the near side of the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.ForeGroundPicturePositionEnum.Far">
            <summary>
            Image is rendered in the far side of the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.ForeGroundPicturePositionEnum.LeftOfText">
            <summary>
            Image is rendered to the left of any text in the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.ForeGroundPicturePositionEnum.RightOfText">
            <summary>
            Image is rendered to the right of any text in the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.ForeGroundPicturePositionEnum.TopOfText">
            <summary>
            Image is rendered on top of any text in the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.ForeGroundPicturePositionEnum.BottomOfText">
            <summary>
            Image is rendered below any text in the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.ForeGroundPicturePositionEnum.PictureOnly">
            <summary>
            Text is not displayed.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.ForeGroundPicturePositionEnum.TextOnly">
            <summary>
            Image is not displayed.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.BackgroundPictureDrawModeEnum">
            <summary>
            Specifies how the background image is rendered.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.BackgroundPictureDrawModeEnum.Center">
            <summary>
            The image is rendered in the center of the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.BackgroundPictureDrawModeEnum.Tile">
            <summary>
            The image is tiled in the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.BackgroundPictureDrawModeEnum.Stretch">
            <summary>
            The image is stretched to fit within the cell.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.RowSizingEnum">
            <summary>
            Specifies how rows can be resized.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.RowSizingEnum.None">
            <summary>
            Row can not be resized.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.RowSizingEnum.AllRows">
            <summary>
            All rows will be sized to the same height or width.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.RowSizingEnum.IndividualRows">
            <summary>
            Rows can be sized indepentently.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.RowSelectorEnum">
            <summary>
            Specifies which rows are to be previewed/printed.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.RowSelectorEnum.AllRows">
            <summary>
            All rows are to be previewed/printed.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.RowSelectorEnum.SelectedRows">
            <summary>
            Only selected rows will be previewed/printed.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.RowSelectorEnum.CurrentRow">
            <summary>
            Only the current row will be previewed/printed.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PointAtEnum">
            <summary>
            Specifies the type of ui-element for a coordinate.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PointAtEnum.NotInGrid">
            <summary>
            Coordinates are not in the grid.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PointAtEnum.AtCaption">
            <summary>
            Coordinates are in the caption area
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PointAtEnum.AtSplitHeader">
            <summary>
            Coordinates are in the split's header
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PointAtEnum.AtSplitSizeBox">
            <summary>
            Coordinates are in the split's resizing box
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PointAtEnum.AtRowSelect">
            <summary>
            Coordinates are in the row selector.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PointAtEnum.AtRowSize">
            <summary>
            Coordinates are in the row resizing box.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PointAtEnum.AtColumnHeader">
            <summary>
            Coordinates are in the column headers.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PointAtEnum.AtColumnFooter">
            <summary>
            Coordinates are in the column footers.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PointAtEnum.AtColumnSize">
            <summary>
            Coordinates are in the column resizing box.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PointAtEnum.AtDataArea">
            <summary>
            Coordinates are in the data area.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PointAtEnum.AtGroupArea">
            <summary>
            Coordinates are in the grouping area.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PointAtEnum.AtGroupHeader">
            <summary>
            Coordinates are in the group header.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PointAtEnum.AtEmptyRow">
            <summary>
            Coordinates are in the empty row area.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PointAtEnum.AtAddNewRow">
            <summary>
            Coordinates are in the addnew row.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PointAtEnum.AtEmptyColumn">
            <summary>
            Coordinates are in the empty column area.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PointAtEnum.AtFilterBar">
            <summary>
            Coordinates are in the filter bar.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PresentationEnum">
            <summary>
            Specifies how ValueItems are rendered.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PresentationEnum.Normal">
            <summary>
            Values are displayed as text or graphics.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PresentationEnum.RadioButton">
            <summary>
            Values are displayed as a group of Radio Buttons.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PresentationEnum.ComboBox">
            <summary>
            Values are displayed as a dropdown combobox.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PresentationEnum.SortedComboBox">
            <summary>
            Values are displayed as a dropdown combobox in sorted order.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PresentationEnum.CheckBox">
            <summary>
            Values are displayed as a checkbox.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.TabActionEnum">
            <summary>
            Specifies how focus is handled when the Tab key is entered.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.TabActionEnum.ControlNavigation">
            <summary>
            The tab key moves to the next or previous control on the form.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.TabActionEnum.ColumnNavigation">
            <summary>
            The tab key moves the current cell to the next or previous column. However, if this action would cause the current row to change, then the next or previous control on the form receives focus.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.TabActionEnum.GridNavigation">
            <summary>
            The tab key moves the current cell to the next or previous column. The behavior of the tab key at row boundaries is determined by the <see cref="P:C1.Win.C1TrueDBGrid.C1TrueDBGrid.WrapCellPointer"/> property. When this setting is used, the tab key never results in movement to another control.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.BorderTypeEnum">
            <summary>
            Specifies the borders for a <see cref="T:C1.Win.C1TrueDBGrid.Style"/>.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.BorderTypeEnum.None">
            <summary>
            No borders.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.BorderTypeEnum.Flat">
            <summary>
            Borders have a Flat appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.BorderTypeEnum.Raised">
            <summary>
            Borders have a 3D raised appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.BorderTypeEnum.Inset">
            <summary>
            Borders have a 3D inset appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.BorderTypeEnum.Groove">
            <summary>
            A line around the inside of the border.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.BorderTypeEnum.Fillet">
            <summary>
            A fillet type border.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.BorderTypeEnum.RaisedBevel">
            <summary>
            Borders have a 3D raised with a bevel.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.BorderTypeEnum.InsetBevel">
            <summary>
            Borders have a 3D inset with a bevel.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.DirectionAfterEnterEnum">
            <summary>
            Specifies which cell gets focus when the enter key is pressed.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.DirectionAfterEnterEnum.MoveNone">
            <summary>
            Cell currency doesn't change.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.DirectionAfterEnterEnum.MoveRight">
            <summary>
            The next cell will be the cell to the right of the current cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.DirectionAfterEnterEnum.MoveDown">
            <summary>
            The next cell will be the cell below the current cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.DirectionAfterEnterEnum.MoveLeft">
            <summary>
            The next cell will be the cell to the left of the current cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.DirectionAfterEnterEnum.MoveUp">
            <summary>
            The next cell will be the cell above the current cell.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.CellStyleFlag">
            <summary>
            Describes the disposition of a cell.
            <para>This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.</para> 
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.CellStyleFlag.NormalCell">
            <summary>
            The cell satisfies none of the conditions. For grouped rows, this is the only applicable cell style.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.CellStyleFlag.CurrentCell">
            <summary>
            The cell is the that currently has focus. At any given time, only one cell can have this status. When the MarqueeStyle property is set to Floating Editor, this condition is ignored.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.CellStyleFlag.MarqueeRow">
            <summary>
            The cell is part of a highlighted row marquee. When the MarqueeStyle property indicates that the entire current row is to be highlighted, all visible cells in the current row have this additional condition set.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.CellStyleFlag.UpdatedCell">
            <summary>
            The cell contents have been modified by the user but not yet written to the datasource. This condition is also set when cell contents have been modified in code with the Text or Value properties.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.CellStyleFlag.SelectedRow">
            <summary>
            The cell is part of a row selected by the user or in code. The SelectedRowCollection contains the index for each selected row.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.CellStyleFlag.AllCells">
            <summary>
            All cells.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.MarqueeEnum">
            <summary>
            Specifies how the current cell is highlighted.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.MarqueeEnum.DottedCellBorder">
            <summary>
            The current cell within the current row will be highlighted by drawing a dotted border around the cell. In Microsoft Windows terminology, this is usually called a focus rectangle.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.MarqueeEnum.SolidCellBorder">
            <summary>
            The current cell within the current row will be highlighted by drawing a solid box around the current cell. This is more visible than the dotted cell border, especially when 3D divider properties are used for the grid.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.MarqueeEnum.HighlightCell">
            <summary>
            The entire current cell will be drawn using the attributes of the HighlightRowStyle property. This provides a very distinctive block-style highlight for the current cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.MarqueeEnum.HighlightRow">
            <summary>
            The entire row containing the current cell will be drawn using the attributes of the HighlightRowStyle property. In this mode, it is not possible to visually determine which cell is the current cell, only the current row. When the grid or split is not editable, this setting is often preferred, since cell position is then irrelevant.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.MarqueeEnum.HighlightRowRaiseCell">
            <summary>
            The entire row will be highlighted as in setting 3, but the current cell within the row will be "raised" so that it appears distinctive. This setting does not appear clearly with all background color and divider settings. The best effect is achieved by using 3D dividers and a light gray background.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.MarqueeEnum.NoMarquee">
            <summary>
            The marquee will not be shown. This setting is useful for cases where the current row is irrelevant, or when not wanting to draw the user's attention to the grid until necessary.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.MarqueeEnum.FloatingEditor">
            <summary>
            The current cell will be highlighted by a floating text editor window with a blinking caret (as in Microsoft Access).
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.MarqueeEnum.DottedRowBorder">
            <summary>
            The entire current row will be highlighted by drawing a dotted border around it. This effect is similar to setting 0.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.ScrollBarEnum">
            <summary>
            Identifies the type of scrollbar.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.ScrollBarEnum.Horizontal">
            <summary>
            The Horizontal scrollbar.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.ScrollBarEnum.Vertical">
            <summary>
            The Vertical scrollbar.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.RowTypeEnum">
            <summary>
            Identifies the type of row.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.RowTypeEnum.DataRow">
            <summary>
            Row is a datarow.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.RowTypeEnum.CollapsedGroupRow">
            <summary>
            Row is a collapsed group row.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.RowTypeEnum.ExpandedGroupRow">
            <summary>
            Row is an expanded group row.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.RowTypeEnum.FooterRow">
            <summary>
            Row is a footerrow.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.RowTypeEnum.ChildRow">
            <summary>
            Row is a childrow.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.OutlineModeEnum">
            <summary>
            Specifies the initial expanded or collapsed state of a grouped row.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.OutlineModeEnum.StartCollapsed">
            <summary>
            Grouped rows initial display is collapsed (default).
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.OutlineModeEnum.StartExpanded">
            <summary>
            Grouped rows initial display is expanded.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GroupPositionEnum">
            <summary>
            Specifies how the grouped column should be displayed.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.GroupPositionEnum.Header">
            <summary>
            Grouped columns contain just a header row (default).
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.GroupPositionEnum.HeaderAndFooter">
            <summary>
            Grouped columns contain a header and footer row.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.AggregateEnum">
            <summary>
            Specifies the type of aggregate that is computed for a grouped row.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AggregateEnum.None">
            <summary>
            No aggregate is calculated or displayed.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AggregateEnum.Count">
            <summary>
            Count of non-empty values.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AggregateEnum.Sum">
            <summary>
            Sum of numerical values.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AggregateEnum.Average">
            <summary>
            Average of the numerical values.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AggregateEnum.Min">
            <summary>
            Minimum value (numerical, string, or date).
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AggregateEnum.Max">
            <summary>
            Maximum value (numerical, string, or date).
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AggregateEnum.Std">
            <summary>
            Standard deviation (using formula for Sample, n-1).
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AggregateEnum.StdPop">
            <summary>
            Standard deviation (using formula for Population, n).
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AggregateEnum.Var">
            <summary>
            Variance (using formula for Sample, n-1).
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AggregateEnum.VarPop">
            <summary>
            Variance (using formula for Population, n).
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.AggregateEnum.Custom">
            <summary>
            Causes the GroupAggregate event to be raised.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.DropdownWidthEnum">
            <summary>
            Specifies the width of a C1TrueDBDropdown for a cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.DropdownWidthEnum.Default">
            <summary>
            The width of the dropdown is the control width.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.DropdownWidthEnum.Column">
            <summary>
            The width of the dropdown is the column width.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GroupIntervalEnum">
            <summary>
            Specifies how rows are grouped.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.GroupIntervalEnum.Default">
            <summary>
            Rows are grouped by their values.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.GroupIntervalEnum.Date">
            <summary>
            Rows are grouped by the date portion of their values.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.GroupIntervalEnum.Month">
            <summary>
            Rows are grouped by the month portion of their values.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.GroupIntervalEnum.Year">
            <summary>
            Rows are grouped by the year portion of their values.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.GroupIntervalEnum.Alphabetical">
            <summary>
            Rows are grouped by the first character of their values.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.GroupIntervalEnum.DateSpan">
            <summary>
            Rows are grouped according to their date values.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.GroupIntervalEnum.Custom">
            <summary>
            Rows are grouped by raising the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GroupInterval"/> event.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.CancelEventHandler">
            <summary>
            Raised before an action is performed on the grid and the action can be canceled.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.CancelEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.BeforeDelete"/>, <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.BeforeInsert"/>, <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.BeforeUpdate"/>, <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.BeforeRowColChange"/>, <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RowResize"/>, <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Scroll"/>, <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.SelChange"/>, <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.BeforeOpen"/>, and <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.BeforeClose"/> events.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.CancelEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating that the action should not be performed.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.BeforeColEditEventHandler">
            <summary>
            Raised before a column enters edit mode.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.BeforeColEditEventArgs">
            <summary>
            Provides data for the BeforeColEdit event.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BeforeColEditEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating that editing should be disallowed.
            </summary>
            <remarks>If event procedure sets the Cancel argument to True, the cell will not enter edit mode. Otherwise, the ColEdit event is raised immediately, followed by the Change event for the KeyChar property, if non-zero.</remarks>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BeforeColEditEventArgs.KeyChar">
            <summary>
            Indicates the character that initiated the editing operation.
            </summary>
            <remarks>The BeforeColEdit event occurs just before the user enters edit mode by typing a character. If a floating editor marquee is not in use, this event also occurs when the user clicks the current cell or double clicks another cell.</remarks>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BeforeColEditEventArgs.ColIndex">
            <summary>
            Indicates the position in the DisplayColumns collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BeforeColEditEventArgs.Column">
            <summary>
            Gets the C1DisplayColumn for the column being edited.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.BeforeColUpdateEventHandler">
            <summary>
            Raised after editing is completed in a cell.
            </summary>
            <remarks>The BeforeColUpdate event occurs after editing is completed in a cell, but before data is moved from the cell to the grid's internal copy buffer. 
            The data specified by the OldValue argument moves from the cell to the grid's copy buffer when the user completes editing within a cell, as when tabbing to another column in the same row, pressing the Enter key, or clicking on another cell. Before the data has been moved from the cell into the grid's copy buffer, the BeforeColUpdate event is triggered. This event gives the application an opportunity to check the individual grid cells before they are committed to the grid's copy buffer. 
            If your event procedure sets the Cancel argument to True, the previous value is restored in the cell, the grid retains focus, and the AfterColUpdate event is not triggered. Change the current cell text by setting OldValue to the value wanted to display (other than the previous value).
            To restore OldValue in the cell and permit the user to move focus off of the cell, set Cancel to False and set the cell to OldValue as follows: </remarks>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.BeforeColUpdateEventArgs">
            <summary>
            Provides data for the BeforeColUpdate event.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BeforeColUpdateEventArgs.Cancel">
            <summary>
            Gets or sets a value that prevents the user from moving focus to another cell.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BeforeColUpdateEventArgs.OldValue">
            <summary>
            Gets or sets the value of the original cell data.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BeforeColUpdateEventArgs.ColIndex">
            <summary>
            Indicates the position in the DisplayColumns collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BeforeColUpdateEventArgs.Column">
            <summary>
            Gets the C1DisplayColumn for the column being edited.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.ColResizeEventHandler">
            <summary>
            Raised after a column has been resized.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.ColResizeEventArgs">
            <summary>
            Provides data for the ColReisize event.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ColResizeEventArgs.ColIndex">
            <summary>
            Indicates the position in the DisplayColumns collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ColResizeEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating that sizing should be ignored.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ColResizeEventArgs.Column">
            <summary>
            Gets the C1DisplayColumn for the column being sized.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.ColEventHandler">
            <summary>
            Raised when an action is perfored on a column.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.ColEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AfterColUpdate"/>, <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AfterColEdit"/>, <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.HeadClick"/>, <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FootClick"/>, <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ColEdit"/>, <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ButtonClick"/>, <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ComboSelect"/>, <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ValueItemError"/>, and <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FilterButtonClick"/> events.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ColEventArgs.ColIndex">
            <summary>
            Indicates the position in the DisplayColumns collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ColEventArgs.Column">
            <summary>
            Gets the C1DisplayColumn.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GroupColEventHandler">
            <summary>
            Raised when grouping columns.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GroupColEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GroupHeadClick"/> event.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupColEventArgs.ColIndex">
            <summary>
            Indicates the position in the DisplayColumns collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupColEventArgs.DataColumn">
            <summary>
            The C1DataColumn that was clicked.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.OwnerDrawCellEventHandler">
            <summary>
            Raised when a cell is to rendered by the event code.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.OwnerDrawCellEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OwnerDrawCell"/> and <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OwnerDrawCellPrint"/> events.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.OwnerDrawCellEventArgs.CellRect">
            <summary>
            The bounding rectangle for the cell that needs to be rendered.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.OwnerDrawCellEventArgs.Row">
            <summary>
            The index of the row for the cell being rendered.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.OwnerDrawCellEventArgs.Split">
            <summary>
            The index of the split for the cell being rendered.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.OwnerDrawCellEventArgs.Col">
            <summary>
            The index of the column in the DisplayColumns collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.OwnerDrawCellEventArgs.Graphics">
            <summary>
            The GDI+ graphics object to render on.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.OwnerDrawCellEventArgs.Text">
            <summary>
            The text of the cell.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.OwnerDrawCellEventArgs.Style">
            <summary>
            The Style used to render the cell.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.OwnerDrawCellEventArgs.Handled">
            <summary>
            Indicates whether the event code rendered the cell.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.OwnerDrawCellEventArgs.Column">
            <summary>
            The C1DisplayColumn being rendered.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.OwnerDrawCellEventArgs.DrawCellFlags">
            <summary>
            Indicates whether the custom renderer handles the background, border or content. 
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.OwnerDrawPageEventHandler">
            <summary>
            Raised when custom page headers and footers need to be rendered.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.OwnerDrawPageEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OwnerDrawPageHeader"/> and <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.OwnerDrawPageHeader"/> events.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.OwnerDrawPageEventArgs.OwnerDrawPrint">
            <summary>
            The <see cref="T:C1.Win.C1TrueDBGrid.C1OwnerDrawPrint"/> object used to render the custom header or footer
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.RowColChangeEventHandler">
            <summary>
            Raised after the current Row or Column changes.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.RowColChangeEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.RowColChange"/> event.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.RowColChangeEventArgs.LastRow">
            <summary>
            The previous row index.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.RowColChangeEventArgs.LastCol">
            <summary>
            The previous column index of the DisplayColumns collection.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.UnboundColumnFetchEventHandler">
            <summary>
            Raised when an unbound column needs to be rendered.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.UnboundColumnFetchEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.UnboundColumnFetch"/> event.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.UnboundColumnFetchEventArgs.Row">
            <summary>
            The index of the row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.UnboundColumnFetchEventArgs.Col">
            <summary>
            Indicates the position in the Columns collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.UnboundColumnFetchEventArgs.Column">
            <summary>
            The <see cref="T:C1.Win.C1TrueDBGrid.C1DataColumn"/> object.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.UnboundColumnFetchEventArgs.Value">
            <summary>
            Gets or sets the value of the Column.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.SplitEventHandler">
            <summary>
            Raised when Split specific actions are performed.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.SplitEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FirstRowChange"/> and <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.LeftColChange"/> events.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.SplitEventArgs.SplitIndex">
            <summary>
            Indicates the position of the Split in the Splits collection.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.FormatTextEventHandler">
            <summary>
            Raised when a cell needs custom formatting.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.FormatTextEventArgs">
            <summary>
            Provides data for the FromatText event.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FormatTextEventArgs.ColIndex">
            <summary>
            Indicates the position in the Columns collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FormatTextEventArgs.Row">
            <summary>
            The row index for the cell to be formatted.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FormatTextEventArgs.Value">
            <summary>
            The value to format.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FormatTextEventArgs.Column">
            <summary>
            The <see cref="T:C1.Win.C1TrueDBGrid.C1DataColumn"/> object.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.FetchCellStyleEventHandler">
            <summary>
            Raised when the <see cref="T:C1.Win.C1TrueDBGrid.Style"/> used to render a cell needs customization.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.FetchCellStyleEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FetchCellStyle"/> event.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchCellStyleEventArgs.Condition">
            <summary>
            The sum of one or more <see cref="T:C1.Win.C1TrueDBGrid.CellStyleFlag"/> constants describing the disposition of the cell being rendered.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchCellStyleEventArgs.Split">
            <summary>
            Indicates the position in the Splits collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchCellStyleEventArgs.Row">
            <summary>
            The index of the row for the cell being rendered.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchCellStyleEventArgs.Col">
            <summary>
            The index of the column in the DisplayColumns collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchCellStyleEventArgs.CellStyle">
            <summary>
            The Style used to render the cell.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchCellStyleEventArgs.Column">
            <summary>
            The C1DisplayColumn being rendered.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.FetchRowStyleEventHandler">
            <summary>
            Raised when the <see cref="T:C1.Win.C1TrueDBGrid.Style"/> used to render a row needs customization.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.FetchRowStyleEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FetchRowStyle"/> event.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchRowStyleEventArgs.Split">
            <summary>
            Indicates the position in the Splits collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchRowStyleEventArgs.Row">
            <summary>
            The index of the row for the cell being rendered.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchRowStyleEventArgs.CellStyle">
            <summary>
            The Style used to render the row.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.ColMoveEventHandler">
            <summary>
            Raised when a column is being repositioned.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.ColMoveEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.ColMove"/> event.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ColMoveEventArgs.Position">
            <summary>
            Indicates the target index of the column being moved.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ColMoveEventArgs.ColIndex">
            <summary>
            Indicates the starting position in the DisplayColumns collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ColMoveEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating that the action should not be performed.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ColMoveEventArgs.Column">
            <summary>
            Gets the C1DisplayColumn that is being moved.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GroupColMoveEventHandler">
            <summary>
            Raised when a column is moved into or out of the grouping area.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GroupColMoveEventArgs">
            <summary>
             Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GroupColMove"/> event.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupColMoveEventArgs.DataColumn">
            <summary>
            The C1DataColumn for the column being moved.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.FetchCellTipsEventHandler">
            <summary>
            Raised when cell tips are to be displayed.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.FetchCellTipsEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FetchCellTips"/> event.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchCellTipsEventArgs.SplitIndex">
            <summary>
            Indicates the position of the Split in the Splits collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchCellTipsEventArgs.ColIndex">
            <summary>
            Indicates the position in the DisplayColumns collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchCellTipsEventArgs.Row">
            <summary>
            The index of the row for the cell tip.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchCellTipsEventArgs.CellTip">
            <summary>
            The text to be displayed in the cell tip.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchCellTipsEventArgs.FullyDisplayed">
            <summary>
            Indicates if the contents of the cell is fully displayed.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchCellTipsEventArgs.TipStyle">
            <summary>
            The Style used to render the cell tip.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchCellTipsEventArgs.Column">
            <summary>
            The C1DisplayColumn that this tip is associated with.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.BandEventHandler">
            <summary>
            Raised when a hierarchical node is expanded or collapsed.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.BandEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Expand"/> and <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Collapse"/> events.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BandEventArgs.Band">
            <summary>
            Indicates the recordset level that holds the current row within a master-detail hierarchy.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.BandEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating that the action should not be performed.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.FetchScrollTipsEventHandler">
            <summary>
            Raised when scroll tips are to be displayed.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.FetchScrollTipsEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.FetchScrollTips"/> event.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchScrollTipsEventArgs.SplitIndex">
            <summary>
            Indicates the position of the Split in the Splits collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchScrollTipsEventArgs.ColIndex">
            <summary>
            Indicates the position in the DisplayColumns collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchScrollTipsEventArgs.Row">
            <summary>
            The index of the topmost row for the scroll tip.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchScrollTipsEventArgs.ScrollBar">
            <summary>
            Indicates the scrollbar that was moved.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchScrollTipsEventArgs.ScrollTip">
            <summary>
            The text to be displayed in the scroll tip.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchScrollTipsEventArgs.TipStyle">
            <summary>
            The Style used to render the scroll tip.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FetchScrollTipsEventArgs.Column">
            <summary>
            The current C1DisplayColumn.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.FilterEventHandler">
            <summary>
            Raised when the grid is sorted or filtered.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.FilterEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Filter"/>, <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AfterFilter"/>, <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Sort"/>, and <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.AfterSort"/>
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.FilterEventArgs.Condition">
            <summary>
            The filter or sort condition.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.ErrorEventHandler">
            <summary>
            Raised when an excpetion is thrown via the UI.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.ErrorEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.Error"/> event.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ErrorEventArgs.Exception">
            <summary>
            The exception which caused the Event to be raised.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ErrorEventArgs.Handled">
            <summary>
            True if the exception has been handled.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.ErrorEventArgs.Continue">
            <summary>
            True to continue as if no exception was raised.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GroupTextEventHandler">
            <summary>
            Raised when text is grouped.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GroupTextEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GroupText"/> event.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupTextEventArgs.Text">
            <summary>
            Custom text for the grouped row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupTextEventArgs.GroupText">
            <summary>
            Value that the data is being grouped on.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupTextEventArgs.Col">
            <summary>
            Column that is being grouped.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupTextEventArgs.RowType">
            <summary>
            Type of row being grouped.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupTextEventArgs.StartRowIndex">
            <summary>
            First row index that is being grouped.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupTextEventArgs.EndRowIndex">
            <summary>
            Last row index that is being grouped.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GroupIntervalEventHandler">
            <summary>
            Raised when text is grouped.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GroupIntervalEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1TrueDBGrid.C1TrueDBGrid.GroupText"/> event.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupIntervalEventArgs.Value">
            <summary>
            Underlying value of the row being grouped.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupIntervalEventArgs.Col">
            <summary>
            Column that is being grouped.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupIntervalEventArgs.Row">
            <summary>
            Row index that is being grouped.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GridAccessibleObject">
            <summary>
            Root accessible object exposed by C1TrueDBGrid control
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GroupBarAccessibleObject">
            <summary>
            Accessible object for group bar
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.ViewAccessibleObject">
            <summary>
            Accessible object for view
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.RowAccessibleObject">
            <summary>
            Accessible object for grid row
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.CellAccessibleObject">
            <summary>
            Accessible object for grid cell
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GroupRow">
            <summary>
            Object that represents a groupby split.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupRow.RowType">
            <summary>
            Gets the type of row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupRow.GroupedText">
            <summary>
            Gets the text that is being grouped.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupRow.Level">
            <summary>
            Gets the level of the grouping.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupRow.StartIndex">
            <summary>
            Gets the starting row index of the datasource that belong to this group.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupRow.EndIndex">
            <summary>
            Gets the ending row index of the datasource that belong to this group.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupRow.Count">
            <summary>
            Gets the number of rows that belong to this group.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.GroupByView.ProcessGroupedData(System.Int32,C1.Win.C1TrueDBGrid.C1DisplayColumn)">
            <summary>
            Processes grouped data.
            </summary>
            <param name="row">The row index containg the data.</param>
            <param name="col">The <see cref="T:C1.Win.C1TrueDBGrid.C1DisplayColumn"/> that is being grouped.</param>
            <returns>A string that the data will be grouped on.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.GroupByView.MoveRow(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="oldrow"></param>
            <param name="newrow"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.MultipleLinesView._fitSubline(System.Int32,System.Single,System.Int32)">
            <summary>
            Adjust column widths so they all fit within the data area
            </summary>
            
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.NumberFormatTypeEditor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.NumberFormatTypeEditor.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.NumberFormatTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.NumberFormatTypeEditor.OnListBoxClick(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.NumberFormatTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.Designer.GridColumnEditorForm2.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Designer.GridColumnEditorForm2.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Designer.GridColumnEditorForm2.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Designer.TDBGridBaseGlyph.Dispose">
            <summary>
            Releases the resources used by the view.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Designer.TDBGridBaseGlyph.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the view.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Designer.C1TrueDBGridActionList">
            <summary>
            Summary description for MyControlActionList.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Designer.SelectColumnActionUITypeEditor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Designer.SelectColumnActionUITypeEditor.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Designer.SelectColumnActionUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Designer.SelectColumnActionUITypeEditor.OnListBoxClick(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Designer.SelectColumnActionUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.IOnLongOpInProgressProvider">
            <summary>
            Interface used to provide feedback and the ability to cancel potentially long operations
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.IOnLongOpInProgressProvider.OnLongOpInProgress(System.Boolean@)">
            <summary>
            
            </summary>
            <param name="cancel"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.IOnLongOpInProgressProvider.OnLongOpInProgress">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.LongOpInProgressArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.LongOpInProgressArgs.CancelIfPossible">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.LongOpInProgressHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.C1Stack">
            <summary>
            Simple stack with indexed access, based on System.Collections.ArrayList
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.C1Stack.Push(System.Object)">
            <summary>
            
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.C1Stack.Pop">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.C1Stack.Peek">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.C1Stack.IsIndexInBounds(System.Int32)">
            <summary>
            
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.C1Stack.Top">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.C1Stack.Length">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.C1Stack.IsEmpty">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Pair">
            <summary>
            General purpose pair class. (Should be moved to gp utils.)
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Pair.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Pair.#ctor(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="first"></param>
            <param name="second"></param>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Pair.First">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Pair.Second">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Design.PropBagAttribute">
            <summary>
            Attribute used to specify which properties get serialized when saving layouts.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Design.LayoutAttribute">
            <summary>
            Attribute used to specify which properties get serialized when saving layouts.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.TypeSerialization">
            <summary>
            Determines how item types are serialized
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.TypeSerialization.None">
            <summary>
            Item type is not serialized (this is the default)
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.TypeSerialization.FullName">
            <summary>
            Item type is serialized as a fully qualified name
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.TypeSerialization.AssemblyQualifiedName">
            <summary>
            Item type is serialized as a fully qualified name and assembly name
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.TypeSerialization.Custom">
            <summary>
            Use owner's IMemberTypeEncoder for members
            (for collection items, this is done automatically).
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.MemberTypeEncoderHelper">
            <summary>
            Helper class for implementors of IMemberTypeEncoder
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.MemberTypeEncoderHelper.#ctor(System.Object[0:,0:])">
            <summary>
            
            </summary>
            <param name="namedTypes"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.MemberTypeEncoderHelper.TypeToString(System.Object)">
            <summary>
            
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.MemberTypeEncoderHelper.StringToType(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.TypeSerializationAttribute">
            <summary>
            Forces the serializer to serialize the type name of a property or field
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.TypeSerializationAttribute.#ctor(C1.Win.C1TrueDBGrid.Util.Xml.Serialization.TypeSerialization)">
            <summary>
            
            </summary>
            <param name="ts"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.TypeSerializationAttribute.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.TypeSerializationAttribute.TypeSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.CollectionElementTypeAttribute">
            <summary>
            This attribute allows to specify collection's element type name
            (in that case there is no need to store it).
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.CollectionElementTypeAttribute.#ctor(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.CollectionElementTypeAttribute.CollectionElementType">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer">
            <summary>
            Serializes and deserializes objects into and from XML.
            </summary>
            <remarks>
            All the methods in this class are static (Shared in Visual Basic).
            You cannot create an instance of this class.
            </remarks>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.Xml.XmlTextWriter@)">
            <summary>
            Serializes the specified Object and writes the XML-document instance to a file using the specified Stream. 
            DOES NOT close the underlying stream. Useful for copying objects.
            Caller is responsible to call out writer.Close() to close writer and underlying stream.
            </summary>
            <param name="stream">The Stream used to write the XML-document instance</param>
            <param name="o">The Object to serialize</param>
            <param name="namespaces">The XmlSerializerNamespaces referenced by the object</param>
            <param name="writer">The XmlWriter object reference. Call writer.Close after working with stream/writer.</param> 
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
            <summary>
            Serializes the specified Object and writes the XML-document instance to a file using the specified Stream.
            </summary>
            <param name="stream">The Stream used to write the XML-document instance</param>
            <param name="o">The Object to serialize</param>
            <param name="namespaces">The XmlSerializerNamespaces referenced by the object</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.Serialize(System.Xml.XmlTextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
            <summary>
            Serializes the specified Object and writes the XML-document instance to a file using the specified XmlWriter
            </summary>
            <param name="writer">The XmlWriter used to write the XML-document instance</param>
            <param name="o">The Object to serialize</param>
            <param name="namespaces">The XmlSerializerNamespaces referenced by the object</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.Serialize(System.IO.Stream,System.Object,System.Reflection.MemberInfo,System.Xml.Serialization.XmlSerializerNamespaces,System.Xml.XmlTextWriter@)">
            <summary>
            Serializes the specified Object and writes the XML-document instance to a file using the specified Stream. 
            DOES NOT close the underlying stream. Useful for copying objects.
            Caller is responsible to call out writer.Close() to close writer and underlying stream.
            </summary>
            <param name="stream">The Stream used to write the XML-document instance</param>
            <param name="o">The Object to serialize</param>
            <param name="mi">The FieldInfo or MemberInfo object context for the object to serialize</param>
            <param name="namespaces">The XmlSerializerNamespaces referenced by the object</param>
            <param name="writer">The XmlWriter object reference. Call writer.Close after working with stream/writer.</param> 
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.Serialize(System.IO.Stream,System.Object,System.Reflection.MemberInfo,System.Xml.Serialization.XmlSerializerNamespaces,System.Xml.XmlTextWriter@,System.Attribute[])">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <param name="o"></param>
            <param name="mi"></param>
            <param name="namespaces"></param>
            <param name="writer"></param>
            <param name="filter"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.Serialize(System.IO.Stream,System.Object,System.Reflection.MemberInfo,System.Xml.Serialization.XmlSerializerNamespaces)">
            <summary>
            Serializes the specified Object and writes the XML-document instance to a file using the specified Stream.
            </summary>
            <param name="stream">The Stream used to write the XML-document instance</param>
            <param name="o">The Object to serialize</param>
            <param name="mi">The FieldInfo or MemberInfo object context for the object to serialize</param>
            <param name="namespaces">The XmlSerializerNamespaces referenced by the object</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.Serialize(System.Xml.XmlTextWriter,System.Object,System.Reflection.MemberInfo,System.Xml.Serialization.XmlSerializerNamespaces,System.Attribute[])">
            <summary>
            Serializes the specified Object and writes the XML-document instance to a file using the specified XmlWriter
            </summary>
            <param name="writer">The XmlWriter used to write the XML-document instance</param>
            <param name="o">The Object to serialize</param>
            <param name="mi">The FieldInfo or MemberInfo object context for the object to serialize</param>
            <param name="namespaces">The XmlSerializerNamespaces referenced by the object</param>
            <param name="filter">Array of attributes that specify what to serialize</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.Serialize(System.Object,System.Reflection.MemberInfo,System.Xml.Serialization.XmlSerializerNamespaces)">
            <summary>
            Serializes the specified object to an XML formatted string.
            </summary>
            <param name="o"></param>
            <param name="mi"></param>
            <param name="namespaces"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.writeNamespaces(System.Xml.XmlTextWriter,System.Xml.Serialization.XmlSerializerNamespaces)">
            <summary>
            Used to write the namespaces as attributes for the initial object
            </summary>
            <param name="writer"></param>
            <param name="namespaces"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.isVisible(System.Object[])">
            <summary>
            Given a list of Field or Property attributes returns visibility
            </summary>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.MapType(System.Xml.XmlTextWriter,System.Object,System.Attribute[])">
            <summary>
            Enumerates and serializes all public fields and properties
            </summary>
            <param name="writer">The XmlWriter used to write the XML-document instance</param>
            <param name="o">The Object to serialize</param>
            <param name="filter">Array of attributes that specify what to serialize</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.Deserialize(System.IO.Stream,System.Type)">
            <summary>
            Deserializes an XML-document instance
            </summary>
            <param name="stream">The Stream containing the XML-document instance to deserialize</param>
            <param name="type">The type of object being deserialized</param>
            <returns>The Object being deserialized</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.Deserialize(System.Xml.XmlTextReader,System.Type)">
            <summary>
            Deserializes an XML-document instance
            </summary>
            <param name="reader">The XmlReader containing the XML-document instance to deserialize</param>
            <param name="type">The type of object being deserialized</param>
            <returns>The Object being deserialized</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.Deserialize(System.Xml.XmlTextReader,System.Object,System.Type,System.Type)">
            <summary>
            Deserializes object
            </summary>
            <param name="reader">The XmlReader containing the XML-document instance to deserialize</param>
            <param name="o">The Object being deserialized</param>
            <param name="type">The type of object being deserialized</param>
            <param name="elementType">The type of array elements (in case the object is an array)</param>
            <returns>The Object being deserialized</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.Deserialize(System.String,System.Type)">
            <summary>
            Deserializes an XML document string 
            </summary>
            <param name="XMLString"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.DeserializeText(System.Xml.XmlTextReader,System.Type)">
            <summary>
            Deserializes text of element or attribute into object of appropriate type
            </summary>
            <param name="reader">The XmlReader containing the XML-document instance to deserialize</param>
            <param name="type">The type of object being deserialized</param>
            <returns>The Object being deserialized</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.DeserializeType(System.Xml.XmlTextReader,System.Type,C1.Win.C1TrueDBGrid.Util.Xml.Serialization.IMemberTypeEncoder)">
            <summary>
            Recognizes type of object serialized in element
            </summary>
            <param name="reader">The XmlReader containing the XML-document instance to deserialize</param>
            <param name="type">The default type of object being deserialized</param>
            <param name="mte">Custom serialization</param>
            <returns>The type of object being deserialized</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.DeserializeArray(System.Xml.XmlTextReader,System.Type,System.Collections.IList)">
            <summary>
            Deserializes array or collection
            </summary>
            <param name="reader">The XmlReader containing the XML-document instance to deserialize</param>
            <param name="elementType">Collection item type</param>
            <param name="container">The array or collection being deserialized</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.GetAssemblyQualifiedTypeName(System.Type)">
            <summary>
            Returns the "almost" fully qualified type name - i.e. with assembly name,
            but without version, culture, and public key.
            </summary>
            <param name="type">Type</param>
            <returns>Type name, assembly name</returns>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.OnLongOpInProgressProvider">
            <summary>
            Sets or returns the object implementing IOnLongOpInProgressProvider interface
            (can be used to provide visual feedback to the user during serialization).
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.SerializeDefaultValues">
            <summary>
            Gets or sets a value indicating whether all the values are to be persistent.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.Formatting">
            <summary>
            Sets or returns formatting used by the XML writer.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.Indentation">
            <summary>
            Sets or returns indentation used by the XML writer.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.Xml.Serialization.Serializer.NonPublic">
            <summary>
            Sets or returns serialization of non-public properties.  If true non-public properties
            are included, but are hidden by default. Public properties are always visible by default.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Designer.GridColumnEditor">
            <summary>
            GridColumnEditor
            Displays an ellipsis button next to the Columns collection
            and pops up the grid column editor form to allow users to edit column
            names, types, alignment, etc.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Designer.GridDataTypeEditor">
            <summary>
            GridDataTypeEditor
            Uses a drop-down list box to select values of type Type
            (e.g. Column.DataType property).
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Designer.GridStyleEditor">
            <summary>
            Summary description for GridStyleEditor.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Designer.GridStyleEditorForm">
            <summary>
            Summary description for GridStyleEditorForm.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Designer.GridStyleEditorForm.Dispose(System.Boolean)">
            <summary>
            Called when the class is being disposed.
            </summary>
            <param name="disposing">
            True to cleanup.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Designer.GridStyleEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.C1TrueDBDropdownActionList">
            <summary>
            Summary description for MyControlActionList.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.TDBDropDesigner">
            <summary>
            Summary description for GridDesigner.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.TDBGridDesigner">
            <summary>
            Summary description for GridDesigner.
            </summary>
        </member>
        <member name="T:C1.Design.C1InputMaskUITypeEditor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Design.C1InputMaskUITypeEditor.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Design.C1InputMaskUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Design.C1InputMaskUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Design.StyleUITypeEditor">
            <summary>
            Summary description for StyleEditor.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Design.StyleEditorUIControl">
            <summary>
            Summary description for StyleEditorUIControl.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Design.StyleEditorUIControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Design.StyleEditorUIControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Design.StyleEditorForm">
            <summary>
            Summary description for TestForm.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.Design.StyleEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Design.StyleEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Design.StyleEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.Design.UIEditors.ValueItemsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Design.UIEditors.ValueItemsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Design.UIEditors.ValueItemsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Design.UIEditors.C1ValueItemUITypeEditor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Design.UIEditors.C1ValueItemUITypeEditor.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Design.UIEditors.C1ValueItemUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Design.UIEditors.C1ValueItemUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.Design.UIEditors.ValueListCtl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Design.UIEditors.ValueListCtl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Design.UIEditors.ValueListCtl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.Design.UIEditors.ValueListForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Design.UIEditors.ValueListForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Design.UIEditors.ValueListForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Design.UIEditors.C1ValueListUITypeEditor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Design.UIEditors.C1ValueListUITypeEditor.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Design.UIEditors.C1ValueListUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Design.UIEditors.C1ValueListUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Tally">
            <summary>
            Summary C1Description for Tally.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.GroupInfo">
            <summary>
            GroupInfo
            Property of the C1DataColumn object, used to control grouping and 
            rendering of group headers and footers
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.GroupInfo.#ctor(C1.Win.C1TrueDBGrid.C1DataColumn)">
            <summary>
            Creates a new instance of the object.
            </summary>
            <param name="owner">The column this object is associated with.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.GroupInfo.ToString">
            <summary>
            Override.  The string representation of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupInfo.Position">
            <summary>
            Gets or sets the position of the grouped row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupInfo.OutlineMode">
            <summary>
            Gets or sets the initial expanded/collapsed state of the grouped row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupInfo.HeaderText">
            <summary>
            Gets or sets the text that is displayed in the group header row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupInfo.FooterText">
            <summary>
            Gets or sets the text that is displayed in the group footer row.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupInfo.Interval">
            <summary>
            Gets or sets the way rows are grouped.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.GroupInfo.ColumnVisible">
            <summary>
            Gets or set a value indicating the visibility of a column when it's grouped.
            </summary>
        </member>
        <member name="T:C1.Util.Localization.StringTables">
            <summary>
            StringTables
            this class contains a single static method InitTables that populates the
            tables used by the Localizer class.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PrintOptionsForm">
            <summary>
            Summary description for PrintOptionsForm.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.OnExporterChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.OnActionChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_exporter">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_action">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_actionMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_rowHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_pageBreaks">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_fillEmpty">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_wrapText">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_outputFileName">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_chkUseGridColors">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_numFooterHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_numHeaderHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_txtFooter">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_txtHeader">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_numMaxRowHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_cmbRowHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_chkColFooter">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_chkColHeader">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_chkSplitHeader">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_chkGridHeader">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_chkPrintHorzSplits">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_cmbStretchToWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_cmbWrapText">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_cmbHorzPageBreak">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_chkShowProgress">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_grpPageHeaders">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_lblFooterHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_lblHeaderHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_lblFooter">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_lblHeader">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_grpRenderOptions">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_lblRowHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_lblStretchToWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_lblWrapText">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_lblHorzPageBreak">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_btnOK">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_btnCancel">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_lblAction">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_btnOutputFileName">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_btnOptions">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_cmbAction">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_lblOutputFileName">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_lblMaxRowHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.#ctor">
            <summary>
            Creates a new instance of the PrintOptionsFrom class.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.Dispose(System.Boolean)">
            <summary>
            Called when the class is being disposed.
            </summary>
            <param name="disposing">
            True to cleanup.
            </param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_btnOutputFileName_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_btnOptions_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_cmbAction_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.UpdateStatus">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.PrintOptionsForm_Load(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.PrintOptionsForm_Closing(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_cmbRowHeight_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_cmbHorzPageBreak_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_cmbStretchToWidth_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.m_cmbWrapText_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.PrintOptionsForm.ExporterChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.PrintOptionsForm.ActionChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintOptionsForm.Exporter">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintOptionsForm.Action">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintOptionsForm.ActionMask">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintOptionsForm.RowHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintOptionsForm.PageBreaks">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintOptionsForm.FillEmpty">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintOptionsForm.WrapText">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PrintOptionsForm.ActionItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.ActionItem.Empty">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.ActionItem.#ctor(C1.Win.C1TrueDBGrid.PrintInfo.ActionFlags,System.Object)">
            <summary>
            Creates a new instance of the ActionItem class. 
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.ActionItem.ToString">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintOptionsForm.ActionItem.Action">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintOptionsForm.ActionItem.Provider">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PrintOptionsForm.RowHeightItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.RowHeightItem.RowHeight">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.RowHeightItem.#ctor(C1.Win.C1TrueDBGrid.PrintInfo.RowHeightEnum)">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.RowHeightItem.ToString">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.RowHeightItem.RowHeightItems">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PrintOptionsForm.PageBreakItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.PageBreakItem.PageBreaks">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.PageBreakItem.#ctor(C1.Win.C1TrueDBGrid.PrintInfo.PageBreaksEnum)">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.PageBreakItem.ToString">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.PageBreakItem.PageBreakItems">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PrintOptionsForm.FillEmptyItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.FillEmptyItem.FillEmpty">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.FillEmptyItem.#ctor(C1.Win.C1TrueDBGrid.PrintInfo.FillEmptyEnum)">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.FillEmptyItem.ToString">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.FillEmptyItem.FillEmptyItems">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PrintOptionsForm.WrapTextItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.WrapTextItem.WrapText">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.WrapTextItem.#ctor(C1.Win.C1TrueDBGrid.PrintInfo.WrapTextEnum)">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintOptionsForm.WrapTextItem.ToString">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintOptionsForm.WrapTextItem.WrapTextItems">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.C1TrueDBGridPrintOptionsFormDropDownEditor">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGridPrintOptionsFormDropDownEditor.BaseFormClassName">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.C1OwnerDrawPrint">
            <summary>
            Object to manage custom page headers and footers when printing and previewing.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1OwnerDrawPrint.SetHeightInch(System.Double)">
            <summary>
            Set the height of printing area (in inches)
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1OwnerDrawPrint.RenderDirectText(System.Object,System.Object,System.String,System.Object,System.Drawing.Font,System.Drawing.Color,C1.Win.C1TrueDBGrid.AlignHorzEnum)">
            <summary>
            Renders text for the document.
            </summary>
            <param name="x">X-coordinate to start the rendering.</param>
            <param name="y">Y-coordinate to start the rendering.</param>
            <param name="text">The text to render.</param>
            <param name="width">The width for the rendered text.</param>
            <param name="font">The font to use.</param>
            <param name="textColor">The color of the text.</param>
            <param name="horzAlign">The alignment to render the text.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1OwnerDrawPrint.RenderDirectImage(System.Object,System.Object,System.Drawing.Image,System.Object,System.Object,C1.Win.C1TrueDBGrid.BackgroundPictureDrawModeEnum)">
            <summary>
            Renders an image for the document.
            </summary>
            <param name="x">X-coordinate.</param>
            <param name="y">Y-coordinate.</param>
            <param name="image">Image to render.</param>
            <param name="width">Width to render.</param>
            <param name="height">Height to render.</param>
            <param name="imageAlign">Alignment options.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1OwnerDrawPrint.RenderDirectLine(System.Object,System.Object,System.Object,System.Object,System.Drawing.Color,System.Double)">
            <summary>
            Renders a line for the document.
            </summary>
            <param name="fromX">Start x-coordinate.</param>
            <param name="fromY">Start y-coordinate.</param>
            <param name="toX">End x-coordinate.</param>
            <param name="toY">End y-coordinate.</param>
            <param name="color">Color of the line.</param>
            <param name="width">Width of the line.</param>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1OwnerDrawPrint.HeightInch">
            <summary>
            The height of drawing area in inches
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PrintInfo">
            <summary>
            The object used to specify the characteristics of a grid when it's to be printed.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintInfo.#ctor(C1.Win.C1TrueDBGrid.PrintInfo)">
            <summary>
            This ctor is only used to create a copy of PrintInfo to compare user-modifiable
            options against.
            </summary>
            <param name="other">PrintInfo to copy user-modifiable options from.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintInfo.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintInfo.UserOptionsChanged(C1.Win.C1TrueDBGrid.PrintInfo)">
            <summary>
            Compares the user modfiable options in the current print info
            against those in the other one, returns true if any of the user
            options changed (so the document must be re-generated).
            </summary>
            <param name="other">The PrintInfo to compare against.</param>
            <returns>True if any of the user options have changed, false otherwise.</returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintInfo.PrintPreview">
            <summary>
            Opens a separate application window in which end users can preview the output that would be generated by the print operation.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintInfo.Print">
            <summary>
            Generates the printed page.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintInfo.Print(System.Drawing.Printing.PrinterSettings)">
            <summary>
            Generates the printed page.
            </summary>
            <param name="printerSettings">Specifies information about how a document is printed, including the printer that prints it.</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintInfo.ShouldSerializePreviewFormClassName">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintInfo.ResetPreviewFormClassName">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintInfo.ShouldSerializePrintOptionsFormClassName">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintInfo.ResetPrintOptionsFormClassName">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.UseGridColors">
            <summary>
            Gets or sets a value indicating whether the grid's color scheme is translated to the print page.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.OwnerDrawPageHeader">
            <summary>
            Gets or sets a value indicating whether the page header is owner-drawn.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.OwnerDrawPageFooter">
            <summary>
            Gets or sets a value indicating whether the page footer is owner-drawn.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.PageHeaderStyle">
            <summary>
            Gets or sets the style used to render the Page header.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.PageHeader">
            <summary>
            Gets or sets the string to be printed at the top of each page.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.PageHeaderHeight">
            <summary>
            Gets or sets the height of the Page header.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.PageFooterStyle">
            <summary>
            Gets or sets the style used to render the page footer.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.PageFooterHeight">
            <summary>
            Gets or sets the page footer height in hundredths of an inch.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.PageFooter">
            <summary>
            Gets or sets a string to be printed at the bottom of each page.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.RepeatColumnFooters">
            <summary>
            Gets or sets a value indicating whether column footers should appear on each page.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.RepeatGridHeader">
            <summary>
            Gets or sets a value indicating whether the grid caption should appear on each page.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.RepeatSplitHeaders">
            <summary>
            Gets or sets a value inidcating whether split captions should appear on each page.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.PrintHorizontalSplits">
            <summary>
            Gets or sets a value indicating whether horizontal splits are previewed and printed.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.RepeatColumnHeaders">
            <summary>
            Gets or sets a value indicating whether column headers should appear on each page.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.FillAreaWidth">
            <summary>
            Gets or sets the mode of stretching to the page width.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.PageBreak">
            <summary>
            Gets or sets the horizontal page break mode.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.WrapText">
            <summary>
            Gets or sets a value that controls how text is wrapped in a cell.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.PrintEmptyGrid">
            <summary>
            Gets or sets a value whether to print a grid if it has no data rows.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.MaxRowHeight">
            <summary>
            Gets or sets the maximum row height in hundredths of an inch.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.VarRowHeight">
            <summary>
            Gets or sets the height of printed rows.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.GridLines">
            <summary>
            Gets or sets a value indicating how grid lines are rendered.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.ShowOptionsDialog">
            <summary>
            Gets or sets a value indicating whether the Options dialog is displayed.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.ShowProgressForm">
            <summary>
            Gets or sets a value indicating whether the Progress Form is displayed.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.OneFormPerPage">
            <summary>
            Gets or sets a value indicating whether the grid in Form view style is printed each record per page.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.ShowSelection">
            <summary>
            Gets or sets a value indicating whether selected cells will be highlighted when previewing or printing.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.PageSettings">
            <summary>
            Gets or sets the PageSettings for printing.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.ProgressCaption">
            <summary>
            Gets or sets the caption of the Progress dialog box.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.PreviewFormClassName">
            <summary>
            Gets or sets the class name of the From which will be used as the Preview Form.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.PrintOptionsFormClassName">
            <summary>
            Gets or sets the class name of the form which will be used as the Print Options form.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PrintInfo.FillEmptyEnum">
            <summary>
            Specifies how empty space is printed.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.FillEmptyEnum.ExtendAll">
            <summary>
            All columns are extended proportionally.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.FillEmptyEnum.None">
            <summary>
            Empty space on the right.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.FillEmptyEnum.ExtendLast">
            <summary>
            Last column is extended to fill the empty space.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PrintInfo.PageBreaksEnum">
            <summary>
            Specifies when page breaks are applied.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.PageBreaksEnum.FitIntoArea">
            <summary>
            Fit all columns in one page.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.PageBreaksEnum.ClipInArea">
            <summary>
            Clip columns.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.PageBreaksEnum.OnSplit">
            <summary>
            Breaks on a new split or any column that doesn't fit.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.PageBreaksEnum.OnColumn">
            <summary>
            Breaks on any column that doesn't fit.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PrintInfo.WrapTextEnum">
            <summary>
            Specifies how cell text is wrapped.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.WrapTextEnum.Wrap">
            <summary>
            Always wrap text in a cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.WrapTextEnum.NoWrap">
            <summary>
            Never wrap.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.WrapTextEnum.LikeColumn">
            <summary>
            Use the column's <see cref="P:C1.Win.C1TrueDBGrid.Style.WrapText"/> property.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PrintInfo.GridLinesEnum">
            <summary>
            Specifies how grid lines are rendered
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.GridLinesEnum.Always">
            <summary>
            Grid lines are always rendered
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.GridLinesEnum.None">
            <summary>
            Grid lines are not rendered
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PrintInfo.RowHeightEnum">
            <summary>
            Specifies the height of printed rows.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.RowHeightEnum.StretchToFit">
            <summary>
            Stretch the row height to fit all the data.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.RowHeightEnum.LikeGrid">
            <summary>
            Use the grid's row height.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.RowHeightEnum.StretchToMax">
            <summary>
            Stretch the row height no greater than <see cref="P:C1.Win.C1TrueDBGrid.PrintInfo.MaxRowHeight"/>
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PrintInfo.ActionFlags">
            <summary>
            Specifies allowable options for printing.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.ActionFlags.None">
            <summary>
            No options.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.ActionFlags.Print">
            <summary>
            Print
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.ActionFlags.Preview">
            <summary>
            Preview
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.ActionFlags.Export">
            <summary>
            Export
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.PrintInfo.ActionFlags.MaskAll">
            <summary>
            All
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PrintInfo.C1PrintDocumentGenerateDocumentHandlerBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintInfo.C1PrintDocumentGenerateDocumentHandlerBase.#ctor(C1.Win.C1TrueDBGrid.PrintInfo)">
            <summary>
            
            </summary>
            <param name="pinfo"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintInfo.C1PrintDocumentGenerateDocumentHandlerBase.Uninstall">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintInfo.ExportParameters.PagePerSheet">
            <summary>
            Property value. MUST BE EXACTLY THE SAME AS PROPERTY NAME IN EXPORTER!
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PrintPreviewWinSettings">
            <summary>
            The object used to specify the characteristics of the print preview window.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintPreviewWinSettings.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintPreviewWinSettings.ShouldSerializeUIStrings">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintPreviewWinSettings.ResetUIStrings">
            <summary>
            Resets the array of UIStrings back to the default locale.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintPreviewWinSettings.Caption">
            <summary>
            Gets or sets the caption of the preview window.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintPreviewWinSettings.NavigationPaneDockingStyle">
            <summary>
            Gets or sets the position and manner in which the control is docked in the navigation page.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintPreviewWinSettings.Location">
            <summary>
            Gets or sets the location of the preview window.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintPreviewWinSettings.AllowSizing">
            <summary>
            Gets or sets a value indicating whether the end user has the ability to size the preview window.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintPreviewWinSettings.ZoomFactor">
            <summary>
            Gets or sets the zoom factor for print preview.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintPreviewWinSettings.Size">
            <summary>
            Gets or sets the size of the form.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintPreviewWinSettings.ToolBars">
            <summary>
            Gets or sets a value indicating the visibiity of toolbars.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.PrintPreviewWinSettings.UIStrings">
            <summary>
            Gets the array of user interface strings.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PrintForm">
            <summary>
            The print preview form.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintForm.#ctor">
            <summary>
            Creates a new instance of the PrintFrom class.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintForm.Init">
            <summary>
            Additional initialization of the form.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintForm.Dispose(System.Boolean)">
            <summary>
            Overloaded. Overridden. Releases all resources used by the Control.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.C1TrueDBGridPreviewFormDropDownEditor">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1TrueDBGridPreviewFormDropDownEditor.BaseFormClassName">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.PrintCancelException">
            <summary>
            The exception that is thrown when a print is cancelled.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.PrintCancelException.#ctor">
            <summary>
            Creates a new instance of the PrintCancelException class.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.C1PrintTrueDBGridNew">
            <summary>
            The object that handles printing and previewing for the grid.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1PrintTrueDBGridNew.#ctor(C1.Win.C1TrueDBGrid.C1TrueDBGrid)">
            <summary>
            Initializes a new instance of the C1PrintTrueDBGrid class.
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1PrintTrueDBGridNew.#ctor(C1.Win.C1TrueDBGrid.C1TrueDBGrid,C1.Win.C1TrueDBGrid.PrintInfo)">
            <summary>
            Initializes a new instance of the C1PrintTrueDBGrid class.
            </summary>
            <param name="grid"></param>
            <param name="pi"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1PrintTrueDBGridNew.Initialize">
            <summary>
            Performs initialization
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1PrintTrueDBGridNew.OnWidthChanged">
            <summary>
            Raises the WdithChanged event.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1PrintTrueDBGridNew.OnHeightChanged">
            <summary>
            Raises the HeightChanged event.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1PrintTrueDBGridNew.OnStartPrint">
            <summary>
            Raises the StartPrint event.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1PrintTrueDBGridNew.OnAfterRowPrinted">
            <summary>
            Raises the AfterRowPrinted event.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1PrintTrueDBGridNew.OnEndPrint">
            <summary>
            Raises the EndPrint event.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1PrintTrueDBGridNew.PxToDoc(System.Int32)">
            <summary>
            Convert screen pixels to Document units (1/300 of inch)
            </summary>
            <param name="lengthInPixel">Length in screen pixels</param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1PrintTrueDBGridNew.InchToDoc(System.Int32)">
            <summary>
            Convert hundreds of inch to Document uints (1/300 of inch)
            </summary>
            <param name="lengthInInch">Length in hundreds of inch</param>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1PrintTrueDBGridNew.CurRow">
            <summary>
            Gets or sets the current row which is displayed in the progress dialog.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1PrintTrueDBGridNew.RowCount">
            <summary>
            Gets the number of rows to be printed.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1PrintTrueDBGridNew.WidthChanged">
            <summary>
            Occurs when the width changes.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1PrintTrueDBGridNew.HeightChanged">
            <summary>
            Occurs when the height changes.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1PrintTrueDBGridNew.StartPrint">
            <summary>
            Occurs prior to printing.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1PrintTrueDBGridNew.AfterRowPrinted">
            <summary>
            Occurs after a row has been printed.
            </summary>
        </member>
        <member name="E:C1.Win.C1TrueDBGrid.C1PrintTrueDBGridNew.EndPrint">
            <summary>
            Occurs after the grid has been printed.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.C1PrintProgress">
            <summary>
            Print progress window.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.C1PrintProgress.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1PrintProgress.#ctor">
            <summary>
            Initializes a new instance of the C1PrintProgress class.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1PrintProgress.Dispose(System.Boolean)">
            <summary>
            Overloaded. Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.C1PrintProgress.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1PrintProgress.TxtPrinting">
            <summary>
            Gets or sets the text used to display the current progress when the grid is printed/previewed.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1PrintProgress.TxtCancel">
            <summary>
            Gets or sets the text for the Cancel button.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1PrintProgress.TxtTitle">
            <summary>
            Gets or sets the text for the Windows caption.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.C1PrintProgress.CancelClicked">
            <summary>
            Gets a value indicating if the print/preview was cancelled.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Styles.Borders.Border">
            <summary>
            Border is a basic border object, used by StyleContext for rendering
            and measuring elements.
            It provides a solid border with a single color and arbitrary widths 
            on each side.
            Border is designed to be extended so you can easily implement
            3-D effects, compound borders, etc.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Styles.Borders.BorderEmpty">
            <summary>
            BorderEmpty 
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Styles.Borders.BorderCompound">
            <summary>
            BorderCompound combines two borders. These may in turn be compound,
            so we get a lot of flexibility (got this idea from Java).
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Styles.Borders.BorderRaised">
            <summary>
            BorderRaised draws a 1-pixel wide raised border.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Styles.Borders.BorderInset">
            <summary>
            BorderInset draws a 1-pixel wide inset border.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Styles.Borders.BorderGroove">
            <summary>
            BorderGroove draws a 2-pixel wide groove border.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Styles.Borders.BorderFillet">
            <summary>
            BorderFillet draws a 2-pixel wide fillet border.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.MergedRangeDictionary">
            <summary>
            This is a specialized dictionary that does _very_ efficient range
            lookups based on Point keys (much faster than a Hashtable or SortedList).
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.DragImage.#ctor(System.Drawing.Bitmap,System.Drawing.Point)">
            <summary>
            constructs a dragimage class
            </summary>
            <param name="bmp">bitmap that you want to drag around</param>
            <param name="p">initial starting position (in screen coordinates)</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.DragImage.Drag(System.Drawing.Point)">
            <summary>
            Drags the immage around the screen
            </summary>
            <param name="p">Mouse position in screen coordinates</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.DragImage.EndDrag(System.Drawing.Point)">
            <summary>
            Ends the drag operation.  Final paint and some cleanup.
            </summary>
            <param name="p">Current cursor position in screen coordinates</param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.DragImage._saveBackground">
            <summary>
            saves the area of the display that will be painted on when dragging a bitmap 
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.DragImage._createBackgroundBMP">
            <summary>
            Creates the memory dc that will contain the background obscured by
            the image being dragged.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.DragImage._displayBackground">
            <summary>
            redraws the portion of the display that was painted on by the bitmap being dragged
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.SBar">
            <summary>
            Base class for the grid's scrollbars
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.SBar.#ctor(C1.Win.C1TrueDBGrid.BaseGrid.View,System.Windows.Forms.ScrollBar)">
            <summary>
            Initializes a new instance of the SBar class
            </summary>
            <param name="owner"></param>
            <param name="sbar"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.SBar.Dispose(System.Boolean)">
            <summary>
            Overloaded. Releases the resources used by the class.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.SBar.OnScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Occurs when the scroll box has been moved by either a mouse or keyboard action. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.SBar.OnMouseEnter(System.Object,System.EventArgs)">
            <summary>
            Occurs when the mouse pointer enters the control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.SBar.Style">
            <summary>
            Gets or sets the visibility of the scrollbars.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.SBar.Visible">
            <summary>
            Gets or sets a value indicating whether the scrollbar is displayed.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.SBar.Value">
            <summary>
            Gets or sets a numeric value that represents the current position of the scroll box on the scroll bar control.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.VBar">
            <summary>
            Represents a vertical scrollbar.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.VBar.#ctor(C1.Win.C1TrueDBGrid.BaseGrid.View)">
            <summary>
            Initializes a new instance of the VBar class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.VBar.OnScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Overloaded. Occurs when the scroll box has been moved by either a mouse or keyboard action.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.VBar.ToString">
            <summary>
            Returns a string the represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.VBar.Value">
            <summary>
            Gets or sets a numeric value that represents the current position of the scroll box on the scroll bar control.
            </summary>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.VBar.Width">
            <summary>
            Gets or sets the width of the vertical scrollbar.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.HBar">
            <summary>
            Represents a horizontal scrollbar.
            </summary>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.HBar.#ctor(C1.Win.C1TrueDBGrid.BaseGrid.View)">
            <summary>
            Initializes a new instance of the VBar class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.HBar.OnScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Overloaded. Occurs when the scroll box has been moved by either a mouse or keyboard action.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1TrueDBGrid.Util.HBar.ToString">
            <summary>
            Returns a string the represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1TrueDBGrid.Util.HBar.Height">
            <summary>
            Gets or sets the height of the horizontal scrollbar.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Styles.DrawCellFlags">
            <summary>
            Specifies which elements of the cell should be drawn by the grid.
            </summary>
            <remarks>
            <para>This enumeration is used when rendering owner-drawn cells.</para>
            </remarks>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.Styles.DrawCellFlags.None">
            <summary>
            Draw nothing.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.Styles.DrawCellFlags.Background">
            <summary>
            Draw the cell background.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.Styles.DrawCellFlags.Border">
            <summary>
            Draw the cell border.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.Styles.DrawCellFlags.Content">
            <summary>
            Draw the cell content (text, images, checkboxes, etc).
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.Styles.DrawCellFlags.All">
            <summary>
            Draw all cell elements (background, border, and contents).
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Styles.StyleContext">
            <summary>
            StyleContext contains a base Style definition and a list of
            named Styles. It provides the following services:
            - Style management (create, edit, and remove Styles)
            - Style inheritance mechanism
            - Rendering and measuring methods
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Styles.BaseStyle">
            <summary>
            Style contains a collection of arbitrary attributes, 
            represented by a name/object entry, a reference to a parent
            Style, and a referrence to the containing StyleContext.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.Util.Types">
            <summary>
            Summary description for Types.
            </summary>
        </member>
        <member name="T:C1.Win.VisualStyles.Office2007ColorScheme">
            <summary>
            Determines the Office 2007 color scheme.
            </summary>
        </member>
        <member name="F:C1.Win.VisualStyles.Office2007ColorScheme.Blue">
            <summary>
            MS Office 2007 blue color scheme.
            </summary>
        </member>
        <member name="F:C1.Win.VisualStyles.Office2007ColorScheme.Black">
            <summary>
            MS Office 2007 black color scheme.
            </summary>
        </member>
        <member name="F:C1.Win.VisualStyles.Office2007ColorScheme.Silver">
            <summary>
            MS Office 2007 silver color scheme.
            </summary>
        </member>
        <member name="T:C1.Win.C1TrueDBGrid.VisualStyle">
            <summary>
            Specifies a visual style to use when rendering the control.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.VisualStyle.Custom">
            <summary>
            Do not use any visual styles. Render the control using the styles and properties only.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.VisualStyle.System">
            <summary>
            Render the control with an appearance based on the current system settings.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.VisualStyle.Office2007Blue">
            <summary>
            Render the control with an appearance based on the Office 2007 Blue color scheme.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.VisualStyle.Office2007Silver">
            <summary>
            Render the control with an appearance based on the Office 2007 Silver color scheme.
            </summary>
        </member>
        <member name="F:C1.Win.C1TrueDBGrid.VisualStyle.Office2007Black">
            <summary>
            Render the control with an appearance based on the Office 2007 Black color scheme.
            </summary>
        </member>
    </members>
</doc>
