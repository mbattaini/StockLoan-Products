<?xml version="1.0"?>
<doc>
    <assembly>
        <name>C1.Silverlight.Schedule</name>
    </assembly>
    <members>
        <member name="T:C1.Silverlight.Schedule.C1Calendar">
            <summary>
            Represents a multi month calendar with an ability to interactively navigate
            through months and select a specific <see cref="T:System.DateTime"/> value or its components.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.CalendarBase">
            <summary>
            The base class for the <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/> and <see cref="T:C1.Silverlight.Schedule.C1Calendar"/> controls.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CalendarBase.ThemeProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.CalendarBase.Theme"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CalendarBase.YearProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.CalendarBase.Year"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CalendarBase.MonthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.CalendarBase.Month"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CalendarBase.SelectedDateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.CalendarBase.SelectedDate"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CalendarBase.MinDateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.CalendarBase.MinDate"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CalendarBase.MaxDateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.CalendarBase.MaxDate"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CalendarBase.CalendarHelperProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.CalendarBase.CalendarHelper"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CalendarBase.DaysPanelProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.CalendarBase.DaysPanel"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CalendarBase.DaySlotTemplateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.CalendarBase.DaySlotTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CalendarBase.DaySlotStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.CalendarBase.DaySlotStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CalendarBase.DaysOfWeekPanelProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.CalendarBase.DaysOfWeekPanel"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CalendarBase.DayOfWeekSlotTemplateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.CalendarBase.DayOfWeekSlotTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CalendarBase.DayOfWeekSlotStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.CalendarBase.DayOfWeekSlotStyle"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.CalendarBase.OnSelectedDateChanged(C1.Silverlight.Schedule.DateTimePropertyChangeEventArgs)">
            <summary>
            Raises a SelectedDateChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.CalendarBase.#ctor">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Silverlight.Schedule.CalendarBase"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.CalendarBase.GetDateTimeAtPoint(C1.Silverlight.Schedule.CalendarBase,System.Windows.Point)">
            <summary>
            Returns the <see cref="T:System.Nullable`1"/> at the specified location.
            </summary>
            <param name="calendar">The <see cref="T:C1.Silverlight.Schedule.CalendarBase"/> control.</param>
            <param name="location">The <see cref="T:System.Windows.Point"/> object which specifies location inside control boundaries.</param>
            <returns>Returns <see cref="T:System.DateTime"/> value if found; Null - otherwise.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.CalendarBase.UpdateSelectedDateGroup(System.Windows.DependencyProperty,System.Object)">
            <summary>
            Updates selected date related properties.
            </summary>
            <param name="property"></param>
            <param name="newValue"></param>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarBase.Theme">
            <summary>
            Gets or sets a <see cref="T:System.Windows.ResourceDictionary"/> object containing calendar theme resources.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarBase.Year">
            <summary>
            Gets or sets a year component of the <see cref="P:C1.Silverlight.Schedule.CalendarBase.SelectedDate"/> property.
            This is a dependency property.
            </summary>
            <remarks>
            Changing this property value explicitly or implicitly via the
            <see cref="P:C1.Silverlight.Schedule.CalendarBase.SelectedDate"/> property forces the control
            to refresh its UI so as to represent an updated month of a year.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarBase.Month">
            <summary>
            Gets or sets a month component of the <see cref="P:C1.Silverlight.Schedule.CalendarBase.SelectedDate"/> property.
            This is a dependency property.
            </summary>
            <remarks>
            Changing this property value explicitly or implicitly via the
            <see cref="P:C1.Silverlight.Schedule.CalendarBase.SelectedDate"/> property forces the control
            to refresh its UI so as to represent an updated month of a year.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarBase.SelectedDate">
            <summary>
            Gets or sets the currently selected date.
            This is a dependency property.
            </summary>
            <remarks>
            Changing this property may also change the <see cref="P:C1.Silverlight.Schedule.CalendarBase.Year"/> and/or
            <see cref="P:C1.Silverlight.Schedule.CalendarBase.Month"/> property values, which in turn will cause a refreshing
            of the control UI so as to represent an updated month of a year.
            Use this property when MaxSelectionCount is set to 1.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarBase.MinDate">
            <summary>
            Gets or sets the minimum allowable date.
            The default is 01/01/1753.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarBase.MaxDate">
            <summary>
            Gets or sets the maximum allowable date.
            The default is 12/31/9998.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarBase.CalendarHelper">
            <summary>
            Gets or sets the <see cref="P:C1.Silverlight.Schedule.CalendarBase.CalendarHelper"/> object
            that provides calendar-dependant properties.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarBase.DaysPanel">
            <summary>
            Gets or sets an ItemsPanelTemplate that defines the panel that lays out elements
            representing days of a month. This is a dependency property.
            </summary>
            <remarks>
            By default the <see cref="T:C1.Silverlight.C1UniformGrid"/> panel with 7 columns
            and 6 rows is used.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarBase.DaySlotTemplate">
            <summary>
            Gets or sets a DataTemplate that defines a UI representation of
            a single day of a month. This is a dependency property.
            </summary>
            <remarks>
            A DataContext for this template is a <see cref="T:C1.Silverlight.Schedule.DaySlot"/> object.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarBase.DaySlotStyle">
            <summary>
            Gets or sets a Style for <see cref="T:C1.Silverlight.Schedule.DaySlotPresenter"/> elements which are 
            the root elements of a visual tree representing a single day of a month.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarBase.DaysOfWeekPanel">
            <summary>
            Gets or sets an ItemsPanelTemplate that defines the panel that lays out elements
            representing days of the week. This is a dependency property.
            </summary>
            <remarks>
            By default the StackPanel with horizontal orientation is used.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarBase.DayOfWeekSlotTemplate">
            <summary>
            Gets or sets a DataTemplate that defines a UI representation of
            a single day of the week. This is a dependency property.
            </summary>
            <remarks>
            A DataContext for this template is a <see cref="T:C1.Silverlight.Schedule.DayOfWeekSlot"/> object.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarBase.DayOfWeekSlotStyle">
            <summary>
            Gets or sets a Style for <see cref="T:C1.Silverlight.Schedule.DayOfWeekSlotPresenter"/> elements which are 
            the root elements of a visual tree representing a single day of the week.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.CalendarBase.SelectedDateChanged">
            <summary>
            Occurs when the <see cref="P:C1.Silverlight.Schedule.CalendarBase.SelectedDate"/> property value has been changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarBase.SyncRepresentationToDateTime">
            <summary>
            Gets the Boolean value, determining
            whether control synchronizes it's representation according to 
            the changes of <see cref="T:System.DateTime"/> property.
            </summary>
            <remarks>Default implementation always returns true.</remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.GenerateAdjacentMonthDaysProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.GenerateAdjacentMonthDays"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.MonthCountProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthCount"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.MonthCalendarStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthCalendarStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.MonthSlotStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthSlotStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.MonthsPanelProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthsPanel"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.MonthWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthWidth"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.MonthHeightProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthHeight"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.SelectedDatesProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.SelectedDates"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Calendar.SelectedDatesChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            This method is called when SelectedDates dependency property value is changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.BoldedDatesProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.BoldedDates"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Calendar.BoldedDatesChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            This method is called when BoldedDates dependency property value is changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.MaxSelectionCountProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.MaxSelectionCount"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.MonthHeaderBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthHeaderBackground"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.MonthHeaderForegroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthHeaderForeground"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.NavigationButtonBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.NavigationButtonBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.DaysOfWeekBorderBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.DaysOfWeekBorderBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.SelectedDayBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.SelectedDayBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.TodayBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.TodayBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.WeekendBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.WeekendBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.AdjacentMonthDayBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.AdjacentMonthDayBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.MonthHeaderFontFamilyProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthHeaderFontFamily"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.MonthHeaderFontSizeProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthHeaderFontSize"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.MonthHeaderFontWeightProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthHeaderFontWeight"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.PreviousMonthCommand">
            <summary>
            Defines the command that makes a previous month the month that is currently 
            represented by the control.
            </summary>
            <remarks>
            This command is executed by the <see cref="T:C1.Silverlight.Schedule.CalendarBase"/> and is implemented 
            by the <see cref="M:C1.Silverlight.Schedule.C1Calendar.PreviousMonth"/> method.
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Calendar.NextMonthCommand">
            <summary>
            Defines the command that makes a next month the month that is currently 
            represented by the control.
            </summary>
            <remarks>
            This command is executed by the <see cref="T:C1.Silverlight.Schedule.CalendarBase"/> and is implemented 
            by the <see cref="M:C1.Silverlight.Schedule.C1Calendar.NextMonth"/> method.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Calendar.#ctor">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Silverlight.Schedule.C1Calendar"/> control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Calendar.PreviousMonth">
            <summary>
            Makes the previous month the month that is currently represented by the control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Calendar.NextMonth">
            <summary>
            Makes the next month the month that is currently represented by the control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Calendar.Today">
            <summary>
            Navigates control to the current date.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Calendar.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Selects continuous dates if mouse moved with left button pressed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.GenerateAdjacentMonthDays">
            <summary>
            Gets or sets a value that determines whether to show days corresponding
            to months which are adjacent for the months currently represented by the 
            control. The default value is False. This is a dependency property.
            </summary>
            <remarks>
            <para>
            If <see cref="P:C1.Silverlight.Schedule.C1Calendar.GenerateAdjacentMonthDays"/> is set to true, 
            the <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.GenerateAdjacentPreviousMonthDays"/>
            property for the <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/> showing a first of currently
            represented months
            and the <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.GenerateAdjacentNextMonthDays"/>
            property for the <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/> showing a last of currently
            represented months are set to true.
            </para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.MonthCount">
            <summary>
            Gets or sets a number of months currently represented by the calendar.
            The default value is 1. This is a dependency property.
            </summary>
            <remarks>
            <para>
            A default UI of the control is designed so as to fit as many child 
            <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/> controls as can fit in the current control size,
            taking into account the size of each single month calendar which is determined 
            by the <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthWidth"/> and <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthHeight"/> properties.
            As a result, when control is resized, a value of the <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthCount"/>
            property is changed automatically. 
            </para>
            <para>
            You can change default behavior by using custom ItemsPanelTemplate. 
            For more details see <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthsPanel"/> property description.
            </para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.MonthCalendarStyle">
            <summary>
            Gets or sets a Style applied to each child <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/>
            representing a single month. This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.MonthSlotStyle">
            <summary>
            Gets or sets a Style for <see cref="T:C1.Silverlight.Schedule.C1CalendarPresenter"/> elements 
            which are the root elements of a visual tree representing a single month.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.MonthsPanel">
            <summary>
            Gets or sets an ItemsPanelTemplate that defines the panel that lays out elements
            representing separate months. This is a dependency property.
            </summary>
            <remarks>
            <para>
            C1Calendar controls supports the next panels:
            <list type="bullet">
            <item>The <see cref="T:C1.Silverlight.C1UniformGrid"/> panel. This is a default setting.
            A value of the <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthCount"/> property is set automatically according to the available space.</item>
            <item>The <see cref="T:System.Windows.Controls.Grid"/> panel. A value of the <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthCount"/> property is set automatically 
            according to the grid definition.</item>
            <item>The <see cref="T:System.Windows.Controls.StackPanel"/> panel. 
            The <see cref="T:C1.Silverlight.Schedule.C1Calendar"/> control honors explicitely defined <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthCount"/> property value.</item>
            <item>The <see cref="T:System.Windows.Controls.VirtualizingStackPanel"/> panel. 
            The <see cref="T:C1.Silverlight.Schedule.C1Calendar"/> control honors explicitely defined <see cref="P:C1.Silverlight.Schedule.C1Calendar.MonthCount"/> property value.</item>
            </list>
            <example>
            <code>
            <![CDATA[
            <c1sched:C1Calendar MonthCount="4">
                <c1sched:C1Calendar.MonthsPanel>
                    <ItemsPanelTemplate> 
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate> 
                </c1sched:C1Calendar.MonthsPanel>
            </c1sched:C1Calendar>
            ]]>
            </code>
            </example>
            </para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.MonthWidth">
            <summary>
            Gets or sets a value that determines a width of each 
            month slot of the calendar.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.MonthHeight">
            <summary>
            Gets or sets a value that determines a height of each 
            month slot of the calendar.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.SelectedDates">
            <summary>
            Gets or sets the list of selected dates.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.BoldedDates">
            <summary>
            Gets or sets the list of bolded dates.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.MaxSelectionCount">
            <summary>
            Gets or sets the maximum number of days that can be selected in the control. 
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.MonthHeaderBackground">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Brush"/> object used to color month header.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.MonthHeaderForeground">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Brush"/> object used to color month header text.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.NavigationButtonBrush">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Brush"/> object used to color navigation buttons.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.DaysOfWeekBorderBrush">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Brush"/> object used to underline days of week.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.SelectedDayBrush">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Brush"/> object used to highlight selected dates.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.TodayBrush">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Brush"/> object used to highlight current date.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.WeekendBrush">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Brush"/> object used to display weekends.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.AdjacentMonthDayBrush">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Brush"/> object used to display adjacent month days.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.MonthHeaderFontFamily">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.FontFamily"/> object used to to display month header text.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.MonthHeaderFontSize">
            <summary>
            Gets or sets a <see cref="T:System.Double"/> value determining month header font size.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Calendar.MonthHeaderFontWeight">
            <summary>
            Gets or sets a <see cref="T:System.Windows.FontWeight"/> object used to to display month header text.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.C1CalendarItem">
            <summary>
            Represents a single month calendar with an ability to interactively navigate
            through months and select a specific DateTime or its components.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1CalendarItem.C1CalendarProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.C1Calendar"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1CalendarItem.GenerateAdjacentPreviousMonthDaysProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.GenerateAdjacentPreviousMonthDays"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1CalendarItem.GenerateAdjacentNextMonthDaysProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.GenerateAdjacentNextMonthDays"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1CalendarItem.ShowPreviousButtonProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.ShowPreviousButton"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1CalendarItem.ShowNextButtonProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.ShowNextButton"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1CalendarItem.MonthFullNameProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.MonthFullName"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1CalendarItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/> control.
            </summary>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1CalendarItem.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1CalendarItem.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarItem.C1Calendar">
            <summary>
            Gets a <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.C1Calendar"/> owning this <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/> control. 
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarItem.GenerateAdjacentPreviousMonthDays">
            <summary>
            Gets or sets a value that determines whether the day slots corresponding
            to days of a month previous to the currently represented one will show
            the days or will be empty. The default value is False.
            This is a dependency property.
            </summary>
            <remarks>
            <para>
            If <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.GenerateAdjacentPreviousMonthDays"/> is set to true, 
            the <see cref="T:C1.Silverlight.Schedule.DaySlot"/> objects generated in the <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.DaySlots"/> 
            collection for previous month days will not be empty 
            (<see cref="P:C1.Silverlight.Schedule.DaySlot.Empty"/> is false and <see cref="P:C1.Silverlight.Schedule.DaySlot.Date"/> contains
            a date from the previous month).
            </para>
            <para>
            If <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.GenerateAdjacentPreviousMonthDays"/> is set to false, 
            the <see cref="T:C1.Silverlight.Schedule.DaySlot"/> objects generated in the <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.DaySlots"/> 
            collection for previous month days will be empty 
            (<see cref="P:C1.Silverlight.Schedule.DaySlot.Empty"/> is false).
            </para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarItem.GenerateAdjacentNextMonthDays">
            <summary>
            Gets or sets a value that determines whether the day slots corresponding
            to days of a month next to the currently represented one will show
            the days or will be empty. 
            The default value is False. This is a dependency property.
            </summary>
            <remarks>
            <para>
            If <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.GenerateAdjacentNextMonthDays"/> is set to true, 
            the <see cref="T:C1.Silverlight.Schedule.DaySlot"/> objects generated in the <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.DaySlots"/> 
            collection for next month days will not be empty 
            (<see cref="P:C1.Silverlight.Schedule.DaySlot.Empty"/> is false and <see cref="P:C1.Silverlight.Schedule.DaySlot.Date"/> contains
            a date from the next month).
            </para>
            <para>
            If <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.GenerateAdjacentNextMonthDays"/> is set to false, 
            the <see cref="T:C1.Silverlight.Schedule.DaySlot"/> objects generated in the <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.DaySlots"/> 
            collection for previous month days will be empty 
            (<see cref="P:C1.Silverlight.Schedule.DaySlot.Empty"/> is false).
            </para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarItem.ShowPreviousButton">
            <summary>
            Gets or sets a value that determines whether to show the previous month navigation button.
            The default value is True. This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarItem.ShowNextButton">
            <summary>
            Gets or sets a value that determines whether to show the next month navigation button.
            The default value is True. This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarItem.MonthFullName">
            <summary>
            Gets a full name of a month currently represented by calendar taking into
            account current culture.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarItem.Months">
            <summary>
            Gets the <see cref="T:C1.Silverlight.Schedule.C1CalendarItem.DateTimeInfoCollection"/> object pre-populated with <see cref="T:C1.Silverlight.Schedule.DateTimeInfo"/>
            objects representing several adjoining months. This object can be used in xaml
            for navigating the <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/> control to the one of the adjoining months.
            </summary>
            <remarks>This property is used by default C1CalendarItem style. 
            For the sample of using look into source xaml: themes\CommonCalendarResources.xaml.</remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarItem.Years">
            <summary>
            Gets the <see cref="T:C1.Silverlight.Schedule.C1CalendarItem.DateTimeInfoCollection"/> object pre-populated with <see cref="T:C1.Silverlight.Schedule.DateTimeInfo"/>
            objects representing several adjoining years. This object can be used in xaml
            for navigating the <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/> control to the one of the adjoining years.
            </summary>
            <remarks>This property is used by default C1CalendarItem style. 
            For the sample of using look into source xaml: themes\CommonCalendarResources.xaml.</remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarItem.SyncRepresentationToDateTime">
            <summary>
            Gets the boolean value, determining whether control 
            synchronizes it's representation according to 
            the changes of <see cref="T:System.DateTime"/> property.
            </summary>
            <remarks>The return value is false.</remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarItem.DaySlots">
            <summary>
            Gets a collection of <see cref="T:C1.Silverlight.Schedule.DaySlot"/> elements defining a data based on 
            which a control UI representing month days is created.
            </summary>
            <remarks>
            The collection items (<see cref="T:C1.Silverlight.Schedule.DaySlot"/> objects) for this collection 
            are automatically generated 
            based on the <see cref="P:C1.Silverlight.Schedule.CalendarBase.Year"/> and <see cref="P:C1.Silverlight.Schedule.CalendarBase.Month"/> property values.
            These items are used as a basis for a creation of UI that represents days
            of month. For each <see cref="T:C1.Silverlight.Schedule.DaySlot"/> object in this collection, the calendar
            creates a UI elements tree according to DataTemplate defined in the 
            <see cref="P:C1.Silverlight.Schedule.CalendarBase.DaySlotTemplate"/> property and sets up the <see cref="T:C1.Silverlight.Schedule.DaySlot"/>
            as a DataContext for the elements in the tree. The root elements of those trees 
            are laid out by a panel defined in the <see cref="P:C1.Silverlight.Schedule.CalendarBase.DaysPanel"/> property.
            <para>
            The number of elements in the collection 7 * 6 = 42, where 7 is a number
            of days in a week and 6 is a maximum number of week lines in a calendar with
            a rectangular layout necessary to fit all the days.
            </para>
            <para>
            The first <see cref="T:C1.Silverlight.Schedule.DaySlot"/> in the collection corresponds to a first day
            of a week that includes a first day of a currently represented month.
            The DaySlots that don't correspond to a day in the currently represented month
            can be empty (<see cref="P:C1.Silverlight.Schedule.DaySlot.Empty"/> is true) or represent a day from
            an adjacent month, which depends on the 
            <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.GenerateAdjacentPreviousMonthDays"/> and
            <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.GenerateAdjacentNextMonthDays"/> property values.
            </para>
            </remarks>
        </member>
        <member name="T:C1.Silverlight.Schedule.C1CalendarItem.DateTimeInfoCollection">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.C1CalendarItem.DateTimeInfoCollection"/> class keeps the list of <see cref="T:C1.Silverlight.Schedule.DateTimeInfo"/>
            objects which can be used for the <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/> control navigation.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarItem.DateTimeInfoCollection.SelectedValue">
            <summary>
            Gets or sets a <see cref="T:C1.Silverlight.Schedule.DateTimeInfo"/> object corresponding to the month 
            and year which are currently displayed by the owning <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/> control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarItem.DateTimeInfoCollection.Collection">
            <summary>
            Gets a <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1"/> collection.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1CalendarItem.DateTimeInfoCollection.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.C1CalendarItemPresenter">
            <summary>
            An instance of this class is used in the C1CalendarItem's template
            visual tree to define a place where a panel with calendar days will appear.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1CalendarItemPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.C1CalendarItemPresenter"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1CalendarItemPresenter.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element used to display the specified item.
            </summary>
            <returns>The new instance of <see cref="T:C1.Silverlight.Schedule.DaySlotPresenter"/> class.</returns>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarItemPresenter.Calendar">
            <summary>
            Gets a <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/> owning the control.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.C1CalendarPresenter">
            <summary>
            An instance of this class is used in the C1Calendar's template
            visual tree to define a place where a panel with month calendars will appear.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1CalendarPresenter.CalendarProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1CalendarPresenter.Calendar"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1CalendarPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.C1CalendarPresenter"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1CalendarPresenter.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element used to display the specified item.
            </summary>
            <returns>The new instance of <see cref="T:C1.Silverlight.Schedule.MonthSlotPresenter"/> class.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1CalendarPresenter.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own ItemContainer. 
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1CalendarPresenter.OnApplyTemplate">
            <summary>
            Overrides the default behavior.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarPresenter.Calendar">
            <summary>
            Gets a <see cref="T:C1.Silverlight.Schedule.C1Calendar"/> owning the control.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.MonthSlotPresenter">
            <summary>
            An instance of this class is used to represent the single month. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.MonthSlotPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.MonthSlotPresenter"/> class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.MonthSlotPresenter.CalendarItem">
            <summary>
            Gets a <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/> control.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.C1CalendarResources">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.C1CalendarResources"/> keeps the set of resources used by the <see cref="T:C1.Silverlight.Schedule.CalendarBase"/> derived controls.
            Static fields of this class return default CalendarBase's themes.
            </summary>
            <remarks>
            Resource lookup behavior:
            <list type="bullet">
            <item>
            If Theme property is set to something other than Classic System Colors theme, the lookup 
            process checks for the requested key within the resource dictionary defined by the current control theme
            </item>
            <item>
            The lookup process checks resources in a usual way (in page, window or application resources)
            </item>
            <item>
            The lookup process checks resources in default theme dictionary.
            </item>
            </list>
            </remarks>
        </member>
        <member name="T:C1.Silverlight.Schedule.ThemeResources">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.ThemeResources"/> class is a base abstract class for ThemeResources classes. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.ThemeResources.RefreshResources">
            <summary>
            When overridden in a derived class, refreshes class properties from the current theme resources.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.ThemeResources.Theme">
            <summary>
            Gets or sets the <see cref="T:System.Windows.ResourceDictionary"/> object used as the theme for the control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1CalendarResources.#ctor">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Silverlight.Schedule.C1CalendarResources"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1CalendarResources.RefreshResources">
            <summary>
            Refreshes resources according to the currently selected theme.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarResources.Theme">
            <summary>
            Gets or sets the <see cref="T:System.Windows.ResourceDictionary"/> object used as the theme for the control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarResources.DaySlotStyle">
            <summary>
            Gets the <see cref="T:System.Windows.Style"/> object describing the style of single day slot.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarResources.DayOfWeekSlotStyle">
            <summary>
            Gets the <see cref="T:System.Windows.Style"/> object describing day of week slot style.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarResources.DaysPanel">
            <summary>
            Gets the <see cref="T:System.Windows.Controls.ItemsPanelTemplate"/> object defining the panel that lays out elements
            representing days of a month.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarResources.DaySlotTemplate">
            <summary>
            Gets the <see cref="T:System.Windows.DataTemplate"/> defining a UI representation of
            a single day of a month.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarResources.DaysOfWeekPanel">
            <summary>
            Gets the <see cref="T:System.Windows.Controls.ItemsPanelTemplate"/> defining the panel that lays out elements
            representing days of week.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarResources.DayOfWeekSlotTemplate">
            <summary>
            Gets the <see cref="T:System.Windows.DataTemplate"/> defining a UI representation of
            a single day of week.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarResources.MonthCalendarStyle">
            <summary>
            Gets the <see cref="T:System.Windows.Style"/> object describing style of a single month in a multi-month calendar.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarResources.MonthSlotStyle">
            <summary>
            Gets the <see cref="T:System.Windows.Style"/> object describing style of C1CalendarPresenter elements 
            which are the root elements of a visual tree representing a single month in a multi-month calendar.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1CalendarResources.MonthsPanel">
            <summary>
            Gets the <see cref="T:System.Windows.Controls.ItemsPanelTemplate"/> defining the panel that lays out elements
            representing separate months in a multi-month calendar.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.SelectionCommand">
            <summary>
            Determines the type of selection.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.SelectionCommand.Select">
            <summary>
            Select command.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.SelectionCommand.Unselect">
            <summary>
            Unselect command.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.SelectionCommand.Toggle">
            <summary>
            Toggle selection command.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.SelectionCommand.Extend">
            <summary>
            Extend selection command.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.DaySlot">
            <summary>
            Represents a day slot in the <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/> control.
            </summary>
            <remarks>
            An instance of this class can represent a day of a month or an empty slot,
            which is determined by the <see cref="P:C1.Silverlight.Schedule.DaySlot.Empty"/> property value. In the case
            when <see cref="T:C1.Silverlight.Schedule.DaySlot"/> is empty, the <see cref="P:C1.Silverlight.Schedule.DaySlot.Date"/> property will have
            a null value, but the other properties will still contain information that allows you
            to determine the placement of the slot in the calendar.
            For example the <see cref="P:C1.Silverlight.Schedule.DaySlot.DayOfWeek"/> property will determine a day of week 
            that the slot corresponds to.
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.DaySlot.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.DaySlot.IsSelected"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.DaySlot.IsBoldedProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.DaySlot.IsBolded"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.DaySlot.ToString">
            <summary>
            Returns string representation of the <see cref="P:C1.Silverlight.Schedule.DaySlot.Date"/> property value.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.Schedule.DaySlot.Date">
            <summary>
            Gets a date represented by the <see cref="T:C1.Silverlight.Schedule.DaySlot"/> object or a null value
            if the <see cref="T:C1.Silverlight.Schedule.DaySlot"/> is empty.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DaySlot.DayOfWeek">
            <summary>
            Gets the day of the week that this slot corresponds to.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DaySlot.Empty">
            <summary>
            Indicates whether the <see cref="T:C1.Silverlight.Schedule.DaySlot"/> is empty, that is doesn't
            represent a date.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DaySlot.IsWeekend">
            <summary>
            Indicates whether the <see cref="T:C1.Silverlight.Schedule.DaySlot"/> represents a weekend day.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DaySlot.IsAdjacent">
            <summary>
            Indicates whether the <see cref="T:C1.Silverlight.Schedule.DaySlot"/> represents a day from an adjacent
            month, but not of the month currently represented by 
            <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DaySlot.IsSelected">
            <summary>
            Indicates whether a day represented by the <see cref="T:C1.Silverlight.Schedule.DaySlot"/> is currently
            selected in <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/> UI. This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DaySlot.IsBolded">
            <summary>
            Indicates whether a day represented by the <see cref="T:C1.Silverlight.Schedule.DaySlot"/> is currently
            bolded in <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/> UI. This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DaySlot.Owner">
            <summary>
            Returns reference to the owning <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/> control.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.DaySlotPresenter">
            <summary>
            Represents a root element of a visual tree generated for a day slot of the
            <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/>.
            </summary>
            <remarks>
            A separate <see cref="T:C1.Silverlight.Schedule.DaySlotPresenter"/> element is generated for each
            <see cref="P:C1.Silverlight.Schedule.DaySlotPresenter.DaySlot"/> from the <see cref="P:C1.Silverlight.Schedule.C1CalendarItem.DaySlots"/>
            collection. 
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.DaySlotPresenter.StateToday">
            <summary>
            Identifies the Today state.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.DaySlotPresenter.StateRegularDay">
            <summary>
            Identifies the RegularDay state.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.DaySlotPresenter.GroupDay">
            <summary>
            Name of the Day state group.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.DaySlotPresenter.StateWeekend">
            <summary>
            Identifies the Weekend state.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.DaySlotPresenter.StateWeekDay">
            <summary>
            Identifies the WeekDay state.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.DaySlotPresenter.GroupWeekDay">
            <summary>
            Name of the WeekDayStates state group.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.DaySlotPresenter.StateBolded">
            <summary>
            Identifies the Bolded state.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.DaySlotPresenter.StateUnbolded">
            <summary>
            Identifies the Unbolded state.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.DaySlotPresenter.GroupBolded">
            <summary>
            Name of the BoldedStates state group.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.DaySlotPresenter.StateCurrent">
            <summary>
            Identifies the Current state.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.DaySlotPresenter.StateAdjacent">
            <summary>
            Identifies the Adjacent state.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.DaySlotPresenter.GroupMonth">
            <summary>
            Name of the MonthStates state group.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.DaySlotPresenter.EmptyProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.DaySlotPresenter.Empty"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.DaySlotPresenter.DateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.DaySlotPresenter.Date"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.DaySlotPresenter.#ctor">
            <summary>
            Creates a new instance of <see cref="T:C1.Silverlight.Schedule.DaySlotPresenter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.DaySlotPresenter.OnContentChanged(System.Object,System.Object)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="oldContent"></param>
            <param name="newContent"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.DaySlotPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:C1.Silverlight.Schedule.DaySlotPresenter.Empty">
            <summary>
            Indicates whether the <see cref="T:C1.Silverlight.Schedule.DaySlotPresenter"/> represents an empty 
            <see cref="P:C1.Silverlight.Schedule.DaySlotPresenter.DaySlot"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DaySlotPresenter.DaySlot">
            <summary>
            Gets a <see cref="P:C1.Silverlight.Schedule.DaySlotPresenter.DaySlot"/> represented by the <see cref="T:C1.Silverlight.Schedule.DaySlotPresenter"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DaySlotPresenter.Date">
            <summary>
            Gets a date representing by the <see cref="T:C1.Silverlight.Schedule.DaySlotPresenter"/> or a null value
            if the element represents an empty <see cref="P:C1.Silverlight.Schedule.DaySlotPresenter.DaySlot"/>.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.DaysOfWeekPresenter">
            <summary>
            An instance of this class is used in the C1CalendarItem's template
            visual tree to define a place where a panel with day of week captions will appear.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.DaysOfWeekPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.DaysOfWeekPresenter"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.DaysOfWeekPresenter.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element used to display the specified item.
            </summary>
            <returns>The new instance of <see cref="T:C1.Silverlight.Schedule.DayOfWeekSlotPresenter"/> class.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.DayOfWeekSlot">
            <summary>
            Provides a data about a day of a week for the <see cref="T:C1.Silverlight.Schedule.DaysOfWeekPresenter"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DayOfWeekSlot.DayOfWeek">
            <summary>
            Gets a day of a week represented by the <see cref="T:C1.Silverlight.Schedule.DayOfWeekSlot"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DayOfWeekSlot.DayShortName">
            <summary>
            Gets a culture specific short name for the <see cref="P:C1.Silverlight.Schedule.DayOfWeekSlot.DayOfWeek"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DayOfWeekSlot.DayShortestName">
            <summary>
            Gets a culture specific shortest name for the <see cref="P:C1.Silverlight.Schedule.DayOfWeekSlot.DayOfWeek"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DayOfWeekSlot.DayFullName">
            <summary>
            Gets a culture specific full name for the <see cref="P:C1.Silverlight.Schedule.DayOfWeekSlot.DayOfWeek"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DayOfWeekSlot.IsWeekend">
            <summary>
            Indicates whether the <see cref="P:C1.Silverlight.Schedule.DayOfWeekSlot.DayOfWeek"/> is a weekend.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DayOfWeekSlot.Owner">
            <summary>
            Returns reference to the owning <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/> control.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.DayOfWeekSlotPresenter">
            <summary>
            Represents a root element of a visual tree generated for a day of week slot of the
            <see cref="T:C1.Silverlight.Schedule.C1CalendarItem"/>.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.DayOfWeekSlotPresenter.StateWeekend">
            <summary>
            Identifies the Weekend state.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.DayOfWeekSlotPresenter.StateWeekDay">
            <summary>
            Identifies the WeekDay state.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.DayOfWeekSlotPresenter.GroupWeekDay">
            <summary>
            Name of the WeekDayStates state group.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.DayOfWeekSlotPresenter.#ctor">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Silverlight.Schedule.DayOfWeekSlotPresenter"/> control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DayOfWeekSlotPresenter.DayOfWeekSlot">
            <summary>
            Gets a <see cref="P:C1.Silverlight.Schedule.DayOfWeekSlotPresenter.DayOfWeekSlot"/> represented by the <see cref="T:C1.Silverlight.Schedule.DayOfWeekSlotPresenter"/>.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.EditCollectionControl">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.EditCollectionControl"/> control is an auxiliary control encapsulating
            UI elements for editing Appointment Categories, Links or Resource properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.EditCollectionControl.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.EditCollectionControl"/> control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.EditCollectionControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.EditCollectionControl.ButtonText">
            <summary>
            Gets or sets a <see cref="T:System.String"/> value whiuch should be used as a button content.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.EditCollectionControl.LabelText">
            <summary>
            Gets or sets a <see cref="T:System.String"/> value whiuch should be used as a label content.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.EditCollectionControl.Text">
            <summary>
            Gets or sets a <see cref="T:System.String"/> value whiuch should be used as a TextBox content.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.EditCollectionControl.ShowButton">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether control should show button for external editing
            or ComboBox for the single selection.
            </summary>
            <remarks>
            <para>If this property is true, control shows Button and TextBox. In such case editing and selection from the 
            source collection should be implemented by the caller, when <see cref="!:EditCollectionControl.Click"/>
            event is fired.</para>
            <para>If this property is false, controls shows ComboBox for the single selection. In this case,
            TargetCollection is updated automatically when user selects ComboBox item.</para></remarks>
            <value>The default value is true.</value>
        </member>
        <member name="P:C1.Silverlight.Schedule.EditCollectionControl.SourceCollection">
            <summary>
            Gets or sets an <see cref="T:System.Collections.IList"/> list, containing all available items.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.EditCollectionControl.TargetCollection">
            <summary>
            Gets or sets an <see cref="T:System.Collections.IList"/> list, containing selected items.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.EditCollectionControl.ItemType">
            <summary>
            Gets or sets a type of items in a source and target collections.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.EditCollectionControl.ParentAppointment">
            <summary>
            Gets or sets the appointment object, for which the control is shown.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.EditCollectionControl.WindowTitle">
            <summary>
            Gets or sets a <see cref="T:System.String"/> value which should be used as a dialog title.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.EditCollectionControl.Scheduler">
            <summary>
            Gets or sets the the parent <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> object.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.Business">
            <summary>
              Looks up a localized string similar to Business.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.Competition">
            <summary>
              Looks up a localized string similar to Competition.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.Favorites">
            <summary>
              Looks up a localized string similar to Favorites.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.Gifts">
            <summary>
              Looks up a localized string similar to Gifts.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.Goals">
            <summary>
              Looks up a localized string similar to Goals/Objectives.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.Holiday">
            <summary>
              Looks up a localized string similar to Holiday.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.HolidayCards">
            <summary>
              Looks up a localized string similar to Holiday Cards.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.HotContacts">
            <summary>
              Looks up a localized string similar to Hot Contacts.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.Ideas">
            <summary>
              Looks up a localized string similar to Ideas.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.International">
            <summary>
              Looks up a localized string similar to International.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.KeyCustomer">
            <summary>
              Looks up a localized string similar to Key Customer.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.Miscellanneous">
            <summary>
              Looks up a localized string similar to Miscellanneous.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.Personal">
            <summary>
              Looks up a localized string similar to Personal.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.PhoneCalls">
            <summary>
              Looks up a localized string similar to Phone Calls.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.Status">
            <summary>
              Looks up a localized string similar to Status.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.Strategies">
            <summary>
              Looks up a localized string similar to Strategies.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.Suppliers">
            <summary>
              Looks up a localized string similar to Suppliers.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.Time">
            <summary>
              Looks up a localized string similar to Time &amp; Expenses.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.VIP">
            <summary>
              Looks up a localized string similar to VIP.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Categories.Waiting">
            <summary>
              Looks up a localized string similar to Waiting.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.allDayEvent">
            <summary>
              Looks up a localized string similar to All day event.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.Appointment">
            <summary>
              Looks up a localized string similar to Appointment.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.categoriesButton">
            <summary>
              Looks up a localized string similar to Categories....
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.categoryLabel">
            <summary>
              Looks up a localized string similar to Category:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.contactLabel">
            <summary>
              Looks up a localized string similar to Contact:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.contactsButton">
            <summary>
              Looks up a localized string similar to Contacts....
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.deleteButton_ToolTip">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.endTime">
            <summary>
              Looks up a localized string similar to End time:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.Event">
            <summary>
              Looks up a localized string similar to Event.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.highImportance_ToolTip">
            <summary>
              Looks up a localized string similar to High Importance.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.label">
            <summary>
              Looks up a localized string similar to Label:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.location">
            <summary>
              Looks up a localized string similar to Location:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.lowImportance_ToolTip">
            <summary>
              Looks up a localized string similar to Low Importance.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.PART_DialogSaveButton_AccessText">
            <summary>
              Looks up a localized string similar to Save and Close.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.PART_DialogSaveButton_Tooltip">
            <summary>
              Looks up a localized string similar to Save and Close.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.private_">
            <summary>
              Looks up a localized string similar to Private.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.reccButton_AccessText">
            <summary>
              Looks up a localized string similar to Recurrence....
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.reccButton_ToolTip">
            <summary>
              Looks up a localized string similar to Recurrence.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.recurrence">
            <summary>
              Looks up a localized string similar to Recurrence:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.reminderSet">
            <summary>
              Looks up a localized string similar to Reminder:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.resourceLabel">
            <summary>
              Looks up a localized string similar to Resource:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.resourcesButton">
            <summary>
              Looks up a localized string similar to Resources....
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.saveAsButton_AccessText">
            <summary>
              Looks up a localized string similar to Save As....
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.saveAsButton_Tooltip">
            <summary>
              Looks up a localized string similar to Save As.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.showTimeAs">
            <summary>
              Looks up a localized string similar to Show time as:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.startTime">
            <summary>
              Looks up a localized string similar to Start time:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.subject">
            <summary>
              Looks up a localized string similar to Subject:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditAppointment.Untitled">
            <summary>
              Looks up a localized string similar to Untitled.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.btnCancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.btnOk">
            <summary>
              Looks up a localized string similar to Ok.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.btnRemove">
            <summary>
              Looks up a localized string similar to Remove Recurrence.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.dayNumberValidationError">
            <summary>
              Looks up a localized string similar to Please enter valid day number for the specified month..
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.duration">
            <summary>
              Looks up a localized string similar to Duration:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.end">
            <summary>
              Looks up a localized string similar to End:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.grpRange">
            <summary>
              Looks up a localized string similar to Range.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.grpRepeats">
            <summary>
              Looks up a localized string similar to Repeats.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.grpWhen">
            <summary>
              Looks up a localized string similar to When.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.lblEveryWeek">
            <summary>
              Looks up a localized string similar to Recur every.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.occurrences">
            <summary>
              Looks up a localized string similar to occurrences.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.occurrencesValidationError">
            <summary>
              Looks up a localized string similar to Please enter value in range 1 - 999..
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.rbDaily">
            <summary>
              Looks up a localized string similar to Daily.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.rbDailyRB">
            <summary>
              Looks up a localized string similar to Every.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.rbEndAfter">
            <summary>
              Looks up a localized string similar to End after:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.rbEndBy">
            <summary>
              Looks up a localized string similar to End by:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.rbMonthly">
            <summary>
              Looks up a localized string similar to Monthly.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.rbMonthlyNthRB">
            <summary>
              Looks up a localized string similar to The.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.rbMonthlyRB">
            <summary>
              Looks up a localized string similar to Day.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.rbNoEndDate">
            <summary>
              Looks up a localized string similar to No end date.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.rbWeekly">
            <summary>
              Looks up a localized string similar to Weekly.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.rbWorkdaysRB">
            <summary>
              Looks up a localized string similar to Every weekday.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.rbYearly">
            <summary>
              Looks up a localized string similar to Yearly.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.rbYearlyNthRB">
            <summary>
              Looks up a localized string similar to The.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.rbYearlyRB">
            <summary>
              Looks up a localized string similar to Every.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.start">
            <summary>
              Looks up a localized string similar to Start:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.Title">
            <summary>
              Looks up a localized string similar to Appointment Recurrence.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.txtDays">
            <summary>
              Looks up a localized string similar to day(s).
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.txtEveryWeek">
            <summary>
              Looks up a localized string similar to week(s) on:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.txtMonthly1">
            <summary>
              Looks up a localized string similar to of every.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.txtMonthly2">
            <summary>
              Looks up a localized string similar to month(s).
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.txtMonthlyNth1">
            <summary>
              Looks up a localized string similar to of every.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.txtMonthlyNth2">
            <summary>
              Looks up a localized string similar to month(s).
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.txtYearly">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.txtYearlyNth1">
            <summary>
              Looks up a localized string similar to of.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_EditRecurrence.txtYearlyNth2">
            <summary>
              Looks up a localized string similar to  .
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.Resources.C1_Schedule_Exceptions">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Exceptions.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Exceptions.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Exceptions.DateOutOfRange">
            <summary>
              Looks up a localized string similar to The valid value is between {0} and {1}..
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Exceptions.FormatNotSupported">
            <summary>
              Looks up a localized string similar to Format {0} is not supported..
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Exceptions.ImportError">
            <summary>
              Looks up a localized string similar to Unable to import data. File is in incorrect format or damaged..
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Exceptions.InvalidVCALInformation">
            <summary>
              Looks up a localized string similar to It is not valid VCALENDAR information..
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Exceptions.MappingRequired">
            <summary>
              Looks up a localized string similar to The required MappingName for the {0} is not specified..
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Exceptions.MethodNotSupported">
            <summary>
              Looks up a localized string similar to This method is not supported on this operating system..
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Exceptions.MinMaxDateValidationFailed">
            <summary>
              Looks up a localized string similar to The MaxDate value should be greater than MinDate value..
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Exceptions.NoFileOpenPermission">
            <summary>
              Looks up a localized string similar to There is no permission to open files..
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Exceptions.NoFileSavePermission">
            <summary>
              Looks up a localized string similar to There is no permission to save file..
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Exceptions.NotAllInforImported">
            <summary>
              Looks up a localized string similar to Not all information was imported due to not valid data..
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Exceptions.StartEndValidationFailed">
            <summary>
              Looks up a localized string similar to The End value should be greater than Start value..
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Exceptions.XmlImportError">
            <summary>
              Looks up a localized string similar to Cannot find C1Schedule node..
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.Resources.C1_Schedule_Labels">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Labels.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Labels.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Labels.Anniversary">
            <summary>
              Looks up a localized string similar to Anniversary.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Labels.Birthday">
            <summary>
              Looks up a localized string similar to Birthday.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Labels.Business">
            <summary>
              Looks up a localized string similar to Business.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Labels.Deadline">
            <summary>
              Looks up a localized string similar to Deadline.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Labels.Important">
            <summary>
              Looks up a localized string similar to Important.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Labels.MustAttend">
            <summary>
              Looks up a localized string similar to Must Attend.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Labels.NeedsPreparation">
            <summary>
              Looks up a localized string similar to Needs Preparation.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Labels.None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Labels.Personal">
            <summary>
              Looks up a localized string similar to Personal.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Labels.PhoneCall">
            <summary>
              Looks up a localized string similar to Phone Call.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Labels.TravelRequired">
            <summary>
              Looks up a localized string similar to Travel Required.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Labels.Vacation">
            <summary>
              Looks up a localized string similar to Vacation.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.Daily">
            <summary>
              Looks up a localized string similar to Occurs every day.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.Day">
            <summary>
              Looks up a localized string similar to day.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.EveryNDay">
            <summary>
              Looks up a localized string similar to Occurs every {0} days.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.EveryNMonth">
            <summary>
              Looks up a localized string similar to Occurs day {1} of every {0} months.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.EveryNMonthOnTheNWeekday">
            <summary>
              Looks up a localized string similar to Occurs the {1} {2} of every {0} months.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.EveryNWeek">
            <summary>
              Looks up a localized string similar to Occurs every {0} weeks on {1}.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.First">
            <summary>
              Looks up a localized string similar to 1.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.Fourth">
            <summary>
              Looks up a localized string similar to 4.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.IncorrectPattern">
            <summary>
              Looks up a localized string similar to incorrect reccurrence pattern.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.Last">
            <summary>
              Looks up a localized string similar to last.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.Monthly">
            <summary>
              Looks up a localized string similar to Occurs day {0} of every 1 month.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.MonthlyOnTheNWeekday">
            <summary>
              Looks up a localized string similar to Occurs the {0} {1} of every 1 month.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.NextAppointment">
            <summary>
              Looks up a localized string similar to Next Appointment.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.OnWorkingDays">
            <summary>
              Looks up a localized string similar to Occurs every week day.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.PreviousAppointment">
            <summary>
              Looks up a localized string similar to Previous Appointment.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.Second">
            <summary>
              Looks up a localized string similar to 2.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.Since">
            <summary>
              Looks up a localized string similar to  effective {0} from {1} to {2}..
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.SinceNTimes">
            <summary>
              Looks up a localized string similar to  effective {0} from {1} to {2}, {3} times..
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.SinceUntil">
            <summary>
              Looks up a localized string similar to  effective {0} until {1} from {2} to {3}..
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.Third">
            <summary>
              Looks up a localized string similar to 3.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.Weekday">
            <summary>
              Looks up a localized string similar to week day.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.Weekend">
            <summary>
              Looks up a localized string similar to weekend.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.Weekly">
            <summary>
              Looks up a localized string similar to Occurs every {0}.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.Yearly">
            <summary>
              Looks up a localized string similar to Occurs every {1} {0}.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_MiscStrings.YearlyNth">
            <summary>
              Looks up a localized string similar to Occurs the {0} {1} of {2}.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.Resources.C1_Schedule_RecChoice">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_RecChoice.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_RecChoice.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_RecChoice.btnCancel_Text">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_RecChoice.btnOk_Text">
            <summary>
              Looks up a localized string similar to Ok.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_RecChoice.OpenSeriesMessage">
            <summary>
              Looks up a localized string similar to &quot;{0}&quot; is a recurring appointment.\nDo you want to open only this occurrence or the series?.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_RecChoice.OpenTheSeries">
            <summary>
              Looks up a localized string similar to Open the series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_RecChoice.OpenThisOccurrence">
            <summary>
              Looks up a localized string similar to Open this occurrence.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_RecChoice.OpenTitle">
            <summary>
              Looks up a localized string similar to Open Recurring Appointment.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_RecChoice.RemoveSeriesMessage">
            <summary>
              Looks up a localized string similar to Do you want to delete all occurrences of the recurring appointment &quot;{0}&quot;, or just this one?.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_RecChoice.RemoveTheSeries">
            <summary>
              Looks up a localized string similar to Delete the series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_RecChoice.RemoveThisOccurrence">
            <summary>
              Looks up a localized string similar to Delete this occurrence.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_RecChoice.RemoveTitle">
            <summary>
              Looks up a localized string similar to Confirm Delete Appointment.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.Resources.C1_Schedule_SelectFromListScene">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_SelectFromListScene.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_SelectFromListScene.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_SelectFromListScene.available">
            <summary>
              Looks up a localized string similar to Available:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_SelectFromListScene.btnAdd_Text">
            <summary>
              Looks up a localized string similar to Add.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_SelectFromListScene.btnCancel_Text">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_SelectFromListScene.btnOk_Text">
            <summary>
              Looks up a localized string similar to Ok.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_SelectFromListScene.btnRemove_Text">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_SelectFromListScene.btnReset_Text">
            <summary>
              Looks up a localized string similar to Reset.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_SelectFromListScene.Categories">
            <summary>
              Looks up a localized string similar to Categories.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_SelectFromListScene.Contacts">
            <summary>
              Looks up a localized string similar to Contacts.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_SelectFromListScene.Resources">
            <summary>
              Looks up a localized string similar to Resources.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_SelectFromListScene.selected">
            <summary>
              Looks up a localized string similar to Selected:.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.btnDismiss_Text">
            <summary>
              Looks up a localized string similar to Dismiss.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.btnDismissAll_Text">
            <summary>
              Looks up a localized string similar to Dismiss All.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.btnOpen_Text">
            <summary>
              Looks up a localized string similar to Open Item.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.btnSnooze_Text">
            <summary>
              Looks up a localized string similar to Snooze.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.colSubject">
            <summary>
              Looks up a localized string similar to Subject.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.colTime">
            <summary>
              Looks up a localized string similar to Due in.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.lblLocation">
            <summary>
              Looks up a localized string similar to Location:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.lblSnooze">
            <summary>
              Looks up a localized string similar to Click Snooze to be reminded again in:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.lblStart">
            <summary>
              Looks up a localized string similar to Start time:.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.NDaysOverdue">
            <summary>
              Looks up a localized string similar to {0} days overdue.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.NHoursOverdue">
            <summary>
              Looks up a localized string similar to {0} hours overdue.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.NMinutesOverdue">
            <summary>
              Looks up a localized string similar to {0} minutes overdue.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.Now">
            <summary>
              Looks up a localized string similar to Now.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.OneDayOverdue">
            <summary>
              Looks up a localized string similar to 1 day overdue.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.OneHourOverdue">
            <summary>
              Looks up a localized string similar to 1 hour overdue.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.OneMinuteOverdue">
            <summary>
              Looks up a localized string similar to 1 minute overdue.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.OneReminder">
            <summary>
              Looks up a localized string similar to 1 Reminder.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.openMenuItem">
            <summary>
              Looks up a localized string similar to Open.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.RemindersNumber">
            <summary>
              Looks up a localized string similar to {0} Reminders.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.SelectedRemindersNumber">
            <summary>
              Looks up a localized string similar to Selected reminders -.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_ShowReminders.Title">
            <summary>
              Looks up a localized string similar to Reminders.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.Resources.C1_Schedule_Statuses">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Statuses.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Statuses.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Statuses.Busy">
            <summary>
              Looks up a localized string similar to Busy.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Statuses.Free">
            <summary>
              Looks up a localized string similar to Free.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Statuses.OutOfOffice">
            <summary>
              Looks up a localized string similar to Out of Office.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_Statuses.Tentative">
            <summary>
              Looks up a localized string similar to Tentative.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings.day">
            <summary>
              Looks up a localized string similar to day.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings.days">
            <summary>
              Looks up a localized string similar to days.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings.hour">
            <summary>
              Looks up a localized string similar to hour.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings.hours">
            <summary>
              Looks up a localized string similar to hours.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings.minute">
            <summary>
              Looks up a localized string similar to minute.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings.minutes">
            <summary>
              Looks up a localized string similar to minutes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings.NDays">
            <summary>
              Looks up a localized string similar to {0} days.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings.NHours">
            <summary>
              Looks up a localized string similar to {0} hours.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings.NMinutes">
            <summary>
              Looks up a localized string similar to {0} minutes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings.NWeeks">
            <summary>
              Looks up a localized string similar to {0} weeks.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings.OneDay">
            <summary>
              Looks up a localized string similar to 1 day.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings.OneHour">
            <summary>
              Looks up a localized string similar to 1 hour.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings.OneMinute">
            <summary>
              Looks up a localized string similar to 1 minute.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings.OneWeek">
            <summary>
              Looks up a localized string similar to 1 week.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings.week">
            <summary>
              Looks up a localized string similar to week.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.Resources.C1_Schedule_TimeStrings.weeks">
            <summary>
              Looks up a localized string similar to weeks.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.IntervalAppointmentPresenter">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.IntervalAppointmentPresenter"/> class represents 
            the single appointment element in the C1Scheduler UI
            and allows in-place appointment editing.
            </summary>
            <remarks>
            When user clicks on the IntervalAppointmentPresenter it tries to find and focus child element 
            with x:Name="PART_Subject". It is used for switching appointment element 
            into in-place editing mode.
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.IntervalAppointmentPresenter.IsReadOnlyProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.IntervalAppointmentPresenter.IsReadOnly"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.IntervalAppointmentPresenter.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.IntervalAppointmentPresenter.IsSelected"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.IntervalAppointmentPresenter.IsNotAllDayEventProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.IntervalAppointmentPresenter.IsNotAllDayEvent"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.IntervalAppointmentPresenter.ShowTimeBorderThicknessProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.IntervalAppointmentPresenter.ShowTimeBorderThickness"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.IntervalAppointmentPresenter.LabelBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.IntervalAppointmentPresenter.LabelBrush"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.IntervalAppointmentPresenter.IsOccurrenceProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.IntervalAppointmentPresenter.IsOccurrence"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.IntervalAppointmentPresenter.IsExceptionProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.IntervalAppointmentPresenter.IsException"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.IntervalAppointmentPresenter.TextWrappingProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.IntervalAppointmentPresenter.TextWrapping"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.IntervalAppointmentPresenter.#ctor">
            <summary>
            Creates the new instance of the <see cref="T:C1.Silverlight.Schedule.IntervalAppointmentPresenter"/> class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.IntervalAppointmentPresenter.IsReadOnly">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value that indicates whether 
            the <see cref="T:C1.Silverlight.Schedule.IntervalAppointmentPresenter"/> is read-only to a user interacting with the control. 
            This is a dependency property.
            </summary>
            <remarks>This value only affects a user who is interacting with the control. 
            The contents of the <see cref="P:C1.Silverlight.Schedule.IntervalAppointmentPresenter.AppointmentWrapPanel"/> can always be modified programmatically.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.IntervalAppointmentPresenter.IsSelected">
            <summary>
            Gets or sets a value that determines whether the UI element that has this 
            <see cref="P:C1.Silverlight.Schedule.IntervalAppointmentPresenter.IntervalAppointment"/> as a DataContext is selected.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.IntervalAppointmentPresenter.ShowTimeBorderThickness">
            <summary>
            Gets or sets a value determining the thickness of appointment availability status border.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.IntervalAppointmentPresenter.TextWrapping">
            <summary>
            Gets or sets how the text should be aligned.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.IntervalAppointmentPresenter.IsNotAllDayEvent">
            <summary>
            Gets a boolean value specifying whether Appointment is not All-Day event.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.IntervalAppointmentPresenter.IsOccurrence">
            <summary>
            Gets a boolean value specifying whether Appointment is an occurrence of a recurrence pattern.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.IntervalAppointmentPresenter.IsException">
            <summary>
            Gets a boolean value specifying whether Appointment is an exception of a recurrence pattern.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.IntervalAppointmentPresenter.LabelBrush">
            <summary>
            Gets a <see cref="T:System.Windows.Media.Brush"/> corresponding to the Appointment.Label.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.AppointmentWrapPanel">
            <summary>
            Positions child elements in sequential position from left to right, 
            breaking content to the next line at the edge of the containing box. 
            Subsequent ordering happens sequentially from top to bottom or from right to left, 
            depending on the value of the <see cref="T:System.Windows.Controls.Orientation"/> property. 
            If <see cref="T:System.Windows.Controls.Orientation"/> property is <see cref="F:System.Windows.Controls.Orientation.Vertical"/>
            this panel behaves as the base class.
            If <see cref="T:System.Windows.Controls.Orientation"/> property is <see cref="F:System.Windows.Controls.Orientation.Horizontal"/>
            then <see cref="T:C1.Silverlight.Schedule.AppointmentWrapPanel"/> tries to position child elements in 
            available space. For example, it doesn't wrap the child to the next line if
            the next line invisible. Instead, it shows as much as possible in
            the last visible line.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.AppointmentWrapPanel.DockLastChildToEndProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.AppointmentWrapPanel.DockLastChildToEnd"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.AppointmentWrapPanel.#ctor">
            <summary>
            Creates the new instance of the <see cref="T:C1.Silverlight.Schedule.AppointmentWrapPanel"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.AppointmentWrapPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of a <see cref="T:C1.Silverlight.Schedule.AppointmentWrapPanel"/> element. 
            </summary>
            <param name="finalSize">The <see cref="T:System.Windows.Size"/> that this element 
            should use to arrange its child elements.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the arranged size 
            of this <see cref="T:C1.Silverlight.Schedule.AppointmentWrapPanel"/> element and its children.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.AppointmentWrapPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child elements of a <see cref="T:C1.Silverlight.Schedule.AppointmentWrapPanel"/> in anticipation 
            of arranging them during the <see cref="M:C1.Silverlight.Schedule.AppointmentWrapPanel.ArrangeOverride(System.Windows.Size)"/> pass. 
            </summary>
            <param name="constraint">An upper limit <see cref="T:System.Windows.Size"/> that should not be exceeded.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="P:C1.Silverlight.Schedule.AppointmentWrapPanel.DockLastChildToEnd">
            <summary>
            The DockLastChildToEnd property determines whether the last child element should be docked
            to the bottom right corner of the <see cref="T:C1.Silverlight.Schedule.AppointmentWrapPanel"/>.
            The default value is False. This is a dependency property.
            </summary>
            <remarks>For the sample of using look at IntervalAppointmentTemplate in Office 2007 themes.
            It always shows appointment icons in the bottom right corner of the <see cref="T:C1.Silverlight.Schedule.AppointmentWrapPanel"/>.
            </remarks>
        </member>
        <member name="T:C1.Silverlight.Schedule.AppointmentFilterEnum">
            <summary>
            Determines the type of appointments drawn by 
            the <see cref="T:C1.Silverlight.Schedule.AppointmentsCoverPane"/> pane. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.AppointmentFilterEnum.All">
            <summary>
            All appointments.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.AppointmentFilterEnum.Event">
            <summary>
            All-day and multi-day events.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.AppointmentFilterEnum.Appointment">
            <summary>
            Appointments with duration less than 1 day.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.AppointmentsCoverPane">
            <summary>
            Provides a surface for painting appointment boxes over an arbitrary visual
            intervals layout.
            </summary>
            <remarks>
            <see cref="T:C1.Silverlight.Schedule.AppointmentsCoverPane"/> allows you to visually represent a set of appointments 
            that fit in a time range exposed by a current view, and to draw appointment boxes 
            relative to UI elements representing <see cref="T:C1.Silverlight.Schedule.VisualInterval"/>s covered by the appointment. 
            The <see cref="T:C1.Silverlight.Schedule.AppointmentsCoverPane"/> element, being placed somewhere inside 
            <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> visual tree (usually in C1Scheduler's ControlTemplate), 
            provides a surface where it draws appointment boxes relative to UI elements 
            representing VisualIntervals. AppointmentsCoverPane is capable to recognize the 
            case when the appointment box must be divided into two or more visual boxes, 
            for example, if appointment covers three days in the Working Week View, 
            AppointmentsCoverPane will automatically draw three boxes for the appointment, 
            each box in a corresponding day column, with starting and ending edges positioned 
            at interval UI elements corresponding to start and end time of the appointment 
            in this day.
            <para>
            AppointmentsCoverPane provides this functionality for an arbitrary UI representing 
            <see cref="T:C1.Silverlight.Schedule.VisualInterval"/>s. To make it possible, each element that can be 
            treated as VisualInterval UI representative (usually it's an outer (root) element 
            in the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalTemplate"/> definition) must have the 
            attached <see cref="F:C1.Silverlight.Schedule.CoverElementsPane.OrientationProperty"/> assigned 
            (<see cref="T:C1.Silverlight.Schedule.CoverElementsPane"/> is the base class for 
            <see cref="T:C1.Silverlight.Schedule.AppointmentsCoverPane"/>). The assigned value indicates a chronological 
            flow direction of interval elements and can take Horizontal or Vertical values. 
            For example, interval elements in the Working Week View have it assigned to 
            Vertical, while elements of Month View assign it to Horizontal.
            A content of an appointment box of AppointmentsCoverPane is represented by 
            DataTemplate defined in the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.IntervalAppointmentTemplate"/> 
            property.
            </para>
            </remarks>
        </member>
        <member name="T:C1.Silverlight.Schedule.CoverElementsPane">
            <summary>
            Provides a surface for painting UI elements over the arbitrary layout.
            </summary>
            <remarks>
            <see cref="T:C1.Silverlight.Schedule.CoverElementsPane"/> allows you to visually represent a set of UI elements 
            relative to UI elements representing the underlying UI. 
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.ICoverElementsPane.ContinueDataObjectAction(System.Object,C1.Silverlight.Schedule.ICoverElementsPane,C1.Silverlight.Schedule.ICoverElementsPane)">
            <summary>
            Moves data object from one pane to another.
            </summary>
            <param name="dataObject"></param>
            <param name="oldPane"></param>
            <param name="newPane"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.ICoverElementsPane.IsPaneElement(System.Windows.FrameworkElement)">
            <summary>
            Determines whether element is covered by the <see cref="T:C1.Silverlight.Schedule.ICoverElementsPane"/> object.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.ICoverElementsPane.UpdateHostElements">
            <summary>
            Updates cached HostElementsList list.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.ICoverElementsPane.CoordinatesRoot">
            <summary>
            Returns an element that is used as a reference point for all coordinates
            passed to <see cref="T:C1.Silverlight.Schedule.ICoverPaneHost"/> (e.g. in the 
            <see cref="M:C1.Silverlight.Schedule.ICoverPaneHost.ProcessDataObjectAction(C1.Silverlight.Schedule.ICoverElementsPane,System.Object,C1.Silverlight.Schedule.CoverPaneChunkActionEnum,System.Windows.Point,System.Boolean)"/> method).
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.ICoverElementsPane.HostElementsList">
            <summary>
            Returns the list of child FrameworkElements covered by the ICoverElementsPanem which have
            CoverElementsPane.Orientation property set.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CoverElementsPane.PaneNameProperty">
            <summary>
            Identifies the <see cref="!:PaneName"/> attached property.
            If you use several <see cref="T:C1.Silverlight.Schedule.CoverElementsPane"/> objects in a single template, 
            you should specify this property on a covered element that has 
            the <see cref="F:C1.Silverlight.Schedule.CoverElementsPane.OrientationProperty"/> property set.
            Set this value to the value of the <see cref="P:System.Windows.FrameworkElement.Name"/>
            property of the corresponding <see cref="T:C1.Silverlight.Schedule.CoverElementsPane"/> object. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CoverElementsPane.OrientationProperty">
            <summary>
            Identifies the <see cref="T:System.Windows.Controls.Orientation"/> attached property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CoverElementsPane.CoverElementsHeightProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.CoverElementsPane.CoverElementsHeight"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CoverElementsPane.CoverElementsMarginProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.CoverElementsPane.CoverElementsMargin"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CoverElementsPane.CoverElementsOverflowProperty">
            <summary>
            Identifies the <see cref="!:CoverElementsOverflow"/> attached property.
            Being set to true on a covered element that has the 
            <see cref="F:C1.Silverlight.Schedule.CoverElementsPane.OrientationProperty"/> property set, indicates that there are too
            many covering elements to be represented in the element. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.CoverElementsPane.IsDragDropDisabledProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.CoverElementsPane.IsDragDropDisabled"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementsPane.#ctor">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Silverlight.Schedule.CoverElementsPane"/> pane.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementsPane.GetPaneName(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the PaneName attached property for a given framework element. 
            </summary>
            <param name="element">The <see cref="T:System.Windows.FrameworkElement"/> from which the property value is read.</param>
            <returns>The <see cref="T:System.String"/> value of the specified element.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementsPane.SetPaneName(System.Windows.FrameworkElement,System.String)">
            <summary>
            Sets the value of the PaneName attached property for a given framework element. 
            </summary>
            <param name="element">The <see cref="T:System.Windows.FrameworkElement"/> for which the property value is set.</param>
            <param name="value">The <see cref="T:System.String"/> value to be set on the specified element.</param>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementsPane.GetOrientation(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the Orientation attached property for a given framework element. 
            </summary>
            <param name="element">The <see cref="T:System.Windows.FrameworkElement"/> from which the property value is read.</param>
            <returns>The <see cref="T:System.Windows.Controls.Orientation"/> value of the specified element.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementsPane.SetOrientation(System.Windows.FrameworkElement,System.Nullable{System.Windows.Controls.Orientation})">
            <summary>
            Sets the value of the Orientation attached property for a given framework element. 
            </summary>
            <param name="element">The <see cref="T:System.Windows.FrameworkElement"/> for which the property value is set.</param>
            <param name="value">The <see cref="T:System.Windows.Controls.Orientation"/> value to be set on the specified element.</param>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementsPane.GetCoverElementsOverflow(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the CoverElementsOverflow attached property for a given framework element. 
            </summary>
            <param name="element">The <see cref="T:System.Windows.FrameworkElement"/> from which the property value is read.</param>
            <returns>The <see cref="T:System.Boolean"/> value of the specified element.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementsPane.SetCoverElementsOverflow(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Sets the value of the CoverElementsOverflow attached property for a given framework element. 
            </summary>
            <param name="element">The <see cref="T:System.Windows.FrameworkElement"/> for which the property value is set.</param>
            <param name="value">The <see cref="T:System.Boolean"/> value to be set on the specified element.</param>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementsPane.OnApplyTemplate">
            <summary>
            Overrides the default behavior.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementsPane.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementsPane.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoverElementsPane.IsDragDropDisabled">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value that indicates whether 
            the <see cref="T:C1.Silverlight.Schedule.CoverElementsPane"/> doesn't allow resizing and drag operations. 
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoverElementsPane.ContentKind">
            <summary>
            Gets or sets the type of content acceptable by the current instance of <see cref="T:C1.Silverlight.Schedule.CoverElementsPane"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoverElementsPane.DataCoverElements">
            <summary>
            Gets a list of <see cref="T:C1.Silverlight.Schedule.CoverElement"/> objects that are drawn on this
            CoverElementPane.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoverElementsPane.ChunkBreakingAngle">
            <summary>
            Gets or sets a <see cref="T:System.Double"/> value specifying the breaking angle for painted UI elements.
            </summary>
            <remarks>The <see cref="T:C1.Silverlight.Schedule.CoverElementsPane"/> lays out UI elements over the arbitrary UI.
            If the layout direction is changed by an angle greater than what is specified in 
            the <see cref="P:C1.Silverlight.Schedule.CoverElementsPane.ChunkBreakingAngle"/> property, then painted UI element will be broken into pieces.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoverElementsPane.ExtendOnOverflow">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value, specifying the <see cref="T:C1.Silverlight.Schedule.CoverElementsPane"/>  
            behavior in the case when covering elements do not fit into the available space.
            If False, the <see cref="F:C1.Silverlight.Schedule.CoverElementsPane.CoverElementsOverflowProperty"/> will be set to True. This is default behavior.
            If True, the covered element will be extended in order to accommodate all covering elements.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoverElementsPane.CoverElementsMargin">
            <summary>
            Gets or sets a <see cref="T:System.Double"/> value, determining margins of the cover elements.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoverElementsPane.CoverElementsHeight">
            <summary>
            Gets or sets a <see cref="T:System.Double"/> value, determining height of the cover elements.
            This property makes sense for horizontal orientation only. 
            The default value is 27.
            If <see cref="P:C1.Silverlight.Schedule.CoverElementsPane.ExtendOnOverflow"/> is false, and <see cref="P:C1.Silverlight.Schedule.CoverElementsPane.CoverElementsHeight"/> is NaN,
            every cover element will have height equal to covered element height reduced by the value of
            <see cref="P:C1.Silverlight.Schedule.CoverElementsPane.CoverElementsMargin"/> property. The height will be changed automatically 
            at resizing of underlying UI.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.AppointmentsCoverPane.AppointmentFilterProperty">
            <summary>
            The AppointmentFilter attached property can be used to specify
            which type of appointments should be drawn by the 
            <see cref="T:C1.Silverlight.Schedule.AppointmentsCoverPane"/> pane.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.AppointmentsCoverPane.KeepTimesAtDropProperty">
            <summary>
            The KeepTimesAtDrop attached property determines the behavior of moved (dragged) appointments. 
            If this value is True, after dragging an appointment to the desired VisualInterval, 
            the Appointment start date is changed to the VisualInterval start date. 
            If this value is False, the Appointment.Start becomes equal to the VisualInterval.StartTime, 
            and Appointment.Duration becomes equal to the VisualInterval.TimeScale. The default value is False.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.AppointmentsCoverPane.IntervalAppointmentTemplateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.AppointmentsCoverPane.IntervalAppointmentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.AppointmentsCoverPane.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:C1.Silverlight.Schedule.AppointmentsCoverPane"/> pane.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.AppointmentsCoverPane.GetAppointmentFilter(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the AppointmentFilter attached property for a given framework element. 
            </summary>
            <param name="element">The <see cref="T:System.Windows.FrameworkElement"/> from which the property value is read.</param>
            <returns>The <see cref="T:C1.Silverlight.Schedule.AppointmentFilterEnum"/> value of the specified element.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.AppointmentsCoverPane.SetAppointmentFilter(System.Windows.FrameworkElement,C1.Silverlight.Schedule.AppointmentFilterEnum)">
            <summary>
            Sets the value of the AppointmentFilter attached property for a given framework element. 
            </summary>
            <param name="element">The <see cref="T:System.Windows.FrameworkElement"/> for which the property value is set.</param>
            <param name="value">The <see cref="T:C1.Silverlight.Schedule.AppointmentFilterEnum"/> value to be set on the specified element.</param>
        </member>
        <member name="M:C1.Silverlight.Schedule.AppointmentsCoverPane.GetKeepTimesAtDrop(System.Windows.FrameworkElement)">
            <summary>
            Gets the value of the KeepTimesAtDrop attached property for a given framework element. 
            </summary>
            <param name="element">The <see cref="T:System.Windows.FrameworkElement"/> from which the property value is read.</param>
            <returns>The <see cref="T:System.Boolean"/> value of the specified element.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.AppointmentsCoverPane.SetKeepTimesAtDrop(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Sets the value of the KeepTimesAtDrop attached property for a given framework element. 
            </summary>
            <param name="element">The <see cref="T:System.Windows.FrameworkElement"/> for which the property value is set.</param>
            <param name="value">The <see cref="T:System.Boolean"/> value to be set on the specified element.</param>
        </member>
        <member name="P:C1.Silverlight.Schedule.AppointmentsCoverPane.IntervalAppointmentTemplate">
            <summary>
            Gets or sets a DataTemplate that defines a UI representation of
            an <see cref="T:C1.Silverlight.Schedule.IntervalAppointment"/> object. This is a dependency property.
            </summary>
            <remarks>
            A single appointment can be represented by multiple elements in control's view.
            For example, in the Months view the appointment that hit two weeks will be 
            represented by two separate elements, a different element for each week.
            Because of this, a DataContext for the appointment template is a 
            <see cref="T:C1.Silverlight.Schedule.IntervalAppointment"/> object (but not an <see cref="!:Appointment"/>), 
            which represents the chunk of
            appointment covering a specific period of time that can be shown by a
            single UI element.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.AppointmentsCoverPane.ContentKind">
            <summary>
            Gets the type of content acceptable by the current instance of <see cref="T:C1.Silverlight.Schedule.AppointmentsCoverPane"/>.
            </summary>
            <remarks> This property always returns typeof(IntervalAppointment).
            The setter for this property does nothing.</remarks>
        </member>
        <member name="T:C1.Silverlight.Schedule.CoverElement">
            <summary>
            Defines a construction that describes a UI that represents a single data object.
            The UI is constituted of a number of CoverElementChunk elements.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElement.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.CoverElement"/> class.
            </summary>
            <param name="dataObject">The represented data object.</param>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoverElement.DataObject">
            <summary>
            Gets an <see cref="T:System.Object"/> which is represented by the current <see cref="T:C1.Silverlight.Schedule.CoverElement"/> instance.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoverElement.Chunks">
            <summary>
            Gets a list of <see cref="T:C1.Silverlight.Schedule.CoverElementChunk"/> elements that constitute this
            CoverElement UI.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoverElement.CoveredElements">
            <summary>
            Gets a list of elements that are covered by this CoverElement.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.CoverElementCollection">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.CoverElementCollection"/> is a observable keyed collection of <see cref="T:C1.Silverlight.Schedule.CoverElement"/> objects.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.C1ObservableKeyedCollection`2">
            <summary>
            The <see cref="T:C1.C1Schedule.C1ObservableCollection`1"/> is the base class for all 
            <see cref="T:System.Collections.ObjectModel.KeyedCollection`2"/> derived collections. Supports notification.
            </summary>
            <typeparam name="TKey">The type of keys in the collection.</typeparam>
            <typeparam name="TItem">The type of objects to keep in the collection.</typeparam>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.C1ObservableKeyedCollection`2"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.C1ObservableKeyedCollection`2"/> class.
            </summary>
            <param name="comparer">The implementation of the <see cref="T:System.Collections.IEqualityComparer"/> generic interface 
            to use when comparing keys, or a null reference (Nothing in Visual Basic) 
            to use the default equality comparer for the type of the key, obtained 
            from EqualityComparer.Default.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
            <summary>
            
            </summary>
            <param name="comparer"></param>
            <param name="dictionaryCreationThreshold"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.ClearItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.InsertItem(System.Int32,`1)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.RemoveItem(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.SetItem(System.Int32,`1)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementCollection.#ctor(C1.Silverlight.Schedule.CoverElementsPane)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.CoverElementCollection"/> class.
            </summary>
            <param name="owner">An owning <see cref="T:C1.Silverlight.Schedule.CoverElementsPane"/> pane.</param>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementCollection.GetKeyForItem(C1.Silverlight.Schedule.CoverElement)">
            <summary>
            Returns the <see cref="P:C1.Silverlight.Schedule.CoverElement.DataObject"/> property value.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoverElementCollection.Owner">
            <summary>
            Gets a reference to the owning <see cref="T:C1.Silverlight.Schedule.CoverElementsPane"/> pane.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoverElementCollection.Item(System.Int32)">
            <summary>
            Gets an object by index.
            </summary>
            <param name="index"></param>
            <returns></returns>
            <remarks>The default implementation tries to get an object by key if integer value is specified.</remarks>
        </member>
        <member name="T:C1.Silverlight.Schedule.CoveredElement">
            <summary>
            Defines a construction that describes a wrapper for the single covered element.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoveredElement.#ctor(System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.CoveredElement"/> class.
            </summary>
            <param name="owner">The actual <see cref="T:System.Windows.FrameworkElement"/>.</param>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoveredElement.Owner">
            <summary>
            Gets a <see cref="T:System.Windows.FrameworkElement"/> which is wrapped 
            by the current <see cref="T:C1.Silverlight.Schedule.CoveredElement"/> instance.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.CoveredElementsCollection">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.CoveredElementsCollection"/> represents an observable collection of
            <see cref="T:System.Windows.FrameworkElement"/>s.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.CoverElementChunk">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.CoverElementChunk"/> class represents an indivisible part of a UI for a data object.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementChunk.#ctor">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Silverlight.Schedule.CoverElementChunk"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementChunk.SetOwner(C1.Silverlight.Schedule.CoverElement)">
            <summary>
            WARNING: don't call this method directly.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoverElementChunk.Owner">
            <summary>
            Gets the owning <see cref="T:C1.Silverlight.Schedule.CoverElement"/> object.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoverElementChunk.CoveredElements">
            <summary>
            Gets the <see cref="T:C1.Silverlight.Schedule.CoveredElementsCollection"/> object representing the collection
            of elements covered by this <see cref="T:C1.Silverlight.Schedule.CoverElementChunk"/> object.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoverElementChunk.IsFirst">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value determining if this <see cref="T:C1.Silverlight.Schedule.CoverElementChunk"/> object
            is the first one in the representation of the data object.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoverElementChunk.IsLast">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value determining if this <see cref="T:C1.Silverlight.Schedule.CoverElementChunk"/> object
            is the last one in the representation of the data object.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoverElementChunk.Lane">
            <summary>
            Zero-based
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.CoverElementChunkCollection">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.CoverElementChunkCollection"/> represents the observable collection of
            <see cref="T:C1.Silverlight.Schedule.CoverElementChunk"/> objects.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.C1ObservableCollection`1">
            <summary>
            The <see cref="T:C1.C1Schedule.C1ObservableCollection`1"/> is the base class for all 
            <see cref="T:System.Collections.ObjectModel.Collection`1"/> derived collections. Supports notification.
            </summary>
            <typeparam name="T">The type of objects to keep in collection.</typeparam>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.C1ObservableCollection`1"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.C1ObservableCollection`1"/> class.
            </summary>
            <param name="list">The <see cref="T:System.Collections.Generic.IList`1"/> list that is wrapped 
            by the new collection.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.ClearItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.RemoveItem(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.SetItem(System.Int32,`0)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementChunkCollection.#ctor(C1.Silverlight.Schedule.CoverElement)">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Silverlight.Schedule.CoverElementChunkCollection"/> collection.
            </summary>
            <param name="owner">The owning <see cref="T:C1.Silverlight.Schedule.CoverElement"/> object.</param>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementChunkCollection.InsertItem(System.Int32,C1.Silverlight.Schedule.CoverElementChunk)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementChunkCollection.RemoveItem(System.Int32)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementChunkCollection.ClearItems">
            <summary>
            Overrides the default behavior.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.CoverElementChunkCollection.SetItem(System.Int32,C1.Silverlight.Schedule.CoverElementChunk)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="P:C1.Silverlight.Schedule.CoverElementChunkCollection.Owner">
            <summary>
            Gets the owning <see cref="T:C1.Silverlight.Schedule.CoverElement"/> object.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.EditAppointmentControl">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.EditAppointmentControl"/> control allows editing of all appointment properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.EditAppointmentControl.#ctor">
            <summary>
            Creates the new instance of the <see cref="T:C1.Silverlight.Schedule.EditAppointmentControl"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.EditAppointmentControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.EditAppointmentControl.Appointment">
            <summary>
            Gets or sets an <see cref="P:C1.Silverlight.Schedule.EditAppointmentControl.Appointment"/> object representing current DataContext.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.EditAppointmentControl.Header">
            <summary>
            Gets a <see cref="T:System.String"/> value which can be used as an Appointment window header.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.EditAppointmentControl.PatternDescription">
            <summary>
            Gets recurrence pattern description.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.EditRecurrenceControl">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.EditRecurrenceControl"/> control allows editing of all recurrence pattern properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.EditRecurrenceControl.#ctor">
            <summary>
            Creates the new instance of the <see cref="T:C1.Silverlight.Schedule.EditRecurrenceControl"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.EditRecurrenceControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.EditRecurrenceControl.Scheduler">
            <summary>
            Gets or sets reference to the parent <see cref="P:C1.Silverlight.Schedule.EditRecurrenceControl.Scheduler"/> control.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.WeekOfMonthEnumToStringConverter">
            <summary>
            Represents a Binding converter that returns a localized string representation of WeekOfMonthEnum member.
            </summary>
            <remarks>
            <see cref="T:C1.Silverlight.Schedule.WeekOfMonthEnumToStringConverter"/> is a one-way converter. 
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.WeekOfMonthEnumToStringConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.WeekOfMonthEnumToStringConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.WeekOfMonthEnumToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method 
            when it propagates a value from the binding source to the binding target. 
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.WeekOfMonthEnumToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Throws System.NotImplementedException. 
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.WeekDaysEnumToStringConverter">
            <summary>
            Represents a Binding converter that returns a localized string representation of WeekDaysEnum member.
            </summary>
            <remarks>
            <see cref="T:C1.Silverlight.Schedule.WeekDaysEnumToStringConverter"/> is a one-way converter. 
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.WeekDaysEnumToStringConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.WeekDaysEnumToStringConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.WeekDaysEnumToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method 
            when it propagates a value from the binding source to the binding target. 
            </summary>
            <param name="value">The values produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.WeekDaysEnumToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Throws System.NotImplementedException. 
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The array of types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.NestedPropertySetter">
            <summary>
            Represents a property setter which is being used as an item of
            the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.NestedSetters"/> collection and is able to
            assign a value to a <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> nested property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.NestedPropertySetter.PropertyNameProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.NestedPropertySetter.PropertyName"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.NestedPropertySetter.ValueProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.NestedPropertySetter.Value"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.NestedPropertySetter.Apply(System.Object)">
            <summary>
            This method is used for internal purposes only.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.NestedPropertySetter.EvaluatePropGetChain(System.Object,System.String[])">
            <summary>
            For the specified object <paramref name="obj"/> evaluates
            a chain of get property accessors with names specified in
            the <paramref name="propChain"/> collection.
            If any problem met then returns null.
            If <paramref name="propChain"/> is null or empty returns
            <paramref name="obj"/>.
            </summary>
            <param name="obj"></param>
            <param name="propChain"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.Schedule.NestedPropertySetter.PropertyName">
            <summary>
            Gets or sets a path to a nested property relative to the 
            <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> class. This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.NestedPropertySetter.Value">
            <summary>
            Gets or sets a value that should be assigned to the <see cref="P:C1.Silverlight.Schedule.NestedPropertySetter.PropertyName"/>
            property. This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.NestedPropertySetter.TargetObject">
            <summary>
            This property is used for internal purposes only.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.NestedPropertySetterCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Silverlight.Schedule.NestedPropertySetter"/> objects.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.NestedPropertySetterCollection.#ctor(System.Object)">
            <summary>
            Initialize a new instance of the <see cref="T:C1.Silverlight.Schedule.NestedPropertySetterCollection"/> class.
            </summary>
            <param name="owner">The owning object.</param>
        </member>
        <member name="M:C1.Silverlight.Schedule.NestedPropertySetterCollection.InsertItem(System.Int32,C1.Silverlight.Schedule.NestedPropertySetter)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.NestedPropertySetterCollection.RemoveItem(System.Int32)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.NestedPropertySetterCollection.ClearItems">
            <summary>
            Overrides the default behavior.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.NestedPropertySetterCollection.Owner">
            <summary>
            Gets the owning object.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.PilePanel">
            <summary>
            Positions child elements one over another as it is done by the <see cref="T:System.Windows.Controls.Grid"/>
            panel with single row and single column.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.PilePanel.#ctor">
            <summary>
            Creates the new instance of the <see cref="T:C1.Silverlight.Schedule.PilePanel"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.PilePanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of a <see cref="T:C1.Silverlight.Schedule.PilePanel"/> element. 
            </summary>
            <param name="arrangeSize">The <see cref="T:System.Windows.Size"/> that this element 
            should use to arrange its child elements.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the arranged size 
            of this <see cref="T:C1.Silverlight.Schedule.PilePanel"/> element and its children.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.PilePanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child elements of a <see cref="T:C1.Silverlight.Schedule.PilePanel"/> in anticipation 
            of arranging them during the <see cref="M:C1.Silverlight.Schedule.PilePanel.ArrangeOverride(System.Windows.Size)"/> pass. 
            </summary>
            <param name="constraint">An upper limit <see cref="T:System.Windows.Size"/> that should not be exceeded.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.RecChoiceControl">
            <summary>
            This window allows selecting deletion of a single occurrence or the whole recurring series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.RecChoiceControl.MessageProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.RecChoiceControl.Message"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.RecChoiceControl.TitleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.RecChoiceControl.Title"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.RecChoiceControl.#ctor(C1.Silverlight.Schedule.C1Scheduler,C1.C1Schedule.Appointment,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.RecChoiceControl"/> control.
            </summary>
            <param name="owner">The owning <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control.</param>
            <param name="appointment">The <see cref="P:C1.Silverlight.Schedule.RecChoiceControl.Appointment"/> object for editing.</param>
            <param name="remove">The <see cref="T:System.Boolean"/> value specifying whether the control
            should show a message about removing or editing an appointment.</param>
        </member>
        <member name="M:C1.Silverlight.Schedule.RecChoiceControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.RecChoiceControl.Appointment">
            <summary>
            Gets or sets an <see cref="P:C1.Silverlight.Schedule.RecChoiceControl.Appointment"/> object for which the window is shown.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.RecChoiceControl.Message">
            <summary>
            Gets a string message displayed in the window.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.RecChoiceControl.Title">
            <summary>
            Gets a title displayed in the window.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.RecChoiceControl.IsOccurrence">
            <summary>
            Gets a True value if the user selects removing a single occurrence; False otherwise.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.SelectFromListScene">
            <summary>
            Interaction logic for SelectFromListScene.xaml
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.SelectFromListScene.#ctor">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Silverlight.Schedule.SelectFromListScene"/> control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.SelectFromListScene.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.SelectFromListScene.AllowEdit">
            <summary>
            Gets or sets boolean value determining whether dialog should allow adding or deleting items.
            </summary>
            <value>The default value is true.</value>
        </member>
        <member name="P:C1.Silverlight.Schedule.SelectFromListScene.AllowMultipleSelection">
            <summary>
            Gets or sets boolean value determining whether multiple selection is allowed.
            </summary>
            <value>The default value is true.</value>
        </member>
        <member name="P:C1.Silverlight.Schedule.SelectFromListScene.SourceCollection">
            <summary>
            Gets the reference to the source collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.SelectFromListScene.TargetCollection">
            <summary>
            Gets the reference to the target collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.SelectFromListScene.TargetCollectionEdited">
            <summary>
            Gets the reference to the edited copy of the target collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.SelectFromListScene.SourceCollectionEdited">
            <summary>
            Gets the reference to the edited copy of the source collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.SelectFromListScene.ItemType">
            <summary>
            Gets the type of items in collections.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.SelectFromListScene.SortedSourceView">
            <summary>
            Gets the sorted view of SourceCollectionEdited to display in the list of available objects.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.ShowRemindersControl">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.ShowRemindersControl"/> displays currently active reminders and allows to control them.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.ShowRemindersControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.ShowRemindersControl"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.ShowRemindersControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.ShowRemindersControl.Scheduler">
            <summary>
            Gets or sets reference to the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control 
            which is an owner of displayed <see cref="T:C1.C1Schedule.Reminder"/> objects.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.RemindersListBox">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.RemindersListBox"/> represents collection of <see cref="T:C1.C1Schedule.Reminder"/> objects
            in a two-column view.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.RemindersListBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.RemindersListBox"/> control.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.RemindersListBox.FirstColumnWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.RemindersListBox.FirstColumnWidth"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.RemindersListBox.SecondColumnWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.RemindersListBox.SecondColumnWidth"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.RemindersListBox.RefreshData">
            <summary>
            Refreshes UI information.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.RemindersListBox.FirstColumnWidth">
            <summary>
            Gets or sets the first column width.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.RemindersListBox.SecondColumnWidth">
            <summary>
            Gets or sets the second column width.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.RemindersListBox.Scheduler">
            <summary>
            Gets or sets reference to the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control 
            which is an owner of displayed <see cref="T:C1.C1Schedule.Reminder"/> objects.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.ReminderListBoxItem">
            <summary>
            Represents single <see cref="T:C1.C1Schedule.Reminder"/> object.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.ReminderListBoxItem.Owner">
            <summary>
            Gets the reference to the owning <see cref="T:C1.Silverlight.Schedule.RemindersListBox"/> control.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.PlatformIndependenceHelper.GetColor(System.UInt32)">
            <summary>
            Gets a platform specific Color object based on its integer representation.
            The byte ordering in the <paramref name="color"/> is ARGB, for example
            the constant 0x01020304 represents the color with the following components:
            A = 0x01
            R = 0x02
            G = 0x03
            B = 0x04
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.PlatformIndependenceHelper.IsEmptyColor(System.Windows.Media.Color)">
            <summary>
            Indicates whether the specified <paramref name="color"/> is transparent.
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="T:C1.C1Schedule.AppointmentMappingCollection">
            <summary>
            Represents a generic collection of mappings for properties of 
            <see cref="T:C1.C1Schedule.BaseObject"/> derived objects to appropriate data fields. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.MappingCollectionBase`1">
            <summary>
            Represents a collection of mappings for properties of the 
            <see cref="T:C1.C1Schedule.BasePersistableObject"/> object to the appropriate data fields. 
            Names of properties are keys in this collection.
            </summary>
            <typeparam name="T">The type of the objects for mapping.
            It should be derived from the <see cref="T:C1.C1Schedule.BasePersistableObject"/>class 
            and have the default parameter-less constructor.</typeparam>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.MappingCollectionBase`1"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.GetKeyForItem(C1.C1Schedule.MappingInfo)">
            <summary>
            Returns property name as the key for collection.
            </summary>
            <param name="item">The <see cref="T:C1.C1Schedule.MappingInfo"/> object.</param>
            <returns>The property name.</returns>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.ReadObject(`0,System.Object,System.Boolean)">
            <summary>
            Fills internal object derived from BasePersistableObject 
            with values from specified bound object.
            </summary>
            <param name="internalObject"></param>
            <param name="boundObject"></param>
            <param name="raiseChanged">Specifies if internalObject should raise Changed 
            event during this method call</param>
            <returns>Value indicating if bound object was changed by this method.</returns>
            <remarks>Overriding method of derived class should call the base 
            class's ReadObject method or fill BasePersistableObject
            properties on it's own.</remarks>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.ReadObject(`0,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Fills internal object derived from BasePersistableObject 
            with values from specified bound object.
            </summary>
            <param name="internalObject"></param>
            <param name="boundObject"></param>
            <param name="raiseChanged">Specifies if internalObject should raise Changed 
            event during this method call</param>
            <param name="dirty">Specifies whether an object has been changed</param>
            <returns>Value indicating if bound object was changed by this method.</returns>
            <remarks>Overriding method of derived class should call the base 
            class's ReadObject method or fill BasePersistableObject
            properties on it's own.</remarks>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.WriteObject(`0,System.Object)">
            <summary>
            When implemented in a derived class fills boundObject 
            with values from specified internalObject.
            </summary>
            <param name="internalObject">object from C1Schedule collection.</param>
            <param name="boundObject">object from custom data source.</param>
            <remarks>Overriding method of derived class should call 
            the base class's WriteObject method or fill boundObject
            properties on it's own.</remarks>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.NewItem">
            <summary>
            Implementation in derived classes should return new object of type T.
            </summary>
            <returns>New object of type T.</returns>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.InsertItem(System.Int32,C1.C1Schedule.MappingInfo)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, 
            or resetting unmanaged resources. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingCollectionBase`1.IdMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.BasePersistableObject.Id"/> property.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BasePersistableObject.Id"/> property  
            to be bound to the appropriate field in the data source. 
            </summary>
             <remarks> Each object derived from <see cref="T:C1.C1Schedule.BasePersistableObject"/> is identified 
            by either Id or Index property. 
            To allow data to be correctly restored from your data sources you should specify mapping 
            either for the <see cref="P:C1.C1Schedule.MappingCollectionBase`1.IdMapping"/> or 
            for the <see cref="P:C1.C1Schedule.MappingCollectionBase`1.IndexMapping"/>.
            It makes sense in case if you bind to your data storages of Resources, Labels, 
            Contacts or Categories. 
            C1Schedule saves only Ids or Indexes of these objects in AppointmentSorage. 
            If there is no mapping for IdMapping or IndexMapping, C1Schedule won't be able to 
            identify Appointment's properties correctly in storages initialized by your data.
            </remarks>
        </member>
        <member name="P:C1.C1Schedule.MappingCollectionBase`1.IndexMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.BasePersistableObject.Index"/> property.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BasePersistableObject.Index"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
             <remarks> Each object derived from <see cref="T:C1.C1Schedule.BasePersistableObject"/> is identified 
            by either Id or Index property. 
            To allow data to be correctly restored from your data sources you should specify mapping 
            either for the <see cref="P:C1.C1Schedule.MappingCollectionBase`1.IdMapping"/> or 
            for the <see cref="P:C1.C1Schedule.MappingCollectionBase`1.IndexMapping"/>.
            It makes sense in case if you bind to your data storages of Resources, Labels, 
            Contacts or Categories. 
            C1Schedule saves only Ids or Indexes of these objects in AppointmentSorage. 
            If there is no mapping for IdMapping or IndexMapping, C1Schedule won't be able to 
            identify Appointment's properties correctly in storages initialized by your data.
            </remarks>
        </member>
        <member name="P:C1.C1Schedule.MappingCollectionBase`1.Count">
            <summary>
            Gets the number of elements actually contained in 
            the <see cref="T:C1.C1Schedule.MappingCollectionBase`1"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingCollectionBase`1.Comparer">
            <summary>
            Gets the generic equality comparer that is used to determine equality 
            of keys in the collection.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.MappingCollectionBase`1.Disposed">
            <summary>
            Represents the method that handles the Disposed event of a component. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentMappingCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.AppointmentMappingCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentMappingCollection.ReadObject(C1.C1Schedule.Appointment,System.Object,System.Boolean)">
            <summary>
            Fills BaseObject object with values from specified boundObject.
            </summary>
            <param name="internalObject"></param>
            <param name="boundObject"></param>
            <param name="raiseChanged"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentMappingCollection.WriteObject(C1.C1Schedule.Appointment,System.Object)">
            <summary>
            Fills boundObject with values from specified BaseObject object.
            </summary>
            <param name="internalObject">Appointment object.</param>
            <param name="boundObject">object from custom data source/</param>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.Body">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.Appointment.Body"/> 
            property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of the <see cref="P:C1.C1Schedule.AppointmentMappingCollection.Body"/> allow 
            the <see cref="P:C1.C1Schedule.Appointment.Body"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.End">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.Appointment.End"/> 
            property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.Appointment.End"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.Location">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.Appointment.Location"/>
            property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.Appointment.Location"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.Start">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.Appointment.Start"/>
            property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.Appointment.Start"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.Subject">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.Appointment.Subject"/>
            property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.Appointment.Subject"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.AppointmentProperties">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the memory field 
            which is intended to store the other properties of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the other properties of 
            the <see cref="T:C1.C1Schedule.Appointment"/> object to be bound to 
            the appropriate field in the data source. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.BaseObjectMappingCollection`1">
            <summary>
            Represents a generic collection of mappings for properties 
            of the <see cref="T:C1.C1Schedule.BaseObject"/> derived objects to appropriate data fields. 
            </summary>
            <typeparam name="T">The type of the objects for mapping.
            It should be derived from the <see cref="T:C1.C1Schedule.BaseObject"/> class 
            and have the default parameter-less constructor.</typeparam>
        </member>
        <member name="M:C1.C1Schedule.BaseObjectMappingCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.BaseObjectMappingCollection`1"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseObjectMappingCollection`1.ReadObject(`0,System.Object,System.Boolean)">
            <summary>
            Fills BaseObject object with values from specified boundObject.
            </summary>
            <param name="internalObject"></param>
            <param name="boundObject"></param>
            <param name="raiseChanged"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.BaseObjectMappingCollection`1.WriteObject(`0,System.Object)">
            <summary>
            Fills boundObject with values from specified BaseObject object.
            </summary>
            <param name="internalObject">T object.</param>
            <param name="boundObject">Object from custom data source.</param>
        </member>
        <member name="P:C1.C1Schedule.BaseObjectMappingCollection`1.TextMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.BaseObject.Text"/> 
            property of the object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BaseObject.Text"/> 
            property of the object to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseObjectMappingCollection`1.ColorMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.BaseObject.Color"/> 
            property of the object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BaseObject.Color"/> 
            property of the object to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseObjectMappingCollection`1.CaptionMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for <see cref="P:C1.C1Schedule.BaseObject.MenuCaption"/> 
            property of the object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BaseObject.MenuCaption"/> 
            property of the object to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.CategoryMappingCollection">
            <summary>
            Represents a generic collection of mappings for properties of 
            <see cref="T:C1.C1Schedule.BaseObject"/> derived objects to appropriate data fields. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CategoryMappingCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.CategoryMappingCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CategoryMappingCollection.ReadObject(C1.C1Schedule.Category,System.Object,System.Boolean)">
            <summary>
            Fills BaseObject object with values from specified boundObject.
            </summary>
            <param name="internalObject"></param>
            <param name="boundObject"></param>
            <param name="raiseChanged"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.CategoryMappingCollection.WriteObject(C1.C1Schedule.Category,System.Object)">
            <summary>
            Fills boundObject with values from specified BaseObject object.
            </summary>
            <param name="internalObject">Category object.</param>
            <param name="boundObject">Object from custom data source.</param>
        </member>
        <member name="P:C1.C1Schedule.CategoryMappingCollection.TextMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the 
            <see cref="P:C1.C1Schedule.BaseObject.Text"/> property of the object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BaseObject.Text"/> 
            property of the object to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CategoryMappingCollection.CaptionMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for 
            the <see cref="P:C1.C1Schedule.BaseObject.MenuCaption"/> property of the object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BaseObject.MenuCaption"/> 
            property of the object to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.MappingInfo">
            <summary>
            This class provides information on the mapping of the single property 
            of the object to the appropriate data field. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.MappingInfo.#ctor(System.Type,System.String,System.Boolean,System.Object)">
            <summary>
            Use this ctor for simple properties that has the same types 
            in the internal object and in the bound object.
            </summary>
            <param name="type"></param>
            <param name="propName"></param>
            <param name="required"></param>
            <param name="defaultValue"></param>
        </member>
        <member name="M:C1.C1Schedule.MappingInfo.#ctor(System.Type,System.Type,System.String,System.Boolean,System.Object)">
            <summary>
            Use this ctor when property of bound object has to have the type other than 
            type of the internal object's property.
            </summary>
            <param name="type"></param>
            <param name="dataType"></param>
            <param name="propName"></param>
            <param name="required"></param>
            <param name="defaultValue"></param>
        </member>
        <member name="M:C1.C1Schedule.MappingInfo.GetPropertyValue(System.Object)">
            <summary>
            Returns the property of specified object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.MappingInfo.SetPropertyValue(System.Object,System.Object)">
            <summary>
            Sets property of specified object to the specified value.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:C1.C1Schedule.MappingInfo.DataType">
            <summary>
            Gets the <see cref="T:System.Type"/> value determining the type of the data field 
            or property which can be bound to this object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingInfo.MappingName">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining the name of the data field 
            or property to be bound to the object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingInfo.IsMapped">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating if this objects is mapped 
            to the data field or property.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingInfo.Required">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating if mapping for this property is required or optional.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingInfo.PropertyName">
            <summary>
            Gets the <see cref="T:System.String"/> value determining the name of the property 
            which should be mapped.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.AppointmentStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.AppointmentStorage"/> is the storage 
            for <see cref="T:C1.C1Schedule.Appointment"/> objects. It allows binding to the data source 
            and mapping data source fields to the appointment properties.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.BaseStorage`2">
            <summary>
            The <see cref="T:C1.C1Schedule.BaseStorage`2"/> is the base generic component 
            for all storages in C1Schedule object model.
            Represents a storage of objects derived from <see cref="T:C1.C1Schedule.BasePersistableObject"/>.
            This component implements methods of operations over the collections of objects. 
            It allows the collection to be populated programmatically 
            or automatically by retrieving data from the data source which 
            is specified by the DataSource and DataMember properties. 
            It allows mapping of data source fields to the object properties.
            </summary>
            <typeparam name="T">The type of the objects which will be stored in the storage.
            It should be derived from the <see cref="T:C1.C1Schedule.BasePersistableObject"/> class
            and have the default parameter-less constructor.</typeparam>
            <typeparam name="TMappingCollection">The type of the collection which
            will be used for mapping. It should be derived from 
            the <see cref="T:C1.C1Schedule.MappingCollectionBase`1"/> class
            and have the default parameter-less constructor.</typeparam>
        </member>
        <member name="T:C1.C1Schedule.C1BindingSource">
            <summary>
            The <see cref="T:C1.C1Schedule.C1BindingSource"/> encapsulates the data source. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.C1BindingSource"/> class. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.C1BindingSource"/> class
            with the specified data source and data member values.
            </summary>
            <param name="dataSource">The <see cref="T:System.Object"/> object to use as data source.</param>
            <param name="dataMember">The data member name.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Add(System.Object)">
            <summary>
            Adds an existing item to the internal list.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to add.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.AddNew">
            <summary>
            Adds a new item to the underlying list. 
            </summary>
            <returns>The item added to the list.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.FinishAddNew">
            <summary>
            Commits a pending new item to the collection. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.BeginEdit(System.Object)">
            <summary>
            Starts an edit operation on the specified object.
            </summary>
            <param name="item">The object on which to start operation.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.EndEdit(System.Object)">
            <summary>
            Applies pending changes to the underlying data source.
            </summary>
            <param name="item">The object on which to apply pending changes.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Clear">
            <summary>
            Removes all elements from the list. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Contains(System.Object)">
            <summary>
            Determines whether an object is an item in the list. 
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to locate.</param>
            <returns>True if the <see cref="T:System.Object"/> is found in the list; 
            otherwise, false.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the contents of the <see cref="P:C1.C1Schedule.C1BindingSource.List"/> to the specified array, 
            starting at the specified index value. 
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the 
            destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. 
            The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in the array at which the copying begins.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.GetEnumerator">
            <summary>
            Retrieves an enumerator for the <see cref="P:C1.C1Schedule.C1BindingSource.List"/>. 
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerable"/> object that can 
            be used to iterate through the collection.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.IndexOf(System.Object)">
            <summary>
            Searches for the specified object and returns the index of the first 
            occurrence within the entire list.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to index.</param>
            <returns>The index of <i>value</i> if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item into the list at the specified index.
            </summary>
            <param name="index">The zero-based index at which 
            <i>value</i> should be inserted.</param>
            <param name="value">The <see cref="T:System.Object"/> to insert.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.OnAddingNew(C1.C1Schedule.AddingNewEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.OnDataMemberChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.OnDataSourceChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.OnListChanged(C1.C1Schedule.ListChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Remove(System.Object)">
            <summary>
            Removes the specified item from the list. 
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index in the list.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.ResetAllowNew">
            <summary>
            Reinitializes the <see cref="P:C1.C1Schedule.C1BindingSource.AllowNew"/> property. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.ResetBindings(System.Boolean)">
            <summary>
            Causes a control bound to the <see cref="T:C1.C1Schedule.C1BindingSource"/> to reread 
            all the items in the list and refresh their displayed values. 
            </summary>
            <param name="metadataChanged">The <see cref="T:System.Boolean"/> value specifying
            whether the metadata has been changed.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.ResetItem(System.Int32)">
            <summary>
            Causes a control bound to the <see cref="T:C1.C1Schedule.C1BindingSource"/> to re-read 
            the item at the specified index, and refresh its displayed value. 
            </summary>
            <param name="itemIndex">The zero-based index of item to re-read.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:C1.C1Schedule.C1BindingSource"/>.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.AllowEdit">
            <summary>
            Gets a value indicating whether items in the underlying list can be edited.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.AllowNew">
            <summary>
            Gets or sets a value indicating whether the <see cref="M:C1.C1Schedule.C1BindingSource.AddNew"/> method 
            can be used to add items to the list. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.AllowRemove">
            <summary>
            Gets a value indicating whether items can be removed from the underlying list. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.Count">
            <summary>
            Gets the total number of items in the underlying list.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.DataMember">
            <summary>
            Gets or sets the specific list in the data source to which 
            the connector currently binds to.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.DataSource">
            <summary>
            Gets or sets the data source that the connector binds to. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.IsFixedSize">
            <summary>
            Gets a value indicating whether the underlying list has a fixed size. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.IsReadOnly">
            <summary>
            Gets a value indicating whether the underlying list is read-only.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread safe). 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.Item(System.Int32)">
            <summary>
            Gets or sets the list element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.List">
            <summary>
            Gets the list that the connector is bound to. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.RaiseListChangedEvents">
            <summary>
            Gets or sets a value indicating whether <see cref="E:C1.C1Schedule.C1BindingSource.ListChanged"/> events should be raised. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.SupportsChangeNotification">
            <summary>
            Gets a value indicating whether the data source supports change notification.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the underlying list. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.DataKeyNamesInternal">
            <summary>
            
            </summary>
        </member>
        <member name="E:C1.C1Schedule.C1BindingSource.AddingNew">
            <summary>
            Occurs before an item is added to the underlying list. 
            </summary>
        </member>
        <member name="E:C1.C1Schedule.C1BindingSource.DataMemberChanged">
            <summary>
            Occurs when the <see cref="P:C1.C1Schedule.C1BindingSource.DataMember"/> property value has changed.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.C1BindingSource.DataSourceChanged">
            <summary>
            Occurs when the <see cref="P:C1.C1Schedule.C1BindingSource.DataSource"/> property value has changed. 
            </summary>
        </member>
        <member name="E:C1.C1Schedule.C1BindingSource.ListChanged">
            <summary>
            Occurs when the underlying list changes or an item in the list changes.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.RefreshData">
            <summary>
            Call this method each time after changing your data source 
            if it doesn't implement <see cref="!:IBindingList"/> interface.
            Or use BaseStorage{T, TMappingCollection}.Add 
            and BaseStorage{T, TMappingCollection}.Remove 
            instead of corresponding methods of your data source class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.ShouldSerializeMappings">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.OnListChanged(C1.C1Schedule.ListChangedEventArgs)">
            <summary>
            Translates changes in the internal list to the Objects collection.
            </summary>
            <param name="e">A <see cref="!:System.ComponentModel.ListChangedEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.Remove(System.Object)">
            <summary>
            Removes object from the Objects collection.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.OnDataSourceItemSynchronized(C1.C1Schedule.ItemSynchronizedEventArgs)">
            <summary>
            Raises the <see cref="E:C1.C1Schedule.BaseStorage`2.DataSourceItemSynchronized"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.C1Schedule.ItemSynchronizedEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.SetCollectionItemBaseItem(C1.C1Schedule.BasePersistableObject,System.Object,C1.C1Schedule.ItemsMapTableRow)">
            <summary>
            Updates ItemsMap and BasePersistableObject.BaseSourceItemMap.
            <paramref name="mapRow"/> should be specified if it's known (for 
            performance purposes), if it's null then the one will be determined
            by <paramref name="sourceItem"/>
            </summary>
            <param name="collectionItem"></param>
            <param name="sourceItem"></param>
            <param name="mapRow"></param>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.IsSynchronizable(C1.C1Schedule.BasePersistableObject)">
            <summary>
            Indicates whether the specified collection item should be synchronized.
            </summary>
            <param name="collectionItem">The <see cref="T:C1.C1Schedule.BasePersistableObject"/> object.</param>
            <returns>True if item should be synchronized; false, otherwise.</returns>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.BoundMode">
            <summary>
            Gets a value indicating if the collection is bound to data. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.Mappings">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.MappingCollectionBase`1"/> derived object 
            that allows the properties of objects maintained by the current collection 
            to be bound to the appropriate fields in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.ScheduleStorage">
            <summary>
            Gets the reference to the owning <see cref="T:C1.C1Schedule.C1ScheduleStorage"/> component.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.DataKeyNamesInternal">
            <summary>
            This property is for internal use only.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentStorage.Appointments">
            <summary>
            Gets an <see cref="T:C1.C1Schedule.AppointmentCollection"/> object that contains appointment related information. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.SynchronizationActionEnum">
            <summary>
            Describes the version of data in a data storage. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SynchronizationActionEnum.Added">
            <summary>
            A new item.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SynchronizationActionEnum.Deleted">
            <summary>
            A deleted item.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SynchronizationActionEnum.Changed">
            <summary>
            A changed item.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ItemSynchronizedEventArgs">
            <summary>
            Provides data for the DataSourceItemSynchronized event.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ItemSynchronizedEventArgs.#ctor(C1.C1Schedule.C1BindingSource,C1.C1Schedule.BasePersistableObject,System.Object,C1.C1Schedule.SynchronizationActionEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.ItemSynchronizedEventArgs"/> class.
            </summary>
            <param name="storage">Reference to the changed <see cref="T:C1.C1Schedule.C1BindingSource"/> object.</param>
            <param name="collectionItem">Reference to the <see cref="T:C1.C1Schedule.BasePersistableObject"/> derived object.</param>
            <param name="dataSourceItem">Reference to the corresponding item in the data source.</param>
            <param name="action">The <see cref="T:C1.C1Schedule.SynchronizationActionEnum"/> value.</param>
        </member>
        <member name="P:C1.C1Schedule.ItemSynchronizedEventArgs.Storage">
            <summary>
            Gets the reference to the changed <see cref="T:C1.C1Schedule.C1BindingSource"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.ItemSynchronizedEventArgs.DataSourceItem">
            <summary>
            Gets the reference to the data source item.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.ItemSynchronizedEventArgs.CollectionItem">
            <summary>
            Gets the reference to the <see cref="T:C1.C1Schedule.BasePersistableObject"/> derived object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.ItemSynchronizedEventArgs.Action">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.SynchronizationActionEnum"/> value.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.DataSourceItemSynchronizedEventHandler">
            <summary>
            The delegate type for the event handlers of the DataSourceItemSynchronized event. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:C1.C1Schedule.ItemSynchronizedEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="T:C1.C1Schedule.C1ScheduleStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.C1ScheduleStorage"/> component handles all data 
            operations for the scheduler control and contains specific data storages 
            for appointments, resources, contacts, labels and statuses, 
            which are used for binding different collections to the data.
            The <see cref="T:C1.C1Schedule.C1ScheduleStorage"/> component also handles data 
            importing and exporting to other scheduling formats such as binary, iCal, and XML.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Clear">
            <summary>
            Clears all unbound storages. Loads default sets if any for unbound storages. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Export(System.IO.Stream,C1.C1Schedule.FileFormatEnum)">
            <summary>
            Exports the scheduler's data to a stream in the specified format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the scheduler's data will be exported.</param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Export(System.IO.Stream,System.Collections.Generic.IList{C1.C1Schedule.Appointment},C1.C1Schedule.FileFormatEnum)">
            <summary>
            Exports the appointments' data to a stream in the specified format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
            <param name="appointments"><see cref="T:System.Collections.Generic.IList`1"/> to be exported.</param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Import(System.IO.Stream,C1.C1Schedule.FileFormatEnum)">
            <summary>
            Imports the scheduler's data from a stream whose data is in the specified format.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Dispose">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.C1ScheduleStorage.AppointmentsLoaded">
            <summary>
            Occurs when appointments were loaded from the file.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.ContactStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.ContactStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.AppointmentStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.AppointmentStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.LabelStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.LabelStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.ResourceStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.ResourceStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.StatusStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.StatusStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.CategoryStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.CategoryStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.Reminders">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ReminderCollection"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.Actions">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ActionCollection"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.Scheduler">
            <summary>
            Gets the reference to the parent <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.CategoryStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.CategoryStorage"/> is the storage for <see cref="T:C1.C1Schedule.Category"/> objects.
            It allows binding to the data source and mapping data source fields 
            to the category properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CategoryStorage.Categories">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.CategoryCollection"/> object that contains 
            category related information. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ContactStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.ContactStorage"/> is the storage for <see cref="T:C1.C1Schedule.Contact"/> objects.
            It allows binding to the data source and mapping data source fields 
            to the contact properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.ContactStorage.Contacts">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ContactCollection"/> object that contains 
            contact related information. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.LabelStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.LabelStorage"/> is the storage for <see cref="T:C1.C1Schedule.Label"/> objects.
            It allows binding to the data source and mapping data source fields 
            to the label properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.LabelStorage.Labels">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.LabelCollection"/> object 
            that contains label related information. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ResourceStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.ResourceStorage"/> is the storage for <see cref="T:C1.C1Schedule.Resource"/> objects.
            It allows binding to the data source and mapping data source fields 
            to the resource properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.ResourceStorage.Resources">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ResourceCollection"/> object 
            that contains resource related information. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.StatusStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.StatusStorage"/> is the storage for <see cref="T:C1.C1Schedule.Status"/> objects.
            It allows binding to the data source and mapping data sources fields 
            to the status properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.StatusStorage.Statuses">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.StatusCollection"/> object 
            that contains status related information. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.SourceToCollectionItemsMap">
            <summary>
            Represents a mapping between data source and collection items and holds a cache
            of source items in order as they are represented in a source list. The latter
            necessary to get an instance of a deleted item.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SourceToCollectionItemsMap._mapTable">
            key - source item, value - SourceCollectionItemPair, 
            item[int].SourceItem - the same as source.item[int]
        </member>
        <member name="M:C1.C1Schedule.SourceToCollectionItemsMap.SetSourceItems(System.Collections.IList)">
            <summary>
            Initialize a source items cache.
            </summary>
            <param name="sourceList"></param>
        </member>
        <member name="M:C1.C1Schedule.SourceToCollectionItemsMap.UpdateByListChange(C1.C1Schedule.ListChangedEventArgs,System.Collections.IList,System.Boolean@)">
            <summary>
            Updates the source items cache based on the specified list change action in
            the specified source list.
            Returns a map row affected by this change.
            </summary>
            <param name="e"></param>
            <param name="sourceList"></param>
            <param name="duplicateAdd"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.SourceToCollectionItemsMap.IsValidIndex(System.Int32)">
            <summary>
            Indicates whether the specified index is valid.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:C1.C1Schedule.SyncBatchInfo.ResetState">
            <summary>
            Finished means not Reset state.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.FileFormatEnum">
            <summary>
            Specifies the format of the exported or imported file.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.FileFormatEnum.XML">
            <summary>
            XML format (ComponentOne's own format).
            </summary>
        </member>
        <member name="F:C1.C1Schedule.FileFormatEnum.iCal">
            <summary>
            iCal format according to RFC 2445.
            Format specification could be found here:
            http://tools.ietf.org/rfc/rfc2445.txt
            </summary>
        </member>
        <member name="T:C1.C1Schedule.C1ScheduleExchanger">
            <summary>
            The base class for all importers/exporters in C1Schedule
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleExchanger.Export(System.String)">
            <summary>
            Exports the scheduler's data to a file. 
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the full path 
            (including the file name and extension) to export the scheduler's data to. </param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleExchanger.Export(System.IO.Stream)">
            <summary>
            Exports the scheduler's data to a stream. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the scheduler's data will be exported.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleExchanger.Export(System.IO.Stream,System.Collections.Generic.IList{C1.C1Schedule.Appointment})">
            <summary>
            Exports the appointments's data to a stream. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
            <param name="appointments">A <see cref="T:System.Collections.Generic.IList`1"/> object.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleExchanger.Import(System.IO.Stream)">
            <summary>
            Imports the scheduler's data from a stream.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
        </member>
        <member name="T:C1.C1Schedule.ICalExchanger">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ICalExchanger.ExportInternal(System.IO.Stream)">
            <summary>
            Exports the appointments's data to a stream in the iCal format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
        </member>
        <member name="M:C1.C1Schedule.ICalExchanger.ImportInternal(System.IO.Stream)">
            <summary>
            Imports the scheduler's data from a stream whose data is in the ICal format.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
        </member>
        <member name="T:C1.C1Schedule.ICalPattern">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ICalUtils">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.C1Schedule.XmlExchanger">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.XmlExchanger.ExportInternal(System.IO.Stream)">
            <summary>
            Exports the appointments's data to a stream in the XML format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
        </member>
        <member name="M:C1.C1Schedule.XmlExchanger.ImportInternal(System.IO.Stream)">
            <summary>
            Imports the scheduler's data from a stream whose data is in the XML format.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
        </member>
        <member name="T:C1.C1Schedule.ActionTypeEnum">
            <summary>
            <see cref="T:C1.C1Schedule.ActionTypeEnum"/> determines the type of action. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.ActionTypeEnum.ExecuteApplication">
            <summary>
            Execute local application with specified parameters.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.ActionTypeEnum.NavigateToUrl">
            <summary>
            Open specified target in default browser.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Action">
            <summary>
            Represents an action to take when the current system time reaches 
            the start of the associated <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Action.#ctor(C1.C1Schedule.Appointment)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Action"/> class.
            </summary>
            <param name="owner">The <see cref="T:C1.C1Schedule.Appointment"/> object.</param>
        </member>
        <member name="M:C1.C1Schedule.Action.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Action"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Action.FromXml(System.Xml.XmlReader)">
            <summary>
            Reconstructs action properties from an <see cref="T:System.Xml.XmlReader"/>. 
            </summary>
            <param name="reader"></param>
            <returns>True if an action has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.Action.ToXml(System.Xml.XmlWriter)">
            <summary>
            Creates an XML encoding of the action properties. 
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:C1.C1Schedule.Action.ParentAppointment">
            <summary>
            Gets or sets the owning <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Action.Command">
            <summary>
            Gets or sets the command string for the action.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Action.Parameters">
            <summary>
            Gets or sets parameters used when the action is invoked.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Action.Enabled">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating 
            whether the action is enabled. Default value is True.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Action.Type">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.ActionTypeEnum"/> value determining 
            the type of action that will occur. Default value is ActionTypeEnum.ExecuteApplication.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ActionCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.ActionCollection"/> is a collection of all <see cref="T:C1.C1Schedule.Action"/> objects 
            that represents the reminders for all pending items.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ActionCollection.#ctor">
            <summary>
            Initialize new <see cref="T:C1.C1Schedule.ReminderCollection"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ActionCollection.InsertItem(System.Int32,C1.C1Schedule.Action)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.C1Schedule.Action"/> object to insert.</param>
        </member>
        <member name="M:C1.C1Schedule.ActionCollection.RemoveItem(System.Int32)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.ActionCollection.ClearItems">
            <summary>
            Overrides default behavior.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ActionCollection.WaitProc(System.Object,System.Boolean)">
            <summary>
            Method to be called when it is time to execute action.
            </summary>
            <param name="state"></param>
            <param name="timedOut"></param>
        </member>
        <member name="M:C1.C1Schedule.ActionCollection.Dispose">
            <summary>
            Releases all unmanaged resources.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.RecurrenceStateEnum">
            <summary>
            Determines the type of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceStateEnum.NotRecurring">
            <summary>
            Represents a standard (non-recurring) appointment. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceStateEnum.Master">
            <summary>
            Represents the appointment which serves as the pattern 
            for the other recurring appointments. 
            The pattern for recurring appointments is specified via 
            the Appointment.Recurrence property.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceStateEnum.Occurrence">
            <summary>
            Represents one of recurring appointments whose pattern appointment 
            is specified via the Appointment.Recurrence property.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceStateEnum.Exception">
            <summary>
            Represents a recurring appointment, which was changed 
            and now doesn't satisfy the pattern of the recurring series.  
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceStateEnum.Removed">
            <summary>
            Represents a recurring appointment, which was deleted
            and now doesn't satisfy the pattern of the recurring series.  
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ImportanceEnum">
            <summary>
            Determines the importance of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.ImportanceEnum.Low">
            <summary>
            Low
            </summary>
        </member>
        <member name="F:C1.C1Schedule.ImportanceEnum.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:C1.C1Schedule.ImportanceEnum.High">
            <summary>
            High
            </summary>
        </member>
        <member name="T:C1.C1Schedule.SensitivityEnum">
            <summary>
            Determines the sensitivity of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SensitivityEnum.Confidential">
            <summary>
            Confidential
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SensitivityEnum.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SensitivityEnum.Personal">
            <summary>
            Personal
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SensitivityEnum.Private">
            <summary>
            Private
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Appointment">
            <summary>
            The <see cref="T:C1.C1Schedule.Appointment"/> object is a meeting, a one-time appointment, 
            or a recurring appointment or meeting in the C1Schedule. 
            The <see cref="T:C1.C1Schedule.Appointment"/> class includes properties 
            that specify meeting details such as the location and time.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.BasePersistableObject">
            <summary>
            The <see cref="T:C1.C1Schedule.BasePersistableObject"/> is a base class for persistable objects.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.OnPropertyChanged(System.String)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.#ctor">
            <summary>
            Creates new BasePersistableObject object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.BeginEdit">
            <summary>
            Brings the object in edit mode.
            </summary>
            <remarks>
            A corresponding item from a data source will not be updated on this object's
            property changes while the object is in edit mode. Data synchronization will
            be performed when the <see cref="M:C1.C1Schedule.BasePersistableObject.EndEdit"/> method will be called.
            </remarks>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.EndEdit">
            <summary>
            Finishes edit mode started by the <see cref="M:C1.C1Schedule.BasePersistableObject.BeginEdit"/> method and
            updates a corresponding data source item.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.EndEdit(System.Boolean)">
            <summary>
            
            </summary>
            <param name="canRaiseChangeNotification"></param>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.CancelEdit">
            <summary>
            Discards changes since the last <see cref="M:C1.C1Schedule.BasePersistableObject.BeginEdit"/> call.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.SetBaseSourceItemMap(C1.C1Schedule.ItemsMapTableRow)">
            <summary>
            WARNING: don't call this method! This a special method that must be called
            from the BaseStorage.SetCollectionItemBaseItem method only!
            </summary>
            <param name="sourceItemMap"></param>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.FromXml(System.Xml.XmlReader)">
            <summary>
            Loads an object from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader"/> which contains the object data.</param>
            <returns>Returns true if object has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.ToXml(System.Xml.XmlWriter)">
            <summary>
            Saves an object to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> that will receive 
            the object data.</param>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.FromXml(System.IO.Stream)">
            <summary>
            Loads an object from the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> that contains the object data.</param>
            <returns>Returns true if object has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.ToXml(System.IO.Stream)">
            <summary>
            Saves an object to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> that contains the object data.</param>
        </member>
        <member name="P:C1.C1Schedule.BasePersistableObject.Key">
            <summary>
            Gets an array of objects representing the key of the <see cref="T:C1.C1Schedule.BasePersistableObject"/>.
            </summary>
            <remarks><para>In the current version, the array always contains a single object.
            It can be either an <see cref="T:System.Int32"/> or <see cref="T:System.Guid"/> value depending on
            which one is actually used for binding this data.
            For example, if you bind AppointmentStorage to the database and set
            IndexMapping, this property will return an <see cref="T:System.Int32"/> value.
            If you set IdMapping, this property will return a <see cref="T:System.Guid"/> value.</para>
            <para>In future versions working with compound keys might be implemented.
            In such case this property will return array of objects composing the key.</para></remarks>
        </member>
        <member name="P:C1.C1Schedule.BasePersistableObject.Id">
            <summary>
            Unique value for serialization purposes.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BasePersistableObject.Index">
            <summary>
            User can specify mapping either for Id property or for Index property
            (depending on his database structure or object model).
            In unbound mode or if user doesn't specify mapping for any of these properties,
            Index will contain index of the object in containing collection.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BasePersistableObject.IsEdit">
            <summary>
            Indicates whether the object is in edit mode, 
            which is started using the <see cref="M:C1.C1Schedule.BasePersistableObject.BeginEdit"/> method.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BasePersistableObject.BaseSourceItemMap">
            <summary>
            Keeps a reference to a data source item that this object is based on.
            A null value means that there is no base source item.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> class.
            </summary>
            <remarks>Creates an appointment with default properties.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> 
            class with the specified parameters.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the appointment.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor(System.DateTime,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> 
            class with the specified parameters.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="duration">The <see cref="T:System.TimeSpan"/> value which specifies 
            the duration of the appointment.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor(System.DateTime,System.DateTime,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> 
            class with the specified parameters.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the appointment.</param>
            <param name="subject">The <see cref="T:System.String"/> value which contains 
            the subject of the appointment.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor(System.DateTime,System.TimeSpan,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> 
            class with the specified parameters.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="duration">The <see cref="T:System.TimeSpan"/> value which specifies 
            the duration of the appointment.</param>
            <param name="subject">The <see cref="T:System.String"/> value which contains 
            the subject of the appointment.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.BeginEdit">
            <summary>
            Prevents the <see cref="T:C1.C1Schedule.Appointment"/> object from being updated until 
            the <see cref="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)"/> method is called.
            </summary>
            <remarks>The <see cref="M:C1.C1Schedule.Appointment.BeginEdit"/> and <see cref="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)"/> methods 
            are designed to implement batch modifications. 
            This allows you to prevent generation of change notifications
            when changing multiple settings at the same time. 
            To do this enclose the code that changes the properties in calls to these methods.
            Each call to <see cref="M:C1.C1Schedule.Appointment.BeginEdit"/> must be paired with a call to <see cref="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)"/>. 
            To ensure that <see cref="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)"/> is always called even if an exception occurs, 
            wrap any calls to these methods in a try...finally statement.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)">
            <summary>
            Unlocks the <see cref="T:C1.C1Schedule.Appointment"/> object after a call 
            to the <see cref="M:C1.C1Schedule.Appointment.BeginEdit"/> method and causes an immediate update. 
            </summary>
            <param name="canRaiseChangeNotification">The <see cref="T:System.Boolean"/> value determining
            if change notifications can be generated when applying changes.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.ClearRecurrencePattern">
            <summary>
            Removes the recurrence settings and restores 
            the <see cref="F:C1.C1Schedule.RecurrenceStateEnum.NotRecurring"/> state for an appointment.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Appointment.GetRecurrencePattern">
            <summary>
            Returns the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object that represents 
            the recurrence attributes of an appointment. 
            If there is no existing recurrence pattern, a new 
            empty <see cref="T:C1.C1Schedule.RecurrencePattern"/> object is returned.
            </summary>
            <returns>The <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.Copy">
            <summary>
            Creates the copy of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
            <returns>The new <see cref="T:C1.C1Schedule.Appointment"/> instance.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.CopyForPattern">
            <summary>
            Creates the copy of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
            <returns>The new <see cref="T:C1.C1Schedule.Appointment"/> instance.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.CopyFrom(C1.C1Schedule.Appointment,System.Boolean)">
             <summary>
             Copies properties from the specified <see cref="T:C1.C1Schedule.Appointment"/> object to this one. 
             </summary>
             <param name="app">The <see cref="T:C1.C1Schedule.Appointment"/> instance to copy.</param>
             <param name="includeKeys">Specifies whether to copy internal keys.</param>
            <remarks><para>Set includeKeys to true if you want to receive exact copy 
            of the specified <see cref="T:C1.C1Schedule.Appointment"/> object.</para>
            <para>Set includeKeys to false in order to copy only descriptive <see cref="T:C1.C1Schedule.Appointment"/> 
            properties to other <see cref="T:C1.C1Schedule.Appointment"/> object (for example, 
            if you want to duplicate appointment from one day to another).</para></remarks>
        </member>
        <member name="M:C1.C1Schedule.Appointment.CopyPatternFrom(C1.C1Schedule.Appointment)">
            <summary>
            Copies RecurrencePattern from the specified Appointment
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.Delete">
            <summary>
            Deletes an appointment and removes it from 
            the owning <see cref="T:C1.C1Schedule.AppointmentCollection"/> collection.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Appointment.GetTimeTillEvent">
            <summary>
            Returns a time term before the appointment start; a negative value means that 
            appointment is expired.
            </summary>
            <returns>A time term before the appointment starts; a negative value means 
            that the appointment has expired.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.FromXml(System.Xml.XmlReader)">
            <summary>
            Reconstructs appointment from an <see cref="T:System.Xml.XmlReader"/>. 
            </summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader"/> 
            which contains the <see cref="T:C1.C1Schedule.Appointment"/> data.</param>
            <returns>True if appointment has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.ToXml(System.Xml.XmlWriter)">
            <summary>
            Creates an XML encoding of the appointment. 
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> 
            that will receive the object data.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.PropsFromXml(System.Xml.XmlReader)">
            <summary>
            Reconstructs appointment properties from an <see cref="T:System.Xml.XmlReader"/>. 
            </summary>
            <param name="reader"></param>
            <returns>True if appointment has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.PropsToXml(System.Xml.XmlWriter)">
            <summary>
            Creates an XML encoding of the appointment properties. 
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.OnPropertyChanged(System.String)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ParentCollection">
            <summary>
            Gets the reference to the parent <see cref="T:C1.C1Schedule.AppointmentCollection"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Subject">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value 
            representing the subject of the <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Body">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value representing 
            the body of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Action">
            <summary>
            Gets an <see cref="P:C1.C1Schedule.Appointment.Action"/> object for the <see cref="T:C1.C1Schedule.Appointment"/> object.
            Once this property is first requested, a new <see cref="P:C1.C1Schedule.Appointment.Action"/> object 
            is created and assigned to the <see cref="P:C1.C1Schedule.Appointment.Action"/> property.
            </summary>
            <remarks>The <see cref="P:C1.C1Schedule.Appointment.Action"/> object contains information regarding 
            the type of action to perform as well as the command 
            and parameters to pass to the action.
            If the action object is enabled, the action will be invoked 
            when the start date and time of the owning <see cref="T:C1.C1Schedule.Appointment"/> object has occurred.
            </remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Conflicts">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.AppointmentList"/> object representing 
            the list of <see cref="T:C1.C1Schedule.Appointment"/> objects which are in conflict 
            with this particular appointment.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.AutoResolvedWinner">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value determining if the item is 
            a winner of an automatic conflict resolution.
            </summary>
            <remarks>A value of false does not necessarily indicate that the item is 
            a loser of an automatic conflict resolution. 
            The item should be in conflict with another item.
            If an item has its Conflicts.Count property greater than zero 
            and if its <see cref="P:C1.C1Schedule.Appointment.AutoResolvedWinner"/> property is true, 
            it is a winner of an automatic conflict resolution. 
            On the other hand, if the item is in conflict and has its 
            <see cref="P:C1.C1Schedule.Appointment.AutoResolvedWinner"/> property as false, 
            it is a loser in an automatic conflict resolution.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Start">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value determining the 
            start date and time of the appointment. 
            </summary>
            <remarks>
            <para>If the <see cref="P:C1.C1Schedule.Appointment.AllDayEvent"/> property is set to true, 
            then the start date of the appointment is the <see cref="P:System.DateTime.Date"/> of 
            the <see cref="P:C1.C1Schedule.Appointment.Start"/>, and the start time of the appointment is 0:00.</para>
            <para>At setting this property, if it's time is not equal 0:00, 
            the <see cref="P:C1.C1Schedule.Appointment.AllDayEvent"/> property will be set to false.</para></remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.End">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value determining 
            the end date and time of the appointment. 
            </summary>
            <remarks> <para>The <see cref="P:C1.C1Schedule.Appointment.End"/> property is usually specified 
            by the <see cref="P:C1.C1Schedule.Appointment.Start"/> and <see cref="P:C1.C1Schedule.Appointment.Duration"/> properties, 
            and is always calculated as <see cref="P:C1.C1Schedule.Appointment.End"/> = <see cref="P:C1.C1Schedule.Appointment.Start"/> + <see cref="P:C1.C1Schedule.Appointment.Duration"/>. 
            When setting the <see cref="P:C1.C1Schedule.Appointment.End"/> property, the <see cref="P:C1.C1Schedule.Appointment.Start"/> property 
            retains its value, and the <see cref="P:C1.C1Schedule.Appointment.Duration"/> is changed according 
            to the new value of the <see cref="P:C1.C1Schedule.Appointment.End"/> property. 
            If the new <see cref="P:C1.C1Schedule.Appointment.End"/> property's value is less than 
            the <see cref="P:C1.C1Schedule.Appointment.Start"/> property's value, then an exception will be raised.</para>
            <para>At setting this property, if it's time is not equal 0:00, 
            or value is equal to the value of <see cref="P:C1.C1Schedule.Appointment.Start"/> property, 
            the <see cref="P:C1.C1Schedule.Appointment.AllDayEvent"/> property will be set to false.</para></remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.IsOneDay">
            <summary>
            Gets a <see cref="T:System.Boolean"/> value indicating either it is 
            a one day appointment or shares some days.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Duration">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value indicating the 
            duration of the appointment.
            </summary>
            <remarks>At setting this property, if it's value is not equal to the whole 
            number of days, the <see cref="P:C1.C1Schedule.Appointment.AllDayEvent"/> property will be set to false.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Location">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value specifying 
            where the appointment is going to be.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Importance">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.ImportanceEnum"/> value indicating 
            the relative importance level for the appointment.
            Default value is <see cref="F:C1.C1Schedule.ImportanceEnum.Normal"/>.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.AllDayEvent">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating 
            if the current appointment is an All-day appointment.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Reminder">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.Appointment.Reminder"/> object which is associated with the appointment.
            To associate an appointment with the reminder, set its 
            <see cref="P:C1.C1Schedule.Appointment.ReminderSet"/> property to true. 
            Once this property is set to true, a new <see cref="P:C1.C1Schedule.Appointment.Reminder"/> object 
            is created and assigned to the <see cref="P:C1.C1Schedule.Appointment.Reminder"/> property.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ReminderSet">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating whether 
            a reminder is associated with the appointment. 
            Once this property is set to true, a new <see cref="P:C1.C1Schedule.Appointment.Reminder"/> object 
            is created and assigned to the <see cref="P:C1.C1Schedule.Appointment.Reminder"/> property.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ReminderTimeBeforeStart">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value indicating the 
            interval of time the reminder should occur 
            prior to the start of the appointment. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ReminderOverrideDefault">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating if the associated
            <see cref="P:C1.C1Schedule.Appointment.Reminder"/> object has non-default settings.
            True if the reminder overrides the default reminder behavior for the appointment.
            You must set the <see cref="P:C1.C1Schedule.Appointment.ReminderOverrideDefault"/> property to validate 
            the <see cref="P:C1.C1Schedule.Appointment.ReminderPlaySound"/> and 
            the <see cref="P:C1.C1Schedule.Appointment.ReminderSoundFile"/> properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ReminderPlaySound">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating if the reminder 
            should play a sound when it occurs for this appointment or task. 
            The <see cref="P:C1.C1Schedule.Appointment.ReminderPlaySound"/> property must be set in order to validate 
            the <see cref="P:C1.C1Schedule.Appointment.ReminderSoundFile"/> property. 
            This property is only valid if the <see cref="P:C1.C1Schedule.Appointment.ReminderOverrideDefault"/> property 
            is set to true.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ReminderSoundFile">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value indicating the path and file name 
            of the sound file to play when the reminder occurs for the appointment. 
            This property is only valid if the <see cref="P:C1.C1Schedule.Appointment.ReminderOverrideDefault"/> and 
            <see cref="P:C1.C1Schedule.Appointment.ReminderPlaySound"/> properties are set to true.
            </summary>
            <remarks>The default sound is <see cref="!:System.Media.SystemSounds.Exclamation"/>.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.IsRecurring">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating if the appointment is recurring.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ParentRecurrence">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.Appointment"/> object that defines the recurrence 
            criteria for this <see cref="T:C1.C1Schedule.Appointment"/> object. 
            If this appointment is a not member of a recurrence, 
            or is itself a root appointment, null is returned. 
            </summary>
            <remarks>If an appointment is recurring (see the <see cref="P:C1.C1Schedule.Appointment.IsRecurring"/> property) 
            it represents an occurrence in the series that is started and defined 
            by a specific pattern appointment. 
            Use the <see cref="P:C1.C1Schedule.Appointment.ParentRecurrence"/> property to obtain the pattern 
            of the current appointment. A pattern appointment can be recognized by its 
            <see cref="P:C1.C1Schedule.Appointment.RecurrenceState"/> property set 
            to the <see cref="F:C1.C1Schedule.RecurrenceStateEnum.Master"/> value. 
            The recurrence information defined by the pattern appointment can be accessed 
            via the <see cref="T:C1.C1Schedule.RecurrencePattern"/> property of the appointment. 
            </remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.RecurrenceState">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.RecurrenceStateEnum"/> value indicating 
            the recurrence state of the appointment. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Tag">
            <summary>
            Gets or sets custom information associated with this object.
            </summary>
            <remarks>This property is valid only for the lifetime of the object.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.CustomData">
            <summary>
            Gets or sets custom text associated with this object.
            </summary>
            <remarks>This property is serialized with other appointment properties.
            It isn't used by the scheduler, use it to keep your data associated with appointment.
            This property is serialized into xml and binary formats and it is saved into underlying 
            data source if mapping for Appointment Properties is set. 
            It isn't retained at export/import to iCal format.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Label">
            <summary>
            Gets or sets the <see cref="P:C1.C1Schedule.Appointment.Label"/> object associated with this appointment.
            </summary>
            <remarks>Labels may be associated with an appointment 
            to effectively group appointments. </remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Resources">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ResourceList"/> object which holds the set of 
            <see cref="T:C1.C1Schedule.Resource"/> objects for this appointment.
            An appointment may be associated with multiple resources.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Links">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ContactList"/> object which holds the set 
            of <see cref="T:C1.C1Schedule.Contact"/> objects for this appointment.
            An appointment may be associated with multiple contacts.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.BusyStatus">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.Status"/> object indicating the busy status 
            of the user for the appointment.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Categories">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.CategoryList"/> object which holds the set 
            of categories assigned to the appointment.
            Categories may be associated with an appointment to effectively group appointments. 
            An appointment may be associated with multiple categories.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Saved">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating if the appointment 
            has not been modified since the last save.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Sensitivity">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.SensitivityEnum"/> value indicating 
            the sensitivity level of the appointment. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Private">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining 
            whether the calendar owner intends to keep the <see cref="T:C1.C1Schedule.Appointment"/>
            object private.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.AppointmentCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.AppointmentCollection"/> is a collection of all 
            <see cref="T:C1.C1Schedule.Appointment"/> objects in the C1Schedule component.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.BaseCollection`1">
            <summary>
            The <see cref="T:C1.C1Schedule.BaseCollection`1"/> is a base generic class for all collections 
            in C1Schedule object model.
            </summary>
            <typeparam name="T">The type of the objects which will be stored in the collection.
            It should be derived from the <see cref="T:C1.C1Schedule.BasePersistableObject"/> class
            and have the default parameter-less constructor.</typeparam>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.BaseCollection`1"/> class.
            </summary>
            <param name="owner">The owning storage.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.Add(`0)">
            <summary>
            Adds a new custom object to the collection.
            If the item already exists in the collection, its index is returned.
            </summary>
            <returns>Returns the index of newly added custom object.</returns>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.Contains(System.Int32)">
            <summary>
            Check if collection contains an item with specified index.
            </summary>
            <param name="index">The zero-based index of the item to locate.</param>
            <returns>True if the item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.RefreshIndices">
            <summary>
            Call this method after removing items from the unbound storage.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.AddRange(`0[])">
            <summary>
            Adds an array of objects to the collection.
            This methods clears the collection before adding new items. 
            Don't use it if you want to keep preexisting items.
            </summary>
            <param name="items">An array of items.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.AddRange(System.Object[])">
            <summary>
            Adds an array of objects to the collection.
            This methods clears the collection before adding new items. 
            Don't use it if you want to keep preexisting items.
            </summary>
            <param name="items">An array of items.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Overrides default behavior of collection at inserting new items.
            If specified item already exists in the collection generates an exception.
            </summary>
            <param name="index">The zero-based index of the item to insert.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.GetKeyForItem(`0)">
            <summary>
            Extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.RemoveItem(System.Int32)">
            <summary>
            Overrides base class implementation.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="P:C1.C1Schedule.BaseCollection`1.OwnerInternal">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.Add">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Appointment"/> object 
            with default settings and adds it to the collection.
            </summary>
            <returns>The <see cref="T:C1.C1Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.Add(System.DateTime,System.DateTime)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Appointment"/> object 
            with specified parameters and adds it to the collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the appointment.</param>
            <returns>The <see cref="T:C1.C1Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.Add(System.DateTime,System.TimeSpan)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Appointment"/> object 
            with specified parameters and adds it to the collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="duration">The <see cref="T:System.TimeSpan"/> value which specifies 
            the duration of the appointment.</param>
            <returns>The <see cref="T:C1.C1Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.Add(System.DateTime,System.DateTime,System.String)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Appointment"/> object 
            with specified parameters and adds it to the collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the appointment.</param>
            <param name="subject">The <see cref="T:System.String"/> value which contains 
            the subject of the appointment.</param>
            <returns>The <see cref="T:C1.C1Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.Add(System.DateTime,System.TimeSpan,System.String)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Appointment"/> object 
            with specified parameters and adds it to the collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="duration">The <see cref="T:System.TimeSpan"/> value which specifies 
            the duration of the appointment.</param>
            <param name="subject">The <see cref="T:System.String"/> value which contains 
            the subject of the appointment.</param>
            <returns>The <see cref="T:C1.C1Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.GetOccurrence(C1.C1Schedule.Appointment,System.DateTime,C1.C1Schedule.CalendarInfo)">
            <summary>
            Returns a specific instance of the Appointment object on the specified date.
            </summary>
            <param name="pattern"></param>
            <param name="startDate"></param>
            <param name="info"></param>
            <returns></returns>
            <remarks>The GetOccurrence method generates an exception if no appointment 
            of that series exists on the specified date.</remarks>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.GetOccurrences(System.DateTime,System.DateTime)">
            <summary>
            Retrieves the <see cref="T:C1.C1Schedule.AppointmentList"/> object which contains 
            the full list of <see cref="T:C1.C1Schedule.Appointment"/> objects in the specified time interval. 
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the interval.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the interval.</param>
            <returns>The <see cref="T:C1.C1Schedule.AppointmentList"/> object.</returns>
            <remarks>This method will create instances of the <see cref="T:C1.C1Schedule.Appointment"/>
            object for recurring appointments if they haven't been created yet.
            </remarks>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.GetOccurrences(C1.C1Schedule.Appointment,System.DateTime,System.DateTime)">
            <summary>
            Retrieves the <see cref="T:C1.C1Schedule.AppointmentList"/> object which contains 
            the list of occurrences of the specified master appointment 
            in the specified time interval. 
            </summary>
            <param name="appointment">The <see cref="T:C1.C1Schedule.Appointment"/> object 
            representing the master appointment.</param>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the interval.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the interval.</param>
            <returns>The <see cref="T:C1.C1Schedule.AppointmentList"/> object.</returns>
            <remarks>This method will create instances of the <see cref="T:C1.C1Schedule.Appointment"/>
            object for recurring appointments if they haven't been created yet.</remarks>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.GetConflicts(C1.C1Schedule.Appointment)">
            <summary>
            Retrieves the <see cref="T:C1.C1Schedule.AppointmentList"/> object which contains 
            the list of occurrences of <see cref="T:C1.C1Schedule.Appointment"/> objects 
            which are in conflict with the specified appointment.
            </summary>
            <param name="appointment">The <see cref="T:C1.C1Schedule.Appointment"/> object.</param>
            <returns>The <see cref="T:C1.C1Schedule.AppointmentList"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.ClearItems">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.RemoveItem(System.Int32)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.InsertItem(System.Int32,C1.C1Schedule.Appointment)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.C1Schedule.Appointment"/> object to insert.</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.SetItem(System.Int32,C1.C1Schedule.Appointment)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.C1Schedule.Appointment"/> object to set.</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.AddRange(C1.C1Schedule.Appointment[])">
            <summary>
            Adds an array of <see cref="T:C1.C1Schedule.Appointment"/> objects to the collection.
            This methods clears collection before adding new items. 
            Don't use it if you want to save previously existed items.
            </summary>
            <param name="items">An array of <see cref="T:C1.C1Schedule.Appointment"/> objects.</param>
        </member>
        <member name="E:C1.C1Schedule.AppointmentCollection.AppointmentRecurrenceStateChanged">
            <summary>
            Occurs when RecurrenceState of an appointment is changed.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.AppointmentCollection.AppointmentCustomAction">
            <summary>
            Occurs when a custom action of an appointment executes. 
            </summary>
        </member>
        <member name="E:C1.C1Schedule.AppointmentCollection.AppointmentAdded">
            <summary>
            Occurs when an appointment was added.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.AppointmentCollection.AppointmentRemoved">
            <summary>
            Occurs when an appointment was removed.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.AppointmentCollection.AppointmentChanged">
            <summary>
            Occurs when an appointment was changed.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentCollection.ParentStorage">
            <summary>
            Gets the reference to the owning <see cref="T:C1.C1Schedule.AppointmentStorage"/> object.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.AppointmentList">
            <summary>
            The <see cref="T:C1.C1Schedule.AppointmentList"/> is a sortable collection of 
            <see cref="T:C1.C1Schedule.Appointment"/> objects.
            </summary>
            <remarks>The <see cref="T:C1.C1Schedule.AppointmentList"/> is not guaranteed to be sorted. 
            You must sort the <see cref="T:C1.C1Schedule.AppointmentList"/> before performing operations
            that require the <see cref="T:C1.C1Schedule.AppointmentList"/> to be sorted.</remarks>
        </member>
        <member name="M:C1.C1Schedule.AppointmentList.Sort">
            <summary>
            Sorts the elements in the entire AppointmentList using the default comparer
            (by the Appointment.Start value).
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentList.Sort(System.Comparison{C1.C1Schedule.Appointment})">
            <summary>
            Sorts the elements in the entire AppointmentList using 
            the specified System.Comparison. 
            </summary>
            <param name="comparison">The <see cref="T:System.Comparison`1"/> 
            to use when comparing elements.</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentList.Sort(System.Collections.Generic.IComparer{C1.C1Schedule.Appointment})">
            <summary>
            Sorts the elements in the entire AppointmentList using 
            the specified comparer. 
            </summary>
            <param name="comparer">The IComparer{Appointment} implementation to use 
            when comparing elements, or a null reference (Nothing in Visual Basic) 
            to use the default comparer.</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentList.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{C1.C1Schedule.Appointment})">
            <summary>
            Sorts the elements in a range of elements in AppointmentList using 
            the specified comparer. 
            </summary>
            <param name="index">The zero-based starting index of the range to sort.</param>
            <param name="count">The length of the range to sort.</param>
            <param name="comparer">The IComparer{Appointment} implementation to use 
            when comparing elements, or a null reference (Nothing in Visual Basic) 
            to use the default comparer.</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentList.Clone">
            <summary>
            Creates a copy of the list by copying items to the new list.
            </summary>
            <returns></returns>
        </member>
        <member name="T:C1.C1Schedule.AppointmentComparer">
            <summary>
            Compares <see cref="T:C1.C1Schedule.Appointment"/> objects by their start time.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentComparer.Compare(C1.C1Schedule.Appointment,C1.C1Schedule.Appointment)">
            <summary>
            Performs a comparison of two <see cref="T:C1.C1Schedule.Appointment"/> objects and returns 
            a value indicating whether the one <see cref="T:C1.C1Schedule.Appointment"/> starts earlier, 
            at the same time, or later than the other. 
            </summary>
            <param name="x">The first <see cref="T:C1.C1Schedule.Appointment"/> to compare.</param>
            <param name="y">The second <see cref="T:C1.C1Schedule.Appointment"/> to compare.</param>
            <returns>Less than zero - x occurs earlier than y.
            Zero - x and y occur at the same time.
            Greater than zero - x occurs later than y.</returns>
        </member>
        <member name="P:C1.C1Schedule.AppointmentComparer.Default">
            <summary>
            Returns an existing instance of <see cref="T:C1.C1Schedule.AppointmentComparer"/> class if any;
            or creates a new one.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.AppointmentEventArgs">
            <summary>
            The <see cref="T:C1.C1Schedule.AppointmentEventArgs"/> class describes event data for <see cref="P:C1.C1Schedule.AppointmentEventArgs.Appointment"/> events.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentEventArgs.#ctor(C1.C1Schedule.Appointment)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.AppointmentEventArgs"/>
            class with the specified appointment. 
            </summary>
            <param name="appointment">The <see cref="T:C1.C1Schedule.Appointment"/> object.</param>
        </member>
        <member name="P:C1.C1Schedule.AppointmentEventArgs.Appointment">
            <summary>
            Gets the appointment which the event was raised for. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.CancelAppointmentEventHandler">
            <summary>
            Delegate for handling the cancelable event involving a single 
            <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:C1.C1Schedule.CancelAppointmentEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="T:C1.C1Schedule.CancelAppointmentEventArgs">
            <summary>
            The <see cref="T:C1.C1Schedule.CancelAppointmentEventArgs"/> class describes event data 
            for <see cref="P:C1.C1Schedule.CancelAppointmentEventArgs.Appointment"/> events.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CancelAppointmentEventArgs.#ctor(C1.C1Schedule.Appointment)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.CancelAppointmentEventArgs"/>
            class with the specified appointment. 
            </summary>
            <param name="appointment">The <see cref="P:C1.C1Schedule.CancelAppointmentEventArgs.Appointment"/> object.</param>
        </member>
        <member name="P:C1.C1Schedule.CancelAppointmentEventArgs.Appointment">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.CancelAppointmentEventArgs.Appointment"/> object which the event was raised for. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CancelAppointmentEventArgs.Cancel">
            <summary>
            Set to true to cancel the operation.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.BaseObject">
            <summary>
            The <see cref="T:C1.C1Schedule.BaseObject"/> is a base class for resources, labels, statuses, 
            categories and contacts. It implements base UI properties and persistence.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.#ctor">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.BaseObject"/> object with default settings.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.#ctor(System.String)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.BaseObject"/> object with specified text.
            </summary>
            <param name="text">The <see cref="T:System.String"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.#ctor(System.String,System.String)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.BaseObject"/> object with specified text and menu caption.
            </summary>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The <see cref="T:System.String"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.#ctor(System.Windows.Media.Color,System.String,System.String)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.BaseObject"/> object with specified color, 
            text and menu caption.
            </summary>
            <param name="color">The <see cref="P:C1.C1Schedule.BaseObject.Color"/> value.</param>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The <see cref="T:System.String"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.#ctor(System.Windows.Media.Color,System.String,System.String,C1.C1Schedule.C1Brush)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.BaseObject"/> object with specified parameters.
            </summary>
            <param name="color">The <see cref="P:C1.C1Schedule.BaseObject.Color"/> value.</param>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The <see cref="T:System.String"/> value.</param>
            <param name="brush">The <see cref="P:C1.C1Schedule.BaseObject.Brush"/> object.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.FromXml(System.Xml.XmlReader)">
            <summary>
            Loads an object from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader"/> which contains the object data.</param>
            <returns>Returns true if object has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.ToXml(System.Xml.XmlWriter)">
            <summary>
            Saves an object into specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> 
            that will receive the object data.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.ToString">
            <summary>
            Overrides the default behavior.
            </summary>
            <returns>The text which identifies a user interface object.</returns>
        </member>
        <member name="P:C1.C1Schedule.BaseObject.Color">
            <summary>
            Gets or sets the color of the user interface object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseObject.Text">
            <summary>
            Gets or sets the text which identifies a user interface object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseObject.MenuCaption">
            <summary>
            Gets or sets the menu caption for the user interface object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseObject.Brush">
            <summary>
            Gets or sets the brush used to fill the user interface object's image.
            </summary>
            <remarks>Supported persistence only for System.Drawing.Drawing2D.HatchBrush
            and System.Drawing.SolidBrush</remarks>
        </member>
        <member name="T:C1.C1Schedule.BaseList`1">
            <summary>
            The <see cref="T:C1.C1Schedule.BaseList`1"/> is a base generic class for all lists 
            in C1Schedule's object model.
            Only objects existing in the owning collection can be added to this list.
            </summary>
            <typeparam name="T">The type of the objects which will be stored in the list.
            It should be derived from the <see cref="T:C1.C1Schedule.BasePersistableObject"/> class.</typeparam>
        </member>
        <member name="F:C1.C1Schedule.BaseList`1._owner">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseList`1.InsertItem(System.Int32,`0)">
            <summary>
            Overrides default behavior of Collection.
            Prevents from adding items non-existent in the parent collection.
            </summary>
            <param name="index">The zero-based index of the item to insert.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseList`1.SetItem(System.Int32,`0)">
            <summary>
            Overrides default behavior of Collection.
            Prevents from adding items non-existent in the parent collection.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The object to set.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseList`1.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.C1Schedule.BaseList`1.Owner">
            <summary>
            Gets the reference to the owning collection.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.TimeScaleEnum">
            <summary>
            Determines the time interval which is used for 
            displaying time slots in the DayView.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.FiveMinutes">
            <summary>
            5 minutes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.SixMinutes">
            <summary>
            6 minutes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.TenMinutes">
            <summary>
            10 minutes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.FifteenMinutes">
            <summary>
            15 minutes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.TwentyMinutes">
            <summary>
            20 minutes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.ThirtyMinutes">
            <summary>
            30 minutes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.OneHour">
            <summary>
            60 minutes.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.CalendarInfo">
            <summary>
            The <see cref="T:C1.C1Schedule.CalendarInfo"/> class manages and exposes 
            all date-related data to C1Schedule controls. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.CalendarInfo"/> component.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.IsWorkingDay(System.DateTime)">
            <summary>
            Returns true if specified date is not weekend or holiday.
            </summary>
            <param name="day">The <see cref="T:System.DateTime"/> value to check.</param>
            <returns>True if specified date is not weekend or holiday; false - otherwise.</returns>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.CopyFrom(C1.C1Schedule.CalendarInfo)">
            <summary>
            Copies properties from the specified <see cref="T:C1.C1Schedule.CalendarInfo"/> object to this one. 
            </summary>
            <param name="info">The <see cref="T:C1.C1Schedule.CalendarInfo"/> instance to copy.</param>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.GetDayOfWeekName(System.DayOfWeek)">
            <summary>
            Returns the culture-specific full name of the specified day of the week
            based on the current UI culture.
            </summary>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.GetMonthName(System.Int32)">
            <summary>
            Returns the culture-specific full name of the specified month based on the 
            current UI culture.
            </summary>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.GetInstanceName(C1.C1Schedule.WeekOfMonthEnum)">
            <summary>
            Returns the culture-specific full name of the specified instance based on the 
            current UI culture.
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.ParseTime(System.String)">
            <summary>
            Returns DateTime value with filled DateTimeKind property.
            DateTimeKind = DateTimeKind.Utc if string was saved using RFC1123Pattern. 
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="E:C1.C1Schedule.CalendarInfo.SelectedDaysChanged">
            <summary>
            Occurs when the range of selected days was changed.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.CalendarInfo.PropertyChanged">
            <summary>
            Occurs when the property of <see cref="T:C1.C1Schedule.CalendarInfo"/> object was changed.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.Culture">
            <summary>
            Gets or sets the <see cref="P:C1.C1Schedule.CalendarInfo.CultureInfo"/> object which 
            holds culture-specific information used by C1Schedule components.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.CultureInfo">
            <summary>
            Gets or sets the <see cref="P:C1.C1Schedule.CalendarInfo.CultureInfo"/> object which 
            holds culture-specific information used by C1Schedule components.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.DateFormatString">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining display format 
            of date values to use in appointments and built-in dialogs.
            </summary>
            <remarks>The actual representation depends on the value 
            of the <see cref="P:C1.C1Schedule.CalendarInfo.Culture"/> property.</remarks>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.TimeFormatString">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining display format 
            of time values to use in appointments and built-in dialogs.
            </summary>
            <remarks>The actual representation depends on the value 
            of the <see cref="P:C1.C1Schedule.CalendarInfo.Culture"/> property.</remarks>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.WeekStart">
            <summary>
            Gets or sets the <see cref="T:System.DayOfWeek"/> value determining
            the first day of the week. Default is system settings.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.WorkDays">
            <summary>
            Gets or sets the <see cref="P:C1.C1Schedule.CalendarInfo.WorkDays"/> object containing the 
            set of working days in one week.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.NoWorkingDays">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining whether
            the <see cref="T:C1.C1Schedule.CalendarInfo"/> object has any working days.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.TimeScale">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value specifying the time interval 
            which is used for displaying time slots in the DayView.
            </summary>
            <remarks>The <see cref="P:C1.C1Schedule.CalendarInfo.TimeScale"/> property cannot be set to any 
            arbitrary value. When assigning a value to this property it is 
            automatically calculated so as to be equal to the nearest 
            <see cref="T:C1.C1Schedule.TimeScaleEnum"/> value.</remarks>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.TimeInterval">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.TimeScaleEnum"/> value specifying the time interval 
            which is used for displaying time slots in the DayView.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.StartDayTime">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value specifying the beginning 
            of the working time.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.EndDayTime">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value specifying 
            the end of the working time.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.FirstDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value specifying minimum date allowed. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.LastDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value specifying maximum date allowed. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.Holidays">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.List`1"/> object which holds
            the list of holidays (non-working days in addition to weekends).
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.WeekendExceptions">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.List`1"/> object which holds
            the list of weekend days which should be working.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.DateTimeKind">
            <summary>
            Gets or sets <see cref="P:C1.C1Schedule.CalendarInfo.DateTimeKind"/> specifying DateTime kind
            used for saving <see cref="T:System.DateTime"/> values.
            </summary>
            <remarks>
            This property only have an influence on the process of saving data to
            the AppointmentStorage.DataSource object and on export operations.
            All properties of the <see cref="T:C1.C1Schedule.Appointment"/> and <see cref="T:C1.C1Schedule.RecurrencePattern"/>
            objects represent current system local time values.
            Set this property to DateTimeLind.Utc if you need to save
            data with universal time. In such case the data will be converted 
            to the local time and back at every read/write operation.
            </remarks>
        </member>
        <member name="T:C1.C1Schedule.WorkDays">
            <summary>
            The <see cref="T:C1.C1Schedule.WorkDays"/> class is a list of working days for the single week.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.WorkDays.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.WorkDays"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.WorkDays.AddRange(System.DayOfWeek[])">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.WorkDays"/> object.
            </summary>
            <param name="items">The array of <see cref="T:System.DayOfWeek"/> objects.</param>
        </member>
        <member name="T:C1.C1Schedule.Category">
            <summary>
            The <see cref="T:C1.C1Schedule.Category"/> class represents the category which can be
            associated with the <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Category.#ctor">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Category"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Category.#ctor(System.String)">
            <summary>
            Creates custom <see cref="T:C1.C1Schedule.Category"/> object with specified text.
            </summary>
            <param name="text">The text of category.</param>
        </member>
        <member name="T:C1.C1Schedule.CategoryCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.CategoryCollection"/> is a collection of <see cref="T:C1.C1Schedule.Category"/> 
            objects which represents all available categories in C1Schedule object model.
            By default it contains the set of predefined categories. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CategoryCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.CategoryCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CategoryCollection.LoadDefaults">
            <summary>
            Restores the collection to its default state.
            </summary>
            <remarks>The <see cref="M:C1.C1Schedule.CategoryCollection.LoadDefaults"/> method removes all 
            custom categories from the collection and leaves only the standard ones.
            </remarks>
        </member>
        <member name="M:C1.C1Schedule.CategoryCollection.GetDefaults">
            <summary>
            Returns the list of predefined categories.
            </summary>
            <returns>The <see cref="T:System.Collections.Generic.List`1"/> object.</returns>
        </member>
        <member name="T:C1.C1Schedule.CategoryList">
            <summary>
            The <see cref="T:C1.C1Schedule.CategoryList"/> is a list of <see cref="T:C1.C1Schedule.Category"/> objects.
            Only objects existing in the owning <see cref="T:C1.C1Schedule.CategoryCollection"/> object 
            may be added to this list.
            Use the <see cref="T:C1.C1Schedule.CategoryList"/> to associate the set of <see cref="T:C1.C1Schedule.Category"/> objects 
            with an <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Contact">
            <summary>
            The <see cref="T:C1.C1Schedule.Contact"/> class represents the person information.
            Not real class just sample for prototyping.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Contact.#ctor">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Contact"/> object.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ContactCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.ContactCollection"/> is a collection of <see cref="T:C1.C1Schedule.Contact"/> 
            objects which represents all available contacts in C1Schedule object model.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ContactCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.ContactCollection"/> class.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ContactList">
            <summary>
            The <see cref="T:C1.C1Schedule.ContactList"/> is a list of <see cref="T:C1.C1Schedule.Contact"/> objects.
            Only objects existing in the owning <see cref="T:C1.C1Schedule.ContactCollection"/> object 
            may be added to this list.
            Use the <see cref="T:C1.C1Schedule.ContactList"/> to associate the set of <see cref="T:C1.C1Schedule.Contact"/> objects
            with an <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Day">
            <summary>
            Represents one day in the C1Schedule. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Day.#ctor(System.DateTime)">
            <summary>
            Creates new Day object.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.DayCollection">
            <summary>
            Collection of all days in the C1Schedule component.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.DayCollection.#ctor(C1.C1Schedule.CalendarInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.DayCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.DayCollection.GetDay(System.DateTime)">
            <summary>
            Returns Day object for specified date.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.DayCollection.FillDayCollection">
            <summary>
            Returns DayCollection for all dates from the FirstDate till the LastDate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.DayCollection.FillDayCollection(System.DateTime,System.DateTime)">
            <summary>
            Returns DayCollection for all dates from the start till the end.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.DayCollection.GetDays(System.DateTime,System.DateTime)">
            <summary>
            Returns list of Day objects for all dates from the start till the end.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.DayCollection.GetKeyForItem(C1.C1Schedule.Day)">
            <summary>
            Extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="T:C1.C1Schedule.DateList">
            <summary>
            The <see cref="T:C1.C1Schedule.DateList"/> class is a wrapper for the 
            <see cref="T:System.Collections.Generic.List`1"/> instance.
            At addition of the new value, it cuts off the time part of the value
            and ensures that the value is not present in the list yet.
            </summary>
            <remarks>This class uses binary search for all operations.</remarks>
        </member>
        <member name="M:C1.C1Schedule.DateList.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:C1.C1Schedule.DateList"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.DateList.Add(System.DateTime)">
            <summary>
            Adds new date to the list.
            </summary>
            <param name="item">The <see cref="T:System.DateTime"/> value to add.</param>
        </member>
        <member name="M:C1.C1Schedule.DateList.Clear">
            <summary>
            Clears all items from the wrapped list.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.DateList.Remove(System.DateTime)">
            <summary>
            Removes specified item from the wrapped list.
            </summary>
            <param name="item">The <see cref="T:System.DateTime"/> value to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.DateList.RemoveAt(System.Int32)">
            <summary>
            Removes item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item remove to.</param>
        </member>
        <member name="M:C1.C1Schedule.DateList.Contains(System.DateTime)">
            <summary>
            Returns true if specified item exists in the wrapped list.
            </summary>
            <param name="item">An item to search for.</param>
            <returns>True if item exists in the wrapped list.</returns>
        </member>
        <member name="M:C1.C1Schedule.DateList.Contains(System.DateTime[])">
            <summary>
            Returns true if either of specified items exists in the wrapped list.
            </summary>
            <param name="days">An array of <see cref="T:System.DateTime"/> values to search for.</param>
            <returns>True if at least one of specified items exists in the wrapped list.</returns>
        </member>
        <member name="M:C1.C1Schedule.DateList.Contains(System.Collections.Generic.IList{System.DateTime})">
            <summary>
            Returns true if either of specified items exists in the wrapped list.
            </summary>
            <param name="days">A list of <see cref="T:System.DateTime"/> values to search for.</param>
            <returns>True if at least one of specified items exists in the wrapped list.</returns>
        </member>
        <member name="M:C1.C1Schedule.DateList.GetPreviousDate(System.DateTime)">
            <summary>
            Returns the first item that is less than specified one.
            </summary>
            <param name="item">An item to search for.</param>
            <returns>The first item that is less than specified one; 
            or DateTime.MinValue if such item is not found.</returns>
        </member>
        <member name="M:C1.C1Schedule.DateList.GetNextDate(System.DateTime)">
            <summary>
            Returns the first item that is greater than specified one.
            </summary>
            <param name="item">An item to search for.</param>
            <returns>The first item that is greater than specified one; 
            or DateTime.MaxValue if such item is not found.</returns>
        </member>
        <member name="P:C1.C1Schedule.DateList.Count">
            <summary>
            Returns the number of items in the wrapped list.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.DateList.Items">
            <summary>
            Returns the reference to the wrapped list.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.C1BrushStyleEnum">
            <summary>
            Specifies the different patterns available for brushes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.Transparent">
            <summary>
            Represents transparent brush.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.Solid">
            <summary>
            Represents solid brush.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.BackwardDiagonal">
            <summary>
            A pattern of lines on a diagonal from upper right to lower left.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.ForwardDiagonal">
            <summary>
            A pattern of lines on a diagonal from upper left to lower right. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.Horizontal">
            <summary>
            A pattern of horizontal lines. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.Vertical">
            <summary>
            A pattern of vertical lines. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.C1Brush">
            <summary>
            Wrapper class for brushes. Only for serialization/deserialization purposes.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.#ctor">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.C1Brush"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.#ctor(System.Windows.Media.Color,System.Windows.Media.Color,C1.C1Schedule.C1BrushStyleEnum)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.C1Brush"/> object.
            </summary>
            <param name="foreColor">The foreground <see cref="T:System.Windows.Media.Color"/> value.</param>
            <param name="backColor">The background <see cref="T:System.Windows.Media.Color"/> value.</param>
            <param name="style">The <see cref="T:C1.C1Schedule.C1BrushStyleEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.#ctor(System.Windows.Media.Color)">
            <summary>
            Creates a new solid <see cref="T:C1.C1Schedule.C1Brush"/> object.
            </summary>
            <param name="backColor">The background <see cref="T:System.Windows.Media.Color"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.GetWPFBrush">
            <summary>
            Returns the WPF brush object based on C1Brush definition.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.GetARGBstring(System.Windows.Media.Color)">
            <summary>
            Returns string representation of color in ARGB format.
            </summary>
            <param name="color">The <see cref="P:C1.C1Schedule.BaseObject.Color"/>value.</param>
            <returns>The string representation of color in ARGB format</returns>
        </member>
        <member name="P:C1.C1Schedule.C1Brush.ForeColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1Brush.BackColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1Brush.Style">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1Brush.Brush">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Label">
            <summary>
            The <see cref="T:C1.C1Schedule.Label"/> class represents the label which can be
            associated with the <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Label.#ctor">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Label"/> object with default parameters.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Label.#ctor(System.String)">
            <summary>
            Creates custom <see cref="T:C1.C1Schedule.Label"/> object with specified text.
            </summary>
            <param name="text">The text of the label.</param>
        </member>
        <member name="M:C1.C1Schedule.Label.#ctor(System.String,System.String)">
            <summary>
            Creates custom <see cref="T:C1.C1Schedule.Label"/> object with specified text and menu caption.
            </summary>
            <param name="text">The text of the label.</param>
            <param name="menuCaption">The menu caption for displaying label in dialogs.</param>
        </member>
        <member name="M:C1.C1Schedule.Label.#ctor(System.Windows.Media.Color,System.String,System.String)">
            <summary>
            Creates custom <see cref="T:C1.C1Schedule.Label"/> object with specified color, text and menu caption.
            </summary>
            <param name="color">The color of the label.</param>
            <param name="text">The text of the label.</param>
            <param name="menuCaption">The menu caption for displaying label in dialogs.</param>
        </member>
        <member name="T:C1.C1Schedule.LabelCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.LabelCollection"/> is a collection of <see cref="T:C1.C1Schedule.Label"/> 
            objects which represents all available labels in C1Schedule object model.
            </summary> 
            <remarks>
            <para>By default it contains the following set of predefined labels:</para>
            <list type="bullet">
            <item><term></term><description>None</description></item>
            <item><term></term><description>Important</description></item>
            <item><term></term><description>Business</description></item>
            <item><term></term><description>Personal</description></item>
            <item><term></term><description>Vacation</description></item>
            <item><term></term><description>Must Attend</description></item>
            <item><term></term><description>Deadline</description></item>
            <item><term></term><description>Travel Required</description></item>
            <item><term></term><description>Needs Preparation</description></item>
            <item><term></term><description>Birthday</description></item>
            <item><term></term><description>Anniversary</description></item>
            <item><term></term><description>Phone Call</description></item>
            <para>It also allows adding of custom labels.</para>
            </list>
            </remarks>
        </member>
        <member name="F:C1.C1Schedule.LabelCollection.NoneLabelId">
            <summary>
            Defines Id of the None label.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.LabelCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.LabelCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.LabelCollection.LoadDefaults">
            <summary>
            Restores the collection to its default state.
            </summary>
            <remarks>The <see cref="M:C1.C1Schedule.LabelCollection.LoadDefaults"/> method removes all 
            custom labels from the collection and leaves only the standard ones.
            </remarks>
        </member>
        <member name="T:C1.C1Schedule.LabelList">
            <summary>
            The <see cref="T:C1.C1Schedule.LabelList"/> is a list of <see cref="T:C1.C1Schedule.Label"/> objects.
            Only objects existing in the owning <see cref="T:C1.C1Schedule.LabelCollection"/> object 
            may be added to this list.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.RecurrenceTypeEnum">
            <summary>
            Determines the types of recurrent appointments.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Daily">
            <summary>
            The recurring appointment reoccurs on a daily basis.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Workdays">
            <summary>
            The recurring appointment reoccurs every working day.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Monthly">
            <summary>
            The recurring appointment reoccurs on a monthly basis. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.MonthlyNth">
            <summary>
            The recurring appointment reoccurs every N months. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Weekly">
            <summary>
            The recurring appointment reoccurs on a weekly basis.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Yearly">
            <summary>
            The recurring appointment reoccurs on an yearly basis.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.YearlyNth">
            <summary>
            The recurring appointment reoccurs every N years.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.WeekDaysEnum">
            <summary>
            Determines the set of days and groups of days for recurrence patterns. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.None">
            <summary>
            No specific value; the actual value is obtained from 
            the root <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Sunday">
            <summary>
            Specifies Sunday.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Monday">
            <summary>
            Specifies Monday.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Tuesday">
            <summary>
            Specifies Tuesday. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Wednesday">
            <summary>
            Specifies Wednesday.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Thursday">
            <summary>
            Specifies Thursday.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Friday">
            <summary>
            Specifies Friday.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Saturday">
            <summary>
            Specifies Saturday.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.WeekendDays">
            <summary>
            Specifies Saturday and Sunday (or what ever days according 
            to the settings of the C1Schedule).
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.WorkDays">
            <summary>
            Specifies work days (all days except weekend).
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.EveryDay">
            <summary>
            Specifies every day of the week.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.WeekOfMonthEnum">
            <summary>
            Determines the week in a month in which the appointment will occur.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekOfMonthEnum.First">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the first week in the month. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekOfMonthEnum.Second">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the second week in the month. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekOfMonthEnum.Third">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the third week in the month. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekOfMonthEnum.Fourth">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the fourth week in the month. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekOfMonthEnum.Last">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the last week in the month. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.RecurrencePattern">
            <summary>
            The <see cref="T:C1.C1Schedule.RecurrencePattern"/> class contains information 
            that describes the recurrence pattern and range 
            of the associated <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.OnPropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.GetDescription(System.Globalization.CultureInfo)">
            <summary>
            Gets the human-readable description of the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object
            according to the specified culture.
            </summary>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> object used for getting calendar specific strings.</param>
            <returns>The <see cref="T:System.String"/> value described the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.GetDescription(C1.C1Schedule.CalendarInfo)">
            <summary>
            Gets the human-readable description of the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object
            according to the specified <see cref="T:C1.C1Schedule.CalendarInfo"/> object.
            Use this method instead of <see cref="P:C1.C1Schedule.RecurrencePattern.Description"/> property if the <see cref="T:C1.C1Schedule.RecurrencePattern"/> 
            object does not belong to any <see cref="N:C1.C1Schedule"/> control.
            </summary>
            <param name="calendarInfo">The <see cref="T:C1.C1Schedule.CalendarInfo"/> object used for getting calendar specific strings.</param>
            <returns>The <see cref="T:System.String"/> value described the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.</returns>
            <remarks>If the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object does not belong to the <see cref="N:C1.C1Schedule"/> control,
            its Description property will return the default description using current user culture and calendar settings.</remarks>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.GetOccurrence(System.DateTime,C1.C1Schedule.CalendarInfo)">
            <summary>
            Returns a specific instance of the Appointment object on the specified date.
            </summary>
            <param name="startDate"></param>
            <param name="info">CalendarInfo</param>
            <returns></returns>
            <remarks>The GetOccurrence method generates an exception if no appointment 
            of that series exists on the specified date.</remarks>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.FromXml(System.Xml.XmlReader)">
            <summary>
            Reconstructs recurrence pattern properties from an <see cref="T:System.Xml.XmlReader"/>. 
            </summary>
            <param name="reader"></param>
            <returns>True if pattern has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.ToXml(System.Xml.XmlWriter)">
            <summary>
            Creates an XML encoding of the recurrence pattern properties. 
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.Copy">
            <summary>
            Creates the copy of the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.
            </summary>
            <returns>The new <see cref="T:C1.C1Schedule.RecurrencePattern"/> instance.</returns>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.ParentAppointment">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.Appointment"/> object which represents
            the master appointment for this <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.Description">
            <summary>
            Gets the human-readable description of the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.RecurrenceType">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.RecurrenceTypeEnum"/> value
            determining the type of recurrence (daily, monthly, etc.).
            Default value is RecurrenceTypeEnum.Weekly.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.Interval">
             <summary>
             Gets or sets the <see cref="T:System.Int32"/> value specifying 
             the interval between occurrences of the recurrence. 
             The <see cref="P:C1.C1Schedule.RecurrencePattern.Interval"/> property works in conjunction with 
             the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> property to determine the cycle of the recurrence. 
             The maximum allowable value is 99 for weekly patterns and 999 for daily patterns.
             The default value is 1.
             </summary>
            <remarks>For example, if the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> is set 
             to <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Daily"/>, and the <see cref="P:C1.C1Schedule.RecurrencePattern.Interval"/> is set to 3, 
             the recurrence will occur every third day.</remarks> 
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.EndTime">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value indicating 
            the end time for the given occurrence of the recurrence pattern. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.StartTime">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value indicating 
            the start time for the given occurrence of the recurrence pattern. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.Duration">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value indicating 
            the duration of each occurrence in the recurrence pattern.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.PatternStartDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value indicating 
            the start date of the recurrence pattern. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.PatternEndDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value indicating 
            the end date of the recurrence pattern. 
            </summary>
            <remarks>This property is optional but must be coordinated 
            with other properties when setting up a recurrence pattern. 
            If this property or the <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences"/> property is set, 
            the pattern is considered to be finite, and the <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate"/> 
            property is false. 
            If neither <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate"/> nor <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences"/> is set, 
            the pattern is considered infinite and <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate"/> is true. 
            The <see cref="P:C1.C1Schedule.RecurrencePattern.Interval"/> property must be set before 
            setting <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate"/>.</remarks>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.Occurrences">
            <summary>
            Gets or sets the number of occurrences for the recurrence pattern.
            This property allows the definition of a recurrence pattern that 
            is only valid for the specified number of subsequent occurrences. 
            For example, you can set this property to 10 for a formal training 
            course that will be held on the next ten Thursday evenings.
            The default value is 0.
            </summary>
            <remarks>This property must be coordinated with other properties 
            when setting up a recurrence pattern. 
            If the <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate"/> property 
            or the <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences"/> property is set, the pattern 
            is considered to be finite and the <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate"/> property is false. 
            If neither <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate"/> nor <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences"/> is set, 
            the pattern is considered infinite and <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate"/> is true.</remarks>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.Instance">
            <summary>
            Get or sets the <see cref="T:C1.C1Schedule.WeekOfMonthEnum"/> value specifying 
            the count for which the recurrence pattern is valid for a given interval. 
            This property is only valid for recurrences of 
            the <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.MonthlyNth"/> and 
            <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.YearlyNth"/> types and allows the definition 
            of a recurrence pattern that is only valid for the Nth occurrence, 
            such as "the 2nd Sunday in March" pattern. 
            The default value is WeekOfMonthEnum.First.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.WeekDaysEnum"/> value representing the mask 
            for week days on which the recurring appointment occurs. 
            Monthly and yearly patterns are only valid for a single day. 
            Weekly patterns are only valid as the Or of the <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask"/>.
            The default value is 0.
            </summary>
            <remarks>
            When the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> property is set to 
              <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Daily"/>, the <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask"/> property 
              can only be set to <see cref="F:C1.C1Schedule.WeekDaysEnum.EveryDay"/>; setting the property 
              to any other value will result in an exception.
            When the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> property is set to 
              <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Workdays"/>, the <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask"/> property 
              can only be set to <see cref="F:C1.C1Schedule.WeekDaysEnum.WorkDays"/>; setting the property 
              to any other value will result in an exception.
            When the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> property is set to 
              <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Weekly"/>, the <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask"/> property 
              cannot be set to <see cref="F:C1.C1Schedule.WeekDaysEnum.None"/>; doing so will result 
              in an exception being thrown.
            When the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> property is set to 
              <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Monthly"/> or <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Yearly"/>
              the <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask"/> property is not applicable.</remarks>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.DayOfMonth">
            <summary>
            Gets or sets the number of the day in its respective month on which 
            each occurrence will occur. Applicable only when the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> 
            property is set to <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Monthly"/> 
            or <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Yearly"/>.
            The default value is 1.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.MonthOfYear">
            <summary>
            Gets or sets the value indicating which month of the year is valid 
            for the specified recurrence pattern. Can be a number from 1 to 12.
            This property is only valid for recurrence patterns whose <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> 
            property is set to <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.YearlyNth"/> 
            or <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Yearly"/>.
            The default value is 1.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.NoEndDate">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating if
            the recurrence pattern is endless.
            The default value is True.
            </summary>
            <remarks>This property must be coordinated with other properties when 
            setting up a recurrence pattern. If the <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate"/> property 
            or the <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences"/> property is set, the pattern is considered 
            to be finite and the <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate"/> property is false. 
            If neither <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate"/> nor <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences"/> is set, 
            the pattern is considered infinite and <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate"/> is true.</remarks>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.Exceptions">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.AppointmentList"/> object which holds the list 
            of <see cref="T:C1.C1Schedule.Appointment"/> objects that define the exceptions to that series 
            of appointments. <see cref="T:C1.C1Schedule.Appointment"/> objects are added to 
            the <see cref="P:C1.C1Schedule.RecurrencePattern.Exceptions"/> whenever a property in the corresponding 
            <see cref="T:C1.C1Schedule.Appointment"/> object is altered.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.RemovedOccurrences">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.AppointmentList"/> object which holds the list 
            of <see cref="T:C1.C1Schedule.Appointment"/> objects removed from that series of appointments. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Reminder">
            <summary>
            The <see cref="T:C1.C1Schedule.Reminder"/> class represents an object which allows users to keep track 
            of upcoming appointments by scheduling a pop-up dialog box to appear at a given time. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Reminder.#ctor(C1.C1Schedule.Appointment)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Reminder"/> class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:C1.C1Schedule.Reminder.Snooze(System.TimeSpan)">
            <summary>
            The <see cref="M:C1.C1Schedule.Reminder.Snooze(System.TimeSpan)"/> method notifies the scheduler to defer the triggering 
            of a reminder by the specified interval.
            </summary>
            <param name="delay">The <see cref="T:System.TimeSpan"/>value specifying the interval
            of time to wait before displaying the reminder again.</param>
        </member>
        <member name="M:C1.C1Schedule.Reminder.Dismiss">
            <summary>
            Dismisses the current <see cref="T:C1.C1Schedule.Reminder"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Reminder.OnPropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:C1.C1Schedule.Reminder.ParentAppointment">
            <summary>
            Gets the owning <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Reminder.Caption">
            <summary>
            Gets the <see cref="T:System.String"/> value representing the window caption text 
            of the <see cref="T:C1.C1Schedule.Appointment"/> object which 
            the <see cref="T:C1.C1Schedule.Reminder"/> object is applied to.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Reminder.IsActive">
            <summary>
            Gets a value that determines if the <see cref="T:C1.C1Schedule.Reminder"/> object 
            is currently active (visible). 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Reminder.NextReminderDate">
            <summary>
            Gets the <see cref="T:System.DateTime"/> value indicating the next time the specified 
            reminder will occur. 
            </summary>
            <remarks>The <see cref="P:C1.C1Schedule.Reminder.NextReminderDate"/> property value changes every time 
            the object's <see cref="M:C1.C1Schedule.Reminder.Snooze(System.TimeSpan)"/> method is executed or when the user 
            clicks the Snooze button.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Reminder.OriginalReminderDate">
            <summary>
            Gets the <see cref="T:System.DateTime"/> value specifying the original date and time 
            that the specified reminder is set to occur. 
            It is calculated using the following formula: 
            <see cref="P:C1.C1Schedule.Reminder.OriginalReminderDate"/> = <see cref="P:C1.C1Schedule.Appointment.Start"/> 
              - <see cref="P:C1.C1Schedule.Appointment.ReminderTimeBeforeStart"/>.
            </summary>
            <remarks>This value corresponds to the original date and time 
            value before the <see cref="M:C1.C1Schedule.Reminder.Snooze(System.TimeSpan)"/> method is executed or the user 
            clicks the Snooze button.</remarks>
        </member>
        <member name="T:C1.C1Schedule.ReminderCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.ReminderCollection"/> is a collection of all <see cref="T:C1.C1Schedule.Reminder"/> objects 
            that represents the reminders for all pending items.
            </summary>
            <remarks>Use the <see cref="P:C1.C1Schedule.C1ScheduleStorage.Reminders"/> property to get a reference  
            to the Reminders collection. 
            Reminders are created programmatically when a new <see cref="T:C1.C1Schedule.Appointment"/> object 
            is created with a reminder. For example, a reminder is created when 
            an <see cref="T:C1.C1Schedule.Appointment"/> object is created and the <see cref="P:C1.C1Schedule.Appointment.ReminderSet"/>
            property is set to true. 
            </remarks>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.#ctor">
            <summary>
            Initialize new <see cref="T:C1.C1Schedule.ReminderCollection"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.InsertItem(System.Int32,C1.C1Schedule.Reminder)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.C1Schedule.Reminder"/> object to insert.</param>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.RemoveItem(System.Int32)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.ClearItems">
            <summary>
            Overrides default behavior.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.SetItem(System.Int32,C1.C1Schedule.Reminder)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.C1Schedule.Reminder"/> object to set.</param>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.WaitProc(System.Object,System.Boolean)">
            <summary>
            Method to be called when it is time to show reminder.
            </summary>
            <param name="state"></param>
            <param name="timedOut"></param>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.Dispose">
            <summary>
            Releases all unmanaged resources.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.ReminderCollection.ReminderAdd">
            <summary>
            Occurs after a reminder is added.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.ReminderCollection.ReminderChange">
            <summary>
            Occurs after a reminder has been modified.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.ReminderCollection.ReminderFire">
            <summary>
            Occurs before the reminder is executed.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.ReminderCollection.ReminderSnooze">
            <summary>
            Occurs when a reminder is dismissed using the Snooze button.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.ReminderCollection.ReminderRemove">
            <summary>
            Occurs when a <see cref="T:C1.C1Schedule.Reminder"/>  object has been removed from the collection.
            </summary>
            <remarks>A reminder can be removed from the Reminders collection 
            by any of the following means:
            - The Reminders collection's Remove method. 
            - The Reminder object's Dismiss method. 
            - When the user clicks the Dismiss button. 
            - When a user turns off a meeting reminder from within the associated item.
            - When a user deletes an item that contains a reminder. </remarks>
        </member>
        <member name="T:C1.C1Schedule.ReminderEventArgs">
            <summary>
            Describes event data for <see cref="P:C1.C1Schedule.ReminderEventArgs.Reminder"/> object events.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ReminderEventArgs.#ctor(C1.C1Schedule.Reminder)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.ReminderEventArgs"/> 
            class with the specified <see cref="P:C1.C1Schedule.ReminderEventArgs.Reminder"/> object. 
            </summary>
            <param name="reminder">The <see cref="P:C1.C1Schedule.ReminderEventArgs.Reminder"/> object.</param>
        </member>
        <member name="P:C1.C1Schedule.ReminderEventArgs.Reminder">
            <summary>
            Gets the reminder which the event was raised for. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.CancelReminderEventHandler">
            <summary>
            Delegate for handling the cancelable event involving a single <see cref="T:C1.C1Schedule.Reminder"/> object. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:C1.C1Schedule.CancelReminderEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="T:C1.C1Schedule.CancelReminderEventArgs">
            <summary>
            Describes event data for cancelable Reminder events.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CancelReminderEventArgs.#ctor(C1.C1Schedule.Reminder)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.CancelReminderEventArgs"/>
            class with the specified <see cref="P:C1.C1Schedule.CancelReminderEventArgs.Reminder"/> object. 
            </summary>
            <param name="reminder">The <see cref="T:C1.C1Schedule.Reminder"/> object.</param>
        </member>
        <member name="P:C1.C1Schedule.CancelReminderEventArgs.Reminder">
            <summary>
            Gets the reminder which the event was raised for. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CancelReminderEventArgs.Cancel">
            <summary>
            Set to true to cancel the operation.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Resource">
            <summary>
            The <see cref="T:C1.C1Schedule.Resource"/> class represents the resource which can be
            associated with the <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Resource.#ctor">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Resource"/> object.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ResourceCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.ResourceCollection"/> is a collection of <see cref="T:C1.C1Schedule.Resource"/> 
            objects which represents all available resources in C1Schedule object model.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ResourceCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.ResourceCollection"/> class.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ResourceList">
            <summary>
            The <see cref="T:C1.C1Schedule.ResourceList"/> is a list of <see cref="T:C1.C1Schedule.Resource"/> objects.
            Only objects existing in the owning <see cref="T:C1.C1Schedule.ResourceCollection"/> object 
            may be added to this list.
            Use the <see cref="T:C1.C1Schedule.ResourceList"/> to associate the set of <see cref="T:C1.C1Schedule.Resource"/> objects 
            with an <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.StatusTypeEnum">
            <summary>
            Determines the type of status.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.StatusTypeEnum.Busy">
            <summary>
            This status means that a person is in the office but unavailable to others.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.StatusTypeEnum.Free">
            <summary>
            This status means that a person is in the office and available to others. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.StatusTypeEnum.OutOfOffice">
            <summary>
            This status means that a person is out of the office and unavailable to others.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.StatusTypeEnum.Tentative">
            <summary>
            This status means that a person is in the office and tentatively available to others.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.StatusTypeEnum.Custom">
            <summary>
            This status represents all custom statuses added to the StatusCollection.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Status">
            <summary>
            The <see cref="T:C1.C1Schedule.Status"/> class represents an availability status 
            for the <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor">
            <summary>
            Creates the new custom <see cref="T:C1.C1Schedule.Status"/> object with default parameters.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(C1.C1Schedule.StatusTypeEnum)">
            <summary>
            Creates a new instance of the <see cref="T:C1.C1Schedule.Status"/> class 
            and initializes it with the specified type. 
            </summary>
            <param name="type">The <see cref="T:C1.C1Schedule.StatusTypeEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(C1.C1Schedule.StatusTypeEnum,System.Globalization.CultureInfo)">
            <summary>
            Creates a new instance of the <see cref="T:C1.C1Schedule.Status"/> class 
            and initializes it with the specified type. 
            </summary>
            <param name="type">The <see cref="T:C1.C1Schedule.StatusTypeEnum"/> value.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(System.String)">
            <summary>
            Creates a new instance of the custom <see cref="T:C1.C1Schedule.Status"/> object with the specified text.
            </summary>
            <param name="text">The <see cref="T:System.String"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(System.String,System.String)">
            <summary>
            Creates the new custom <see cref="T:C1.C1Schedule.Status"/> object with specified text and menu caption.
            </summary>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The menu caption for displaying status in dialogs.</param>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(System.Windows.Media.Color,System.String,System.String)">
            <summary>
            Creates the new custom <see cref="T:C1.C1Schedule.Status"/> object with specified color, 
            text and menu caption.
            </summary>
            <param name="color">The color which will be used for displaying status.</param>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The menu caption for displaying status in dialogs.</param>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(System.Windows.Media.Color,System.String,System.String,C1.C1Schedule.C1Brush)">
            <summary>
            Creates the new custom <see cref="T:C1.C1Schedule.Status"/> object with specified parameters.
            </summary>
            <param name="color">The color which will be used for displaying status.</param>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The menu caption for displaying status in dialogs.</param>
            <param name="brush">The brush which will be used for displaying status.</param>
        </member>
        <member name="P:C1.C1Schedule.Status.StatusType">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.StatusTypeEnum"/> value determining the type of the status. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.StatusCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.StatusCollection"/> is a collection of <see cref="T:C1.C1Schedule.Status"/> 
            objects which represents all available statuses in C1Schedule object model.
            By default it contains the set of predefined statuses. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.StatusCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.StatusCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.StatusCollection.LoadDefaults">
            <summary>
            Restores the collection to its default state.
            </summary>
            <remarks>The <see cref="M:C1.C1Schedule.StatusCollection.LoadDefaults"/> method removes all the custom 
            appointment statuses from the collection and leaves only the standard ones.
            </remarks>
        </member>
        <member name="P:C1.C1Schedule.StatusCollection.Item(C1.C1Schedule.StatusTypeEnum)">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.Status"/> object specified by the appointment status type. 
            For custom statuses returns the first occurrence.
            If there is no such <see cref="T:C1.C1Schedule.Status"/> object in the collection, returns null.
            </summary>
            <param name="type">The <see cref="T:C1.C1Schedule.StatusTypeEnum"/> value.</param>
            <returns>The <see cref="T:C1.C1Schedule.Status"/> object.</returns>
        </member>
        <member name="T:C1.C1Schedule.StatusList">
            <summary>
            The <see cref="T:C1.C1Schedule.StatusList"/> is a list of <see cref="T:C1.C1Schedule.Status"/> objects.
            Only objects existing in the owning <see cref="T:C1.C1Schedule.StatusCollection"/> object 
            may be added to this list.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.CalendarHelper">
            <summary>
            Provides auxiliary properties providing calendar specific information.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.CalendarHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.CalendarHelper"/> class.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.CalendarHelper.PropertyChanged">
            <summary>
            Occurs when the property of <see cref="T:C1.Silverlight.Schedule.CalendarHelper"/> object is changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarHelper.Culture">
            <summary>
            Gets or sets the <see cref="T:System.Globalization.CultureInfo"/> object which holds culture-specific information.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarHelper.WeekStart">
            <summary>
            Gets or sets the <see cref="T:System.DayOfWeek"/> value determining
            the first day of the week. Default is system settings.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarHelper.WorkDays">
             <summary>
             Gets or sets the <see cref="P:C1.Silverlight.Schedule.CalendarHelper.WorkDays"/> object containing the 
             set of working days in one week.
             </summary>
             <remarks>Note: WorkingWeekView style should set <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualTimeSpan"/> 
             property to 7 days.	The actual number of displayed days will depend on 
             the <see cref="P:C1.Silverlight.Schedule.CalendarHelper.WorkDays"/> list.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarHelper.NoWorkingDays">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining whether
            the <see cref="T:C1.Silverlight.Schedule.CalendarHelper"/> object has any working days.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarHelper.StartDayTime">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value specifying the beginning 
            of the working time.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarHelper.EndDayTime">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value specifying 
            the end of the working time.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarHelper.DateTimeKind">
            <summary>
            Gets or sets a <see cref="P:C1.Silverlight.Schedule.CalendarHelper.DateTimeKind"/> value specifying DateTime kind
            used for saving <see cref="T:System.DateTime"/> values.
            </summary>
            <remarks>
            This property only has an influence on the process of saving data to
            the AppointmentStorage.DataSource object and on export operations.
            All properties of the <see cref="T:C1.C1Schedule.Appointment"/> and <see cref="T:C1.C1Schedule.RecurrencePattern"/>
            objects represent current system local time values.
            Set this property to DateTimeLind.Utc if you need to save
            data with universal time. In such case the data will be converted 
            to the local time and back at every read/write operation.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarHelper.FirstDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value specifying minimum date allowed. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarHelper.LastDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value specifying maximum date allowed. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarHelper.Info">
            <summary>
            Gets the underlying <see cref="T:C1.C1Schedule.CalendarInfo"/> object. For internal use only.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarHelper.Holidays">
            <summary>
            Gets or sets the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> object which holds
            the list of holidays (non-working days in addition to weekends).
            </summary>
            <remarks>Setting this property copies items from the new value to the
            underlying collection.</remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarHelper.WeekendExceptions">
            <summary>
            Gets or sets the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> object which holds
            the list of weekend days which should be working.
            </summary>
            <remarks>Setting this property copies items from the new value to the
            underlying collection.</remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarHelper.FullMonthNames">
            <summary>
            Gets an array of culture specific full month names.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.CalendarHelper.FullDayNames">
            <summary>
            Gets an array of culture specific full day names.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.WorkDaysConverter">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.WorkDaysConverter"/> provides a type converter to convert <see cref="T:C1.C1Schedule.WorkDays"/> objects 
            to and from various other representations. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.WorkDaysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type 
            to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>True if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.WorkDaysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.WorkDaysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>True if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.WorkDaysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.ReentrantObservableCollection`1">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.ReentrantObservableCollection`1"/> class represents the same
            interface and functionality as the <see cref="T:C1.Silverlight.Schedule.DeferrableObservableCollection`1"/>
            with one exception: it allows collection changing in event handlers for 
            the <see cref="E:C1.Silverlight.Schedule.ReentrantObservableCollection`1.CollectionChanged"/> event.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.BeginUpdate">
            <summary>
            Prevents raising events until the <see cref="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.EndUpdate"/> method is called. 
            </summary>
            <remarks>The <see cref="T:C1.Silverlight.Schedule.ReentrantObservableCollection`1"/> keeps count 
            of calls to <see cref="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.BeginUpdate"/> method. 
            Be sure to call <see cref="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.EndUpdate"/> method for each call to <see cref="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.BeginUpdate"/> method.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.EndUpdate">
            <summary>
            Enables raising events. If collection has been changed since the call 
            to the <see cref="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.BeginUpdate"/> method, raises PropertyChanged and CollectionChanged events.
            </summary>
            <remarks>The <see cref="T:C1.Silverlight.Schedule.ReentrantObservableCollection`1"/> keeps count 
            of calls to <see cref="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.BeginUpdate"/> method. 
            Be sure to call <see cref="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.EndUpdate"/> method for each call to <see cref="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.BeginUpdate"/> method.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises CollectionChanged event if the <see cref="T:C1.Silverlight.Schedule.ReentrantObservableCollection`1"/>
            is not in update mode.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises PropertyChanged event if the <see cref="T:C1.Silverlight.Schedule.ReentrantObservableCollection`1"/>
            is not in update mode.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.RemoveItem(System.Int32)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.ClearItems">
            <summary>
            Overrides the default behavior.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.SetItem(System.Int32,`0)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at the specified index to a new location in the collection. 
            </summary>
            <param name="oldIndex">The zero-based index specifying the location of the item to be moved.</param>
            <param name="newIndex">The zero-based index specifying the new location of the item.</param>
        </member>
        <member name="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.MoveItem(System.Int32,System.Int32)">
            <summary>
            Implements item moving from one location to another.
            </summary>
            <param name="oldIndex"></param>
            <param name="newIndex"></param>
        </member>
        <member name="E:C1.Silverlight.Schedule.ReentrantObservableCollection`1.CollectionChanged">
            <summary>
            Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.ReentrantObservableCollection`1.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.ReentrantObservableCollection`1.InUpdate">
            <summary>
            Gets a <see cref="T:System.Boolean"/> value determining whether the <see cref="T:C1.Silverlight.Schedule.ReentrantObservableCollection`1"/>
            is in update mode (<see cref="M:C1.Silverlight.Schedule.ReentrantObservableCollection`1.BeginUpdate"/> has been called).
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.DateList">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.DateList"/> class represents the observable collection
            of <see cref="T:System.DateTime"/> values. The collection contains unique
            values only. Every item in collection is a <see cref="T:System.DateTime"/> value
            containing the date part only.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.DateList.Add(System.DateTime)">
            <summary>
            Adds a <see cref="T:System.DateTime"/> value to the end of the Collection. 
            </summary>
            <param name="item">The <see cref="T:System.DateTime"/> value to be added to the end of the Collection. </param>
        </member>
        <member name="T:C1.Silverlight.Schedule.DateTimeInfo">
            <summary>
            Provides additional info about a DateTime in a specified culture.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.DateTimeInfo.#ctor(System.DateTime,C1.Silverlight.Schedule.CalendarHelper)">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Silverlight.Schedule.DateTimeInfo"/> class.
            </summary>
            <param name="baseDateTime">The base <see cref="T:System.DateTime"/> value.</param>
            <param name="helper">The <see cref="P:C1.Silverlight.Schedule.DateTimeInfo.CalendarHelper"/> object holding 
            the calendar specific information.</param>
        </member>
        <member name="P:C1.Silverlight.Schedule.DateTimeInfo.BaseDateTime">
            <summary>
            The base <see cref="T:System.DateTime"/> value.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DateTimeInfo.MonthFullName">
            <summary>
            Gets the full month name according to the <see cref="P:C1.Silverlight.Schedule.DateTimeInfo.CalendarHelper"/> culture settings.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DateTimeInfo.Year">
            <summary>
            Gets the <see cref="T:System.String"/> value determining the year representation 
            according to the <see cref="P:C1.Silverlight.Schedule.DateTimeInfo.CalendarHelper"/> culture settings.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DateTimeInfo.CalendarHelper">
            <summary>
            Gets the <see cref="P:C1.Silverlight.Schedule.DateTimeInfo.CalendarHelper"/> object which is used for
            retrieving calendar specific information.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DateTimeInfo.WeekOfYear">
            <summary>
            Gets a week of year number.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DateTimeInfo.WeekOfYearFullWeek">
            <summary>
            Gets a week number in a supposition that last days of a year and the first 
            days of a next year that belongs to the same week having the same week number.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DateTimeInfo.IsWeekend">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value determining whether this date is weekend or
            holiday.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DateTimeInfo.FormattedDate">
            <summary>
            Gets the <see cref="T:C1.Silverlight.Schedule.DateFormatIndexer"/> object.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.DateTimeInfo.PropertyChanged">
            <summary>
            Occurs when property value is changed.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.DateFormatIndexer">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.DateFormatIndexer"/> class represents an object returning 
            formatted DateTime string by the indexer property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DateFormatIndexer.Item(System.String)">
            <summary>
            Gets a string representation of underlying DateTime value
            according to the specified format.
            </summary>
            <param name="format">Date format string.</param>
            <returns>A string representation of underlying DateTime value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.TimeRulerConverter">
            <summary>
            Represents a Binding converter that converts minute part of 
            DateTimeInfo start time to its string representation.
            </summary>
            <remarks>
            <see cref="T:C1.Silverlight.Schedule.TimeRulerConverter"/> is a one-way converter. 
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.TimeRulerConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.TimeRulerConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.TimeRulerConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method 
            when it propagates a value from the binding source to the binding target. 
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.TimeRulerConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Throws System.NotImplementedException. 
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.TimeRulerHelper">
            <summary>
            Supplies hours and minutes string representation based on the specified <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> object,
            current culture and <see cref="P:C1.Silverlight.Schedule.C1Scheduler.TimeFormat"/> property value.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.TimeRulerHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.TimeRulerHelper"/> element.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.TimeRulerHelper.IntervalProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.TimeRulerHelper.Interval"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.TimeRulerHelper.HoursProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.TimeRulerHelper.Hours"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.TimeRulerHelper.MinutesProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.TimeRulerHelper.Minutes"/> dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.TimeRulerHelper.Interval">
            <summary>
            Gets or sets the <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> object.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.TimeRulerHelper.Hours">
            <summary>
            Gets the <see cref="T:System.String"/> value representing the hours part of the VisualInterfal.Start time.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.TimeRulerHelper.Minutes">
            <summary>
            Gets the <see cref="T:System.String"/> value representing the minutes part of the VisualInterfal.Start time.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.DateTimeInterval">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.DateTimeInterval"/> object represents a continuous interval of time.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.DateTimeInterval.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.DateTimeInterval"/> class.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value representing 
            the beginning of the interval.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value representing 
            the end of the interval.</param>
        </member>
        <member name="P:C1.Silverlight.Schedule.DateTimeInterval.Start">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value 
            representing the beginning of the interval.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DateTimeInterval.End">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value 
            representing the end of the interval.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DateTimeInterval.IsFullDay">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value, determining if
            the <see cref="T:C1.Silverlight.Schedule.DateTimeInterval"/> object represents one or more full days.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.AddValueConverter">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.AddValueConverter"/> class is the abstract base class for the
            <see cref="T:C1.Silverlight.Schedule.IncrementConverter"/> and <see cref="T:C1.Silverlight.Schedule.DecrementConverter"/> classes.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.AddValueConverter.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.AddValueConverter"/>
            </summary>
            <param name="delta"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.AddValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method 
            when it propagates a value from the binding source to the binding target. 
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.AddValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method when it propagates 
            a value from the binding target to the binding source. 
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.IncrementConverter">
            <summary>
            Represents a Binding converter that keeps binding target = binding source + 1,
            where source and target values are numeric.
            </summary>
            <remarks>
            <see cref="T:C1.Silverlight.Schedule.IncrementConverter"/> is a two-way converter. When converting in any 
            direction, a source value must be of any numeric type, and a converted value is
            of the System.Int32 type.
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.IncrementConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.IncrementConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.IncrementConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.IncrementConverter"/>
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.DecrementConverter">
            <summary>
            Represents a Binding converter that keeps binding target = binding source - 1,
            where source and target values are numeric.
            </summary>
            <remarks>
            <see cref="T:C1.Silverlight.Schedule.DecrementConverter"/> is a two-way converter. When converting in any 
            direction, a source value must be of any numeric type, and a converted value is
            of the System.Int32 type.
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.DecrementConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.DecrementConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.DecrementConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.DecrementConverter"/>.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.SelectedEnumMemberConverterBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.SelectedEnumMemberConverterBase.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.SelectedEnumMemberConverterBase"/>.
            </summary>
            <param name="isFlag"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.SelectedEnumMemberConverterBase.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method 
            when it propagates a value from the binding source to the binding target. 
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.SelectedEnumMemberConverterBase.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method when it propagates 
            a value from the binding target to the binding source. 
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.SelectedEnumMemberConverter">
            <summary>
            Represents a Binding converter that indicates whether a binding source value
            is an enum member specified in the converter parameter.
            </summary>
            <remarks>
            <see cref="T:C1.Silverlight.Schedule.SelectedEnumMemberConverter"/> is a two-way converter. 
            <para>
            Source - Target behavior:
            </para>
            <para>
            If a binding source value is an enum member specified in a converter parameter,
            then the binding target value is True; otherwise, False.
            </para>
            <para>
            Target - Source behavior:
            </para>
            <para>
            If target is True, then the source is the enum member specified in a parameter. 
            Otherwise, the source is not updated. 
            </para>
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.SelectedEnumMemberConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.SelectedEnumMemberConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.SelectedEnumMemberConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.SelectedEnumMemberConverter"/>.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.SelectedEnumMemberFlagConverter">
            <summary>
            Represents a Binding converter that indicates whether a binding source value
            contains an enum member (flag) specified in the converter parameter.
            </summary>
            <remarks>
            Source - Target behavior:
            <para>
            If source value is an enum member and it contains a flag specified in a converter parameter, 
            then the target is True; otherwise, False. 
            </para>
            <para>
            Target - Source behavior:
            </para>
            <para>
            If target is True, then the source is the enum member specified in a parameter. 
            Otherwise, the source is not updated. 
            </para>
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.SelectedEnumMemberFlagConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.SelectedEnumMemberFlagConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.SelectedEnumMemberFlagConverter.#ctor">
            <summary>
            Creates a new instance of <see cref="T:C1.Silverlight.Schedule.SelectedEnumMemberFlagConverter"/>.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.EnsureEnumMemberConverter">
            <summary>
            Represents a Binding converter that indicates whether a binding source value
            is one of enum members specified in the converter parameter.
            </summary>
            <remarks>
            <see cref="T:C1.Silverlight.Schedule.EnsureEnumMemberConverter"/> is a two-way converter. 
            A converter parameter should be a string representing a list of enum member 
            names separated by the ';' or ',' character.  
            <para>
            Source - Target behavior:
            </para>
            <para>
            Returns True if a source value is one of the enum members listed in a parameter; otherwise, False.
            </para>
            <para>
            Target - Source behavior:
            </para>
            <para>
            If target is True, then returns a first enum member (as enum, not as a string name) 
            from members listed in a converter parameter.
            </para>
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.EnsureEnumMemberConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.EnsureEnumMemberConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.EnsureEnumMemberConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method 
            when it propagates a value from the binding source to the binding target. 
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.EnsureEnumMemberConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method when it propagates 
            a value from the binding target to the binding source. 
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.EnsureEnumMemberConverter.ConvertParam(System.Type,System.Object)">
            <summary>
            Converts <paramref name="parameter"/> which should contain a string with
            enum member names separated by ',' or ';' character to an array of corresponding
            enum members of the specified <paramref name="enumType"/> enum type.
            Never returns a null value, in the case when conversion is impossible returns
            an empty array.
            </summary>
            <param name="enumType"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.DateTimeToStringConverter">
            <summary>
            Represents a Binding converter that converts a <see cref="T:System.DateTime"/> 
            to one of its string representations.
            </summary>
            <remarks>
            <see cref="T:C1.Silverlight.Schedule.DateTimeToStringConverter"/> is a two-way converter. The source value 
            must be the DateTime, and a target value is a string that represents the DateTime
            according to a format specifier defined in a converter parameter. The format
            specifier definition rules are the same as used in the 
            System.DateTime.ToString(format) method. A back conversion is performed via 
            the DateTime.DateTime.TryParseExact method if converter parameter is specified;
            otherwise, the DateTime.DateTime.TryParse method is used.
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.DateTimeToStringConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.DateTimeToStringConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.DateTimeToStringConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.DateTimeToStringConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.DateTimeToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method 
            when it propagates a value from the binding source to the binding target. 
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.DateTimeToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method when it propagates 
            a value from the binding target to the binding source. 
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.BooleanToVisibilityConverter">
            <summary>
            Represents a Binding converter that converts a <see cref="T:System.Boolean"/> 
            to the corresponding <see cref="T:System.Windows.Visibility"/> value.
            If ConverterParameter is not null, returns inverted value.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.BooleanToVisibilityConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.BooleanToVisibilityConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.BooleanToVisibilityConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.BooleanToVisibilityConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method 
            when it propagates a value from the binding source to the binding target. 
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method when it propagates 
            a value from the binding target to the binding source. 
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.ColorToBrushConverter">
            <summary>
            Represents a Binding converter that converts a color to a brush.
            </summary>
            <remarks>
            <see cref="T:C1.Silverlight.Schedule.ColorToBrushConverter"/> is a two-way converter. The source value 
            must be a System.Windows.Media.Color, and the target value is a 
            System.Windows.Media.SolidColorBrush based on the color.
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.ColorToBrushConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.ColorToBrushConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.ColorToBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method 
            when it propagates a value from the binding source to the binding target. 
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.ColorToBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method when it propagates 
            a value from the binding target to the binding source. 
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.ChangeSignConverter">
            <summary>
            Represents a Binding converter that changes a sign of a numeric value.
            </summary>
            <remarks>
            <see cref="T:C1.Silverlight.Schedule.ChangeSignConverter"/> is a two-way converter. A source value must be
            of a numeric type, and a converted value has the same type as a source value.
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.ChangeSignConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.ChangeSignConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.ChangeSignConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method 
            when it propagates a value from the binding source to the binding target. 
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.ChangeSignConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method when it propagates 
            a value from the binding target to the binding source. 
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.ChangeThicknessSignConverter">
            <summary>
            Represents a Binding converter that changes a sign of each member of Thickness.
            </summary>
            <remarks>
            <see cref="T:C1.Silverlight.Schedule.ChangeThicknessSignConverter"/> is a two-way converter. The source value
            must be a Thickness object, and the converted value is a Thickness where all 
            edges has a thickness with the opposite sign.
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.ChangeThicknessSignConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.ChangeThicknessSignConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.ChangeThicknessSignConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method 
            when it propagates a value from the binding source to the binding target. 
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.ChangeThicknessSignConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method when it propagates 
            a value from the binding target to the binding source. 
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.IsNotEmptyOrSpaceStringConverter">
            <summary>
            Represents a Binding converter that returns a Boolean value indicating whether a 
            source value is null or a string containing zero or more space characters only, or
            a not empty string.
            </summary>
            <remarks>
            <see cref="!:IsEmptyOrSpaceStringConverter"/> is a one-way converter. A target value 
            returned by the converter is false if a source value is null or a zero length string 
            or a string containing space characters only; otherwise, a target value is true.
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.IsNotEmptyOrSpaceStringConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.IsNotEmptyOrSpaceStringConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.IsNotEmptyOrSpaceStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method 
            when it propagates a value from the binding source to the binding target. 
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.IsNotEmptyOrSpaceStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns Binding.DoNothing. 
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.IsTodayConverter">
            <summary>
            Represents a Binding converter that returns a <see cref="T:System.Boolean"/> value 
            indicating whether a source value is today's date.
            </summary>
            <remarks>
            <see cref="T:C1.Silverlight.Schedule.IsTodayConverter"/> is a one-way converter. 
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.IsTodayConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.IsTodayConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.IsTodayConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method 
            when it propagates a value from the binding source to the binding target. 
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.IsTodayConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns Binding.DoNothing. 
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.NumberToStringConverter">
            <summary>
            Represents a Binding converter that converts an integer value to one of its string representations.
            </summary>
            <remarks>
            <see cref="T:C1.Silverlight.Schedule.NumberToStringConverter"/> is a two-way converter. A source value 
            must be a number, and a target value is a string that represents the integer.
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.NumberToStringConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.NumberToStringConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.NumberToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method 
            when it propagates a value from the binding source to the binding target. 
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.NumberToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method when it propagates 
            a value from the binding target to the binding source. 
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.ArithmeticSubtractConverter">
            <summary>
            Represents a Binding converter that returns the double value representing
            the difference between value and converter parameter.
            This is a one-way converter.
            </summary>
            <remarks>Converted value and converter parameter might be of any type which 
            implements IConvertible interface.</remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.ArithmeticSubtractConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.ArithmeticSubtractConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.ArithmeticSubtractConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method 
            when it propagates a value from the binding source to the binding target. 
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.ArithmeticSubtractConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.WeekDaysToIntConverter">
            <summary>
            Represents a Binding converter that converts a WeekDaysEnum value to integer 
            representations.
            </summary>
            <remarks>
            If the WeekDaysEnum value represents a combination of several flags, this converter will throw away
            extra flags and return an integer value corresponding to the single flag value.
            Use this converter to receive a valid value of the selected index in comboboxes which use
            WeekDaysEnum flags as the data source.
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.WeekDaysToIntConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.WeekDaysToIntConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.WeekDaysToIntConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method 
            when it propagates a value from the binding source to the binding target. 
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.WeekDaysToIntConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method when it propagates 
            a value from the binding target to the binding source. 
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.RemindersToStringConverter">
            <summary>
            Represents a Binding converter that returns a string title for Reminders Window.
            </summary>
            <remarks>
            <see cref="T:C1.Silverlight.Schedule.RemindersToStringConverter"/> is a one-way converter. 
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.RemindersToStringConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.RemindersToStringConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.RemindersToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method 
            when it propagates a value from the binding source to the binding target. 
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.RemindersToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Throws System.NotImplementedException. 
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.ImportanceEnumMemberConverter">
            <summary>
            Represents a Binding converter that indicates whether a binding source value
            is an enum member specified in the converter parameter.
            </summary>
            <remarks>
            <see cref="T:C1.Silverlight.Schedule.ImportanceEnumMemberConverter"/> is a two-way converter. 
            <para>
            Source - Target behavior:
            </para>
            <para>
            If a binding source value is an enum member specified in a converter parameter,
            then a binding target value is True; otherwise, False.
            </para>
            <para>
            Target - Source behavior:
            </para>
            <para>
            If target is True, then the source is an enum member specified in a parameter.
            If target is False and parameter is <see cref="F:C1.C1Schedule.ImportanceEnum.High"/> or <see cref="F:C1.C1Schedule.ImportanceEnum.Low"/>, 
            then source is <see cref="F:C1.C1Schedule.ImportanceEnum.Normal"/>.
            </para>
            </remarks>	
        </member>
        <member name="F:C1.Silverlight.Schedule.ImportanceEnumMemberConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.ImportanceEnumMemberConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.ImportanceEnumMemberConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method 
            when it propagates a value from the binding source to the binding target. 
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.ImportanceEnumMemberConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. The data binding engine calls this method when it propagates 
            a value from the binding target to the binding source. 
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.DataValueUtils.GetEmptyOrValue(System.String)">
            <summary>
            Returns "" (EmptyOrSpaceString(s) == true) or s.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.DataValueUtils.IsAnyNull(System.Object)">
            <summary>
            Returns true if value is null or DbNull.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.DataValueUtils.IndexOfAnyNull(System.Collections.IList)">
            <summary>
            Returns an index of the first element in the specified list
            which is null or DbNull, or -1 if there is no.
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.DataValueUtils.IsWhiteSpaceOnly(System.String)">
            <summary>
            Returns true if specified string contains only whitespaces.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.DataValueUtils.GetDistinctList``1(System.Collections.Generic.IList{``0})">
            <summary>
            Returns a list that contains each element from 
            <paramref name="sourceList"/> only once.
            A returning list could be a source one (it it's null or doesn't
            contains duplicate items) or a new list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sourceList"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.GroupStyleSelector">
            <summary>
            Delegate used to select the group style as a function of the parent group and its level.
            </summary>
            <param name="group">Group whose style is to be selected.</param>
            <param name="level">Level of the group.</param>
            <returns>Selected <see cref="T:C1.Silverlight.Schedule.GroupStyle"/> object.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.GroupedListBox">
            <summary>
            Contains a list of selectable items. Supports grouping.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.GroupedListBox.HasItemsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.GroupedListBox.HasItems"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.GroupedListBox.ItemTemplateSelectorProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.GroupedListBox.ItemTemplateSelector"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.OnItemTemplateSelectorChanged(C1.Silverlight.C1DataTemplateSelector,C1.Silverlight.C1DataTemplateSelector)">
            <summary>
            Invoked when the <see cref="P:C1.Silverlight.Schedule.GroupedListBox.ItemTemplateSelector"/> property changes.
            </summary>
            <param name="oldItemTemplateSelector">The old <see cref="P:C1.Silverlight.Schedule.GroupedListBox.ItemTemplateSelector"/> property value.</param>
            <param name="newItemTemplateSelector">The new <see cref="P:C1.Silverlight.Schedule.GroupedListBox.ItemTemplateSelector"/> property value.</param>
        </member>
        <member name="F:C1.Silverlight.Schedule.GroupedListBox.ItemContainerStyleSelectorProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.GroupedListBox.ItemContainerStyleSelector"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.OnItemContainerStyleSelectorChanged(C1.Silverlight.C1StyleSelector,C1.Silverlight.C1StyleSelector)">
            <summary>
            Invoked when the <see cref="P:C1.Silverlight.Schedule.GroupedListBox.ItemContainerStyleSelector"/> property changes.
            </summary>
            <param name="oldItemContainerStyleSelector">The old <see cref="P:C1.Silverlight.Schedule.GroupedListBox.ItemContainerStyleSelector"/> property value.</param>
            <param name="newItemContainerStyleSelector">The new <see cref="P:C1.Silverlight.Schedule.GroupedListBox.ItemContainerStyleSelector"/> property value.</param>
        </member>
        <member name="F:C1.Silverlight.Schedule.GroupedListBox.IsGroupingProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.GroupedListBox.IsGrouping"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.GroupedListBox.GroupStyleSelectorProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.GroupedListBox.GroupStyleSelector"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.OnGroupStyleSelectorChanged(C1.Silverlight.Schedule.GroupStyleSelector,C1.Silverlight.Schedule.GroupStyleSelector)">
            <summary>
            Invoked when the <see cref="P:C1.Silverlight.Schedule.GroupedListBox.GroupStyleSelector"/> property changes.
            </summary>
            <param name="oldGroupStyleSelector">The old <see cref="P:C1.Silverlight.Schedule.GroupedListBox.GroupStyleSelector"/> property value.</param>
            <param name="newGroupStyleSelector">The new <see cref="P:C1.Silverlight.Schedule.GroupedListBox.GroupStyleSelector"/> property value.</param>
        </member>
        <member name="F:C1.Silverlight.Schedule.GroupedListBox.PanelTemplateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.GroupedListBox.PanelTemplate"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.GroupedListBox"/> control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.ShouldSerializeGroupStyle">
            <summary>
            Returns a value that indicates whether serialization processes should 
            serialize the effective value of the <see cref="P:C1.Silverlight.Schedule.GroupedListBox.GroupStyle"/> property.
            </summary>
            <returns>True if the <see cref="P:C1.Silverlight.Schedule.GroupedListBox.GroupStyle"/> property value should be serialized; 
            otherwise, False.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            This API supports the C1.Silverlight infrastructure 
            and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.ClearSelection">
            <summary>
            This API supports the C1.Silverlight infrastructure 
            and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.HandleItemSelection(System.Windows.Controls.ListBoxItem,System.Boolean)">
            <summary>
            This API supports the C1.Silverlight infrastructure 
            and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.MakeToggleSelection(System.Windows.Controls.ListBoxItem)">
            <summary>
            This API supports the C1.Silverlight infrastructure 
            and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.MakeSingleSelection(System.Windows.Controls.ListBoxItem)">
            <summary>
            This API supports the C1.Silverlight infrastructure 
            and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.MakeRangeSelection(System.Windows.Controls.ListBoxItem,System.Boolean)">
            <summary>
            This API supports the C1.Silverlight infrastructure 
            and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.SelectSingleItem(System.Object)">
            <summary>
            This API supports the C1.Silverlight infrastructure 
            and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.SelectRange(System.Int32,System.Int32,System.Boolean)">
            <summary>
            This API supports the C1.Silverlight infrastructure 
            and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.SetFocusedItem(System.Windows.Controls.ListBoxItem,System.Boolean)">
            <summary>
            This API supports the C1.Silverlight infrastructure 
            and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.ItemsControlFromItemContainer(System.Windows.DependencyObject)">
            <summary>
            Returns the <see cref="T:C1.Silverlight.Schedule.GroupedListBox"/> that owns the specified container element.
            </summary>
            <param name="container">The container element to return the <see cref="T:C1.Silverlight.Schedule.GroupedListBox"/> for.</param>
            <returns>The <see cref="T:C1.Silverlight.Schedule.GroupedListBox"/> that owns the specified container element.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.GetItemsOwner(System.Windows.DependencyObject)">
            <summary>
            Returns the <see cref="T:C1.Silverlight.Schedule.GroupedListBox"/> that the specified element hosts items for.
            </summary>
            <param name="element">The host element.</param>
            <returns>The <see cref="T:C1.Silverlight.Schedule.GroupedListBox"/> that the specified element hosts items for,
            or null reference.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.GetIndexForListBoxItem(System.Windows.Controls.ListBoxItem)">
            <summary>
            Returns the index to an item that corresponds to the specified,
            generated container element. 
            </summary>
            <param name="item">The container that corresponds to the item to
            the index to be returned.</param>
            <returns>An index to an item that corresponds to the specified,
            generated container element.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.IsAboutToDispose">
            <summary>
            Override this method in derived classes and return true when control should stop handle selection. 
            </summary>
            <returns>The base implementation returns False if control is a part of a visual tree; otherwise, True.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupedListBox.DetachEvents">
            <summary>
            This API supports the C1.Silverlight infrastructure 
            and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.GroupedListBox.HasItems">
            <summary>
            Gets a value that indicates whether the <see cref="T:C1.Silverlight.Schedule.GroupedListBox"/> contains items. 
            This is a dependency property. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.GroupedListBox.ItemTemplateSelector">
            <summary>
            Gets or sets the custom logic for choosing a template used to display each item. 
            This is a dependency property. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.GroupedListBox.ItemContainerStyleSelector">
            <summary>
            Gets or sets custom style-selection logic for a style that can be applied 
            to each generated container element. 
            This is a dependency property. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.GroupedListBox.IsGrouping">
            <summary>
            Gets a value that indicates whether the control is using grouping. 
            This is a dependency property. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.GroupedListBox.GroupStyleSelector">
            <summary>
            Gets or sets a method that enables you to provide custom selection logic 
            for a <see cref="P:C1.Silverlight.Schedule.GroupedListBox.GroupStyle"/> to apply to each group in a collection. 
            This is a dependency property. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.GroupedListBox.PanelTemplate">
            <summary>
            Gets or sets the DataTemplate that defines the panel that controls the layout of items. 
            This is a dependency property. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.GroupedListBox.GroupStyle">
            <summary>
            Gets a collection of <see cref="P:C1.Silverlight.Schedule.GroupedListBox.GroupStyle"/> objects that define the appearance 
            of each level of groups.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.GroupedListBox.ItemContainerGenerator">
            <summary>
            Gets the <see cref="P:C1.Silverlight.Schedule.GroupedListBox.ItemContainerGenerator"/> that is associated with the control. 
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.GroupItem">
            <summary>
            Appears as the root of the visual sub-tree generated for a group. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.GroupItem"/> class. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.GroupItem.ContentTemplateSelector">
            <summary>
            Gets or sets a template selector that enables an application writer to provide 
            custom template-selection logic. This is a dependency property.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.GroupStyle">
            <summary>
            Defines how you want the group to look at each level.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.GroupStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event with the provided arguments.
            </summary>
            <param name="e">Arguments of the event being raised.</param>
        </member>
        <member name="P:C1.Silverlight.Schedule.GroupStyle.ContainerStyle">
            <summary>
            Gets or sets the style that is applied to the GroupItem generated for each item.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.GroupStyle.ContainerStyleSelector">
            <summary>
            Enables the application writer to provide custom selection logic for a style 
            to apply to each generated GroupItem.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.GroupStyle.Default">
            <summary>
            Gets the default style of the group.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.GroupStyle.HeaderTemplate">
            <summary>
            Gets or sets the template that is used to display the group header.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.GroupStyle.HeaderTemplateSelector">
            <summary>
            Enables the application writer to provide custom selection logic for a template 
            that is used to display the group header.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.GroupStyle.HidesIfEmpty">
            <summary>
            Gets or sets whether items corresponding to empty groups should be displayed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.GroupStyle.Panel">
            <summary>
            Gets or sets a template that creates the panel used to layout the items.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.GroupStyle.PropertyChanged">
            <summary>
            Occurs after the value of a <see cref="T:C1.Silverlight.Schedule.GroupStyle"/> property is changed.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.ItemContainerGenerator">
            <summary>
            Generates the user interface on behalf of its host <see cref="T:C1.Silverlight.Schedule.GroupedListBox"/> control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.ItemContainerGenerator.IndexFromContainer(System.Windows.DependencyObject)">
            <summary>
            Returns the index to an item that corresponds to the specified,
            generated container element. 
            </summary>
            <param name="container">The container that corresponds to the item to
            the index to be returned.</param>
            <returns>An index to an item that corresponds to the specified,
            generated container element.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.ItemContainerGenerator.ItemFromContainer(System.Windows.DependencyObject)">
            <summary>
            Returns the item that corresponds to the specified, generated container element.
            </summary>
            <param name="container">The container that corresponds to the item to be returned.</param>
            <returns>The item which corresponds to the specified, generated container element.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.ItemContainerGenerator.ContainerFromIndex(System.Int32)">
            <summary>
            Returns the container element corresponding to the item at the
            given index within the ItemCollection.
            </summary>
            <param name="index">The index of the desired item.</param>
            <returns>Returns the element corresponding to the item at the given index
            within the ItemCollection or returns a null reference if the item is not realized.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.ItemContainerGenerator.ContainerFromItem(System.Object)">
            <summary>
            Returns the container element corresponding to the given item.
            </summary>
            <param name="item">The Object item to find the container for.</param>
            <returns>A container element that corresponds to the given item.
            Returns a null reference if the item does not belong to the item collection,
            or if a container element has not been generated for it.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.C1ItemsPresenter">
            <summary>
            Used within the template of a <see cref="T:C1.Silverlight.Schedule.GroupedListBox"/> and <see cref="T:C1.Silverlight.Schedule.GroupItem"/> 
            to specify the place in the control’s visual tree where the ItemsPanel 
            defined by the <see cref="T:C1.Silverlight.Schedule.GroupedListBox"/> is to be added.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1ItemsPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.C1ItemsPresenter"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1ItemsPresenter.OnApplyTemplate">
            <summary>
            Called when an internal process or application calls ApplyTemplate, 
            which is used to build the current template's visual tree.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.C1ListBoxItem">
            <summary>
            Represents a selectable item in a <see cref="T:C1.Silverlight.Schedule.GroupedListBox"/>. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1ListBoxItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.C1ListBoxItem"/> class.
            </summary>
        </member>
        <member name="T:C1.Util.Localization.C1DescriptionAttribute">
            <summary>
            ------------------------------------------------------------------------
            C1DescriptionAttribute replaces the DescriptionAttribute
            and uses the C1Localizer class to return the localized Attribute string
            </summary>
        </member>
        <member name="T:C1.Util.Localization.C1CategoryAttribute">
            <summary>
            ------------------------------------------------------------------------
            C1CategoryAttribute replaces the CategoryAttribute
            and uses the C1Localizer class to return the localized Attribute string
            </summary>
        </member>
        <member name="T:C1.Util.Localization.C1Localizer">
            <summary>
            ------------------------------------------------------------------------
            C1Localizer contains static methods to load and look up resources
            </summary>
        </member>
        <member name="T:C1.Util.Localization.StringTables">
            <summary>
            StringTables
            this class contains a single static method InitTables that populates the
            tables used by the Localizer class.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.C1Scheduler">
            <summary>
            Represents a schedule with an ability to interactively manage appointments.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTimeProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTime"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTimeIntervalProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTimeInterval"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.SelectedVisualIntervalProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedVisualInterval"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.SelectedIntervalAppointmentProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedIntervalAppointment"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.SelectedAppointmentProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedAppointment"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalGroupDescriptionsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalGroupDescriptions"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.VisibleDatesProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisibleDates"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.ViewStyleSelectorProperty">
            <summary>
            Identifies the <see cref="!:StyleSelector"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.OneDayStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.OneDayStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.WorkingWeekStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.WorkingWeekStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.WeekStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.WeekStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.MonthStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.MonthStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalTemplateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalPanelProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalPanel"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalGroupStylesProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalGroupStyles"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.EditAppointmentTemplateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.EditAppointmentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.EditRecurrenceTemplateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.EditRecurrenceTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.ShowRemindersTemplateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.ShowRemindersTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.SelectFromListTemplateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectFromListTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.IntervalAppointmentTemplateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.IntervalAppointmentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.IsDragDropDisabledProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.IsDragDropDisabled"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.IsInPlaceEditingDisabledProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.IsInPlaceEditingDisabled"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.LargeStartTimeChangeProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.LargeStartTimeChange"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.SmallStartTimeChangeProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SmallStartTimeChange"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.DayViewDayHeaderFormatProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.DayViewDayHeaderFormat"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.WeekViewDayHeaderFormatProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.WeekViewDayHeaderFormat"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.MonthViewDayHeaderMonthFormatProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.MonthViewDayHeaderMonthFormat"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.MonthViewDayHeaderDayFormatProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.MonthViewDayHeaderDayFormat"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.MonthViewHeaderFormatProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.MonthViewHeaderFormat"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.TimeFormatProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.TimeFormat"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.CalendarHelperProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.CalendarHelper"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.VisualStartTimeProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.VisualEndTimeProperty">
            <summary>
            Identifies the <see cref="F:C1.Silverlight.Schedule.C1Scheduler.VisualEndTimeProperty"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalScaleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalScale"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.VisualTimeSpanProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualTimeSpan"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.StartProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.Start"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.EndProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.End"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.HasVisibleAppointmentsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.HasVisibleAppointments"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.BoldedDatesProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.BoldedDates"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.ActiveRemindersProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.ActiveReminders"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.PreviousAppointmentTextProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.PreviousAppointmentText"/> property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.NextAppointmentTextProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.NextAppointmentText"/> property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.DecrementStartTimeSmall">
            <summary>
            Decrements the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/> property value on the amount
            specified in the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SmallStartTimeChange"/> property.
            </summary>
            <remarks>
            This method implements the <see cref="F:C1.Silverlight.Schedule.C1Scheduler.DecrementStartTimeSmallCommand"/> command.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.DecrementStartTimeLarge">
            <summary>
            Decrements the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/> property value on the amount
            specified in the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.LargeStartTimeChange"/> property.
            </summary>
            <remarks>
            This method implements the <see cref="F:C1.Silverlight.Schedule.C1Scheduler.DecrementStartTimeLargeCommand"/> command.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.IncrementStartTimeSmall">
            <summary>
            Increments the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/> property value on the amount
            specified in the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SmallStartTimeChange"/> property.
            </summary>
            <remarks>
            This method implements the <see cref="F:C1.Silverlight.Schedule.C1Scheduler.IncrementStartTimeSmallCommand"/> command.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.IncrementStartTimeLarge">
            <summary>
            Increments the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/> property value on the amount
            specified in the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.LargeStartTimeChange"/> property.
            </summary>
            <remarks>
            This method implements the <see cref="F:C1.Silverlight.Schedule.C1Scheduler.IncrementStartTimeLargeCommand"/> command.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.SetRelativeStartTime(System.Double)">
            <summary>
            Sets the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/> property to a value between the
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.Start"/> and <see cref="P:C1.Silverlight.Schedule.C1Scheduler.End"/> property values based on the specified
            coefficient.
            </summary>
            <param name="coefficient">
            A double value in a range between 0 and 1 that defines a relative value 
            between <see cref="P:C1.Silverlight.Schedule.C1Scheduler.Start"/> and <see cref="P:C1.Silverlight.Schedule.C1Scheduler.End"/>.
            </param>
            <remarks>
            The approximate new value is calculated with the following formula:
            <para>
            VisualStartTime = Start + (End - Start) * coefficient
            </para>
            <para>
            After the new value is calculated, it is adjusted so that the old and new 
            values of the
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/> property become different in an amount that is 
            multiple of 
            the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SmallStartTimeChange"/> property value, that guarantees that the 
            first  <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> in the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervals"/> 
            collection is properly aligned to be in synch with UI model suppositions.
            </para>
            <para>
            This method implements the <see cref="F:C1.Silverlight.Schedule.C1Scheduler.SetRelativeStartTimeCommand"/> command.
            </para>
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.EditAppointmentDialog(C1.C1Schedule.Appointment)">
            <summary>
            Shows the Edit Appointment dialog for editing of the specified existing
            <see cref="T:C1.C1Schedule.Appointment"/>.
            </summary>
            <param name="appointment">
            The editing <see cref="T:C1.C1Schedule.Appointment"/>.
            </param>
            <remarks>
            This methods implements the <see cref="F:C1.Silverlight.Schedule.C1Scheduler.EditAppointmentDialogCommand"/> command.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.NewAppointmentDialog(C1.Silverlight.Schedule.VisualInterval)">
            <summary>
            Shows the Edit Appointment dialog for the creation of a new 
            <see cref="T:C1.C1Schedule.Appointment"/>.
            </summary>
            <param name="forInterval">
            <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> that determines an initial period of time for
            a creating <see cref="T:C1.C1Schedule.Appointment"/>.
            </param>
            <remarks>
            This methods implements the <see cref="F:C1.Silverlight.Schedule.C1Scheduler.NewAppointmentDialogCommand"/> command.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.NewAppointmentDialog">
            <summary>
            Shows the Edit Appointment dialog for the creation of a new 
            <see cref="T:C1.C1Schedule.Appointment"/> object. 
            Edit Appointment dialog is initialized according to the 
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTimeInterval"/> property value if it is not null;
            or according to the current date and time and 
            the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalScale"/> property value otherwise.
            </summary>
            <remarks>
            This methods implements the <see cref="F:C1.Silverlight.Schedule.C1Scheduler.NewAppointmentDialogCommand"/> command.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.NewAppointmentDialog(System.DateTime,System.DateTime,System.Nullable{System.Boolean})">
            <summary>
            Shows the Edit Appointment dialog for the creation of a new 
            <see cref="T:C1.C1Schedule.Appointment"/> object with the specified parameters. 
            </summary>
            <param name="start">The start value.</param>
            <param name="end">The end value.</param>
            <param name="allDayEvent">The <see cref="T:System.Boolean"/> value specifying
            whether appointment is all-day event.</param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.NewAppointmentDialog(System.DateTime,System.DateTime)">
            <summary>
            Shows the Edit Appointment dialog for the creation of a new 
            <see cref="T:C1.C1Schedule.Appointment"/> object with the specified start and end values. 
            </summary>
            <param name="start">The start value.</param>
            <param name="end">The end value.</param>
            <remarks>The value of the <see cref="P:C1.C1Schedule.Appointment.AllDayEvent"/> property
            is determined according the start and end values.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.DeleteAppointment">
            <summary>
            Deletes the appointment that is currently selected in control UI
            and also shows an appointment deletion options dialog in the case where the appointment is an 
            occurrence of a recurrence pattern.
            </summary>
            <remarks>
            This method implements the <see cref="F:C1.Silverlight.Schedule.C1Scheduler.DeleteAppointmentCommand"/> command.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.DeleteAppointment(C1.C1Schedule.Appointment)">
            <summary>
            Deletes the specified appointment.
            </summary>
            <remarks>
            This method implements the <see cref="F:C1.Silverlight.Schedule.C1Scheduler.DeleteAppointmentCommand"/> command.
            </remarks>
            <param name="appointment">The <see cref="T:C1.C1Schedule.Appointment"/> to delete.</param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.NavigateToPreviousAppointment">
            <summary>
            Makes the nearest appointment before <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTime"/> visible in
            the control UI.
            </summary>
            <returns>
            This method returns a value indicating whether the requested appointment has 
            been found and made visible.
            </returns>
            <remarks>
            This method sets the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedAppointment"/> property to the previous appointment found
            and the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTime"/> property to the start time of the appointment. 
            If the requested appointment has not been found, then the method changes nothing.
            <para>
            This method implements the <see cref="F:C1.Silverlight.Schedule.C1Scheduler.NavigateToPreviousAppointmentCommand"/>
            command.
            </para>
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.NavigateToNextAppointment">
            <summary>
            Makes the nearest appointment after <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTime"/> visible in
            the control UI.
            </summary>
            <returns>
            This method returns a value indicating whether the requested appointment has 
            been found and made visible.
            </returns>
            <remarks>
            This method sets the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedAppointment"/> property to the next appointment found 
            and the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTime"/> property to the start time of the appointment. 
            If the requested appointment has not been found, then the method changes nothing.
            <para>
            This method implements the <see cref="F:C1.Silverlight.Schedule.C1Scheduler.NavigateToNextAppointmentCommand"/>
            command.
            </para>
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.NavigateToAppointment(System.Boolean,System.Nullable{System.DateTime})">
            <summary>
            Navigates the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control to the nearest
            <see cref="T:C1.C1Schedule.Appointment"/>.
            </summary>
            <param name="previous">If true, means the backward direction;
            forward direction otherwise.</param>
            <param name="startTime">The start <see cref="T:System.DateTime"/> point.
            If this parameter has no value, navigation will be 
            performed starting from the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTime"/> property value.</param>
            <returns>True if navigation has occurred;
            False if there are no appointments in the specified direction.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.ScrollIntoView(System.Windows.Controls.ScrollViewer,System.Windows.Rect,System.Boolean)">
            <summary>
            Changes de scroll offset of a ScrollView so that a rectangle is visible.
            </summary>
            <param name="sv">ScrollViewer to scroll</param>
            <param name="r">Rectangle to show</param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.BringTimeIntoView(System.DateTime,System.Boolean)">
            <summary>
            Attempts to bring into the view a UI element representing a 
            <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> that includes the specified time in the 
            current scheduler view. Optionally tries to make the element to be a top left 
            element of the view.
            </summary>
            <param name="time">
            DateTime whose UI representation should be made visible.
            </param>
            <param name="forceTopLeft">
            Indicates whether an attempt to make the requested UI element a top left one
            should be performed.
            </param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.FindUIForTime(System.DateTime)">
            <summary>
            Returns the <see cref="T:System.Windows.FrameworkElement"/> corresponding to the given <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="time">The <see cref="T:System.DateTime"/> value to find the <see cref="T:System.Windows.FrameworkElement"/> for.</param>
            <returns>A <see cref="T:System.Windows.FrameworkElement"/> that corresponds to the given <see cref="T:System.DateTime"/> value. 
            Returns null if the <see cref="T:System.DateTime"/> value does not belong to displayed range, 
            or if a <see cref="T:System.Windows.FrameworkElement"/> has not been generated for it.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.GetDateTimeAtPoint(C1.Silverlight.Schedule.C1Scheduler,System.Windows.Point)">
            <summary>
            Returns the <see cref="T:System.Nullable`1"/> at the specified location.
            </summary>
            <param name="scheduler">The <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control.</param>
            <param name="location">The <see cref="T:System.Windows.Point"/> object which specifies location inside control boundaries.</param>
            <returns>Returns <see cref="T:System.DateTime"/> value if found; Null - otherwise.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.ChangeStyle(System.Object)">
            <summary>
            Changes the <see cref="T:System.Windows.Style"/> property with the specified Style or a style
            referenced by the specified ResourceDictionary key.
            </summary>
            <param name="styleOrKey">
            Style or a ResourceDictionary key representing a Style.
            </param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.BeginUpdate">
            <summary>
            Disables any redrawing of the control. 
            </summary>
            <remarks>To maintain performance while changing several control properties
            call the <see cref="M:C1.Silverlight.Schedule.C1Scheduler.BeginUpdate"/> method. This method prevents the control 
            from painting until the <see cref="M:C1.Silverlight.Schedule.C1Scheduler.EndUpdate"/> method is called.</remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.EndUpdate">
            <summary>
            Enables the redrawing of the control. 
            </summary>
            <remarks>To maintain performance while changing several control properties
            call the <see cref="M:C1.Silverlight.Schedule.C1Scheduler.BeginUpdate"/> method. This method prevents the control 
            from painting until the <see cref="M:C1.Silverlight.Schedule.C1Scheduler.EndUpdate"/> method is called.</remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.DecrementStartTimeSmallCommand">
            <summary>
            Defines the command that decrements the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/> property 
            value on the amount specified in the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SmallStartTimeChange"/> property.
            </summary>
            <remarks>
            This command is executed by the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> and is implemented 
            by the <see cref="M:C1.Silverlight.Schedule.C1Scheduler.DecrementStartTimeSmall"/> method.
            <para>
            Use this command to implement custom scrolling behavior.
            </para>
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.DecrementStartTimeLargeCommand">
            <summary>
            Defines the command that decrements the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/> property 
            value on the amount specified in the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.LargeStartTimeChange"/> property.
            </summary>
            <remarks>
            This command is executed by the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> and is implemented 
            by the <see cref="M:C1.Silverlight.Schedule.C1Scheduler.DecrementStartTimeLarge"/> method.
            <para>
            Use this command to implement custom scrolling behavior.
            </para>
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.IncrementStartTimeSmallCommand">
            <summary>
            Defines the command that increments the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/> property 
            value on the amount specified in the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SmallStartTimeChange"/> property.
            </summary>
            <remarks>
            This command is executed by the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> and is implemented 
            by the <see cref="M:C1.Silverlight.Schedule.C1Scheduler.IncrementStartTimeSmall"/> method.
            <para>
            Use this command to implement custom scrolling behavior.
            </para>
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.IncrementStartTimeLargeCommand">
            <summary>
            Defines the command that increments the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/> property 
            value on the amount specified in the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.LargeStartTimeChange"/> property.
            </summary>
            <remarks>
            This command is executed by the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> and is implemented 
            by the <see cref="M:C1.Silverlight.Schedule.C1Scheduler.IncrementStartTimeLarge"/> method.
            <para>
            Use this command to implement custom scrolling behavior.
            </para>
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.SetRelativeStartTimeCommand">
            <summary>
            Defines the command that sets the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/> property to a value 
            between the
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.Start"/> and <see cref="P:C1.Silverlight.Schedule.C1Scheduler.End"/> property values based on the specified
            coefficient.
            </summary>
            <remarks>
            This command is executed by the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> and is implemented 
            by the <see cref="M:C1.Silverlight.Schedule.C1Scheduler.SetRelativeStartTime(System.Double)"/> method. See the 
            <see cref="M:C1.Silverlight.Schedule.C1Scheduler.SetRelativeStartTime(System.Double)"/> method description for details.
            <para>
            Command parameter: a floating point number in a range between 0 and 1, or
            its string representation, that is passed as a parameter to the 
            <see cref="M:C1.Silverlight.Schedule.C1Scheduler.SetRelativeStartTime(System.Double)"/> method.
            </para>
            <para>
            Use this command to implement custom scrolling behavior.
            </para>
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.EditAppointmentDialogCommand">
            <summary>
            Defines the command that shows the Edit Appointment dialog for editing of the 
            specified existing <see cref="T:C1.C1Schedule.Appointment"/>(s).
            </summary>
            <remarks>
            This command is executed by the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> and is implemented 
            by the <see cref="M:C1.Silverlight.Schedule.C1Scheduler.EditAppointmentDialog(C1.C1Schedule.Appointment)"/> method.
            <para>
            Command parameter is one of the next values:
            <list type="bullet">
            <item><term></term><description>the <see cref="T:C1.C1Schedule.Appointment"/> to edit</description></item>
            <item><term></term><description><see cref="T:System.Collections.IList"/> of <see cref="T:C1.C1Schedule.Appointment"/> objects to edit</description></item>
            <item><term>null</term><description><see cref="T:System.Collections.IList"/> of <see cref="T:C1.C1Schedule.Reminder"/> objects 
            whose parent appointments should be edited</description></item>
            </list>
            If parameter value is not specified then control will try 
            to get an appointment from the sender’s DataContext.
            </para>
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.NewAppointmentDialogCommand">
            <summary>
            Defines the command that shows the Edit Appointment dialog for a creation of 
            a new <see cref="T:C1.C1Schedule.Appointment"/>.
            </summary>
            <remarks>
            This command is executed by the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> and is implemented 
            by the NewAppointmentDialog methods.
            <para>
            The time interval for which an appointment will be created is determined by the sender’s DataContext.
            </para>
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.EditRecurrenceDialogCommand">
            <summary>
            Defines the command that shows the Edit Recurrence dialog for editing a 
            <see cref="T:C1.C1Schedule.RecurrencePattern"/> of the specified <see cref="T:C1.C1Schedule.Appointment"/>.
            </summary>
            <remarks>
            This command is executed by the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> and is implemented 
            by the <see cref="M:C1.Silverlight.Schedule.C1Scheduler.EditRecurrenceDialog(C1.C1Schedule.Appointment)"/> method.
            <para>
            Command parameter might be one of the next values:
            <list type="bullet">
            <item><term></term><description>the <see cref="T:C1.C1Schedule.Appointment"/> whose 
            <see cref="T:C1.C1Schedule.RecurrencePattern"/> will be edited. </description></item>
            <item><term></term><description>the dialog window which has an <see cref="T:C1.C1Schedule.Appointment"/> object 
            whose <see cref="T:C1.C1Schedule.RecurrencePattern"/> will be edited as content.</description></item>
            </list>
            If parameter value is not specified, 
            control will try to get an appointment from the sender’s DataContext.
            If parameter value is dialog window which has an Occurrence or Exception of RecurrencePattern as content,
            then content of this window will be changed to the Master appointment of this RecurrencePattern.
            </para>
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.SelectFromListDialogCommand">
            <summary>
            Defines the command that shows the Select From List dialog 
            for specified parameters.
            </summary>
            <remarks>
            This command is executed by the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> and is implemented 
            by the <see cref="M:C1.Silverlight.Schedule.C1Scheduler.SelectFromListDialog(System.Collections.IList,System.Collections.IList,System.Type,C1.C1Schedule.Appointment,System.String)"/> method.
            <para>
            Command parameter should be an array from 4 or 5 values: 
            <list type="number">
            <item>The master list to choose from. 
            For example <see cref="P:C1.C1Schedule.ResourceStorage.Resources"/>.</item>
            <item>The resulting list where to put selected items. 
            For example <see cref="P:C1.C1Schedule.Appointment.Resources"/> list.</item>
            <item>The <see cref="T:System.Type"/> value specifying 
            the type of items in both lists.</item>
            <item>The reference to the owning window if any.</item>
            <item>The <see cref="T:System.String"/> value to show as the dialog window title. 
            This parameter is optional.</item>
            </list>
            </para>
            </remarks>       
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.DeleteAppointmentCommand">
            <summary>
            Defines the command that deletes the <see cref="T:C1.C1Schedule.Appointment"/>(s).
            </summary>
            <remarks>
            This command is executed by the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> and is implemented 
            by the DeleteAppointment methods.
            <para>
            Command parameter might be one of the next values:
            <list type="bullet">
            <item><term></term><description>the <see cref="T:C1.C1Schedule.Appointment"/> to delete</description></item>
            <item><term></term><description><see cref="T:System.Collections.IList"/> of <see cref="T:C1.C1Schedule.Appointment"/> objects to delete</description></item>
            </list>
            If parameter value is not specified, then control will delete the appointment 
            that is currently selected in the control UI.
            </para>
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.NavigateToPreviousAppointmentCommand">
            <summary>
            Defines the command that makes the nearest appointment before 
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTime"/> visible in the control UI.
            </summary>
            <remarks>
            This command is executed by the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> and is implemented 
            by the <see cref="M:C1.Silverlight.Schedule.C1Scheduler.NavigateToPreviousAppointment"/> method, see the
            <see cref="M:C1.Silverlight.Schedule.C1Scheduler.NavigateToPreviousAppointment"/> method description for details.
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.NavigateToNextAppointmentCommand">
            <summary>
            Defines the command that makes the nearest appointment after 
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTime"/> visible in the control UI.
            </summary>
            <remarks>
            This command is executed by the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> and is implemented 
            by the <see cref="M:C1.Silverlight.Schedule.C1Scheduler.NavigateToNextAppointment"/> method, see the
            <see cref="M:C1.Silverlight.Schedule.C1Scheduler.NavigateToNextAppointment"/> method description for details.
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.ChangeStyleCommand">
            <summary>
            Defines the command that changes the <see cref="T:System.Windows.Style"/> property with the 
            specified Style or a style referenced by the specified ResourceDictionary key.
            </summary>
            <remarks>
            This command is executed by the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> and is implemented 
            by the <see cref="M:C1.Silverlight.Schedule.C1Scheduler.ChangeStyle(System.Object)"/> method.
            <para>
            Command parameter: Style or a ResourceDictionary key representing a Style.
            </para>
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.ImportCommand">
            <summary>
            Defines the command that imports Scheduler data from the file.
            </summary>
            <remarks>
            This command opens "Open File" dialog and then tries to import
            data from selected file.
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.ExportCommand">
            <summary>
            Defines the command that exports Scheduler data to the file.
            </summary>
            <remarks>
            This command opens "Save File" dialog and then exports data to file.
            <para>
            Command parameter is one of the next values:
            <list type="bullet">
            <item><term></term><description>the <see cref="T:C1.C1Schedule.Appointment"/> for saving</description></item>
            <item><term></term><description><see cref="T:System.Collections.Generic.IList`1"/> for saving</description></item>
            <item><term>null</term><description>to export all Scheduler data</description></item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.DismissCommand">
            <summary>
            Defines the command that dismisses reminders.
            </summary>
            <remarks>
            <para>
            Command parameter is one of the next values:
            <list type="bullet">
            <item><term></term><description><see cref="T:System.Collections.IList"/> of <see cref="T:C1.C1Schedule.Reminder"/> objects to dismiss</description></item>
            <item><term></term><description>the <see cref="T:C1.C1Schedule.Reminder"/> object to dismiss</description></item>
            </list>
            If command parameter is not specified, all active reminders will be dismissed.
            </para>
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.SnoozeCommand">
            <summary>
            Defines the command that snoozes reminders.
            </summary>
            <remarks>
            <para>
            Command parameter may contain an array of 2 values: 
            <list type="number">
            <item> The <see cref="T:System.TimeSpan"/> value specifying time interval used for snoozing.
            </item>
            <item> One of the next values:
            <list type="bullet">
            <item><term></term><description><see cref="T:System.Collections.IList"/> of <see cref="T:C1.C1Schedule.Reminder"/> objects to snooze</description></item>
            <item><term></term><description>the <see cref="T:C1.C1Schedule.Reminder"/> object to snooze</description></item>
            </list>
            This item is optional. If it is not specified, all active reminders will be snoozed.
            </item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.TodayBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.TodayBackground"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.ControlBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.ControlBackground"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.ControlForegroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.ControlForeground"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.AppointmentForegroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.AppointmentForeground"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.AlternatingBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.AlternatingBackground"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.SelectedBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedBackground"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.EditRecurrenceDialog(C1.C1Schedule.Appointment)">
            <summary>
            Shows the Edit Recurrence dialog for editing a <see cref="T:C1.C1Schedule.RecurrencePattern"/>
            of the specified <see cref="T:C1.C1Schedule.Appointment"/>.
            </summary>
            <param name="appointment">
            <see cref="T:C1.C1Schedule.Appointment"/> whose <see cref="T:C1.C1Schedule.RecurrencePattern"/> will be edited
            in the dialog.
            </param>
            <remarks>
            This methods implements the <see cref="F:C1.Silverlight.Schedule.C1Scheduler.EditRecurrenceDialogCommand"/> command.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.SelectFromListDialog(System.Collections.IList,System.Collections.IList,System.Type,C1.C1Schedule.Appointment,System.String)">
            <summary>
            Shows the Select From List dialog. Honors property values defined in the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.Settings"/> object.
            </summary>
            <param name="sourceList">The source list.</param>
            <param name="targetList">The target list.</param>
            <param name="itemType">The type of items in both lists.</param>
            <param name="app">The appointment object, for which the dialog is shown.</param>
            <param name="windowTitle">The dialog title.</param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.SelectFromListDialog(System.Collections.IList,System.Collections.IList,System.Type,C1.C1Schedule.Appointment,System.String,System.Boolean,System.Boolean)">
            <summary>
            Shows the Select From List dialog.
            </summary>
            <param name="sourceList">The source list.</param>
            <param name="targetList">The target list.</param>
            <param name="itemType">The type of items in both lists.</param>
            <param name="app">The appointment object, for which the dialog is shown.</param>
            <param name="windowTitle">The dialog title.</param>
            <param name="allowEdit">Determines whether the dialog should allow source collection editing.</param>
            <param name="allowMultipleSelection">Determines whether multiple selection is allowed.</param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnDataSourceItemSynchronized(C1.C1Schedule.ItemSynchronizedEventArgs)">
            <summary>
            Raises a DataSourceItemSynchronized event;
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnBeforeViewChange(C1.Silverlight.Schedule.BeforeViewChangeEventArgs)">
            <summary>
            Raises a BeforeViewChange event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnStyleChanged">
            <summary>
            Raises a StyleChanged event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnBeforeAppointmentResize(C1.Silverlight.Schedule.AppointmentActionEventArgs)">
            <summary>
            Raises a BeforeAppointmentResize event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnBeforeAppointmentDrop(C1.Silverlight.Schedule.AppointmentActionEventArgs)">
            <summary>
            Raises a BeforeAppointmentDrop event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnBeforeAppointmentSave(C1.Silverlight.Schedule.AppointmentActionEventArgs)">
            <summary>
            Raises a BeforeAppointmentResize event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnUserEditingAppointment(C1.Silverlight.Schedule.AppointmentActionEventArgs)">
            <summary>
            Raises a UserEditingAppointment event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnUserAddingAppointment(C1.Silverlight.Schedule.AppointmentActionEventArgs)">
            <summary>
            Raises a UserAddingAppointment event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnUserDeletingAppointment(C1.Silverlight.Schedule.AppointmentActionEventArgs)">
            <summary>
            Raises a UserDeletingAppointment event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnAppointmentAdded(C1.Silverlight.Schedule.AppointmentActionEventArgs)">
            <summary>
            Raises a AppointmentAdded event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnAppointmentDeleted(C1.Silverlight.Schedule.AppointmentActionEventArgs)">
            <summary>
            Raises a AppointmentDeleted event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnAppointmentChanged(C1.Silverlight.Schedule.AppointmentActionEventArgs)">
            <summary>
            Raises a AppointmentChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnAppointmentRecurrenceStateChanged(C1.Silverlight.Schedule.AppointmentActionEventArgs)">
            <summary>
            Raises a AppointmentRecurrenceStateChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnAppointmentCustomAction(C1.Silverlight.Schedule.AppointmentActionEventArgs)">
            <summary>
            Raises a AppointmentCustomAction event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnReminderFire(C1.Silverlight.Schedule.ReminderActionEventArgs)">
            <summary>
            Raises a ReminderFire event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnReminderAdded(C1.Silverlight.Schedule.ReminderActionEventArgs)">
            <summary>
            Raises a ReminderAdded event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnReminderChanged(C1.Silverlight.Schedule.ReminderActionEventArgs)">
            <summary>
            Raises a ReminderChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnReminderSnooze(C1.Silverlight.Schedule.ReminderActionEventArgs)">
            <summary>
            Raises a ReminderSnooze event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnReminderRemoved(C1.Silverlight.Schedule.ReminderActionEventArgs)">
            <summary>
            Raises a ReminderRemoved event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnStartChanged(C1.Silverlight.Schedule.DateTimePropertyChangeEventArgs)">
            <summary>
            Raises a StartChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnEndChanged(C1.Silverlight.Schedule.DateTimePropertyChangeEventArgs)">
            <summary>
            Raises an EndChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnSelectedDateTimeChanged(C1.Silverlight.Schedule.DateTimePropertyChangeEventArgs)">
            <summary>
            Raises a SelectedDateTimeChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.OnSelectedAppointmentChanged(C1.Silverlight.Schedule.PropertyChangeEventArgsBase)">
            <summary>
            Raises a SelectedAppointmentChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.#ctor">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.UpdateCoverPanes(C1.Silverlight.Schedule.ICoverElementsPane)">
            <summary>
            pane == null means all panes
            </summary>
            <param name="pane"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1Scheduler.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.ThemeProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.Theme"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.C1Scheduler.SettingsProperty">
            <summary>
            Identifies the <see cref="T:C1.Silverlight.Schedule.C1SchedulerSettings"/> dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.DataStorage">
            <summary>
            Gets a <see cref="T:C1.C1Schedule.C1ScheduleStorage"/> that stores a data that is represented 
            by the control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.ActiveReminders">
            <summary>
            Gets a <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1"/> of active <see cref="T:C1.C1Schedule.Reminder"/> objects.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervals">
            <summary>
            Gets a collection of <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> objects defining time 
            intervals currently represented by the control on a screen.
            </summary>
            <remarks>
            This collection is generated automatically based on the following
            property values:
            <list type="bullet">
            <item>
            <term/>
            <description>
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/> - defines a start time of a period represented 
            by the collection.
            </description>
            </item>
            <item>
            <term/>
            <description>
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualTimeSpan"/> - defines a length of a period represented 
            by the collection.
            </description>
            </item>
            <item>
            <term/>
            <description>
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalScale"/> - defines a length of each 
            <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> in the collection.
            </description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalGroups">
            <summary>
            Gets a collection of <see cref="T:C1.Silverlight.Schedule.VisualIntervalGroup"/> objects 
            defining top-level groups of <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> objects 
            currently represented by the control on a screen.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalsView">
            <summary>
            Gets a grouped view on the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervals"/> collection.
            </summary>
            <remarks>
            This view is primarily intended to provide a data for building control UI
            in XAML. It represents a list of <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> objects
            from the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervals"/> grouped according to the
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalGroupDescriptions"/> property value.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTime">
            <summary>
            Gets or sets a DateTime currently selected in control UI. 
            The default value is <see cref="P:System.DateTime.Today"/>. This is a dependency property. 
            </summary>
            <remarks>
            <para>
            This property value is related to a <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> 
            from the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervals"/> collection that is currently
            selected in control UI. If this property is set to a value that is
            beyond a currently represented period of time defined by the 
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/> and <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualTimeSpan"/> properties,
            the value of the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/> property is changed automatically
            so as to set up a period of time that includes the new 
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTime"/> property value.
            </para>
            <para>
            You can use this property to bind the control to external controls that
            provides DateTime navigation, for example, bind it to the SelectedDateTime property
            of the <see cref="T:C1.Silverlight.Schedule.C1Calendar"/> control.
            </para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTimeInterval">
            <summary>
            Gets the <see cref="T:C1.Silverlight.Schedule.DateTimeInterval"/> object representing 
            time interval which is currently selected in the control UI. 
            This is a dependency property. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.SelectedIntervalAppointment">
            <summary>
            Gets or sets a <see cref="T:C1.Silverlight.Schedule.IntervalAppointment"/> that is currently selected 
            in control UI. This is a dependency property. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.SelectedAppointment">
            <summary>
            Gets or sets an <see cref="T:C1.C1Schedule.Appointment"/> that is currently selected 
            in the control UI. This is a dependency property. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime">
            <summary>
            Gets or sets a start of a period of time that is currently represented in
            the control UI. This is a dependency property. 
            </summary>
            <remarks>
            Usually this property value should not be set directly; it gets its value  automatically 
            based on the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualTimeSpan"/> and <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTime"/> properties 
            (the latter one has DateTime.Today as default) so as to be aligned at the beginning of a current 
            week or current month's first week. Setting it to a value that is not correctly aligned 
            relative to the current control UI (for example, if it is not set to the first day of the week
            for the Month view) can cause an inadequate UI look.
            <para>
            To change a current period of time safely you can use 
            the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTime"/> property or the 
            <see cref="M:C1.Silverlight.Schedule.C1Scheduler.SetRelativeStartTime(System.Double)"/> method or the
            <see cref="F:C1.Silverlight.Schedule.C1Scheduler.SetRelativeStartTimeCommand"/> command.
            </para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.FirstVisibleTime">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value representing
            the first visible time slot in a Day/Work Week views or in any custom view 
            which has a <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalScale"/> value of less than one day.
            </summary>
            <remarks>This property only affects initial scroll position.</remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.AutoScrollToFirstAppointment">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining whether control
            scrolls itself to the earliest appointment in the current view.
            This property affects Day/Work Week views or any custom view 
            which has <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalScale"/> value less than one day.
            </summary>
            <remarks>This property affects only initial scroll position.</remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.ShowWorkTimeOnly">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining whether control
            shows working time only.
            This property affects Day/Work Week views or any custom view 
            which has <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalScale"/> value less than one day.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.VisibleDates">
            <summary>
            Gets the list of currently visible dates.
            Changing this list might affect the next properties:
            <list type="bullet">
            <item>
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/>
            </item>
            <item>
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualTimeSpan"/>
            </item>
            <item>
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualEndTime"/>
            </item>
            <item>
            <see cref="T:System.Windows.Style"/>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.VisualTimeSpan">
            <summary>
            Gets or sets a length of a period of time that is currently represented in
            the control UI. The start of the period is defined by the 
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/> property. This is a dependency property. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.VisualEndTime">
            <summary>
            Gets an end of a period of time that is currently represented in
            the control UI. This is a dependency property. 
            </summary>
            <remarks>
            This property value is calculated as a sum of the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/>
            and <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualTimeSpan"/> property values.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalScale">
            <summary>
            Gets or sets a TimeSpan of each <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> in the
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervals"/> collection. This is a dependency property. 
            </summary>
            <remarks>
            See the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervals"/> property description for details.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.Start">
            <summary>
            Gets or sets a DateTime that defines a beginning of an overall period of time
            that can be represented by the control. This is a dependency property. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.End">
            <summary>
            Gets or sets a DateTime that defines an end of an overall period of time
            that can be represented by the control. This is a dependency property. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalGroupDescriptions">
            <summary>
            Gets or sets a collection of <see cref="T:C1.Silverlight.Schedule.VisualIntervalGroupDescription"/>
            objects that defines a grouping criteria applied to the items of the
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervals"/> collection. This is a dependency property. 
            </summary>
            <remarks>
            This property is usually used for the purpose of control UI creation in XAML.
            The defined grouping criteria is applied to the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervals"/> 
            collection items and is reflected in the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalsView"/> view, 
            which exposes grouped items via the Groups property.
            <para>
            This property is used in a conjunction with the 
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalGroupStyles"/> property that defines UI for each
            group level.
            </para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalGroupStyles">
            <summary>
            Gets or sets a collection of <see cref="!:System.Windows.Controls.GroupStyle"/>
            objects that characterize UI for each group level defined in the
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalGroupDescriptions"/> collection. 
            This is a dependency property. 
            </summary>
            <remarks>
            A DataContext for GroupStyle.HeaderTemplate template of each GroupStyle item
            of this collection is a <see cref="T:C1.Silverlight.Schedule.VisualIntervalGroup"/> object, which 
            represents a time range which is a union of time ranges of group's child
            <see cref="T:C1.Silverlight.Schedule.VisualInterval"/>s.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.ViewStyleSelector">
            <summary>
            Enables you to provide custom style-selection logic for a style that 
            should be applied to the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control. 
            The default value is a null reference. 
            This is a dependency property. 
            </summary>
            <remarks> The <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control has 4 styles:
            <list type="bullet">
            <item>One Day View (defined by the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.OneDayStyle"/> property);</item>
            <item>Working Week View (defined by the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.WorkingWeekStyle"/> property);</item>
            <item>Week View (defined by the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.WeekStyle"/> property);</item>
            <item>Month View (defined by the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.MonthStyle"/> property).</item>
            </list>
            By default, the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control changes it's style 
            automatically according to changes in the list of visible dates or on 
            <see cref="F:C1.Silverlight.Schedule.C1Scheduler.ChangeStyleCommand"/> command. You can alter this behavior by providing
            the custom StyleSelector or by handling <see cref="E:C1.Silverlight.Schedule.C1Scheduler.BeforeViewChange"/> event.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.OneDayStyle">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Style"/> object that defines a UI representation of
            <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control in a Day View mode. This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.WorkingWeekStyle">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Style"/> object that defines a UI representation of
            <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control in a Work Week View mode. This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.WeekStyle">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Style"/> object that defines a UI representation of
            <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control in a Week View mode. This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.MonthStyle">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Style"/> object that defines a UI representation of
            <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control in a Month View mode. This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalTemplate">
            <summary>
            Gets or sets a DataTemplate that defines a UI representation of
            <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> objects from the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervals"/>
            collection. This is a dependency property.
            </summary>
            <remarks>
            A DataContext for this template is a <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> object from
            the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervals"/> collection.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalPanel">
            <summary>
            Gets or sets a DataTemplate that defines the panel that lays out elements
            representing <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> objects from the 
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervals"/> collection. This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.IntervalAppointmentTemplate">
            <summary>
            Gets or sets a DataTemplate that defines a UI representation of
            an <see cref="T:C1.Silverlight.Schedule.IntervalAppointment"/> object. This is a dependency property.
            </summary>
            <remarks>
            A single appointment can be represented by multiple elements in control's view.
            For example, in the Months view the appointment that hit two weeks will be 
            represented by two separate elements, a different element for each week.
            Because of this, a DataContext for the appointment template is a 
            <see cref="T:C1.Silverlight.Schedule.IntervalAppointment"/> object (but not an <see cref="T:C1.C1Schedule.Appointment"/>), 
            which represents the chunk of
            appointment covering a specific period of time that can be shown by a
            single UI element.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.EditAppointmentTemplate">
            <summary>
            Gets or sets a DataTemplate that defines a UI for the Edit Appointment dialog. 
            This is a dependency property.
            </summary>
            <remarks>
            A DataContext for this template is an <see cref="T:C1.C1Schedule.Appointment"/> object.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.EditRecurrenceTemplate">
            <summary>
            Gets or sets a DataTemplate that defines a UI for the Edit Recurrence dialog. 
            This is a dependency property.
            </summary>
            <remarks>
            A DataContext for this template is a <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.ShowRemindersTemplate">
            <summary>
            Gets or sets a DataTemplate that defines a UI for the Show Reminders dialog. 
            This is a dependency property.
            </summary>
            <remarks>
            A DataContext for this template is a <see cref="P:C1.C1Schedule.C1ScheduleStorage.Reminders"/> 
            collection.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.SelectFromListTemplate">
            <summary>
            Gets or sets a DataTemplate that defines a UI for the dialog like
            Select Resources, Select Categories and Select Contacts. 
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.IsDragDropDisabled">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value that indicates whether 
            the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> doesn't allow appointment resizing and drag operations. 
            This is a dependency property.
            </summary>
            <remarks>Disabling of appointment resizing and drag operations is implemented with the help of 
            <see cref="P:C1.Silverlight.Schedule.CoverElementsPane.IsDragDropDisabled"/> property in default styles and templates.
            Make sure to honor <see cref="P:C1.Silverlight.Schedule.C1Scheduler.IsDragDropDisabled"/> property value 
            in custom styles and templates.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.IsInPlaceEditingDisabled">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value that indicates whether
            in-place editing of appointments is enabled for an end-user.
            This is a dependency property.
            </summary>
            <remarks>This value only affects a user who is interacting with the control. 
            All data can always be modified programmatically.
            Note: disabling of in-place editing is implemented with the help of 
            <see cref="!:AppointmentWrapPanel.IsReadOnly"/> property in default IntervalAppointment templates.
            Make sure to honor <see cref="P:C1.Silverlight.Schedule.C1Scheduler.IsInPlaceEditingDisabled"/> property value 
            in custom IntervalAppointment templates.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.LargeStartTimeChange">
            <summary>
            Gets or sets a TimeSpan used to change the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/>
            property by the <see cref="M:C1.Silverlight.Schedule.C1Scheduler.IncrementStartTimeLarge"/> and 
            <see cref="M:C1.Silverlight.Schedule.C1Scheduler.DecrementStartTimeLarge"/> methods and the
            <see cref="F:C1.Silverlight.Schedule.C1Scheduler.IncrementStartTimeLargeCommand"/> and 
            <see cref="F:C1.Silverlight.Schedule.C1Scheduler.DecrementStartTimeLargeCommand"/> commands.
            This is a dependency property.
            </summary>
            <remarks>If this value is not set, then the value of the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualTimeSpan"/>
            property is used.</remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.SmallStartTimeChange">
            <summary>
            Gets or sets a TimeSpan used to change the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualStartTime"/>
            property by the <see cref="M:C1.Silverlight.Schedule.C1Scheduler.IncrementStartTimeSmall"/> and 
            <see cref="M:C1.Silverlight.Schedule.C1Scheduler.DecrementStartTimeSmall"/> methods and the
            <see cref="F:C1.Silverlight.Schedule.C1Scheduler.IncrementStartTimeSmallCommand"/> and 
            <see cref="F:C1.Silverlight.Schedule.C1Scheduler.DecrementStartTimeSmallCommand"/> commands.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.DayViewDayHeaderFormat">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining format 
            used to display day header in a Day view.
            The default value is 'dddd MMM d'.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.WeekViewDayHeaderFormat">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining the format string
            used to display the day header in a Week view. The default value is 'D'.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.MonthViewDayHeaderMonthFormat">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining format 
            used to display month name in a day header of a Month view.
            The default value is 'MMMM'.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.MonthViewDayHeaderDayFormat">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining format 
            used to display day name in a day header of a Month view.
            The default value is '%d'.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.MonthViewHeaderFormat">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining format 
            used to display day names in a Month view header.
            The default value is 'dddd'.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.TimeFormat">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining time format 
            used to display time ruler in a Day, Week and Work Week views.
            The default value is an empty string. In such case C1Scheduler takes default time format from the current culture.
            This is a dependency property.
            </summary>
            <remarks>
            Don't use general formats as "T" for this property. Use detailed format string such as "h:mm tt" or "HH:mm".
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.CalendarHelper">
            <summary>
            Gets or sets the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.CalendarHelper"/> object 
            which provides calendar-dependant properties.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.PreviousAppointmentText">
            <summary>
            Gets or sets a <see cref="T:System.String"/> value used as text for the 'Previous Appointment' navigation pane.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.NextAppointmentText">
            <summary>
            Gets or sets a <see cref="T:System.String"/> value used as text for the 'Next Appointment' navigation pane.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.HasVisibleAppointments">
            <summary>
            Indicates whether there is at least one visible appointment in the current view.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.BoldedDates">
            <summary>
            Gets the collection of dates which contain appointments. 
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.SelectedVisualInterval">
            <summary>
            Gets or sets the first selected <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> object 
            in the current selection or returns null if the selection is empty. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.NestedSetters">
            <summary>
            Represents a collection of <see cref="T:C1.Silverlight.Schedule.NestedPropertySetter"/> objects
            used to define values for nested properties in XAML.
            </summary>
            <remarks>
            This collection is primarily designed to provide a design-time serialization
            of the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.DataStorage"/> settings.
            <para>
            XAML doesn't provide an ability to assign a value to a nested property. 
            Meanwhile an object model of <see cref="P:C1.Silverlight.Schedule.C1Scheduler.DataStorage"/> is a nested by its 
            nature. So to work around this limitation the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.NestedSetters"/> 
            is introduced.
            </para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.TodayBackground">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Brush"/> object used to color current day.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.ControlBackground">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Brush"/> object that is the face color of a control (Time Ruler, Month View header, etc.). 
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.ControlForeground">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Brush"/> object that is the text color in a control (Time Ruler, Month View header, etc.). 
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.AppointmentForeground">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Brush"/> object used as a foreground for appointment elements. 
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.AlternatingBackground">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Brush"/> object used as background for working hours and days of alternating months.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.SelectedBackground">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Brush"/> object used to highlight currently selected day.
            This is a dependency property.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.DataSourceItemSynchronized">
            <summary>
            Occurs when changes made to one of the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.DataStorage"/> collections
            (for example, to <see cref="P:C1.C1Schedule.AppointmentStorage.Appointments"/>)
            has been fully reflected in the storage underlying data source.
            </summary>
            <remarks>
            If properties of an item of the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.DataStorage"/> collection are
            changed between BeginEdit and EndEdit calls performed on the item, this
            event will not be raised until the EndEdit method will be called.
            <para>
            Use this event if you want to update a back store of your data source only
            after the changes to a corresponding collection have been fully completed.
            For example, if you use ADO.NET DataSet as a data source, you can commit
            the changes made in a DataRow as a result of changes in the collection item
            to the underlying database.
            </para>
            </remarks>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.BeforeViewChange">
            <summary>
            Occurs immediately before the next actions:
            <list type="bullet">
            <item><term></term><description>When range of visible dates 
            is changed by the associated calendar control.</description></item>
            <item><term></term><description>When range of visible dates and(or) 
            view type is changed by the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> commands.
            </description></item></list>
            </summary>
            <remarks>Use this event to cancel action, to set other
            view type or to set other range of dates.</remarks>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.StyleChanged">
            <summary>
            Occurs immediately after the control style has been changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.BeforeAppointmentResize">
            <summary>
            Occurs before an <see cref="T:C1.C1Schedule.Appointment"/> object is resized by end-user.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.BeforeAppointmentDrop">
            <summary>
            Occurs before an <see cref="T:C1.C1Schedule.Appointment"/> object is dropped by end-user.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.BeforeAppointmentSave">
            <summary>
            Occurs before an <see cref="T:C1.C1Schedule.Appointment"/> is saved by end-user.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.UserEditingAppointment">
            <summary>
            Occurs before the Edit Appointment dialog appears on the screen for editing
            of an existing appointment, as a result of a double-click on the appointment 
            in one of the default control views, the <see cref="M:C1.Silverlight.Schedule.C1Scheduler.EditAppointmentDialog(C1.C1Schedule.Appointment)"/> method call,
            or when an <see cref="F:C1.Silverlight.Schedule.C1Scheduler.EditAppointmentDialogCommand"/> command is received.
            </summary>
            <remarks>
            Use this event to make custom settings to an editing appointment before it
            appears on the screen and/or to implement your own reaction on this event, instead
            of activating a standard dialog window.
            <para>
            In order to change appointment properties before showing the dialog on a screen,
            use the appointment object referenced by the e.Appointment event argument.
            </para>
            <para>
            To prevent activating a standard dialog window, set the e.Handled event argument to True.
            </para>
            </remarks>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.UserAddingAppointment">
            <summary>
            Occurs before the Edit Appointment dialog appears on the screen as a result of: 
            <list type="bullet">
            <item>
            a double-click on the control area in one of the default control views,
            </item>
            <item>
            the NewAppointmentDialog method call, 
            </item>
            <item>
            a <see cref="F:C1.Silverlight.Schedule.C1Scheduler.NewAppointmentDialogCommand"/> command.
            </item>
            </list>
            </summary>
            <remarks>
            Use this event to make custom settings to a new appointment before it
            appears on the screen and/or to implement your own reaction on this event, instead
            of activating a standard dialog window.
            <para>
            In order to change appointment properties before showing the dialog on a screen,
            use the appointment object referenced by the e.Appointment event argument.
            </para>
            <para>
            To prevent activating a standard dialog window, set the e.Handled event argument to True.
            </para>
            </remarks>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.UserDeletingAppointment">
            <summary>
            Occurs before the currently selected <see cref="T:C1.C1Schedule.Appointment"/> is deleted by a user 
            or as a result of the DeleteAppointment method call 
            or receiving the <see cref="F:C1.Silverlight.Schedule.C1Scheduler.DeleteAppointmentCommand"/> command.
            </summary>
            <remarks>
            Use this event to make custom actions before appointment deletion and/or to 
            implement your own reaction on this event. To prevent a deletion of the
            appointment, set the e.Handled event argument to True.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.AppointmentAdded">
            <summary>
            Occurs when an <see cref="T:C1.C1Schedule.Appointment"/> object is added.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.AppointmentDeleted">
            <summary>
            Occurs when an <see cref="T:C1.C1Schedule.Appointment"/> object is deleted.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.AppointmentChanged">
            <summary>
            Occurs when an <see cref="T:C1.C1Schedule.Appointment"/> object is changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.AppointmentRecurrenceStateChanged">
            <summary>
            Occurs when the <see cref="P:C1.C1Schedule.Appointment.RecurrenceState"/> property of 
            an <see cref="T:C1.C1Schedule.Appointment"/> object is changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.AppointmentCustomAction">
            <summary>
            Occurs immediately before a custom action of an <see cref="T:C1.C1Schedule.Appointment"/> object executes. 
            </summary>
            <example>
            <code>
            <![CDATA[
            private void c1Scheduler1_AppointmentAdded(object sender, AppointmentActionEventArgs e)
            {
            	// create a new action
            	Action action = new Action();
            	action.Command = "http://www.componentone.com";
            	// set appointment action
            	e.Appointment.Action = action;
            }
            ]]>
            </code>
            </example>
            <remarks>
            To cancel default handling, set CancelAppointmentEventArgs.Cancel property to true.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.ReminderFire">
            <summary>
            Occurs when a reminder set on an appointment fires, before the 
            Reminders dialog will be shown on a screen or activated.
            </summary>
            <remarks>
            Use this event to implement your own reaction on this event, instead
            of activating a standard Reminders window.
            <para>
            To prevent activating a standard window, set the e.Handled event argument to True.
            </para>
            </remarks>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.ReminderAdded">
            <summary>
            Occurs after a <see cref="T:C1.C1Schedule.Reminder"/> object is added.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.ReminderChanged">
            <summary>
            Occurs after a <see cref="T:C1.C1Schedule.Reminder"/> object is changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.ReminderSnooze">
            <summary>
            Occurs when a <see cref="T:C1.C1Schedule.Reminder"/> object is snoozed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.ReminderRemoved">
            <summary>
            Occurs when a <see cref="T:C1.C1Schedule.Reminder"/> object is removed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.StartChanged">
            <summary>
            Occurs when the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.Start"/> property value has been changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.EndChanged">
            <summary>
            Occurs when the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.End"/> property value has been changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTimeChanged">
            <summary>
            Occurs when the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedDateTime"/> property value has been changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.C1Scheduler.SelectedAppointmentChanged">
            <summary>
            Occurs when the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.SelectedAppointment"/> property value has been changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.Theme">
            <summary>
            Gets or sets a <see cref="T:System.Windows.ResourceDictionary"/> object containing Scheduler theme resources.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1Scheduler.Settings">
            <summary>
            Gets or sets the <see cref="T:C1.Silverlight.Schedule.C1SchedulerSettings"/> object 
            which provides <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> settings properties.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.C1SchedulerPresenter">
            <summary>
            An instance of this class is used in the C1Scheduler's template
            visual tree to define a place where a pane representing schedule time intervals 
            will appear.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.VisualIntervalsPresenter">
            <summary>
            The base class for listboxes which should represent 
            the collection of <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> objects.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.VisualIntervalsPresenter.#ctor">
            <summary>
            Creates a new instance of <see cref="T:C1.Silverlight.Schedule.VisualIntervalsPresenter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.VisualIntervalsPresenter.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element used to display the specified item.
            </summary>
            <returns>The new instance of <see cref="T:C1.Silverlight.Schedule.VisualIntervalPresenter"/> class.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.VisualIntervalsPresenter.IsAboutToDispose">
            <summary>
            Override this method in derived classes and return true when control should stop handle selection. 
            </summary>
            <returns>The base implementation always returns false.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.VisualIntervalsPresenter.AttachToScheduler">
            <summary>
            Attaches presenter to the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.VisualIntervalsPresenter.DetachFromScheduler(C1.Silverlight.Schedule.C1Scheduler)">
            <summary>
            Detaches presenter from the specified <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control.
            </summary>
            <param name="scheduler"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.VisualIntervalsPresenter.UpdateSelection">
            <summary>
            Updates selection.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.VisualIntervalsPresenter.SelectItems(System.DateTime,System.DateTime)">
            <summary>
            Selects all items from time interval determined by the specified start and end values.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.VisualIntervalsPresenter.ClearSelection">
            <summary>
            Clears selection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualIntervalsPresenter.Scheduler">
            <summary>
            References a <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control that owns the 
            <see cref="T:C1.Silverlight.Schedule.VisualIntervalsPresenter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1SchedulerPresenter.AttachToScheduler">
            <summary>
            Attaches presenter to the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1SchedulerPresenter.DetachFromScheduler(C1.Silverlight.Schedule.C1Scheduler)">
            <summary>
            Detaches presenter from the specified <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control.
            </summary>
            <param name="scheduler"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1SchedulerPresenter.SelectItems(System.DateTime,System.DateTime)">
            <summary>
            Selects all items from time interval determined by the specified start and end values.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="T:C1.Silverlight.Schedule.C1SchedulerResources">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.C1SchedulerResources"/> keeps the set of resources used by the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control.
            Static fields of this class return default C1Scheduler's themes.
            </summary>
            <remarks>
            Resource lookup behavior:
            <list type="bullet">
            <item>
            If Theme property is set to something other than default Office 2007 Blue theme, the lookup 
            process checks for the requested key within the resource dictionary defined by the current control theme
            </item>
            <item>
            The lookup process checks resources in a usual way (in page, window or application resources)
            </item>
            <item>
            The lookup process checks resources in default theme dictionary.
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1SchedulerResources.#ctor">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Silverlight.Schedule.C1SchedulerResources"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1SchedulerResources.RefreshResources">
            <summary>
            Refreshes resources according to the currently selected theme.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1SchedulerResources.Theme">
            <summary>
            Gets or sets the <see cref="T:System.Windows.ResourceDictionary"/> object used as the theme 
            for the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1SchedulerResources.OneDayStyle">
            <summary>
            Gets the <see cref="T:System.Windows.Style"/> object describing One Day view of <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1SchedulerResources.WorkingWeekStyle">
            <summary>
            Gets the <see cref="T:System.Windows.Style"/> object describing Working Week view of <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1SchedulerResources.WeekStyle">
            <summary>
            Gets the <see cref="T:System.Windows.Style"/> object describing Week view of <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1SchedulerResources.MonthStyle">
            <summary>
            Gets the <see cref="T:System.Windows.Style"/> object describing Month view of <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1SchedulerResources.EditAppointmentTemplate">
            <summary>
            Gets the <see cref="T:System.Windows.DataTemplate"/> object used in Edit(New) Appointment dialogs.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1SchedulerResources.EditRecurrenceTemplate">
            <summary>
            Gets the <see cref="T:System.Windows.DataTemplate"/> object used in Edit Recurrence dialog.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1SchedulerResources.ShowRemindersTemplate">
            <summary>
            Gets the <see cref="T:System.Windows.DataTemplate"/> object used in Show Reminders window.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1SchedulerResources.SelectFromListTemplate">
            <summary>
            Gets the <see cref="T:System.Windows.DataTemplate"/> object used for displaying Resources, Contacts and Categories dialogs.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1SchedulerResources.IntervalAppointmentTemplate">
            <summary>
            Gets the <see cref="T:System.Windows.DataTemplate"/> object used for displaying Appointment objects.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.C1SchedulerSettings">
            <summary>
            Determines auxiliary properties providing different <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> object settings.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.C1SchedulerSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.C1SchedulerSettings"/> class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1SchedulerSettings.AllowContactsEditing">
            <summary>
            Determines whether end-user has permission to edit Contacts.
            </summary>
            <remarks>If this property is false, default dialogs will only allow selection from the existing items. 
            If this property is false and ContactCollection is empty, default Appointment dialog won't 
            show controls for editing Contacts.</remarks>
            <value>The default value is true.</value>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1SchedulerSettings.AllowContactsMultiSelection">
            <summary> 
            Determines whether multiple Contact objects might be assigned to the single Appointment object.
            </summary>
            <remarks>
            <para>If both <see cref="P:C1.Silverlight.Schedule.C1SchedulerSettings.AllowContactsMultiSelection"/> and <see cref="P:C1.Silverlight.Schedule.C1SchedulerSettings.AllowContactsEditing"/>
            properties are false, the default Appointment dialog will show ComboBox for selecting single Contact object.
            </para>
            <para>
            If this property is true, the default Appointment dialog will allow selecting multiple contacts in a separate dialog.
            </para>
            </remarks>
            <value>The default value is true.</value>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1SchedulerSettings.AllowResourcesEditing">
            <summary>
            Determines whether end-user has permission to edit Resources.
            </summary>
            <remarks>If this property is false, default dialogs will only allow selection from the existing items. 
            If this property is false and ResourceCollection is empty, default Appointment dialog won't 
            show controls for editing Resources.</remarks>
            <value>The default value is true.</value>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1SchedulerSettings.AllowResourcesMultiSelection">
            <summary> 
            Determines whether multiple Resource objects might be assigned to the single Appointment object.
            </summary>
            <remarks>
            <para>If both <see cref="P:C1.Silverlight.Schedule.C1SchedulerSettings.AllowResourcesMultiSelection"/> and <see cref="P:C1.Silverlight.Schedule.C1SchedulerSettings.AllowResourcesEditing"/>
            properties are false, the default Appointment dialog will show ComboBox for selecting single Resource object.
            </para>
            <para>
            If this property is true, the default Appointment dialog will allow selecting multiple resources in a separate dialog.
            </para>
            </remarks>
            <value>The default value is true.</value>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1SchedulerSettings.AllowCategoriesEditing">
            <summary>
            Determines whether end-user has permission to edit Categories.
            </summary>
            <remarks>If this property is false, default dialogs will only allow selection from the existing items. 
            If this property is false and CategoryCollection is empty, default Appointment dialog won't 
            show controls for editing Categories.</remarks>
            <value>The default value is true.</value>
        </member>
        <member name="P:C1.Silverlight.Schedule.C1SchedulerSettings.AllowCategoriesMultiSelection">
            <summary> 
            Determines whether multiple Category objects might be assigned to the single Appointment object.
            </summary>
            <remarks>
            <para>If both <see cref="P:C1.Silverlight.Schedule.C1SchedulerSettings.AllowCategoriesMultiSelection"/> and <see cref="P:C1.Silverlight.Schedule.C1SchedulerSettings.AllowCategoriesEditing"/>
            properties are false, the default Appointment dialog will show ComboBox for selecting single Category object.
            </para>
            <para>
            If this property is true, the default Appointment dialog will allow selecting multiple categories in a separate dialog.
            </para>
            </remarks>
            <value>The default value is true.</value>
        </member>
        <member name="T:C1.Silverlight.Schedule.DeferrableObservableCollection`1">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.DeferrableObservableCollection`1"/> represents an
            <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> supported deferring events during the massive 
            collection changes.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:C1.Silverlight.Schedule.DeferrableObservableCollection`1.BeginUpdate">
            <summary>
            Prevents raising events until the <see cref="M:C1.Silverlight.Schedule.DeferrableObservableCollection`1.EndUpdate"/> method is called. 
            </summary>
            <remarks>The <see cref="T:C1.Silverlight.Schedule.DeferrableObservableCollection`1"/> keeps count 
            of calls to <see cref="M:C1.Silverlight.Schedule.DeferrableObservableCollection`1.BeginUpdate"/> method. 
            Be sure to call <see cref="M:C1.Silverlight.Schedule.DeferrableObservableCollection`1.EndUpdate"/> method for each call to <see cref="M:C1.Silverlight.Schedule.DeferrableObservableCollection`1.BeginUpdate"/> method.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.DeferrableObservableCollection`1.EndUpdate">
            <summary>
            Enables raising events. If collection has been changed since the call 
            to the <see cref="M:C1.Silverlight.Schedule.DeferrableObservableCollection`1.BeginUpdate"/> method, raises PropertyChanged and CollectionChanged events.
            </summary>
            <remarks>The <see cref="T:C1.Silverlight.Schedule.DeferrableObservableCollection`1"/> keeps count 
            of calls to <see cref="M:C1.Silverlight.Schedule.DeferrableObservableCollection`1.BeginUpdate"/> method. 
            Be sure to call <see cref="M:C1.Silverlight.Schedule.DeferrableObservableCollection`1.EndUpdate"/> method for each call to <see cref="M:C1.Silverlight.Schedule.DeferrableObservableCollection`1.BeginUpdate"/> method.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.DeferrableObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.DeferrableObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:C1.Silverlight.Schedule.DeferrableObservableCollection`1.InUpdate">
            <summary>
            Gets a <see cref="T:System.Boolean"/> value determining whether the <see cref="T:C1.Silverlight.Schedule.DeferrableObservableCollection`1"/>
            is in update mode (<see cref="M:C1.Silverlight.Schedule.DeferrableObservableCollection`1.BeginUpdate"/> has been called).
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.ObservableCollectionSynchronizer`2.#ctor(`0,`1,System.Boolean,System.ComponentModel.ICollectionView,System.ComponentModel.ICollectionView)">
            <summary>
            ownerSourceView and ownerTargetView can reference an owner views of 
            sourceCollection and targetCollection respectively. I they are specified
            then the ones will be switched in a deferred state during synchronization.
            </summary>
            <param name="sourceCollection"></param>
            <param name="targetCollection"></param>
            <param name="twoWay"></param>
            <param name="ownerSourceView"></param>
            <param name="ownerTargetView"></param>
        </member>
        <member name="T:C1.Silverlight.Schedule.ObservableCollectionStringConverter">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.ObservableCollectionStringConverter"/> provides a type converter 
            to convert <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> objects to and from various other representations. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.ObservableCollectionStringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type 
            to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>True if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.ObservableCollectionStringConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>True if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.ObservableCollectionStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:C1.Silverlight.Schedule.ObservableCollectionStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.IntervalAppointment">
            <summary>
            Represents an <see cref="P:C1.Silverlight.Schedule.IntervalAppointment.Appointment"/> in a <see cref="T:C1.Silverlight.Schedule.VisualInterval"/>.
            </summary>
            <remarks>
            A single <see cref="P:C1.Silverlight.Schedule.IntervalAppointment.Appointment"/> may cover multiple time intervals represented by 
            <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> objects from the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervals"/> collection. 
            The <see cref="T:C1.Silverlight.Schedule.IntervalAppointment"/> object represents an <see cref="P:C1.Silverlight.Schedule.IntervalAppointment.Appointment"/>
            belonging to a certain <see cref="P:C1.Silverlight.Schedule.IntervalAppointment.Interval"/>.
            <para>
            The <see cref="T:C1.Silverlight.Schedule.IntervalAppointment"/> objects are used as DataContext for
            the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.IntervalAppointmentTemplate"/> DataTemplate.
            </para>
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.IntervalAppointment.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.IntervalAppointment.IsSelected"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.IntervalAppointment.IsSelectedAppointmentProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.IntervalAppointment.IsSelectedAppointment"/> dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.IntervalAppointment.Interval">
            <summary>
            Gets a <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> that intersects with an <see cref="P:C1.Silverlight.Schedule.IntervalAppointment.Appointment"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.IntervalAppointment.Appointment">
            <summary>
            Gets an <see cref="P:C1.Silverlight.Schedule.IntervalAppointment.Appointment"/> that is intersected with a <see cref="T:C1.Silverlight.Schedule.VisualInterval"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.IntervalAppointment.IsSelected">
            <summary>
            Gets or sets a value that determines whether the UI element that has this 
            <see cref="T:C1.Silverlight.Schedule.IntervalAppointment"/> as a DataContext is selected.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.IntervalAppointment.IsSelectedAppointment">
            <summary>
            Gets or sets a value that determines whether the <see cref="P:C1.Silverlight.Schedule.IntervalAppointment.Appointment"/>
            is selected in <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> UI.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.IntervalAppointmentCollection">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.IntervalAppointmentCollection"/> class is a
            <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1"/> collection 
            of <see cref="T:C1.Silverlight.Schedule.IntervalAppointment"/> objects belonging to a certain <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> object.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.IntervalAppointmentCollection.#ctor(System.Collections.ObjectModel.ObservableCollection{C1.Silverlight.Schedule.IntervalAppointment})">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Silverlight.Schedule.IntervalAppointmentCollection"/> class.
            </summary>
            <param name="list">The <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> object.</param>
        </member>
        <member name="M:C1.Silverlight.Schedule.IntervalAppointmentCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Refreshes the <see cref="P:C1.Silverlight.Schedule.IntervalAppointmentCollection.HasItems"/> property value.
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:C1.Silverlight.Schedule.IntervalAppointmentCollection.HasItems">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value specifying whether collection has items.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.VisualIntervalGroupDescription">
            <summary>
            Represents a grouping criteria for a collection of <see cref="T:C1.Silverlight.Schedule.VisualInterval"/>
            objects.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.VisualIntervalGroupDescription.#ctor">
            <summary>
            Creates a <see cref="T:C1.Silverlight.Schedule.VisualIntervalGroupDescription"/> instance.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.VisualIntervalGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
            <summary>
            Overrides the behavior of the GroupDescription.GroupNameFromItem method.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.VisualIntervalGroupDescription.NamesMatch(System.Object,System.Object)">
            <summary>
            Overrides the behavior of the GroupDescription.NamesMatch method.
            </summary>
            <param name="groupName"></param>
            <param name="itemName"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualIntervalGroupDescription.PropertyName">
            <summary>
            Gets or sets a property path defining a group.
            </summary>
            <remarks>
            This property value can be defined in XAML as a string with property path.
            </remarks>
        </member>
        <member name="T:C1.Silverlight.Schedule.IntervalGroupDescriptionCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Silverlight.Schedule.VisualIntervalGroupDescription"/> objects.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.IntervalGroupDescriptionCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.IntervalGroupDescriptionCollection"/> class.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.IntervalGroupStyleCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Silverlight.Schedule.GroupStyle"/> objects.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.VisualIntervalGroup">
            <summary>
            Instances of this class appear as DataContext for the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/>
            group headers defined in the <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalGroupStyles"/>
            collection.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.VisualInterval">
            <summary>
            Represents a definition of a minimal indivisible time interval represented
            by the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/>.
            </summary>
            <remarks>
            The instances of this class are used as DataContext for the 
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalTemplate"/>.
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Schedule.VisualInterval.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Schedule.VisualInterval.IsSelected"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.VisualInterval.#ctor(C1.Silverlight.Schedule.C1Scheduler,System.DateTime,System.TimeSpan)">
            <summary>
            Creates a new <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> object for the specified 
            <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> that represents the specified time range.
            </summary>
            <param name="scheduler">
            A <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> that <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> is created for.
            </param>
            <param name="startTime">
            A start time of a time range represented by the <see cref="T:C1.Silverlight.Schedule.VisualInterval"/>.
            </param>
            <param name="timescale">
            A TimeSpan of a time range represented by the <see cref="T:C1.Silverlight.Schedule.VisualInterval"/>.
            </param>
        </member>
        <member name="M:C1.Silverlight.Schedule.VisualInterval.ContainsTime(System.DateTime)">
            <summary>
            Gets a value indicating whether the specified DateTime belongs to the
            time range represented by the <see cref="T:C1.Silverlight.Schedule.VisualInterval"/>.
            </summary>
            <param name="time">
            A checked DateTime.
            </param>
            <returns>
            This method returns true if the specified DateTime belongs 
            to the time range represented by the <see cref="T:C1.Silverlight.Schedule.VisualInterval"/>;
            otherwise, false.
            </returns>
            <remarks>
            A DateTime is considered as belonging to a <see cref="T:C1.Silverlight.Schedule.VisualInterval"/>
            if the following condition is satisfied:
            <para>
            <see cref="P:C1.Silverlight.Schedule.VisualInterval.StartTime"/> &lt;= DateTime and 
            DateTime &gt; <see cref="P:C1.Silverlight.Schedule.VisualInterval.EndTime"/> 
            </para>
            <para>
            Note that the bottom boundary of the interval is exclusive, that is 
            DateTime = <see cref="P:C1.Silverlight.Schedule.VisualInterval.EndTime"/> is considered as not
            belonging to the interval.
            </para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualInterval.Items">
            <summary>
            Virtual property returns null in this class implementation.
            </summary>
            <remarks>It is necessary to avoid silent exceptions 
            at binding when it is used with inherited classes 
            (in other case binding takes double time).
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualInterval.Scheduler">
            <summary>
            Gets the <see cref="P:C1.Silverlight.Schedule.VisualInterval.Scheduler"/> that <see cref="T:C1.Silverlight.Schedule.VisualInterval"/>
            belongs to.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualInterval.StartTime">
            <summary>
            Gets a start time of a time range represented by the <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> object.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualInterval.TimeScale">
            <summary>
            Gets a TimeSpan of a time range represented by the <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> object.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualInterval.EndTime">
            <summary>
            Gets an end time of a time range represented by the <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> object.
            </summary>
            <remarks>
            <para>
            <see cref="P:C1.Silverlight.Schedule.VisualInterval.EndTime"/> is calculated as a sum of the <see cref="P:C1.Silverlight.Schedule.VisualInterval.StartTime"/>
            and <see cref="P:C1.Silverlight.Schedule.VisualInterval.TimeScale"/> property values.
            </para>
            This property represents an exclusive boundary of the time range, that
            is the DateTime returned by this property is considered as not belonging to
            the <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> time range. The inclusive boundary is
            represented by the <see cref="P:C1.Silverlight.Schedule.VisualInterval.InclusiveEndTime"/> property.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualInterval.InclusiveEndTime">
            <summary>
            Gets an inclusive end time of a time range represented by the <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> object.
            </summary>
            <remarks>
            This property represents an inclusive boundary of the time range, that is
            the maximum DateTime value that is included in the time range represented
            by the <see cref="T:C1.Silverlight.Schedule.VisualInterval"/>, as opposite to the <see cref="P:C1.Silverlight.Schedule.VisualInterval.EndTime"/>
            property.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualInterval.Culture">
            <summary>
            Gets a CultureInfo.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualInterval.StartTimeInfo">
            <summary>
            Gets a DateTimeInfo object containing auxiliary properties for a usage in XAML
            that provides additional information for the <see cref="P:C1.Silverlight.Schedule.VisualInterval.StartTime"/> property 
            value.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualInterval.EndTimeInfo">
            <summary>
            Gets a DateTimeInfo object containing auxiliary properties for a usage in XAML
            that provides additional information for the <see cref="P:C1.Silverlight.Schedule.VisualInterval.EndTime"/> property 
            value.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualInterval.InclusiveEndTimeInfo">
            <summary>
            Gets a DateTimeInfo object containing auxiliary properties for a usage in XAML
            that provides additional information for the <see cref="P:C1.Silverlight.Schedule.VisualInterval.EndTimeInfo"/> property 
            value.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualInterval.IsSelected">
            <summary>
            Gets or sets a value that determines whether the UI element that has this 
            <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> as a DataContext is selected.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualInterval.Index">
            <summary>
            Gets an index of <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> in the 
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervals"/> collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualInterval.Appointments">
            <summary>
            Gets a collection of <see cref="T:C1.Silverlight.Schedule.IntervalAppointment"/> objects representing
            appointments whose time range is intersected with the time range of this
            <see cref="T:C1.Silverlight.Schedule.VisualInterval"/>.
            </summary>
            <remarks>
            This collection provides active notifications when a set of appointments
            intersecting with this <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> is changed, so you
            can safely bind UI elements to it in XAML.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualInterval.StatusBrush">
            <summary>
            Gets the <see cref="T:System.Windows.Media.Brush"/> object representing interval availability status. 
            This is a dependency property. 
            </summary>
        </member>
        <member name="E:C1.Silverlight.Schedule.VisualInterval.PropertyChanged">
            <summary>
            Occurs when property value is changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualIntervalGroup.Group">
            <summary>
            Gets a <see cref="T:System.Windows.Data.CollectionViewGroup"/> object representing a group item.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualIntervalGroup.Items">
            <summary>
            Gets a <see cref="P:System.Windows.Data.CollectionViewGroup.Items"/> property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualIntervalGroup.VisualIntervals">
            <summary>
            Gets a collection of child <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> objects.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.TimeSlotGroupStyleSelector">
            <summary>
            This class provides a way to apply time slot group styles for working/free hours
            in DayView/WorkWeekView modes.
            </summary>
            <remarks>For the sample of using look at OneDayStyleBase in generic.xaml.
            <list type="number">
            <item>
            <para>Create an instance of this class:</para>
            <para> &lt;local:TimeSlotGroupStyleSelector x:Key="TimeSlotGroupStyleSelector"/&gt;</para>
            </item>
            <item>
            Define two group styles:
            <list type="bullet">
            <item>
            with the key "PART_C1Scheduler_WorkHour_Style" for work hours; 
            </item>
            <item>
            with the key "PART_C1Scheduler_FreeHour_Style" for free hours.    
            </item>
            </list>
            </item>
            <item>
            <para>Specify style selector in the group definition:</para>
            <para> &lt;GroupStyle ContainerStyleSelector="{StaticResource TimeSlotGroupStyleSelector}"&gt;</para>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Schedule.TimeSlotGroupStyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)">
            <summary>
            Returns the <see cref="T:System.Windows.Style"/> object for the specified group if it is found in resources.
            </summary>
            <param name="item">The content.</param>
            <param name="container">The element to which the style will be applied.</param>
            <returns>Returns an application-specific style to apply; 
            otherwise, a null reference (Nothing in Visual Basic).</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.DayGroupStyleSelector">
            <summary>
            This class provides a way to apply day group styles in DayView/WorkWeekView modes.
            </summary>
            <remarks>For the sample of using look at OneDayStyle in themes/SchedulerThemes/Office2007/Blue.xaml.
            <list type="number">
            <item>
            <para>Create an instance of this class:</para>
            <para> &lt;local:DayGroupStyleSelector x:Key="DayGroupStyleSelector"/&gt;</para>
            </item>
            <item>
            Define two group styles:
            <list type="bullet">
            <item>
            with the key "PART_C1Scheduler_Day_Style" for ordinal day style; 
            </item>
            <item>
            with the key "PART_C1Scheduler_Today_Style" for the current day style.    
            </item>
            </list>
            </item>
            <item>
            <para>Specify style selector in the group definition:</para>
            <para> &lt;GroupStyle ContainerStyleSelector="{StaticResource DayGroupStyleSelector}"/&gt;</para>
            </item>
            </list>
            </remarks>	
        </member>
        <member name="M:C1.Silverlight.Schedule.DayGroupStyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)">
            <summary>
            Returns the <see cref="T:System.Windows.Style"/> object for the specified group if it is found in resources.
            </summary>
            <param name="item">The content.</param>
            <param name="container">The element to which the style will be applied.</param>
            <returns>Returns an application-specific style to apply; 
            otherwise, a null reference (Nothing in Visual Basic).</returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.TimeSlotTemplateSelector">
            <summary>
            This class provides a way to choose a DataTemplate for the <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> 
            object representing the single time slot in DayView/WorkWeekView modes.
            </summary>
            <remarks>For the sample of using look at OneDayStyleBase in generic.xaml.
            <list type="number">
            <item>
            <para>Create an instance of this class:</para>
            <para> &lt;local:TimeSlotTemplateSelector x:Key="TimeSlotTemplateSelector"/&gt;</para>
            </item>
            <item>
            Define two DataTemplates:
            <list type="bullet">
            <item>
            with the key "PART_C1Scheduler_FreeSlot_Template" for free time; 
            </item>
            <item>
            with the key "PART_C1Scheduler_WorkSlot_Template" for working time.    
            </item>
            </list>
            </item>
            <item>
            <para>Specify <see cref="!:ItemsControl.ItemTemplateSelector"/> 
            for the <see cref="T:C1.Silverlight.Schedule.C1SchedulerPresenter"/> object:</para>
            <para> &lt;local:C1SchedulerPresenter ItemTemplateSelector="{StaticResource TimeSlotTemplateSelector}" /&gt;</para>
            </item>
            </list>
            Note, that if you use this method for choosing VisualInterval DataTemplate, you shouldn't set
            <see cref="P:C1.Silverlight.Schedule.C1Scheduler.VisualIntervalTemplate"/> property. 
            </remarks>	
        </member>
        <member name="M:C1.Silverlight.Schedule.TimeSlotTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            Returns the <see cref="T:System.Windows.DataTemplate"/> object for the specified group if it is found in resources.
            </summary>
            <param name="item">The data object for which to select the template.</param>
            <param name="container">The data-bound object.</param>
            <returns>Returns a DataTemplate or a null reference (Nothing in Visual Basic). 
            The default value is a null reference (Nothing in Visual Basic). </returns>
        </member>
        <member name="T:C1.Silverlight.Schedule.DayIntervalStyleSelector">
            <summary>
            This class provides a way to apply day group styles for ordinal/current days.
            </summary>
            <remarks>For the sample of using look at OneDayStyleBase in generic.xaml.
            <list type="number">
            <item>
            <para>Create an instance of this class:</para>
            <para> &lt;local:DayIntervalStyleSelector x:Key="DayIntervalStyleSelector"/&gt;</para>
            </item>
            <item>
            Define two group styles:
            <list type="bullet">
            <item>
            with the key "C1Scheduler_Day_Style" for ordinal days; 
            </item>
            <item>
            with the key "C1Scheduler_Today_Style" for the current day.    
            </item>
            </list>
            </item>
            <item>
            <para>Specify style selector in the group definition:</para>
            <para> &lt;GroupStyle ContainerStyleSelector="{StaticResource DayIntervalStyleSelector}"&gt;</para>
            </item>
            </list>
            </remarks>
        </member>
        <member name="T:C1.Silverlight.Schedule.TimeSlotStyleSelector">
            <summary>
            This class provides a way to apply time slot styles for working/free hours
            in DayView/WorkWeekView modes.
            </summary>
            <remarks>For the sample of using look at OneDayStyle in generic.xaml.
            <list type="number">
            <item>
            <para>Create an instance of this class:</para>
            <para> &lt;local:TimeSlotStyleSelector x:Key="TimeSlotStyleSelector"/&gt;</para>
            </item>
            <item>
            Define two group styles:
            <list type="bullet">
            <item>
            with the key "PART_C1Scheduler_WorkHour_Style" for work hours; 
            </item>
            <item>
            with the key "PART_C1Scheduler_FreeHour_Style" for free hours.    
            </item>
            </list>
            </item>
            <item>
            <para>Specify ItemContainerStyleSelector property for the <see cref="T:C1.Silverlight.Schedule.C1SchedulerPresenter"/> object:</para>
            <para> &lt;local:C1SchedulerPresenter ItemContainerStyleSelector="{StaticResource TimeSlotTemplateSelector}" /&gt;</para>
            </item>
            </list>
            </remarks>	
        </member>
        <member name="T:C1.Silverlight.Schedule.VisualIntervalCollection">
            <summary>
            Represents a collection of <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> objects.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualIntervalCollection.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> object at specified index.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualIntervalCollection.Item(System.DateTime)">
            <summary>
            Gets a <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> that includes the specified DateTime.
            </summary>
            <param name="time">
            DateTime for which a <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> to find.
            </param>
            <returns>
            Returns a <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> that includes the specified DateTime,
            if exists; otherwise, a null value.
            </returns>
            <remarks>
            A DateTime is considered as belonging to a <see cref="T:C1.Silverlight.Schedule.VisualInterval"/>
            if the following condition is satisfied:
            <para>
            <see cref="P:C1.Silverlight.Schedule.VisualInterval.StartTime"/> &lt;= DateTime and 
            DateTime &gt; <see cref="P:C1.Silverlight.Schedule.VisualInterval.EndTime"/> 
            </para>
            <para>
            Note that the bottom boundary of the interval is exclusive, that is 
            DateTime = <see cref="P:C1.Silverlight.Schedule.VisualInterval.EndTime"/> is considered as not
            belonging to the interval.
            </para>
            </remarks>
        </member>
        <member name="T:C1.Silverlight.Schedule.VisualIntervalToStringConverter">
            <summary>
            VisualIntervalToStringConverter converts VisualInterval start time to string
            using formatting string specified in one of the C1Scheduler properties:
            - DayViewDayHeaderFormat,
            - WeekViewDayHeaderFormat,
            - MonthViewDayHeaderMonthFormat,
            - MonthViewDayHeaderDayFormat,
            - MonthViewHeaderFormat.
            Converter parameter should specify C1Scheduler property name.
            If converter parameter is null, uses VisualInterval.Culture.DateTimeFormat.ShortDatePattern 
            as formatting string.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.VisualIntervalToStringConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.VisualIntervalToStringConverter"/>.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.MonthToStringConverter">
            <summary>
            MonthToStringConverter converts VisualInterval start time to string.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.MonthToStringConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.MonthToStringConverter"/>.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.AlternateMonthBrushConverter">
            <summary>
            AlternateMonthBrushConverter returns background brush for the specified VisualInterval.
            ConverterParameter property should be set to the base brush value.
            Returns the base brush for even months; <see cref="P:C1.Silverlight.Schedule.AlternateMonthBrushConverter.AlternateMonthBrush"/> property value for odd months.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Schedule.AlternateMonthBrushConverter.Default">
            <summary>
            Gets an instance of <see cref="T:C1.Silverlight.Schedule.AlternateMonthBrushConverter"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.AlternateMonthBrushConverter.AlternateMonthBrush">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Brush"/> object which should be used for alternate months.
            The default value is white SolidColorBrush.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.AppointmentActionEventArgs">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.AppointmentActionEventArgs"/> class describes routed 
            event data for user actions on the <see cref="P:C1.Silverlight.Schedule.AppointmentActionEventArgs.Appointment"/> object.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.AppointmentActionEventArgs.#ctor(C1.C1Schedule.Appointment)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.AppointmentActionEventArgs"/>
            class with the specified appointment. 
            </summary>
            <param name="appointment">The <see cref="P:C1.Silverlight.Schedule.AppointmentActionEventArgs.Appointment"/> object.</param>
        </member>
        <member name="P:C1.Silverlight.Schedule.AppointmentActionEventArgs.Appointment">
            <summary>
            Gets an <see cref="P:C1.Silverlight.Schedule.AppointmentActionEventArgs.Appointment"/> object.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.AppointmentActionEventArgs.Handled">
            <summary>
            Gets or sets a value that indicates the present state of the event handling.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.ReminderActionEventArgs">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.ReminderActionEventArgs"/> class describes routed 
            event data for actions on the <see cref="P:C1.Silverlight.Schedule.ReminderActionEventArgs.Reminder"/> object.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.ReminderActionEventArgs.#ctor(C1.C1Schedule.Reminder)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.ReminderActionEventArgs"/>
            class with the specified reminder. 
            </summary>
            <param name="reminder">The <see cref="P:C1.Silverlight.Schedule.ReminderActionEventArgs.Reminder"/> object.</param>
        </member>
        <member name="P:C1.Silverlight.Schedule.ReminderActionEventArgs.Reminder">
            <summary>
            Gets a <see cref="P:C1.Silverlight.Schedule.ReminderActionEventArgs.Reminder"/> object.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.ReminderActionEventArgs.Handled">
            <summary>
            Gets or sets a value that indicates the present state of the event handling.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.PropertyChangeEventArgsBase">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.PropertyChangeEventArgsBase"/> class describes routed 
            event data for the dependency property changing events.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.PropertyChangeEventArgsBase.#ctor(System.Windows.DependencyProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.PropertyChangeEventArgsBase"/>
            class with the specified DependencyProperty. 
            </summary>
            <param name="property">The <see cref="T:System.Windows.DependencyProperty"/>.</param>
        </member>
        <member name="P:C1.Silverlight.Schedule.PropertyChangeEventArgsBase.Property">
            <summary>
            Gets a <see cref="T:System.Windows.DependencyProperty"/> object.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.DateTimePropertyChangeEventArgs">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.DateTimePropertyChangeEventArgs"/> class describes routed 
            event data for the DateTime property changing events.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.DateTimePropertyChangeEventArgs.#ctor(System.Windows.DependencyProperty,System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.DateTimePropertyChangeEventArgs"/>
            class with the specified dependency property, old and new DateTime value. 
            </summary>
            <param name="property">The <see cref="T:System.Windows.DependencyProperty"/>.</param>
            <param name="oldValue">The old value of the specified property.</param>
            <param name="newValue">The new value of the specified property.</param>
        </member>
        <member name="P:C1.Silverlight.Schedule.DateTimePropertyChangeEventArgs.OldValue">
            <summary>
            Gets an old property value.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.DateTimePropertyChangeEventArgs.NewValue">
            <summary>
            Gets a new property value.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.BeforeViewChangeEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Silverlight.Schedule.C1Scheduler.BeforeViewChange"/> event 
            of the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.BeforeViewChangeEventArgs.Style">
            <summary>
            Gets or sets <see cref="P:C1.Silverlight.Schedule.BeforeViewChangeEventArgs.Style"/> value determining 
            which Style should be selected.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.BeforeViewChangeEventArgs.Dates">
            <summary>
            Gets or sets the range of dates which should be selected in the view. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.BeforeViewChangeEventArgs.Handled">
            <summary>
            Gets or sets a value that indicates the present state of the event handling.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.VisualIntervalGroupsPresenter">
            <summary>
            The <see cref="T:C1.Silverlight.Schedule.VisualIntervalGroupsPresenter"/> class is a
            listbox representing the collection of <see cref="T:C1.Silverlight.Schedule.VisualIntervalGroup"/>
            objects. This class implements selection logic for all-day areas 
            in Day View, WorkWeek View and Office 2007 Week View modes.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.VisualIntervalGroupsPresenter.AttachToScheduler">
            <summary>
            Attaches presenter to the <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.VisualIntervalGroupsPresenter.DetachFromScheduler(C1.Silverlight.Schedule.C1Scheduler)">
            <summary>
            Detaches presenter from the specified <see cref="T:C1.Silverlight.Schedule.C1Scheduler"/> control.
            </summary>
            <param name="scheduler"></param>
        </member>
        <member name="M:C1.Silverlight.Schedule.VisualIntervalGroupsPresenter.UpdateSelection">
            <summary>
            Updates selection.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.VisualIntervalPresenter">
            <summary>
            Represents a selectable item in a <see cref="T:C1.Silverlight.Schedule.VisualIntervalsPresenter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.VisualIntervalPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Schedule.VisualIntervalPresenter"/> class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Schedule.VisualIntervalPresenter.Interval">
            <summary>
            Gets a <see cref="T:C1.Silverlight.Schedule.VisualInterval"/> object representing the 
            content of the <see cref="T:C1.Silverlight.Schedule.VisualIntervalPresenter"/> object.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Schedule.Extensions">
            <summary>
            Class that provides static extension methods for several other classes.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Schedule.Extensions.FindCommonVisualAncestor(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            Returns the common ancestor of two FrameworkElements.
            </summary>
            <returns>The common ancestor of the FrameworkElement and other FrameworkElement if one exists; otherwise, null.</returns>
        </member>
    </members>
</doc>
