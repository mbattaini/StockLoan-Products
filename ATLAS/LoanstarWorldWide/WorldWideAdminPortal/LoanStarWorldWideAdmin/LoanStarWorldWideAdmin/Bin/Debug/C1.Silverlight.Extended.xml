<?xml version="1.0"?>
<doc>
    <assembly>
        <name>C1.Silverlight.Extended</name>
    </assembly>
    <members>
        <member name="T:C1.Silverlight.Extended.BookZone">
            <summary>
            Represents the different zones inside a <see cref="T:C1.Silverlight.Extended.C1Book"/>.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.BookZone.Out">
            <summary>
            Specifies the zone outside the borders of the book.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.BookZone.BottomLeft">
            <summary>
            Specifies the bottom left fold zone.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.BookZone.TopLeft">
            <summary>
            Specifies the top left fold zone.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.BookZone.Center">
            <summary>
            Specifies the center of the book.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.BookZone.TopRight">
            <summary>
            Specifies the top right fold zone.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.BookZone.BottomRight">
            <summary>
            Specifies the bottom left fold zone.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.C1BookHalfSpan">
            <summary>
            C1BookHalfSpan simulates a single large element spanning two pages.  Put <see cref="T:C1.Silverlight.Extended.C1BookHalfSpan"/>s in the <see cref="T:C1.Silverlight.Extended.C1BookItem"/>s
            of opposite pages, adjust the <see cref="P:Dock"/> property,
            and repeat the content to get the illusion of a centerfold image.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1BookHalfSpan.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.C1BookHalfSpan"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1BookHalfSpan.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes
            can override this method to define their own Measure pass behavior.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1BookHalfSpan.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes
            can override this method to define their own Arrange pass behavior.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1BookHalfSpan.Dock">
            <summary>
            Position of the book item in the book when facing front.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1BookItem.TransitionProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1BookItem.Transition"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1BookItem.IsTransparentProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1BookItem.IsTransparent"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1BookItem.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.C1BookItem"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1BookItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.C1BookItem"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1BookItem.IsTransparent">
            <summary>
            Property used to indicate when a <see cref="T:C1.Silverlight.Extended.C1BookItem"/> contains transparent parts.
            </summary>
            <remarks>
            Note that <see cref="P:C1.Silverlight.Extended.C1Book.ShowOuterShadows"/> should be false when using transparent pages.
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CheckeredBorder.SquareBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CheckeredBorder.SquareBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CheckeredBorder.AlternatingSquareBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CheckeredBorder.AlternatingSquareBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CheckeredBorder.SquareWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CheckeredBorder.SquareWidth"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CheckeredBorder.CornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CheckeredBorder.CornerRadius"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1CheckeredBorder.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.C1CheckeredBorder"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1CheckeredBorder.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.C1CheckeredBorder"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CheckeredBorder.SquareBrush">
            <summary>
            Gets or sets the brush used to draw the squares in background.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1CheckeredBorder.SquareBrushChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1CheckeredBorder.SquareBrush"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CheckeredBorder.AlternatingSquareBrush">
            <summary>
            Gets or sets the brush used to draw the alternating squares in background.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1CheckeredBorder.AlternatingSquareBrushChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1CheckeredBorder.AlternatingSquareBrush"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CheckeredBorder.SquareWidth">
            <summary>
            Gets or sets the width of the squares in background.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1CheckeredBorder.SquareWidthChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1CheckeredBorder.SquareWidth"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CheckeredBorder.CornerRadius">
            <summary>
            Gets or sets the radius of the corners.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.C1ColorButton">
            <summary>
            Button that represents a color.
            </summary>	
        </member>
        <member name="M:C1.Silverlight.Extended.C1ColorButton.ChangeVisualStateCommon(System.Boolean)">
            <summary>
            Updates the current visual state of the Common visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorButton.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorButton.IsSelected"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorButton.IsMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorButton.IsMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorButton.ColorProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorButton.Color"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1ColorButton.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.C1ColorButton"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1ColorButton.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.C1ColorButton"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.Extended.C1ColorButton.Click">
            <summary>
            Raises the click event.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorButton.IsSelected">
            <summary>
            Gets/sets if the color is selected.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1ColorButton.IsSelectedChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1ColorButton.IsSelected"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorButton.IsMouseOver">
            <summary>
            Gets/sets if the color has the mouse over.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1ColorButton.IsMouseOverChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1ColorButton.IsMouseOver"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorButton.Color">
            <summary>
            Gets or sets the color shown.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.C1ColorPicker">
            <summary>
            The C1ColorPicker control allows end-users to pick a color from a color palette or use the color editor to build advanced colors using the RGB or HSL color models. The C1ColorPicker control keeps a list of the recently used colors.
            </summary>	
        </member>
        <member name="M:C1.Silverlight.Extended.C1ColorPicker.CreateColorContainer">
            <summary>
            Override to change the default <see cref="T:System.Windows.Controls.ItemsControl"/> used.
            </summary>
            <returns>An <see cref="T:System.Windows.Controls.ItemsControl"/> used to put several <see cref="T:C1.Silverlight.Extended.C1ColorButton"/>.</returns>
        </member>
        <member name="M:C1.Silverlight.Extended.C1ColorPicker.CreateColorButton(System.Windows.Media.Color)">
            <summary>
            Override to change the default <see cref="T:C1.Silverlight.Extended.C1ColorButton"/> used for a <see cref="T:System.Windows.Media.Color"/>.
            </summary>
            <param name="color"><see cref="T:System.Windows.Media.Color"/> that should be represented.</param>
            <returns>A <see cref="T:C1.Silverlight.Extended.C1ColorButton"/> for a specific <see cref="T:System.Windows.Media.Color"/>.</returns>
        </member>
        <member name="M:C1.Silverlight.Extended.C1ColorPicker.CreateColorButton(C1.Silverlight.Extended.ColorPaletteEntry)">
            <summary>
            Override to change the default <see cref="T:C1.Silverlight.Extended.C1ColorButton"/> used for a <see cref="T:C1.Silverlight.Extended.ColorPaletteEntry"/>.
            </summary>
            <param name="colorEntry"><see cref="T:C1.Silverlight.Extended.ColorPaletteEntry"/> that should be represented.</param>
            <returns>A <see cref="T:C1.Silverlight.Extended.C1ColorButton"/> for a specific <see cref="T:C1.Silverlight.Extended.ColorPaletteEntry"/>.</returns>
        </member>
        <member name="M:C1.Silverlight.Extended.C1ColorPicker.ChangeVisualStateCommon(System.Boolean)">
            <summary>
            Updates the current visual state of the Common visual state group to match the object's properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1ColorPicker.ChangeVisualStateFocus(System.Boolean)">
            <summary>
            Updates the current visual state of the Focus visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPicker.SelectedColorProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.SelectedColor"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPicker.PaletteProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.Palette"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPicker.IsDropDownOpenProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.IsDropDownOpen"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPicker.DropDownDirectionProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.DropDownDirection"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPicker.DropDownHeaderProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.DropDownHeader"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPicker.ShowRecentColorsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.ShowRecentColors"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPicker.ModeProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.Mode"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPicker.ColorContainerStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.ColorContainerStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPicker.SelectedBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.SelectedBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPicker.ShowAlphaChannelProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.ShowAlphaChannel"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPicker.ShowTransparentColorProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.ShowTransparentColor"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPicker.FocusCuesVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.FocusCuesVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPicker.DisabledCuesVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.DisabledCuesVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPicker.IsMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.IsMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPicker.ForceMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.ForceMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPicker.IsFocusedProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.IsFocused"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPicker.ValidationDecoratorStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.ValidationDecoratorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1ColorPicker.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.C1ColorPicker"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1ColorPicker.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.C1ColorPicker"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorPicker.SelectedColor">
            <summary>
            Gets/sets the currently selected color.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1ColorPicker.SelectedColorChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.SelectedColor"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorPicker.Palette">
            <summary>
            Gets/sets the palette to be used.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorPicker.IsDropDownOpen">
            <summary>
            Open or close the control dropdown.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1ColorPicker.IsDropDownOpenChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.IsDropDownOpen"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorPicker.DropDownDirection">
            <summary>
            Specifies the expand direction of the control drop down.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorPicker.DropDownHeader">
            <summary>
            <see cref="T:System.Windows.UIElement"/> used as header of the <see cref="T:C1.Silverlight.C1DropDown"/>,
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorPicker.ShowRecentColors">
            <summary>
            Indicates if the recent colors should be shown.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorPicker.Mode">
            <summary>
            Indicates the mode of the color picker.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorPicker.ColorContainerStyle">
            <summary>
            Sets/gets the style of the ItemsControl used to show a section of colors (that is recent colors).
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorPicker.SelectedBrush">
            <summary>
            Gets the currently selected color as a <see cref="T:System.Windows.Media.Brush"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorPicker.ShowAlphaChannel">
            <summary>
            Gets or sets whether the alpha channel must be shown.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorPicker.ShowTransparentColor">
            <summary>
            Gets or sets a value indicating whether the transparent color is shown.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorPicker.FocusCuesVisibility">
            <summary>
            Gets or sets a value indicating whether the focus visuals of the control are visible.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorPicker.DisabledCuesVisibility">
            <summary>
            Gets or sets a value indicating whether the disabled visuals of the control are visible.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorPicker.IsMouseOver">
            <summary>
            Returns true if the mouse is over the control.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1ColorPicker.IsMouseOverChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1ColorPicker.IsMouseOver"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorPicker.ForceMouseOver">
            <summary>
            Set to true to force the mouse over visual state.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorPicker.IsFocused">
            <summary>
            Returns true if the control has the focus.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ColorPicker.ValidationDecoratorStyle">
            <summary>
            Gets or sets the style that is applied to the inner <see cref="T:C1.Silverlight.C1ValidationDecorator"/>.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.C1ColorPickerMode">
            <summary>
            Pick the mode for the <see cref="T:C1.Silverlight.Extended.C1ColorPicker"/>.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPickerMode.Basic">
            <summary>
            Shows only the basic tab.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPickerMode.Advanced">
            <summary>
            Shows only the advanced tab.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ColorPickerMode.Both">
            <summary>
            Shows both the basic and the advanced tabs.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1HexColorBox.ColorProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1HexColorBox.Color"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1HexColorBox.ShowAlphaChannelProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1HexColorBox.ShowAlphaChannel"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1HexColorBox.ShowSharpPrefixProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1HexColorBox.ShowSharpPrefix"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1HexColorBox.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.C1HexColorBox"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1HexColorBox.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.C1HexColorBox"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1HexColorBox.Color">
            <summary>
            Gets or sets the current color.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1HexColorBox.ColorChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1HexColorBox.Color"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1HexColorBox.ShowAlphaChannel">
            <summary>
            Gets or sets whether the alpha channel must be shown.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1HexColorBox.ShowSharpPrefix">
            <summary>
            Gets or sets whether the sharp prefix must be shown.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1SpectrumColorPicker.ColorProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1SpectrumColorPicker.Color"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1SpectrumColorPicker.ShowAlphaChannelProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1SpectrumColorPicker.ShowAlphaChannel"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1SpectrumColorPicker.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.C1SpectrumColorPicker"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1SpectrumColorPicker.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.C1SpectrumColorPicker"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1SpectrumColorPicker.Color">
            <summary>
            Gets or sets the current color.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1SpectrumColorPicker.ColorChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1SpectrumColorPicker.Color"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1SpectrumColorPicker.ShowAlphaChannel">
            <summary>
            Gets or sets whether the alpha channel slider must be shown.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.WebColor">
            <summary>
            Utility methods for web colors.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.WebColor.ToColor(System.String)">
            <summary>
            Convert a hex string to a .NET Color object.
            </summary>
            <param name="hexColor">A hex string: "FFFFFF", "#000000"</param>
        </member>
        <member name="T:C1.Silverlight.Extended.ReflectionEffect">
            <summary>
            Base class for effects applied to reflections in <see cref="T:C1.Silverlight.Extended.C1Reflector"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.ReflectionEffect.#ctor">
            <summary>
            Initializes a new <see cref="T:C1.Silverlight.Extended.ReflectionEffect"/>.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.ReflectionOpacityEffect">
            <summary>
            Effect that makes a reflection opaque based on the distance from the reflection plane.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.ReflectionOpacityEffect.CoefficientProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.ReflectionOpacityEffect.Coefficient"/> dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.ReflectionOpacityEffect.OffsetProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.ReflectionOpacityEffect.Offset"/> dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.ReflectionOpacityEffect.#ctor">
            <summary>
            Initializes a new <see cref="T:C1.Silverlight.Extended.ReflectionOpacityEffect"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.ReflectionOpacityEffect.Coefficient">
            <summary>
            Gets or sets the coefficient applied to the exponential function that computes the opacity. 
            Larger values means that the opacity increases faster with distance.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.ReflectionOpacityEffect.Offset">
            <summary>
            Gets or sets the offset applied to the exponential function that computes the opacity.
            Larger values means that the opacity starts at a lower value.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.C1Accordion">
            <remarks>
            C1Accordion is an <see cref="T:System.Windows.Controls.ItemsControl"/> so items are added to the <see cref="P:System.Windows.Controls.ItemsControl.Items"/> collection or a collection is set to <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"/>.
            Either way, if a UIElement is added that is not a <see cref="T:C1.Silverlight.Extended.C1AccordionItem"/> it is shown inside a C1AccordionItem as its Content.
            When using <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate"/> the behavior is similar. If the template doesn't generate a C1AccordionItem, the generated element from the template is shown inside a C1AccordionItem.
            C1Accordion uses a Grid as its ItemsPanel. If <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel"/> is set to a different Panel the layout won't work correctly.
            </remarks>
            <summary>
            <see cref="T:System.Windows.Controls.ItemsControl"/> that contains <see cref="T:C1.Silverlight.Extended.C1AccordionItem"/>. It allows only one item to be expanded at a time (similar to the NavigationBar in Outlook).
            </summary>	
        </member>
        <member name="M:C1.Silverlight.Extended.C1Accordion.ChangeVisualStateCommon(System.Boolean)">
            <summary>
            Updates the current visual state of the Common visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Accordion.FillProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Accordion.Fill"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Accordion.AllowCollapseAllProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Accordion.AllowCollapseAll"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Accordion.ExpandDirectionProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Accordion.ExpandDirection"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Accordion.ItemStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Accordion.ItemStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Accordion.FocusCuesVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Accordion.FocusCuesVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Accordion.DisabledCuesVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Accordion.DisabledCuesVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Accordion.IsMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Accordion.IsMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Accordion.ForceMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Accordion.ForceMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Accordion.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.C1Accordion"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Accordion.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.C1Accordion"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Accordion.ExpandedItem">
            <summary>
            Gets the currently expanded item or null if no item is expanded.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Accordion.Fill">
            <summary>
            Gets or sets whether the expanded item should fill the remaining space in the control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Accordion.AllowCollapseAll">
            <summary>
            Gets or sets whether the accordion allows the user to collapse all items.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Accordion.ExpandDirection">
            <summary>
            Gets or sets the direction the contained <see cref="T:C1.Silverlight.Extended.C1AccordionItem" />s expands.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Accordion.ItemStyle">
            <summary>
            Gets or sets the Style that is applied to each <see cref="T:C1.Silverlight.Extended.C1AccordionItem"/>.
            </summary>
            <remarks>
            If the Item added is a <see cref="T:C1.Silverlight.Extended.C1AccordionItem"/> then the Style is applied only if the Item doesn't have a Style already applied.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Accordion.FocusCuesVisibility">
            <summary>
            Gets or sets a value indicating whether the focus visuals of the control are visible.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Accordion.DisabledCuesVisibility">
            <summary>
            Gets or sets a value indicating whether the disabled visuals of the control are visible.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Accordion.IsMouseOver">
            <summary>
            Returns true if the mouse is over the control.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1Accordion.IsMouseOverChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1Accordion.IsMouseOver"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Accordion.ForceMouseOver">
            <summary>
            Set to true to force the mouse over visual state.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.C1AccordionItem">
            <summary>
            Represents the items that can be hosted in a <see cref="T:C1.Silverlight.Extended.C1Accordion"/>.
            </summary>	
        </member>
        <member name="T:C1.Silverlight.Extended.C1Expander">
            <summary>
            C1Expander is a <see cref="T:C1.Silverlight.C1HeaderedContentControl"/> with a collapsible/expandable panel. The content is visible by clicking on the header.
            </summary>	
        </member>
        <member name="M:C1.Silverlight.Extended.C1Expander.ChangeVisualStateExpansion(System.Boolean)">
            <summary>
            Updates the current visual state of the Expansion visual state group to match the object's properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Expander.ChangeVisualStateDirection(System.Boolean)">
            <summary>
            Updates the current visual state of the Direction visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Expander.IsExpandedProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Expander.IsExpanded"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Expander.IsExpandableProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Expander.IsExpandable"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Expander.ExpandDirectionProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Expander.ExpandDirection"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Expander.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.C1Expander"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Expander.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.C1Expander"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Expander.IsExpanded">
            <summary>
            Gets or sets whether the expander content is visible.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1Expander.IsExpandedChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1Expander.IsExpanded"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Expander.IsExpandable">
            <summary>
            Gets or sets whether the expander can be expanded and collapsed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Expander.ExpandDirection">
            <summary>
            Gets or sets the direction the expander expands.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1AccordionItem.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.C1AccordionItem"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1AccordionItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.C1AccordionItem"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="T:C1.Silverlight.Extended.C1CoverFlow">
            <summary>
            C1CoverFlow presents an animated, three dimensional display of selectable items.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1CoverFlow.ChangeVisualStateCommon(System.Boolean)">
            <summary>
            Updates the current visual state of the Common visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CoverFlow.SelectedIndexProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CoverFlow.SelectedIndex"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CoverFlow.EyeDistanceProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CoverFlow.EyeDistance"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CoverFlow.ItemsVisibleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CoverFlow.ItemsVisible"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CoverFlow.ItemDistanceProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CoverFlow.ItemDistance"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CoverFlow.SelectedItemDistanceProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CoverFlow.SelectedItemDistance"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CoverFlow.ItemAngleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CoverFlow.ItemAngle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CoverFlow.SelectedItemOffsetProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CoverFlow.SelectedItemOffset"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CoverFlow.ItemAngleSpeedProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CoverFlow.ItemAngleSpeed"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CoverFlow.ItemSpeedProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CoverFlow.ItemSpeed"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CoverFlow.EyeSpeedProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CoverFlow.EyeSpeed"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CoverFlow.ItemContainerStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CoverFlow.ItemContainerStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CoverFlow.EyeHeightProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CoverFlow.EyeHeight"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CoverFlow.IsMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CoverFlow.IsMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CoverFlow.ForceMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CoverFlow.ForceMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1CoverFlow.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.C1CoverFlow"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1CoverFlow.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.C1CoverFlow"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CoverFlow.SelectedIndex">
            <summary>
            Gets or sets the index of the selected item.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1CoverFlow.SelectedIndexChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1CoverFlow.SelectedIndex"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CoverFlow.EyeDistance">
            <summary>
            Gets or sets the distance of the eye to the items.
            </summary>
            <remarks>
            The value for this property is relative to the current cover size. For example, a value of 0.5 means that the distance will be half the item size. Changing this value controls how much perspective the items have.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CoverFlow.ItemsVisible">
            <summary>
            Gets or sets the number of items visible at a time.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CoverFlow.ItemDistance">
            <summary>
            Gets or sets the distance between side items. 
            </summary>
            <remarks>
            The value for this property is relative to the current item size. For example, a value of 0.5 means that the distance will be half the item size.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CoverFlow.SelectedItemDistance">
            <summary>
            Gets or sets the distance between the selected item and the items next to it. 
            </summary>
            <remarks>
            The value for this property is relative to the current item size. For example, a value of 0.5 means that the distance will be half the item size.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CoverFlow.ItemAngle">
            <summary>
            Gets or sets the angle of the side items.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CoverFlow.SelectedItemOffset">
            <summary>
            Gets or sets how much closer than the rest of the items the selected item is to the viewer.
            </summary>
            <remarks>
            The value for this property is relative to the current item size. For example, a value of 0.5 means that the offset will be half the item size.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CoverFlow.ItemAngleSpeed">
            <summary>
            Gets or sets the speed at which the items' angle changes.
            </summary>
            <remarks>
            This value should be greater than 0 and less that or equal than 1. with 1 meaning instantaneous changes.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CoverFlow.ItemSpeed">
            <summary>
            Gets or sets the speed at which the items' position changes.
            </summary>
            <remarks>
            This value should be greater than 0 and less that or equal than 1. with 1 meaning instantaneous changes.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CoverFlow.EyeSpeed">
            <summary>
            Gets or sets the speed at which the eye position changes.
            </summary>
            <remarks>
            This value should be greater than 0 and less that or equal than 1. with 1 meaning instantaneous changes.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CoverFlow.ItemContainerStyle">
            <summary>
            Gets or sets the style applied to all item containers.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CoverFlow.EyeHeight">
            <summary>
            Gets or sets the height of the eye.
            </summary>
            <remarks>
            The value for this property is relative to the element size. For example, a value of 0.5 means that the eye will be vertically centered.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CoverFlow.IsMouseOver">
            <summary>
            Returns true if the mouse is over the control.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1CoverFlow.IsMouseOverChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1CoverFlow.IsMouseOver"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CoverFlow.ForceMouseOver">
            <summary>
            Set to true to force the mouse over visual state.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.C1CoverFlowItem">
            <summary>
            Represents the items that can be hosted in a <see cref="T:C1.Silverlight.Extended.C1CoverFlow"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1CoverFlowItem.UpdateReflection">
            <summary>
            Forces the reflection of the item to be updated.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CoverFlowItem.ContentProjectionProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CoverFlowItem.ContentProjection"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CoverFlowItem.ReflectionBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CoverFlowItem.ReflectionBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1CoverFlowItem.AutoUpdateReflectionProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1CoverFlowItem.AutoUpdateReflection"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1CoverFlowItem.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.C1CoverFlowItem"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1CoverFlowItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.C1CoverFlowItem"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CoverFlowItem.ContentProjection">
            <summary>
            Gets or sets the projection of the content.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CoverFlowItem.ReflectionBackground">
            <summary>
            Gets or sets the background of the reflection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1CoverFlowItem.AutoUpdateReflection">
            <summary>
            Gets or sets whether the reflection is automatically updated.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.CubeFace">
            <summary>
            Specifies a face in a cube.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.CubeFace.Front">
            <summary>
            The cube's front face.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.CubeFace.Back">
            <summary>
            The cube's back face.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.CubeFace.Left">
            <summary>
            The cube's left face.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.CubeFace.Right">
            <summary>
            The cube's right face.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.CubeFace.Top">
            <summary>
            The cube's top face.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.CubeFace.Bottom">
            <summary>
            The cube's bottom face.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.C1Cube">
            <summary>
            ItemsControl that provides a 3D rotating cube with different content on each face.
            </summary>	
        </member>
        <member name="M:C1.Silverlight.Extended.C1Cube.Rotate(System.Double,System.Double,System.Double)">
            <summary>
            Rotates the cube.
            </summary>
            <remarks>
            The rotation is done around the X axis, then around the Y axis and finally around the Z axis.
            </remarks>
            <param name="rotationX">Rotation around the X axis.</param>
            <param name="rotationY">Rotation around the Y axis.</param>
            <param name="rotationZ">Rotation around the Z axis.</param>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Cube.ShowFace(C1.Silverlight.Extended.CubeFace)">
            <summary>
            Smoothly rotates the cube so that a face faces forward.
            </summary>
            <param name="face">The face that will be facing forward.</param>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Cube.RotateTo(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Smoothly rotates the cube to a specified position.
            </summary>
            <param name="rotationX">The target rotation around the X axis.</param>
            <param name="rotationY">The target rotation around the Y axis.</param>
            <param name="rotationZ">The target rotation around the Z axis.</param>
            <param name="delay">The time in seconds that the animation will last.</param>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Cube.ShowItem(System.Object)">
            <summary>
            Smoothly rotates the cube so that the face an item is in faces forward.
            </summary>
            <param name="item">The item whose face will be facing forward.</param>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Cube.ChangeVisualStateCommon(System.Boolean)">
            <summary>
            Updates the current visual state of the Common visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Cube.RotationXProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Cube.RotationX"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Cube.RotationYProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Cube.RotationY"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Cube.RotationZProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Cube.RotationZ"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Cube.ShowFaceDelayProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Cube.ShowFaceDelay"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Cube.IsDraggableProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Cube.IsDraggable"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Cube.IsMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Cube.IsMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Cube.ForceMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Cube.ForceMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Cube.GetFace(System.Windows.DependencyObject)">
            <summary> 
            Gets the value of the Face attached property for the 
            specified element.
            </summary> 
            <param name="element">
            The element from which to read the attached property.
            </param> 
            <returns>The value of the Face property.</returns>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Cube.SetFace(System.Windows.DependencyObject,C1.Silverlight.Extended.CubeFace)">
            <summary> 
            Sets the value of the Face attached property for the 
            specified element.
            </summary> 
            <param name="element">
            The element to write the attached property to.
            </param> 
            <param name="value">The property value to set.</param>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Cube.FaceProperty">
            <summary> 
            Identifies the Face attached property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Cube.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.C1Cube"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Cube.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.C1Cube"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Cube.RotationX">
            <summary>
            Gets or sets the rotation of the cube in the x axis.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1Cube.RotationXChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1Cube.RotationX"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Cube.RotationY">
            <summary>
            Gets or sets the rotation of the cube in the y axis.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1Cube.RotationYChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1Cube.RotationY"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Cube.RotationZ">
            <summary>
            Gets or sets the rotation of the cube in the z axis.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1Cube.RotationZChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1Cube.RotationZ"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Cube.ShowFaceDelay">
            <summary>
            Gets or sets the time in seconds that it takes to go to a new face when CurrentFace is set.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Cube.IsDraggable">
            <summary>
            Gets or sets a value indicating whether the cube can be rotated by dragging with the mouse.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Cube.IsMouseOver">
            <summary>
            Returns true if the mouse is over the control.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1Cube.IsMouseOverChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1Cube.IsMouseOver"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Cube.ForceMouseOver">
            <summary>
            Set to true to force the mouse over visual state.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.Primitives.C1CubePanel">
            <summary>
            Panel that provides a 3D rotating cube with different content on each face.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.Primitives.C1CubePanel.GetBounds">
            <summary>
            Returns a rectangles that bounds the rotated cube.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.Primitives.C1CubePanel.Rotate(System.Double,System.Double,System.Double)">
            <summary>
            Rotates the cube.
            </summary>
            <remarks>
            The rotation is done around the X axis, then around the Y axis and finally around the Z axis.
            </remarks>
            <param name="rotationX">Rotation around the X axis.</param>
            <param name="rotationY">Rotation around the Y axis.</param>
            <param name="rotationZ">Rotation around the Z axis.</param>
        </member>
        <member name="F:C1.Silverlight.Extended.Primitives.C1CubePanel.RotationXProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.Primitives.C1CubePanel.RotationX"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Primitives.C1CubePanel.RotationYProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.Primitives.C1CubePanel.RotationY"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Primitives.C1CubePanel.RotationZProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.Primitives.C1CubePanel.RotationZ"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.Primitives.C1CubePanel.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.Primitives.C1CubePanel"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.Primitives.C1CubePanel.RotationX">
            <summary>
            Gets or sets the rotation of the cube in the x axis.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.Primitives.C1CubePanel.RotationY">
            <summary>
            Gets or sets the rotation of the cube in the y axis.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.Primitives.C1CubePanel.RotationZ">
            <summary>
            Gets or sets the rotation of the cube in the z axis.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.C1ExpanderButton">
            <summary>
            Toggle Button whose ExpandDirection property and states are used to change 
            the appearance of the expand button of the <see cref="T:C1.Silverlight.Extended.C1Expander"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1ExpanderButton.ChangeVisualStateDirection(System.Boolean)">
            <summary>
            Updates the current visual state of the Direction visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1ExpanderButton.ExpandDirectionProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1ExpanderButton.ExpandDirection"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1ExpanderButton.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.C1ExpanderButton"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1ExpanderButton.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.C1ExpanderButton"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1ExpanderButton.ExpandDirection">
            <summary>
            Gets or sets the direction the expander expands.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.ExpandDirection">
            <summary>
            Specifies the direction in which a <see cref="T:C1.Silverlight.Extended.C1Expander" /> control opens.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.ExpandDirection.Down">
            <summary>
            The <see cref="T:C1.Silverlight.Extended.C1Expander" /> control opens down. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.ExpandDirection.Up">
            <summary>
            The <see cref="T:C1.Silverlight.Extended.C1Expander" /> control opens up. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.ExpandDirection.Left">
            <summary>
            The <see cref="T:C1.Silverlight.Extended.C1Expander" /> control opens left. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.ExpandDirection.Right">
            <summary>
            The <see cref="T:C1.Silverlight.Extended.C1Expander"/> control opens right.  
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.C1HtmlHost">
            <remarks>
            <para>To use this control the Silverlight plugin should have its 'windowless' parameter set to true.</para>
            <para>For example, if the Silverlight plugin is declared in an aspx page, it should be edited as follows:</para>
            <code language="HTML">
            &lt;form id="form1" runat="server" style="height:100%;"&gt;
              &lt;asp:ScriptManager ID="ScriptManager1" runat="server"&gt;&lt;/asp:ScriptManager&gt;
              &lt;div  style="height:100%;"&gt;
                &lt;asp:Silverlight 
                  ID="Xaml1" runat="server" 
                  Source="~/ClientBin/TestM1.xap" 
                  Version="2.0" Width="100%" Height="100%" 
                  <b>Windowless="true" /&gt;</b>
              &lt;/div&gt;
            &lt;/form&gt;
            </code>
            If the plugin is declared in a html page, it should be edited as follows:
            <code language="HTML">
            &lt;div id="silverlightControlHost"&gt;
            &lt;object data="data:application/x-silverlight," type="application/x-silverlight-2-b1" width="100%" height="100%" &gt;
            	&lt;param name="source" value="ClientBin/TestM1.xap"/&gt;
            	&lt;param name="onerror" value="onSilverlightError" /&gt;
            	&lt;param name="background" value="white" /&gt;
            	<b>&lt;param name="windowless" value="true" /&gt;</b>
            	&lt;a href="http://go.microsoft.com/fwlink/?LinkID=108182" style="text-decoration: none;"&gt;
            		&lt;img src="http://go.microsoft.com/fwlink/?LinkId=108181" alt="Get Microsoft Silverlight" style="border-style: none"/&gt;
            	&lt;/a&gt;
            &lt;/object&gt;
            &lt;iframe style='visibility:hidden;height:0;width:0;border:0px'&gt;&lt;/iframe&gt;
            &lt;/div&gt;
            </code>
            </remarks>
            <summary>
            Control that shows HTML content within a Silverlight page.
            </summary>	
        </member>
        <member name="M:C1.Silverlight.Extended.C1HtmlHost.Finalize">
            <summary>
            <see cref="T:C1.Silverlight.Extended.C1HtmlHost"/> destructor.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1HtmlHost.SourceHtmlProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1HtmlHost.SourceHtml"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1HtmlHost.SourceUriProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1HtmlHost.SourceUri"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1HtmlHost.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.C1HtmlHost"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1HtmlHost.HtmlElement">
            <summary>
            Gets the <see cref="P:C1.Silverlight.Extended.C1HtmlHost.HtmlElement"/> hosted by this <see cref="T:C1.Silverlight.Extended.C1HtmlHost"/> control.
            </summary>
            <remarks>
            If the <see cref="P:C1.Silverlight.Extended.C1HtmlHost.SourceHtml"/> property was set, <see cref="P:C1.Silverlight.Extended.C1HtmlHost.HtmlElement"/> returned is a div element whose content
            is the value of the SourceHtml property. Otherwise, if the <ses cref="P:C1.Silverlight.Extended.C1HtmlHost.SourceUri"/> property was set, the content is an iframe element whose
            src is the value of the SourceUri property.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.Extended.C1HtmlHost.UriLoaded">
            <summary>
            Fired when the content from a Uri has been loaded.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1HtmlHost.FrameBorder">
            <summary>
            Gets or sets whether the default browser frame border is displayed when using <see cref="P:C1.Silverlight.Extended.C1HtmlHost.SourceUri"/>.
            </summary>
            <remarks>
            This property must be set before <see cref="P:C1.Silverlight.Extended.C1HtmlHost.SourceUri"/> is set.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1HtmlHost.AllowTransparency">
            <summary>
            Gets or sets a value indicating whether transparency is allowed (only required for IE).
            </summary>
            <value><c>true</c> if transparency is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:C1.Silverlight.Extended.C1HtmlHost.SourceHtml">
            <summary>
            Gets or set the HTML content as a string.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1HtmlHost.SourceUri">
            <summary>
            Gets or set a <see cref="T:System.Uri"/> that will provide the content for the control.
            </summary>
            <remarks>
            When hosting content from a <see cref="T:System.Uri"/> you should set the Width and Height of the control, or it may not be sized properly.
            </remarks>
        </member>
        <member name="T:C1.Silverlight.Extended.C1Book">
            <summary>
            C1Book is an ItemsControl that contains elements which are shown as pages of a book. End-users can turn the pages as they would in a real book by using the mouse to drag the pages or double-clicking the corner page.
            </summary>	
        </member>
        <member name="M:C1.Silverlight.Extended.C1Book.TurnPage(System.Boolean)">
            <summary>
            Turns to the next or previous page with a page folding animation.
            </summary>
            <param name="forward">True to turn to the next page, false to turn to the previous page.</param>
            <returns>True if the page started to turn.</returns>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Book.ChangeVisualStateCommon(System.Boolean)">
            <summary>
            Updates the current visual state of the Common visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Book.CurrentPageProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Book.CurrentPage"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Book.ShowInnerShadowsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Book.ShowInnerShadows"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Book.ShowOuterShadowsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Book.ShowOuterShadows"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Book.LeftPageTemplateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Book.LeftPageTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Book.RightPageTemplateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Book.RightPageTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Book.IsFirstPageOnTheRightProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Book.IsFirstPageOnTheRight"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Book.ShowPageFoldProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Book.ShowPageFold"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Book.FoldSizeProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Book.FoldSize"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Book.TurnIntervalProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Book.TurnInterval"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Book.PageFoldActionProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Book.PageFoldAction"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Book.OrientationProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Book.Orientation"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Book.TransitionProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Book.Transition"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Book.CurrentZoneProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Book.CurrentZone"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Book.ItemContainerStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Book.ItemContainerStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Book.IsMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Book.IsMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Book.ForceMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Book.ForceMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Book.GetApplyPageTemplate(System.Windows.DependencyObject)">
            <summary> 
            Gets the value of the ApplyPageTemplate attached property for the 
            specified element.
            </summary> 
            <param name="element">
            The element from which to read the attached property.
            </param> 
            <returns>The value of the ApplyPageTemplate property.</returns>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Book.SetApplyPageTemplate(System.Windows.DependencyObject,C1.Silverlight.Extended.ApplyPageTemplate)">
            <summary> 
            Sets the value of the ApplyPageTemplate attached property for the 
            specified element.
            </summary> 
            <param name="element">
            The element to write the attached property to.
            </param> 
            <param name="value">The property value to set.</param>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Book.ApplyPageTemplateProperty">
            <summary> 
            Identifies the ApplyPageTemplate attached property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Book.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.C1Book"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Book.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.C1Book"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.Extended.C1Book.DragPageStarted">
            <summary>
            Occurs when the page starts to be dragged.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1Book.DragPageFinished">
            <summary>
            Occurs when the page stops being dragged.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Book.CurrentPage">
            <summary>
            Gets or sets the current page that is displayed
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1Book.CurrentPageChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1Book.CurrentPage"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Book.ShowInnerShadows">
            <summary>
            Gets or sets whether the inner shadows are shown.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Book.ShowOuterShadows">
            <summary>
            Gets or sets whether the outer shadows are shown.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Book.LeftPageTemplate">
            <summary>
            Gets or sets the template of the page shown in the left side of the book.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Book.RightPageTemplate">
            <summary>
            Gets or sets the template of the page shown in the right side of the book.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Book.IsFirstPageOnTheRight">
            <summary>
            Gets or sets whether the first page of the book is displayed in the right side of the book.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Book.ShowPageFold">
            <summary>
            Gets or sets whether the fold is displayed
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Book.FoldSize">
            <summary>
            Gets or sets the size of the fold (in pixels)
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Book.TurnInterval">
            <summary>
            Gets or sets the amount (in milliseconds) of time of the turn animation.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Book.PageFoldAction">
            <summary>
            Gets or sets the action that will raise the turn animation.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Book.CurrentZone">
            <summary>
            Gets the zone of the book under the mouse.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1Book.CurrentZoneChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1Book.CurrentZone"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Book.ItemContainerStyle">
            <summary>
            Gets or sets the style applied to all item containers.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Book.IsMouseOver">
            <summary>
            Returns true if the mouse is over the control.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1Book.IsMouseOverChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1Book.IsMouseOver"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Book.ForceMouseOver">
            <summary>
            Set to true to force the mouse over visual state.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.ApplyPageTemplate">
            <summary>
            Specifies whether page templates should be used.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.ApplyPageTemplate.True">
            <summary>
            The page template will be applied to the page.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.ApplyPageTemplate.False">
            <summary>
            The page template won't be applied to the page
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.PageFoldVisibility">
            <summary>
            Specifies page fold visibility.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PageFoldVisibility.OnMouseOver">
            <summary>
            The fold will be visible when user drag the mouse over the edge of the page.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PageFoldVisibility.Never">
            <summary>
            The fold wont be visible.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PageFoldVisibility.Always">
            <summary>
            The fold will be always visible.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.PageFoldAction">
            <summary>
            Specifies how the page folds interact with the mouse.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PageFoldAction.TurnPageOnClick">
            <summary>
            Turn the page when the user clicks the page fold.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PageFoldAction.TurnPageOnDoubleClick">
            <summary>
            Turn the page when the user double clicks the page fold.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PageFoldAction.None">
            <summary>
            Turn page when user drags the page fold across the book.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.ColorPalette">
            <summary>
            Class that defines named groups of colors.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.ColorPalette.#ctor(System.String)">
            <summary>
            Creates an instance of the color palette with the specified theme name.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.ColorPalette.Contains(System.Windows.Media.Color)">
            <summary>
            Determines whether a color is in the palette.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.ColorPalette.IndexOf(System.Windows.Media.Color)">
            <summary>
            Searches for the specified color in the palette and returns a zero-based index of the found entry.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.ColorPalette.Add(System.Windows.Media.Color)">
            <summary>
            Adds the specified color to the palette.
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:C1.Silverlight.Extended.ColorPalette.Add(System.Windows.Media.Color,System.String)">
            <summary>
            Adds the color with the specified name.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.ColorPalette.Add(System.Windows.Media.Color,System.String,System.String)">
            <summary>
            Adds the color with the specified name and description.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.ColorPalette.Set(System.Int32,System.Windows.Media.Color)">
            <summary>
            Assigns the color to the palette entry with the specified index.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.ColorPalette.Set(System.Int32,System.Windows.Media.Color,System.String)">
            <summary>
            Assigns the color and color name to the palette entry with the specified index.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.ColorPalette.Clear">
            <summary>
            Deletes all entries from the palette.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.ColorPalette.Clone(System.String)">
            <summary>
            Returns a clone of this palette with the specified theme name.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.ColorPalette.GetColorPalette(C1.Silverlight.Extended.Office2007ColorTheme)">
            <summary>
            Returns one of the predefined color palettes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.ColorPalette.ThemeName">
            <summary>
            Gets or sets the name of the color theme.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.ColorPalette.Item(System.Int32)">
            <summary>
            Gets the palette entry with the specified index.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.ColorPalette.Count">
            <summary>
            Gets the number of palette entries.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.ColorPaletteEntry">
            <summary>
            Class that contains information about the color,
            its name and description.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.ColorPaletteEntry.SetColor(System.Windows.Media.Color)">
            <summary>
            Assign the color to this entry.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.ColorPaletteEntry.SetColor(System.Windows.Media.Color,System.String)">
            <summary>
            Assign the color with the specified name to this entry.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.ColorPaletteEntry.Color">
            <summary>
            Gets the color of this entry.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.ColorPaletteEntry.ColorName">
            <summary>
            Gets the color name.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.ColorPaletteEntry.Description">
            <summary>
            Gets or sets the entry description.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.Office2007ColorTheme">
            <summary>
            Specifies a color theme from the standard Office2007 theme collection.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Standard">
            <summary>
            Standard color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Highlight">
            <summary>
            Highlight color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Office">
            <summary>
            Office color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.GrayScale">
            <summary>
            GrayScale color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Apex">
            <summary>
            Apex color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Aspect">
            <summary>
            Aspect color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Civic">
            <summary>
            Civic color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Concourse">
            <summary>
            Concourse color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Equity">
            <summary>
            Equity color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Flow">
            <summary>
            Flow color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Foundry">
            <summary>
            Foundry color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Median">
            <summary>
            Median color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Metro">
            <summary>
            Metro color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Module">
            <summary>
            Module color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Opulent">
            <summary>
            Opulent color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Oriel">
            <summary>
            Oriel color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Origin">
            <summary>
            Origin color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Paper">
            <summary>
            Paper color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Solstice">
            <summary>
            Solstice color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Technic">
            <summary>
            Technic color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Trek">
            <summary>
            Trek color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Urban">
            <summary>
            Urban color theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.Office2007ColorTheme.Verve">
            <summary>
            Verve color theme.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.C1PropertyGrid">
            <summary>
            The C1PropertyGrid Provides a user interface for browsing the properties of an object. 
            </summary>	
        </member>
        <member name="M:C1.Silverlight.Extended.C1PropertyGrid.GetEditorControl(System.String)">
            <summary>
            Gets the editor control associated to the specified property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>The associated editor.</returns>
        </member>
        <member name="M:C1.Silverlight.Extended.C1PropertyGrid.GetLabel(System.String)">
            <summary>
            Gets the label associated to the specified property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>The associated label.</returns>
        </member>
        <member name="M:C1.Silverlight.Extended.C1PropertyGrid.GetPropertyPresenter(System.String)">
            <summary>
            Returns the PropertyBox created for a given property of the SelectedObject.
            </summary>
            <param name="propertyName">The property of the SelectedObject</param>
            <returns>The current PropertyBox</returns>
        </member>
        <member name="M:C1.Silverlight.Extended.C1PropertyGrid.GetMethodPresenter(System.String)">
            <summary>
            Returns the MethodBox created for a given method of the SelectedObject.
            </summary>
            <param name="methodName">The method of the SelectedObject</param>
            <returns>The current MethodBox</returns>
        </member>
        <member name="M:C1.Silverlight.Extended.C1PropertyGrid.ChangeVisualStateCommon(System.Boolean)">
            <summary>
            Updates the current visual state of the Common visual state group to match the object's properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1PropertyGrid.ChangeVisualStateFocus(System.Boolean)">
            <summary>
            Updates the current visual state of the Focus visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.SelectedObjectProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.SelectedObject"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.PropertyAttributesProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.PropertyAttributes"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.MethodAttributesProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.MethodAttributes"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.AutoGeneratePropertiesProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.AutoGenerateProperties"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.AutoGenerateMethodsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.AutoGenerateMethods"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.MethodsPanelProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.MethodsPanel"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.PropertiesPanelProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.PropertiesPanel"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.PropertyBoxesProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.PropertyBoxes"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.MethodBoxesProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.MethodBoxes"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.LabelWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.LabelWidth"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.EditorWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.EditorWidth"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.LabelStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.LabelStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.CategoryContainerStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.CategoryContainerStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.PropertySortProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.PropertySort"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.DefaultCategoryNameProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.DefaultCategoryName"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.ShowDescriptionProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.ShowDescription"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.ShowResetButtonProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.ShowResetButton"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.CurrentLabelWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.CurrentLabelWidth"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.FocusCuesVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.FocusCuesVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.DisabledCuesVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.DisabledCuesVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.IsMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.IsMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.ForceMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.ForceMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1PropertyGrid.IsFocusedProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.IsFocused"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1PropertyGrid.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.C1PropertyGrid"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1PropertyGrid.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.C1PropertyGrid"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.AvailableEditors">
            <summary>
            The list of currently available editors to use in the C1PropertyGrid.
            The default list includes editors for: bool, Color, Brush, ColorPalette,
            Enum, Numeric, String, Image and Uri values.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1PropertyGrid.ValueChanged">
            <summary>
            Fired when the value of a property in the current SelectedObject changes.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1PropertyGrid.CategoryContainerAdded">
            <summary>
            Fired when a category container is added to the C1PropertyGrid.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1PropertyGrid.CategoryContainerRemoved">
            <summary>
            Fired when a category container is removed from the C1PropertyGrid.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1PropertyGrid.PropertyBoxAdded">
            <summary>
            Fired when a property box is added to the C1PropertyGrid.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1PropertyGrid.PropertyBoxRemoved">
            <summary>
            Fired when a property box is removed from the C1PropertyGrid.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1PropertyGrid.PropertyBoxesLoaded">
            <summary>
            Fired when the all the property boxes in C1PropertyGrid were loaded.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1PropertyGrid.MethodBoxesLoaded">
            <summary>
            Fired when the all the method boxes in C1PropertyGrid were loaded.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1PropertyGrid.PropertyBoxChanged">
            <summary>
            Fired when the generated list of property editors for the SelectedObject changes.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1PropertyGrid.MethodBoxChanged">
            <summary>
            Fired when the generated list of method editors for the SelectedObject changes.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1PropertyGrid.PropertyResetting">
            <summary>
            Fired before a property value gets reset.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1PropertyGrid.PropertyReset">
            <summary>
            Fired when a property value gets reset.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.CategoryContainers">
            <summary>
            The list of category containers (if defined) created to show each category
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.Item(System.String)">
            <summary>
            Gets the <see cref="T:C1.Silverlight.Extended.PropertyBox"/> with the specified property name.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.SelectedObject">
            <summary>
            Gets or sets the object for which the C1PropertyGrid displays properties.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.PropertyAttributes">
            <summary>
            Gets the list of property attributes used to configure the visualization of the SelectedObject's properties.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.MethodAttributes">
            <summary>
            Gets the list of method attributes used to configure the visualization of the SelectedObject's methods.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.AutoGenerateProperties">
            <summary>
            Gets or sets a value indicating whether the C1PropertyGrid should try to get the properties of the SelectedObject using reflection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.AutoGenerateMethods">
            <summary>
            Gets or sets a value indicating whether the C1PropertyGrid should try to get the methods of the SelectedObject using reflection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.MethodsPanel">
            <summary>
            Gets or sets the template that defines the panel that controls the layout of methods.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.PropertiesPanel">
            <summary>
            Gets or sets the template that defines the panel that controls the layout of properties.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.PropertyBoxes">
            <summary>
            Gets the PropertyBoxes generated to show the SelectedObject's properties on the C1PropertyGrid.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.MethodBoxes">
            <summary>
            Gets the MethodBoxes generated to show the SelectedObject's methods on the C1PropertyGrid.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.LabelWidth">
            <summary>
            Gets or sets the width of generated labels for the SelectedObject's properties.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.EditorWidth">
            <summary>
            Gets or sets the width of generated editors for the SelectedObject's properties.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.LabelStyle">
            <summary>
            Gets or sets the Style applied to all the generated labels for the SelectedObject's properties.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.CategoryContainerStyle">
            <summary>
            Gets or sets the Style applied to all the generated category containers.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.PropertySort">
            <summary>
            Gets or sets the type of sorting the PropertyGrid uses to display properties. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.DefaultCategoryName">
            <summary>
            Gets or sets the name used for the default category in which the properties are placed.
            </summary>
            <remarks>
            If DefaultCategoryName is set to a non-empty value. All the properties of the SelectedObject with no category value will be placed in the Default category.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.ShowDescription">
            <summary>
            Gets or sets a value indicating whether the 'Description' of the properties will be shown.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.ShowResetButton">
            <summary>
            Gets or sets a value indicating whether the reset button will be shown in all the property boxes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.CurrentLabelWidth">
            <summary>
            [internal]Gets or sets the current width of the label.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.FocusCuesVisibility">
            <summary>
            Gets or sets a value indicating whether the focus visuals of the control are visible.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.DisabledCuesVisibility">
            <summary>
            Gets or sets a value indicating whether the disabled visuals of the control are visible.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.IsMouseOver">
            <summary>
            Returns true if the mouse is over the control.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.C1PropertyGrid.IsMouseOverChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.C1PropertyGrid.IsMouseOver"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.ForceMouseOver">
            <summary>
            Set to true to force the mouse over visual state.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1PropertyGrid.IsFocused">
            <summary>
            Returns true if the control has the focus.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.PropertySort">
            <summary>
            Specifies how properties are sorted in the C1PropertyGrid. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertySort.NoSort">
            <summary>
            Properties are displayed in the order in which they are retrieved from the TypeDescriptor.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertySort.Alphabetical">
            <summary>
            Properties are sorted in an alphabetical list.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertySort.Categorized">
            <summary>
            Properties are displayed according to their category.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertySort.CategorizedAlphabetical">
            <summary>
            Properties are displayed according to their category. The properties are further sorted alphabetically within the category.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertySort.CategorizedCustom">
            <summary>
            Properties are displayed according to their category. The properties are further sorted according to the order assigned by the user.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertySort.Custom">
            <summary>
            Properties are displayed according to the order assigned by the user.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.CategoryContainerChangedEventArgs">
            <summary>
            Provides data for the CategoryContainerChanged event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.CategoryContainerChangedEventArgs.#ctor(C1.Silverlight.Extended.C1Expander)">
            <summary>
            Initializes a new instance of the CategoryContainerChangedEventArgs class.
            </summary>
            <param name="categoryContainer">The category container that changed.</param>
        </member>
        <member name="P:C1.Silverlight.Extended.CategoryContainerChangedEventArgs.CategoryContainer">
            <summary>
            Gets the category container that changed.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.PropertyBoxChangedEventArgs">
            <summary>
            Provides data for the PropertyBoxChanged event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyBoxChangedEventArgs.#ctor(C1.Silverlight.Extended.PropertyBox)">
            <summary>
            Initializes a new instance of the PropertyBoxChangedEventArgs class.
            </summary>
            <param name="propertyBox">The property box that changed.</param>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyBoxChangedEventArgs.PropertyBox">
            <summary>
            Gets the property box that changed.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.PropertyBoxChangedEventHandler">
            <summary>
            Represents the method that will handle the PropertyBoxChanged event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A PropertyBoxChangedEventArgs that contains the event data.</param>
        </member>
        <member name="T:C1.Silverlight.Extended.CategoryContainerChangedEventHandler">
            <summary>
            Represents the method that will handle the CategoryContainerChanged event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A CategoryContainerChangedEventArgs that contains the event data.</param>
        </member>
        <member name="T:C1.Silverlight.Extended.BrowsableAttribute">
            <summary>
            Specifies whether a property or event should be displayed in a C1PropertyGrid.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.BrowsableAttribute.Browsable">
            <summary>
            Returns the current value of the attribute.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.MinimumValueAttribute">
            <summary>
            Specifies the minimum allowed value for a property displayed in a C1PropertyGrid.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.MinimumValueAttribute.MinimumValue">
            <summary>
            Returns the current value of the attribute.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.MaximumValueAttribute">
            <summary>
            Specifies the maximum allowed value for a property displayed in a C1PropertyGrid.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.MaximumValueAttribute.MaximumValue">
            <summary>
            Returns the current value of the attribute.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.EditorAttribute">
            <summary>
            Specifies the editor to use for a property displayed in a C1PropertyGrid.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.EditorAttribute.Editor">
            <summary>
            Returns the current value of the attribute.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.EditorAttribute.EditorInstance">
            <summary>
            Returns a new instance of the current Editor.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.PropertyBindingAttribute">
            <summary>
            Specifies the binding to use for a property bound to an editor in a C1PropertyGrid.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyBindingAttribute.PropertyBinding">
            <summary>
            Returns the current value of the attribute.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.BindingHelper.BindThemeProperties(System.Object,System.Object,System.Collections.Generic.ICollection{System.String})">
            <summary>
            Binds the theme properties of the parent to the children elements.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.PropertyGrid.BoolEditor">
            <summary>
            Default editor used by C1PropertyGrid to edit bool values.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.ITypeEditorControl">
            <summary>
            The Interface for the all the editors used by the C1PropertyGrid.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.ITypeEditorControl.Supports(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Returns true if the editor supports (is able to show/edit) the property
            values described by the PropertyAttribute.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.ITypeEditorControl.Attach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Attaches (initializes) the editor with the current property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.ITypeEditorControl.Detach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Detaches (releases) the editor that was attached with the property passed as parameter.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.ITypeEditorControl.Create">
            <summary>
            Creates ands initializes a new instance of the editor
            </summary>
            <returns></returns>
        </member>
        <member name="E:C1.Silverlight.Extended.ITypeEditorControl.ValueChanged">
            <summary>
            Fired when the value of the current property has changed.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.BoolEditor.Create">
            <summary>
            Creates ands initializes a new instance of the editor
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.BoolEditor.Supports(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Returns true if the editor supports (is able to show/edit) the property
            values described by the PropertyAttribute.
            </summary>
            <param name="Property"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.BoolEditor.Attach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Attaches (initializes) the editor with the current property.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.BoolEditor.Detach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Detaches (releases) the editor that was attached with the property passed as parameter.
            </summary>
            <param name="property"></param>
        </member>
        <member name="E:C1.Silverlight.Extended.PropertyGrid.BoolEditor.ValueChanged">
            <summary>
            Fired when the value of the current property has changed.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.PropertyGrid.BrushEditor">
            <summary>
            Default editor used by C1PropertyGrid to edit Brush values.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.BrushEditor.Create">
            <summary>
            Creates ands initializes a new instance of the editor
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.BrushEditor.Supports(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Returns true if the editor supports (is able to show/edit) the property
            values described by the PropertyAttribute.
            </summary>
            <param name="Property"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.BrushEditor.Attach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Attaches (initializes) the editor with the current property.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.BrushEditor.Detach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Detaches (releases) the editor that was attached with the property passed as parameter.
            </summary>
            <param name="property"></param>
        </member>
        <member name="E:C1.Silverlight.Extended.PropertyGrid.BrushEditor.ValueChanged">
            <summary>
            Fired when the value of the current property has changed.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyGrid.AdvancedEditor.LabelProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyGrid.AdvancedEditor.Label"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyGrid.AdvancedEditor.EditorProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyGrid.AdvancedEditor.Editor"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyGrid.AdvancedEditor.WindowStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyGrid.AdvancedEditor.WindowStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyGrid.AdvancedEditor.ButtonStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyGrid.AdvancedEditor.ButtonStyle"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.AdvancedEditor.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.PropertyGrid.AdvancedEditor"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.AdvancedEditor.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.PropertyGrid.AdvancedEditor"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyGrid.AdvancedEditor.Label">
            <summary>
            Gets the label of the advanced editor control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyGrid.AdvancedEditor.Editor">
            <summary>
            Gets the editor used within this advanced editor control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyGrid.AdvancedEditor.WindowStyle">
            <summary>
            Gets or sets the style applied to the advanced editor's window.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyGrid.AdvancedEditor.ButtonStyle">
            <summary>
            Gets or sets the style applied to the advanced editor's button.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyGrid.CollectionEditor.EditorStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditor.EditorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyGrid.CollectionEditor.SelectorStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditor.SelectorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyGrid.CollectionEditor.CanUserAddItemsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditor.CanUserAddItems"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyGrid.CollectionEditor.CanUserRemoveItemsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditor.CanUserRemoveItems"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyGrid.CollectionEditor.CanUserSortItemsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditor.CanUserSortItems"/> dependency property. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditor.EditorStyle">
            <summary>
            Gets or sets the style applied to the collection editor's property grid.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditor.SelectorStyle">
            <summary>
            Gets or sets the style applied to the collection selector ListBox.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditor.CanUserAddItems">
            <summary>
            Gets or sets a value indicating whether the user can add items to the edited collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditor.CanUserRemoveItems">
            <summary>
            Gets or sets a value indicating whether the user can remove items from the edited collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditor.CanUserSortItems">
            <summary>
            Gets or sets a value indicating whether the user can sort items in the edited collection.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.ItemsEditorProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.ItemsEditor"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.ItemsSelectorProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.ItemsSelector"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.ItemsSource"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.EditorStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.EditorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.SelectorStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.SelectorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.CanUserAddItemsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.CanUserAddItems"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.CanUserRemoveItemsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.CanUserRemoveItems"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.CanUserSortItemsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.CanUserSortItems"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.ItemsEditor">
            <summary>
            Gets the C1PropertyGrid used to edit the properties of the currently selected item.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.ItemsSelector">
            <summary>
            Gets the ListBox used to show the list of items.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.ItemsSource">
            <summary>
            Gets or sets the list to be edited by the control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.EditorStyle">
            <summary>
            Gets or sets the style applied to the collection editor's PropertyGrid.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.SelectorStyle">
            <summary>
            Gets or sets the style applied to the advanced editor's ListBox.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.CanUserAddItems">
            <summary>
            Gets or sets a value indicating whether the user can add items to the edited collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.CanUserRemoveItems">
            <summary>
            Gets or sets a value indicating whether the user can remove items from the edited collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyGrid.CollectionEditorControl.CanUserSortItems">
            <summary>
            Gets or sets a value indicating whether the user can sort items in the edited collection.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.PropertyGrid.ColorEditor">
            <summary>
            Default editor used by C1PropertyGrid to edit color values.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.ColorEditor.Create">
            <summary>
            Creates ands initializes a new instance of the editor
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.ColorEditor.Supports(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Returns true if the editor supports (is able to show/edit) the property
            values described by the PropertyAttribute.
            </summary>
            <param name="Property"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.ColorEditor.Attach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Attaches (initializes) the editor with the current property.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.ColorEditor.Detach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Detaches (releases) the editor that was attached with the property passed as parameter.
            </summary>
            <param name="property"></param>
        </member>
        <member name="E:C1.Silverlight.Extended.PropertyGrid.ColorEditor.ValueChanged">
            <summary>
            Fired when the value of the current property has changed.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.PropertyGrid.ColorPaletteEditor">
            <summary>
            Default editor used by C1PropertyGrid to edit ColorPalette values.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.ColorPaletteEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Extended.PropertyGrid.ColorPaletteEditor"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.ColorPaletteEditor.Create">
            <summary>
            Creates ands initializes a new instance of the editor
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.ColorPaletteEditor.Supports(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Returns true if the editor supports (is able to show/edit) the property
            values described by the PropertyAttribute.
            </summary>
            <param name="Property"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.ColorPaletteEditor.Attach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Attaches (initializes) the editor with the current property.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.ColorPaletteEditor.Detach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Detaches (releases) the editor that was attached with the property passed as parameter.
            </summary>
            <param name="property"></param>
        </member>
        <member name="E:C1.Silverlight.Extended.PropertyGrid.ColorPaletteEditor.ValueChanged">
            <summary>
            Fired when the value of the current property has changed.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.PropertyGrid.EnumEditor">
            <summary>
            Default editor used by C1PropertyGrid to edit Enum values.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.EnumEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Extended.PropertyGrid.EnumEditor"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.EnumEditor.Create">
            <summary>
            Creates and initializes a new instance of the editor
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.EnumEditor.Supports(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Returns true if the editor supports (is able to show/edit) the property
            values described by the PropertyAttribute.
            </summary>
            <param name="Property"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.EnumEditor.Attach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Attaches (initializes) the editor with the current property.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.EnumEditor.Detach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Detaches (releases) the editor that was attached with the property passed as parameter.
            </summary>
            <param name="property"></param>
        </member>
        <member name="E:C1.Silverlight.Extended.PropertyGrid.EnumEditor.ValueChanged">
            <summary>
            Fired when the value of the current property has changed.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.PropertyGrid.ImageSourceEditor">
            <summary>
            Default editor used by C1PropertyGrid to edit image values.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.ImageSourceEditor.Create">
            <summary>
            Creates ands initializes a new instance of the editor
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.ImageSourceEditor.Supports(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Returns true if the editor supports (is able to show/edit) the property
            values described by the PropertyAttribute.
            </summary>
            <param name="Property"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.ImageSourceEditor.Attach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Attaches (initializes) the editor with the current property.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.ImageSourceEditor.Detach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Detaches (releases) the editor that was attached with the property passed as parameter.
            </summary>
            <param name="property"></param>
        </member>
        <member name="E:C1.Silverlight.Extended.PropertyGrid.ImageSourceEditor.ValueChanged">
            <summary>
            Fired when the value of the current property has changed.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.PropertyGrid.NumericEditor">
            <summary>
            Default editor used by C1PropertyGrid to edit numeric values.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.NumericEditor.Create">
            <summary>
            Creates ands initializes a new instance of the editor
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.NumericEditor.Supports(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Returns true if the editor supports (is able to show/edit) the property
            values described by the PropertyAttribute.
            </summary>
            <param name="Property"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.NumericEditor.Attach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Attaches (initializes) the editor with the current property.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.NumericEditor.Detach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Detaches (releases) the editor that was attached with the property passed as parameter.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.NumericEditor.NumericEditor_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the NumericEditor control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:C1.Silverlight.Extended.PropertyGrid.NumericEditor.ValueChanged">
            <summary>
            Fired when the value of the current property has changed.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.PropertyGrid.StringEditor">
            <summary>
            Default editor used by C1PropertyGrid to edit String values.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.StringEditor.Create">
            <summary>
            Creates ands initializes a new instance of the editor
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.StringEditor.Supports(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Returns true if the editor supports (is able to show/edit) the property
            values described by the PropertyAttribute.
            </summary>
            <param name="Property"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.StringEditor.Attach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Attaches (initializes) the editor with the current property.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.StringEditor.Detach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Detaches (releases) the editor that was attached with the property passed as parameter.
            </summary>
            <param name="property"></param>
        </member>
        <member name="E:C1.Silverlight.Extended.PropertyGrid.StringEditor.ValueChanged">
            <summary>
            Fired when the value of the current property has changed.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.PropertyGrid.UriEditor">
            <summary>
            Default editor used by C1PropertyGrid to edit Uri values.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.UriEditor.Create">
            <summary>
            Creates ands initializes a new instance of the editor
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.UriEditor.Supports(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Returns true if the editor supports (is able to show/edit) the property
            values described by the PropertyAttribute.
            </summary>
            <param name="Property"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.UriEditor.Attach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Attaches (initializes) the editor with the current property.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyGrid.UriEditor.Detach(C1.Silverlight.Extended.PropertyAttribute)">
            <summary>
            Detaches (releases) the editor that was attached with the property passed as parameter.
            </summary>
            <param name="property"></param>
        </member>
        <member name="E:C1.Silverlight.Extended.PropertyGrid.UriEditor.ValueChanged">
            <summary>
            Fired when the value of the current property has changed.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.PropertyBox">
            <summary>
            The control used by the C1PropertyGrid to display the SelectedObject's properties.
            </summary>	
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyBox.ResetValue">
            <summary>
            Resets the value.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyBox.ChangeVisualStateResetButton(System.Boolean)">
            <summary>
            Updates the current visual state of the ResetButton visual state group to match the object's properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyBox.ChangeVisualStateCommon(System.Boolean)">
            <summary>
            Updates the current visual state of the Common visual state group to match the object's properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyBox.ChangeVisualStateFocus(System.Boolean)">
            <summary>
            Updates the current visual state of the Focus visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyBox.PropertyAttributeProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyBox.PropertyAttribute"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyBox.LabelWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyBox.LabelWidth"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyBox.EditorWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyBox.EditorWidth"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyBox.LabelStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyBox.LabelStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyBox.ShowResetButtonProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyBox.ShowResetButton"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyBox.CurrentLabelWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyBox.CurrentLabelWidth"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyBox.FocusCuesVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyBox.FocusCuesVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyBox.DisabledCuesVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyBox.DisabledCuesVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyBox.IsMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyBox.IsMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyBox.ForceMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyBox.ForceMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.PropertyBox.IsFocusedProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.PropertyBox.IsFocused"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyBox.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.PropertyBox"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.PropertyBox.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.PropertyBox"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.Extended.PropertyBox.PropertyResetting">
            <summary>
            Fired before a property value gets reset.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.PropertyBox.PropertyReset">
            <summary>
            Fired when a property value gets reset.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyBox.AvailableEditors">
            <summary>
            The list of currently available editors to use in the C1PropertyGrid.
            The default list includes editors for: bool, Color, Brush, ColorPalette,
            Enum, Numeric, String, Image and Uri values.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.PropertyBox.ValueChanged">
            <summary>
            Fired when the value of a property in the current SelectedObject changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyBox.CurrentEditor">
            <summary>
            Gets or sets the current editor used by this property box.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyBox.Label">
            <summary>
            Gets the label created for this property box.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyBox.Panel">
            <summary>
            Gets the panel that contains the label and the editor of the property box.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyBox.ResetButton">
            <summary>
            Gets the button that resets the property values.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyBox.PropertyAttribute">
            <summary>
            Gets or sets the property attribute used to configure the PropertyBox.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyBox.LabelWidth">
            <summary>
            Gets or sets the width of the label.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyBox.EditorWidth">
            <summary>
            Gets or sets the width of the editor.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyBox.LabelStyle">
            <summary>
            Gets or sets the Style applied to the label. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyBox.ShowResetButton">
            <summary>
            Gets or sets a value indicating whether the reset button is shown.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyBox.CurrentLabelWidth">
            <summary>
            [internal]Gets or sets the current width of the label.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyBox.FocusCuesVisibility">
            <summary>
            Gets or sets a value indicating whether the focus visuals of the control are visible.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyBox.DisabledCuesVisibility">
            <summary>
            Gets or sets a value indicating whether the disabled visuals of the control are visible.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyBox.IsMouseOver">
            <summary>
            Returns true if the mouse is over the control.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.PropertyBox.IsMouseOverChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.PropertyBox.IsMouseOver"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyBox.ForceMouseOver">
            <summary>
            Set to true to force the mouse over visual state.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyBox.IsFocused">
            <summary>
            Returns true if the control has the focus.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.MethodBox">
            <summary>
            The control used by the C1PropertyGrid to display the SelectedObject's methods.
            </summary>	
        </member>
        <member name="M:C1.Silverlight.Extended.MethodBox.ChangeVisualStateCommon(System.Boolean)">
            <summary>
            Updates the current visual state of the Common visual state group to match the object's properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.MethodBox.ChangeVisualStateFocus(System.Boolean)">
            <summary>
            Updates the current visual state of the Focus visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.MethodBox.MethodAttributeProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.MethodBox.MethodAttribute"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.MethodBox.FocusCuesVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.MethodBox.FocusCuesVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.MethodBox.DisabledCuesVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.MethodBox.DisabledCuesVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.MethodBox.IsMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.MethodBox.IsMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.MethodBox.ForceMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.MethodBox.ForceMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.MethodBox.IsFocusedProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.MethodBox.IsFocused"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.MethodBox.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.MethodBox"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.MethodBox.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.MethodBox"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.MethodBox.MethodAttribute">
            <summary>
            Gets or sets the method attribute used to configure the MethodBox.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.MethodBox.MethodAttributeChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.MethodBox.MethodAttribute"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.MethodBox.FocusCuesVisibility">
            <summary>
            Gets or sets a value indicating whether the focus visuals of the control are visible.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.MethodBox.DisabledCuesVisibility">
            <summary>
            Gets or sets a value indicating whether the disabled visuals of the control are visible.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.MethodBox.IsMouseOver">
            <summary>
            Returns true if the mouse is over the control.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Extended.MethodBox.IsMouseOverChanged">
            <summary> 
            Event raised when the <see cref="P:C1.Silverlight.Extended.MethodBox.IsMouseOver"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.MethodBox.ForceMouseOver">
            <summary>
            Set to true to force the mouse over visual state.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.MethodBox.IsFocused">
            <summary>
            Returns true if the control has the focus.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.MemberAttribute">
            <summary>
            Used to provide configuration information for the C1PropertyGrid.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.MemberAttribute.Tag">
            <summary>
            Gets or sets an arbitrary object value that can be used to store custom information
            about this member.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.MemberAttribute.DisplayName">
            <summary>
            Gets or sets the name that will be displayed by the C1PropertyGrid when showing the member.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.MemberAttribute.Browsable">
            <summary>
            Gets or sets a value indicating whether the member is browsable (will be shown in the C1PropertyGrid).
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.MemberAttribute.SelectedObject">
            <summary>
            Gets the current object this member attributes are applied to.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.MemberAttribute.MemberName">
            <summary>
            Gets or sets the name of the member.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.MemberAttribute.Category">
            <summary>
            Specifies the name of the category in which to group the member when displayed in
            The C1PropertyGrid.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.PropertyAttribute">
            <summary>
            Used to provide configuration information for the C1PropertyGrid.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyAttribute.DisplayIndex">
            <summary>
            Gets or sets the index that will be used to sort the properties.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyAttribute.MinimumValue">
            <summary>
            Gets or sets the minimum allowed value for the property (applies only to numeric properties).
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyAttribute.MaximumValue">
            <summary>
            Gets or sets the maximum allowed value for the property (applies only to numeric properties).
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyAttribute.DefaultValue">
            <summary>
            Gets or sets the default value for the property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyAttribute.Editor">
            <summary>
            Gets or sets the current editor selected for the property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyAttribute.PropertyBinding">
            <summary>
            Gets or sets the Binding to use when the property is bound to its associated editor.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyAttribute.Format">
            <summary>
            Gets or sets a string representing the desired Format for the property value.
            e.g. a specific numeric format to use in the numeric editor associated to the property).
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyAttribute.Description">
            <summary>
            Gets or sets a text, such as a tool tip, that is displayed to users to help them
            understand a member.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyAttribute.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the property value can be edited.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.PropertyAttribute.PropertyInfo">
            <summary>
            Gets the PropertyInfo corresponding to the current property.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.MethodAttribute">
            <summary>
            Used to provide configuration information for the C1PropertyGrid.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.MethodAttribute.Parameters">
            <summary>
            Gets or sets the ordered list of parameter Types in the methods signature.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.MethodAttribute.ParameterValues">
            <summary>
            Gets or sets the ordered list of parameter values used to invoke the method.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.MethodAttribute.MethodInfo">
            <summary>
            Gets the MethodInfo corresponding to the current method.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Resources.C1_Silverlight_Extended">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.AdvancedEditor_Collection">
            <summary>
              Looks up a localized string similar to (Collection).
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.AdvancedEditor_CollectionEditor">
            <summary>
              Looks up a localized string similar to Collection Editor.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.CollectionEditorControl_Add">
            <summary>
              Looks up a localized string similar to Add another item.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.CollectionEditorControl_Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.CollectionEditorControl_Down">
            <summary>
              Looks up a localized string similar to Down.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.CollectionEditorControl_Items">
            <summary>
              Looks up a localized string similar to Items.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.CollectionEditorControl_OK">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.CollectionEditorControl_Properties">
            <summary>
              Looks up a localized string similar to Properties.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.CollectionEditorControl_Remove">
            <summary>
              Looks up a localized string similar to Remove.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.CollectionEditorControl_Up">
            <summary>
              Looks up a localized string similar to Up.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.ColorPicker_Advanced">
            <summary>
              Looks up a localized string similar to Advanced.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.ColorPicker_Basic">
            <summary>
              Looks up a localized string similar to Basic.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.ColorPicker_CustomColors">
            <summary>
              Looks up a localized string similar to Custom Colors.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.ColorPicker_OK">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.ColorPicker_PaletteColors">
            <summary>
              Looks up a localized string similar to Palette Colors.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.ColorPicker_RecentColors">
            <summary>
              Looks up a localized string similar to Recent Colors.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.ColorPicker_StandardColors">
            <summary>
              Looks up a localized string similar to Standard Colors.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.ColorPicker_TransparentColor">
            <summary>
              Looks up a localized string similar to Transparent.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Resources.C1_Silverlight_Extended.PropertyGrid_Reset">
            <summary>
              Looks up a localized string similar to Reset property value.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.ReflectionBackgroundConverter">
            <summary>
            Converts a <see cref="T:System.Windows.Media.LinearGradientBrush"/> into an appropriate brush for <see cref="P:C1.Silverlight.Extended.C1Reflector.ReflectionBackground"/>.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.C1Reflector">
            <summary>
            ContentControl that displays a 2D or 3D reflection of its content.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Reflector.Update">
            <summary>
            Forces an update of the reflection.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Reflector.ReflectionBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Reflector.ReflectionBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Reflector.AutoUpdateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Reflector.AutoUpdate"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1Reflector.ContentProjectionProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1Reflector.ContentProjection"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Reflector.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.Extended.C1Reflector"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1Reflector.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.Extended.C1Reflector"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Reflector.ReflectionEffects">
            <summary>
            Gets the collection of <see cref="T:System.Windows.Media.Effects.Effect"/>s applied to the reflection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Reflector.ReflectionBackground">
            <summary>
            Gets or sets the background of the reflection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Reflector.AutoUpdate">
            <summary>
            Gets or sets whether the reflecion is updated when the content's layout changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1Reflector.ContentProjection">
            <summary>
            Gets or sets the projection applied to the content.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Extended.C1VisualImageSource">
            <summary>
            Allows the use of a visual element as the source of an <see cref="T:System.Windows.Media.ImageBrush"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1VisualImageSource.Update">
            <summary>
            Forces an update of the image.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1VisualImageSource.ElementProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1VisualImageSource.Element"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Extended.C1VisualImageSource.AutoUpdateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.Extended.C1VisualImageSource.AutoUpdate"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Extended.C1VisualImageSource.GetSource(System.Windows.DependencyObject)">
            <summary> 
            Gets the value of the Source attached property for the 
            specified element.
            </summary> 
            <param name="element">
            The element from which to read the attached property.
            </param> 
            <returns>The value of the Source property.</returns>
        </member>
        <member name="M:C1.Silverlight.Extended.C1VisualImageSource.SetSource(System.Windows.DependencyObject,C1.Silverlight.Extended.C1VisualImageSource)">
            <summary> 
            Sets the value of the Source attached property for the 
            specified element.
            </summary> 
            <param name="element">
            The element to write the attached property to.
            </param> 
            <param name="value">The property value to set.</param>
        </member>
        <member name="F:C1.Silverlight.Extended.C1VisualImageSource.SourceProperty">
            <summary> 
            Identifies the Source attached property. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1VisualImageSource.Element">
            <summary>
            Gets or sets the element whose visual is used as an image source.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Extended.C1VisualImageSource.AutoUpdate">
            <summary>
            Gets or sets whether the image is automatically updated when the source's layout changes.
            </summary>
        </member>
    </members>
</doc>
