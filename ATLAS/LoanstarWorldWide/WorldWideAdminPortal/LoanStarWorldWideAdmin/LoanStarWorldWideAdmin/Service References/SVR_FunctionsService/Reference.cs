//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace LoanStarWorldWideAdmin.SVR_FunctionsService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SVR_FunctionsService.IFunctionsService")]
    public interface IFunctionsService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFunctionsService/GetSourceIP", ReplyAction="http://tempuri.org/IFunctionsService/GetSourceIPResponse")]
        System.IAsyncResult BeginGetSourceIP(System.AsyncCallback callback, object asyncState);
        
        string EndGetSourceIP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFunctionsService/HolidaySet", ReplyAction="http://tempuri.org/IFunctionsService/HolidaySetResponse")]
        System.IAsyncResult BeginHolidaySet(string bookGroupSet, string holidayDate, string countryCode, string description, bool isBankHoliday, bool isExchangeHoliday, string actUserId, bool isActive, string bookGroup, string userId, string userPassword, string functionPath, System.AsyncCallback callback, object asyncState);
        
        bool EndHolidaySet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFunctionsService/TimeZonesGet", ReplyAction="http://tempuri.org/IFunctionsService/TimeZonesGetResponse")]
        System.IAsyncResult BeginTimeZonesGet(string timeZoneId, string timeZoneName, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndTimeZonesGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFunctionsService/HolidaysGet", ReplyAction="http://tempuri.org/IFunctionsService/HolidaysGetResponse")]
        System.IAsyncResult BeginHolidaysGet(string bookGroupToCheck, string countryCode, string description, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndHolidaysGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFunctionsService/HolidaysGetList", ReplyAction="http://tempuri.org/IFunctionsService/HolidaysGetListResponse")]
        System.IAsyncResult BeginHolidaysGetList(string bookGroupToCheck, string compareDate, string description, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndHolidaysGetList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFunctionsService/IsBankHoliday", ReplyAction="http://tempuri.org/IFunctionsService/IsBankHolidayResponse")]
        System.IAsyncResult BeginIsBankHoliday(string bookGroupToCheck, string countryCode, string holidayDate, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState);
        
        bool EndIsBankHoliday(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFunctionsService/IsExchangeHoliday", ReplyAction="http://tempuri.org/IFunctionsService/IsExchangeHolidayResponse")]
        System.IAsyncResult BeginIsExchangeHoliday(string bookGroupToCheck, string countryCode, string holidayDate, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState);
        
        bool EndIsExchangeHoliday(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFunctionsService/KeyValueSet", ReplyAction="http://tempuri.org/IFunctionsService/KeyValueSetResponse")]
        System.IAsyncResult BeginKeyValueSet(string keyId, string keyValue, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState);
        
        bool EndKeyValueSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFunctionsService/KeyValuesGet", ReplyAction="http://tempuri.org/IFunctionsService/KeyValuesGetResponse")]
        System.IAsyncResult BeginKeyValuesGet(string keyId, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState);
        
        string EndKeyValuesGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFunctionsService/KeyValuesListGet", ReplyAction="http://tempuri.org/IFunctionsService/KeyValuesListGetResponse")]
        System.IAsyncResult BeginKeyValuesListGet(string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndKeyValuesListGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFunctionsService/LogicOperatorsGet", ReplyAction="http://tempuri.org/IFunctionsService/LogicOperatorsGetResponse")]
        System.IAsyncResult BeginLogicOperatorsGet(string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndLogicOperatorsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFunctionsService/SettlementSystsemProcessSet", ReplyAction="http://tempuri.org/IFunctionsService/SettlementSystsemProcessSetResponse")]
        System.IAsyncResult BeginSettlementSystsemProcessSet(string bizDate, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState);
        
        bool EndSettlementSystsemProcessSet(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFunctionsServiceChannel : LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSourceIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSourceIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HolidaySetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HolidaySetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TimeZonesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TimeZonesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HolidaysGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HolidaysGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HolidaysGetListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HolidaysGetListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsBankHolidayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsBankHolidayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsExchangeHolidayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsExchangeHolidayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KeyValueSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public KeyValueSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KeyValuesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public KeyValuesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KeyValuesListGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public KeyValuesListGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogicOperatorsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LogicOperatorsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SettlementSystsemProcessSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SettlementSystsemProcessSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FunctionsServiceClient : System.ServiceModel.ClientBase<LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService>, LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService {
        
        private BeginOperationDelegate onBeginGetSourceIPDelegate;
        
        private EndOperationDelegate onEndGetSourceIPDelegate;
        
        private System.Threading.SendOrPostCallback onGetSourceIPCompletedDelegate;
        
        private BeginOperationDelegate onBeginHolidaySetDelegate;
        
        private EndOperationDelegate onEndHolidaySetDelegate;
        
        private System.Threading.SendOrPostCallback onHolidaySetCompletedDelegate;
        
        private BeginOperationDelegate onBeginTimeZonesGetDelegate;
        
        private EndOperationDelegate onEndTimeZonesGetDelegate;
        
        private System.Threading.SendOrPostCallback onTimeZonesGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginHolidaysGetDelegate;
        
        private EndOperationDelegate onEndHolidaysGetDelegate;
        
        private System.Threading.SendOrPostCallback onHolidaysGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginHolidaysGetListDelegate;
        
        private EndOperationDelegate onEndHolidaysGetListDelegate;
        
        private System.Threading.SendOrPostCallback onHolidaysGetListCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsBankHolidayDelegate;
        
        private EndOperationDelegate onEndIsBankHolidayDelegate;
        
        private System.Threading.SendOrPostCallback onIsBankHolidayCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsExchangeHolidayDelegate;
        
        private EndOperationDelegate onEndIsExchangeHolidayDelegate;
        
        private System.Threading.SendOrPostCallback onIsExchangeHolidayCompletedDelegate;
        
        private BeginOperationDelegate onBeginKeyValueSetDelegate;
        
        private EndOperationDelegate onEndKeyValueSetDelegate;
        
        private System.Threading.SendOrPostCallback onKeyValueSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginKeyValuesGetDelegate;
        
        private EndOperationDelegate onEndKeyValuesGetDelegate;
        
        private System.Threading.SendOrPostCallback onKeyValuesGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginKeyValuesListGetDelegate;
        
        private EndOperationDelegate onEndKeyValuesListGetDelegate;
        
        private System.Threading.SendOrPostCallback onKeyValuesListGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogicOperatorsGetDelegate;
        
        private EndOperationDelegate onEndLogicOperatorsGetDelegate;
        
        private System.Threading.SendOrPostCallback onLogicOperatorsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginSettlementSystsemProcessSetDelegate;
        
        private EndOperationDelegate onEndSettlementSystsemProcessSetDelegate;
        
        private System.Threading.SendOrPostCallback onSettlementSystsemProcessSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public FunctionsServiceClient() {
        }
        
        public FunctionsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FunctionsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FunctionsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FunctionsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetSourceIPCompletedEventArgs> GetSourceIPCompleted;
        
        public event System.EventHandler<HolidaySetCompletedEventArgs> HolidaySetCompleted;
        
        public event System.EventHandler<TimeZonesGetCompletedEventArgs> TimeZonesGetCompleted;
        
        public event System.EventHandler<HolidaysGetCompletedEventArgs> HolidaysGetCompleted;
        
        public event System.EventHandler<HolidaysGetListCompletedEventArgs> HolidaysGetListCompleted;
        
        public event System.EventHandler<IsBankHolidayCompletedEventArgs> IsBankHolidayCompleted;
        
        public event System.EventHandler<IsExchangeHolidayCompletedEventArgs> IsExchangeHolidayCompleted;
        
        public event System.EventHandler<KeyValueSetCompletedEventArgs> KeyValueSetCompleted;
        
        public event System.EventHandler<KeyValuesGetCompletedEventArgs> KeyValuesGetCompleted;
        
        public event System.EventHandler<KeyValuesListGetCompletedEventArgs> KeyValuesListGetCompleted;
        
        public event System.EventHandler<LogicOperatorsGetCompletedEventArgs> LogicOperatorsGetCompleted;
        
        public event System.EventHandler<SettlementSystsemProcessSetCompletedEventArgs> SettlementSystsemProcessSetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.BeginGetSourceIP(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSourceIP(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.EndGetSourceIP(System.IAsyncResult result) {
            return base.Channel.EndGetSourceIP(result);
        }
        
        private System.IAsyncResult OnBeginGetSourceIP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).BeginGetSourceIP(callback, asyncState);
        }
        
        private object[] OnEndGetSourceIP(System.IAsyncResult result) {
            string retVal = ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).EndGetSourceIP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSourceIPCompleted(object state) {
            if ((this.GetSourceIPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSourceIPCompleted(this, new GetSourceIPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSourceIPAsync() {
            this.GetSourceIPAsync(null);
        }
        
        public void GetSourceIPAsync(object userState) {
            if ((this.onBeginGetSourceIPDelegate == null)) {
                this.onBeginGetSourceIPDelegate = new BeginOperationDelegate(this.OnBeginGetSourceIP);
            }
            if ((this.onEndGetSourceIPDelegate == null)) {
                this.onEndGetSourceIPDelegate = new EndOperationDelegate(this.OnEndGetSourceIP);
            }
            if ((this.onGetSourceIPCompletedDelegate == null)) {
                this.onGetSourceIPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSourceIPCompleted);
            }
            base.InvokeAsync(this.onBeginGetSourceIPDelegate, null, this.onEndGetSourceIPDelegate, this.onGetSourceIPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.BeginHolidaySet(string bookGroupSet, string holidayDate, string countryCode, string description, bool isBankHoliday, bool isExchangeHoliday, string actUserId, bool isActive, string bookGroup, string userId, string userPassword, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHolidaySet(bookGroupSet, holidayDate, countryCode, description, isBankHoliday, isExchangeHoliday, actUserId, isActive, bookGroup, userId, userPassword, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.EndHolidaySet(System.IAsyncResult result) {
            return base.Channel.EndHolidaySet(result);
        }
        
        private System.IAsyncResult OnBeginHolidaySet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bookGroupSet = ((string)(inValues[0]));
            string holidayDate = ((string)(inValues[1]));
            string countryCode = ((string)(inValues[2]));
            string description = ((string)(inValues[3]));
            bool isBankHoliday = ((bool)(inValues[4]));
            bool isExchangeHoliday = ((bool)(inValues[5]));
            string actUserId = ((string)(inValues[6]));
            bool isActive = ((bool)(inValues[7]));
            string bookGroup = ((string)(inValues[8]));
            string userId = ((string)(inValues[9]));
            string userPassword = ((string)(inValues[10]));
            string functionPath = ((string)(inValues[11]));
            return ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).BeginHolidaySet(bookGroupSet, holidayDate, countryCode, description, isBankHoliday, isExchangeHoliday, actUserId, isActive, bookGroup, userId, userPassword, functionPath, callback, asyncState);
        }
        
        private object[] OnEndHolidaySet(System.IAsyncResult result) {
            bool retVal = ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).EndHolidaySet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHolidaySetCompleted(object state) {
            if ((this.HolidaySetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HolidaySetCompleted(this, new HolidaySetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HolidaySetAsync(string bookGroupSet, string holidayDate, string countryCode, string description, bool isBankHoliday, bool isExchangeHoliday, string actUserId, bool isActive, string bookGroup, string userId, string userPassword, string functionPath) {
            this.HolidaySetAsync(bookGroupSet, holidayDate, countryCode, description, isBankHoliday, isExchangeHoliday, actUserId, isActive, bookGroup, userId, userPassword, functionPath, null);
        }
        
        public void HolidaySetAsync(string bookGroupSet, string holidayDate, string countryCode, string description, bool isBankHoliday, bool isExchangeHoliday, string actUserId, bool isActive, string bookGroup, string userId, string userPassword, string functionPath, object userState) {
            if ((this.onBeginHolidaySetDelegate == null)) {
                this.onBeginHolidaySetDelegate = new BeginOperationDelegate(this.OnBeginHolidaySet);
            }
            if ((this.onEndHolidaySetDelegate == null)) {
                this.onEndHolidaySetDelegate = new EndOperationDelegate(this.OnEndHolidaySet);
            }
            if ((this.onHolidaySetCompletedDelegate == null)) {
                this.onHolidaySetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHolidaySetCompleted);
            }
            base.InvokeAsync(this.onBeginHolidaySetDelegate, new object[] {
                        bookGroupSet,
                        holidayDate,
                        countryCode,
                        description,
                        isBankHoliday,
                        isExchangeHoliday,
                        actUserId,
                        isActive,
                        bookGroup,
                        userId,
                        userPassword,
                        functionPath}, this.onEndHolidaySetDelegate, this.onHolidaySetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.BeginTimeZonesGet(string timeZoneId, string timeZoneName, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTimeZonesGet(timeZoneId, timeZoneName, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.EndTimeZonesGet(System.IAsyncResult result) {
            return base.Channel.EndTimeZonesGet(result);
        }
        
        private System.IAsyncResult OnBeginTimeZonesGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string timeZoneId = ((string)(inValues[0]));
            string timeZoneName = ((string)(inValues[1]));
            string userId = ((string)(inValues[2]));
            string userPassword = ((string)(inValues[3]));
            string bookGroup = ((string)(inValues[4]));
            string functionPath = ((string)(inValues[5]));
            return ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).BeginTimeZonesGet(timeZoneId, timeZoneName, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        private object[] OnEndTimeZonesGet(System.IAsyncResult result) {
            byte[] retVal = ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).EndTimeZonesGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTimeZonesGetCompleted(object state) {
            if ((this.TimeZonesGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TimeZonesGetCompleted(this, new TimeZonesGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TimeZonesGetAsync(string timeZoneId, string timeZoneName, string userId, string userPassword, string bookGroup, string functionPath) {
            this.TimeZonesGetAsync(timeZoneId, timeZoneName, userId, userPassword, bookGroup, functionPath, null);
        }
        
        public void TimeZonesGetAsync(string timeZoneId, string timeZoneName, string userId, string userPassword, string bookGroup, string functionPath, object userState) {
            if ((this.onBeginTimeZonesGetDelegate == null)) {
                this.onBeginTimeZonesGetDelegate = new BeginOperationDelegate(this.OnBeginTimeZonesGet);
            }
            if ((this.onEndTimeZonesGetDelegate == null)) {
                this.onEndTimeZonesGetDelegate = new EndOperationDelegate(this.OnEndTimeZonesGet);
            }
            if ((this.onTimeZonesGetCompletedDelegate == null)) {
                this.onTimeZonesGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTimeZonesGetCompleted);
            }
            base.InvokeAsync(this.onBeginTimeZonesGetDelegate, new object[] {
                        timeZoneId,
                        timeZoneName,
                        userId,
                        userPassword,
                        bookGroup,
                        functionPath}, this.onEndTimeZonesGetDelegate, this.onTimeZonesGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.BeginHolidaysGet(string bookGroupToCheck, string countryCode, string description, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHolidaysGet(bookGroupToCheck, countryCode, description, utcOffSet, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.EndHolidaysGet(System.IAsyncResult result) {
            return base.Channel.EndHolidaysGet(result);
        }
        
        private System.IAsyncResult OnBeginHolidaysGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bookGroupToCheck = ((string)(inValues[0]));
            string countryCode = ((string)(inValues[1]));
            string description = ((string)(inValues[2]));
            string utcOffSet = ((string)(inValues[3]));
            string userId = ((string)(inValues[4]));
            string userPassword = ((string)(inValues[5]));
            string bookGroup = ((string)(inValues[6]));
            string functionPath = ((string)(inValues[7]));
            return ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).BeginHolidaysGet(bookGroupToCheck, countryCode, description, utcOffSet, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        private object[] OnEndHolidaysGet(System.IAsyncResult result) {
            byte[] retVal = ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).EndHolidaysGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHolidaysGetCompleted(object state) {
            if ((this.HolidaysGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HolidaysGetCompleted(this, new HolidaysGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HolidaysGetAsync(string bookGroupToCheck, string countryCode, string description, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath) {
            this.HolidaysGetAsync(bookGroupToCheck, countryCode, description, utcOffSet, userId, userPassword, bookGroup, functionPath, null);
        }
        
        public void HolidaysGetAsync(string bookGroupToCheck, string countryCode, string description, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, object userState) {
            if ((this.onBeginHolidaysGetDelegate == null)) {
                this.onBeginHolidaysGetDelegate = new BeginOperationDelegate(this.OnBeginHolidaysGet);
            }
            if ((this.onEndHolidaysGetDelegate == null)) {
                this.onEndHolidaysGetDelegate = new EndOperationDelegate(this.OnEndHolidaysGet);
            }
            if ((this.onHolidaysGetCompletedDelegate == null)) {
                this.onHolidaysGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHolidaysGetCompleted);
            }
            base.InvokeAsync(this.onBeginHolidaysGetDelegate, new object[] {
                        bookGroupToCheck,
                        countryCode,
                        description,
                        utcOffSet,
                        userId,
                        userPassword,
                        bookGroup,
                        functionPath}, this.onEndHolidaysGetDelegate, this.onHolidaysGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.BeginHolidaysGetList(string bookGroupToCheck, string compareDate, string description, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHolidaysGetList(bookGroupToCheck, compareDate, description, utcOffSet, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.EndHolidaysGetList(System.IAsyncResult result) {
            return base.Channel.EndHolidaysGetList(result);
        }
        
        private System.IAsyncResult OnBeginHolidaysGetList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bookGroupToCheck = ((string)(inValues[0]));
            string compareDate = ((string)(inValues[1]));
            string description = ((string)(inValues[2]));
            string utcOffSet = ((string)(inValues[3]));
            string userId = ((string)(inValues[4]));
            string userPassword = ((string)(inValues[5]));
            string bookGroup = ((string)(inValues[6]));
            string functionPath = ((string)(inValues[7]));
            return ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).BeginHolidaysGetList(bookGroupToCheck, compareDate, description, utcOffSet, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        private object[] OnEndHolidaysGetList(System.IAsyncResult result) {
            byte[] retVal = ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).EndHolidaysGetList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHolidaysGetListCompleted(object state) {
            if ((this.HolidaysGetListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HolidaysGetListCompleted(this, new HolidaysGetListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HolidaysGetListAsync(string bookGroupToCheck, string compareDate, string description, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath) {
            this.HolidaysGetListAsync(bookGroupToCheck, compareDate, description, utcOffSet, userId, userPassword, bookGroup, functionPath, null);
        }
        
        public void HolidaysGetListAsync(string bookGroupToCheck, string compareDate, string description, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, object userState) {
            if ((this.onBeginHolidaysGetListDelegate == null)) {
                this.onBeginHolidaysGetListDelegate = new BeginOperationDelegate(this.OnBeginHolidaysGetList);
            }
            if ((this.onEndHolidaysGetListDelegate == null)) {
                this.onEndHolidaysGetListDelegate = new EndOperationDelegate(this.OnEndHolidaysGetList);
            }
            if ((this.onHolidaysGetListCompletedDelegate == null)) {
                this.onHolidaysGetListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHolidaysGetListCompleted);
            }
            base.InvokeAsync(this.onBeginHolidaysGetListDelegate, new object[] {
                        bookGroupToCheck,
                        compareDate,
                        description,
                        utcOffSet,
                        userId,
                        userPassword,
                        bookGroup,
                        functionPath}, this.onEndHolidaysGetListDelegate, this.onHolidaysGetListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.BeginIsBankHoliday(string bookGroupToCheck, string countryCode, string holidayDate, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsBankHoliday(bookGroupToCheck, countryCode, holidayDate, utcOffSet, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.EndIsBankHoliday(System.IAsyncResult result) {
            return base.Channel.EndIsBankHoliday(result);
        }
        
        private System.IAsyncResult OnBeginIsBankHoliday(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bookGroupToCheck = ((string)(inValues[0]));
            string countryCode = ((string)(inValues[1]));
            string holidayDate = ((string)(inValues[2]));
            string utcOffSet = ((string)(inValues[3]));
            string userId = ((string)(inValues[4]));
            string userPassword = ((string)(inValues[5]));
            string bookGroup = ((string)(inValues[6]));
            string functionPath = ((string)(inValues[7]));
            return ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).BeginIsBankHoliday(bookGroupToCheck, countryCode, holidayDate, utcOffSet, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        private object[] OnEndIsBankHoliday(System.IAsyncResult result) {
            bool retVal = ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).EndIsBankHoliday(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsBankHolidayCompleted(object state) {
            if ((this.IsBankHolidayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsBankHolidayCompleted(this, new IsBankHolidayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsBankHolidayAsync(string bookGroupToCheck, string countryCode, string holidayDate, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath) {
            this.IsBankHolidayAsync(bookGroupToCheck, countryCode, holidayDate, utcOffSet, userId, userPassword, bookGroup, functionPath, null);
        }
        
        public void IsBankHolidayAsync(string bookGroupToCheck, string countryCode, string holidayDate, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, object userState) {
            if ((this.onBeginIsBankHolidayDelegate == null)) {
                this.onBeginIsBankHolidayDelegate = new BeginOperationDelegate(this.OnBeginIsBankHoliday);
            }
            if ((this.onEndIsBankHolidayDelegate == null)) {
                this.onEndIsBankHolidayDelegate = new EndOperationDelegate(this.OnEndIsBankHoliday);
            }
            if ((this.onIsBankHolidayCompletedDelegate == null)) {
                this.onIsBankHolidayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsBankHolidayCompleted);
            }
            base.InvokeAsync(this.onBeginIsBankHolidayDelegate, new object[] {
                        bookGroupToCheck,
                        countryCode,
                        holidayDate,
                        utcOffSet,
                        userId,
                        userPassword,
                        bookGroup,
                        functionPath}, this.onEndIsBankHolidayDelegate, this.onIsBankHolidayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.BeginIsExchangeHoliday(string bookGroupToCheck, string countryCode, string holidayDate, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsExchangeHoliday(bookGroupToCheck, countryCode, holidayDate, utcOffSet, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.EndIsExchangeHoliday(System.IAsyncResult result) {
            return base.Channel.EndIsExchangeHoliday(result);
        }
        
        private System.IAsyncResult OnBeginIsExchangeHoliday(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bookGroupToCheck = ((string)(inValues[0]));
            string countryCode = ((string)(inValues[1]));
            string holidayDate = ((string)(inValues[2]));
            string utcOffSet = ((string)(inValues[3]));
            string userId = ((string)(inValues[4]));
            string userPassword = ((string)(inValues[5]));
            string bookGroup = ((string)(inValues[6]));
            string functionPath = ((string)(inValues[7]));
            return ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).BeginIsExchangeHoliday(bookGroupToCheck, countryCode, holidayDate, utcOffSet, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        private object[] OnEndIsExchangeHoliday(System.IAsyncResult result) {
            bool retVal = ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).EndIsExchangeHoliday(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsExchangeHolidayCompleted(object state) {
            if ((this.IsExchangeHolidayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsExchangeHolidayCompleted(this, new IsExchangeHolidayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsExchangeHolidayAsync(string bookGroupToCheck, string countryCode, string holidayDate, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath) {
            this.IsExchangeHolidayAsync(bookGroupToCheck, countryCode, holidayDate, utcOffSet, userId, userPassword, bookGroup, functionPath, null);
        }
        
        public void IsExchangeHolidayAsync(string bookGroupToCheck, string countryCode, string holidayDate, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, object userState) {
            if ((this.onBeginIsExchangeHolidayDelegate == null)) {
                this.onBeginIsExchangeHolidayDelegate = new BeginOperationDelegate(this.OnBeginIsExchangeHoliday);
            }
            if ((this.onEndIsExchangeHolidayDelegate == null)) {
                this.onEndIsExchangeHolidayDelegate = new EndOperationDelegate(this.OnEndIsExchangeHoliday);
            }
            if ((this.onIsExchangeHolidayCompletedDelegate == null)) {
                this.onIsExchangeHolidayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsExchangeHolidayCompleted);
            }
            base.InvokeAsync(this.onBeginIsExchangeHolidayDelegate, new object[] {
                        bookGroupToCheck,
                        countryCode,
                        holidayDate,
                        utcOffSet,
                        userId,
                        userPassword,
                        bookGroup,
                        functionPath}, this.onEndIsExchangeHolidayDelegate, this.onIsExchangeHolidayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.BeginKeyValueSet(string keyId, string keyValue, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginKeyValueSet(keyId, keyValue, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.EndKeyValueSet(System.IAsyncResult result) {
            return base.Channel.EndKeyValueSet(result);
        }
        
        private System.IAsyncResult OnBeginKeyValueSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keyId = ((string)(inValues[0]));
            string keyValue = ((string)(inValues[1]));
            string userId = ((string)(inValues[2]));
            string userPassword = ((string)(inValues[3]));
            string bookGroup = ((string)(inValues[4]));
            string functionPath = ((string)(inValues[5]));
            return ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).BeginKeyValueSet(keyId, keyValue, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        private object[] OnEndKeyValueSet(System.IAsyncResult result) {
            bool retVal = ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).EndKeyValueSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnKeyValueSetCompleted(object state) {
            if ((this.KeyValueSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.KeyValueSetCompleted(this, new KeyValueSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void KeyValueSetAsync(string keyId, string keyValue, string userId, string userPassword, string bookGroup, string functionPath) {
            this.KeyValueSetAsync(keyId, keyValue, userId, userPassword, bookGroup, functionPath, null);
        }
        
        public void KeyValueSetAsync(string keyId, string keyValue, string userId, string userPassword, string bookGroup, string functionPath, object userState) {
            if ((this.onBeginKeyValueSetDelegate == null)) {
                this.onBeginKeyValueSetDelegate = new BeginOperationDelegate(this.OnBeginKeyValueSet);
            }
            if ((this.onEndKeyValueSetDelegate == null)) {
                this.onEndKeyValueSetDelegate = new EndOperationDelegate(this.OnEndKeyValueSet);
            }
            if ((this.onKeyValueSetCompletedDelegate == null)) {
                this.onKeyValueSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnKeyValueSetCompleted);
            }
            base.InvokeAsync(this.onBeginKeyValueSetDelegate, new object[] {
                        keyId,
                        keyValue,
                        userId,
                        userPassword,
                        bookGroup,
                        functionPath}, this.onEndKeyValueSetDelegate, this.onKeyValueSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.BeginKeyValuesGet(string keyId, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginKeyValuesGet(keyId, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.EndKeyValuesGet(System.IAsyncResult result) {
            return base.Channel.EndKeyValuesGet(result);
        }
        
        private System.IAsyncResult OnBeginKeyValuesGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keyId = ((string)(inValues[0]));
            string userId = ((string)(inValues[1]));
            string userPassword = ((string)(inValues[2]));
            string bookGroup = ((string)(inValues[3]));
            string functionPath = ((string)(inValues[4]));
            return ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).BeginKeyValuesGet(keyId, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        private object[] OnEndKeyValuesGet(System.IAsyncResult result) {
            string retVal = ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).EndKeyValuesGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnKeyValuesGetCompleted(object state) {
            if ((this.KeyValuesGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.KeyValuesGetCompleted(this, new KeyValuesGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void KeyValuesGetAsync(string keyId, string userId, string userPassword, string bookGroup, string functionPath) {
            this.KeyValuesGetAsync(keyId, userId, userPassword, bookGroup, functionPath, null);
        }
        
        public void KeyValuesGetAsync(string keyId, string userId, string userPassword, string bookGroup, string functionPath, object userState) {
            if ((this.onBeginKeyValuesGetDelegate == null)) {
                this.onBeginKeyValuesGetDelegate = new BeginOperationDelegate(this.OnBeginKeyValuesGet);
            }
            if ((this.onEndKeyValuesGetDelegate == null)) {
                this.onEndKeyValuesGetDelegate = new EndOperationDelegate(this.OnEndKeyValuesGet);
            }
            if ((this.onKeyValuesGetCompletedDelegate == null)) {
                this.onKeyValuesGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnKeyValuesGetCompleted);
            }
            base.InvokeAsync(this.onBeginKeyValuesGetDelegate, new object[] {
                        keyId,
                        userId,
                        userPassword,
                        bookGroup,
                        functionPath}, this.onEndKeyValuesGetDelegate, this.onKeyValuesGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.BeginKeyValuesListGet(string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginKeyValuesListGet(userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.EndKeyValuesListGet(System.IAsyncResult result) {
            return base.Channel.EndKeyValuesListGet(result);
        }
        
        private System.IAsyncResult OnBeginKeyValuesListGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            string userPassword = ((string)(inValues[1]));
            string bookGroup = ((string)(inValues[2]));
            string functionPath = ((string)(inValues[3]));
            return ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).BeginKeyValuesListGet(userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        private object[] OnEndKeyValuesListGet(System.IAsyncResult result) {
            byte[] retVal = ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).EndKeyValuesListGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnKeyValuesListGetCompleted(object state) {
            if ((this.KeyValuesListGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.KeyValuesListGetCompleted(this, new KeyValuesListGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void KeyValuesListGetAsync(string userId, string userPassword, string bookGroup, string functionPath) {
            this.KeyValuesListGetAsync(userId, userPassword, bookGroup, functionPath, null);
        }
        
        public void KeyValuesListGetAsync(string userId, string userPassword, string bookGroup, string functionPath, object userState) {
            if ((this.onBeginKeyValuesListGetDelegate == null)) {
                this.onBeginKeyValuesListGetDelegate = new BeginOperationDelegate(this.OnBeginKeyValuesListGet);
            }
            if ((this.onEndKeyValuesListGetDelegate == null)) {
                this.onEndKeyValuesListGetDelegate = new EndOperationDelegate(this.OnEndKeyValuesListGet);
            }
            if ((this.onKeyValuesListGetCompletedDelegate == null)) {
                this.onKeyValuesListGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnKeyValuesListGetCompleted);
            }
            base.InvokeAsync(this.onBeginKeyValuesListGetDelegate, new object[] {
                        userId,
                        userPassword,
                        bookGroup,
                        functionPath}, this.onEndKeyValuesListGetDelegate, this.onKeyValuesListGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.BeginLogicOperatorsGet(string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogicOperatorsGet(userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.EndLogicOperatorsGet(System.IAsyncResult result) {
            return base.Channel.EndLogicOperatorsGet(result);
        }
        
        private System.IAsyncResult OnBeginLogicOperatorsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            string userPassword = ((string)(inValues[1]));
            string bookGroup = ((string)(inValues[2]));
            string functionPath = ((string)(inValues[3]));
            return ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).BeginLogicOperatorsGet(userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        private object[] OnEndLogicOperatorsGet(System.IAsyncResult result) {
            byte[] retVal = ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).EndLogicOperatorsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLogicOperatorsGetCompleted(object state) {
            if ((this.LogicOperatorsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogicOperatorsGetCompleted(this, new LogicOperatorsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogicOperatorsGetAsync(string userId, string userPassword, string bookGroup, string functionPath) {
            this.LogicOperatorsGetAsync(userId, userPassword, bookGroup, functionPath, null);
        }
        
        public void LogicOperatorsGetAsync(string userId, string userPassword, string bookGroup, string functionPath, object userState) {
            if ((this.onBeginLogicOperatorsGetDelegate == null)) {
                this.onBeginLogicOperatorsGetDelegate = new BeginOperationDelegate(this.OnBeginLogicOperatorsGet);
            }
            if ((this.onEndLogicOperatorsGetDelegate == null)) {
                this.onEndLogicOperatorsGetDelegate = new EndOperationDelegate(this.OnEndLogicOperatorsGet);
            }
            if ((this.onLogicOperatorsGetCompletedDelegate == null)) {
                this.onLogicOperatorsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogicOperatorsGetCompleted);
            }
            base.InvokeAsync(this.onBeginLogicOperatorsGetDelegate, new object[] {
                        userId,
                        userPassword,
                        bookGroup,
                        functionPath}, this.onEndLogicOperatorsGetDelegate, this.onLogicOperatorsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.BeginSettlementSystsemProcessSet(string bizDate, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSettlementSystsemProcessSet(bizDate, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService.EndSettlementSystsemProcessSet(System.IAsyncResult result) {
            return base.Channel.EndSettlementSystsemProcessSet(result);
        }
        
        private System.IAsyncResult OnBeginSettlementSystsemProcessSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bizDate = ((string)(inValues[0]));
            string userId = ((string)(inValues[1]));
            string userPassword = ((string)(inValues[2]));
            string bookGroup = ((string)(inValues[3]));
            string functionPath = ((string)(inValues[4]));
            return ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).BeginSettlementSystsemProcessSet(bizDate, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        private object[] OnEndSettlementSystsemProcessSet(System.IAsyncResult result) {
            bool retVal = ((LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService)(this)).EndSettlementSystsemProcessSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSettlementSystsemProcessSetCompleted(object state) {
            if ((this.SettlementSystsemProcessSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SettlementSystsemProcessSetCompleted(this, new SettlementSystsemProcessSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SettlementSystsemProcessSetAsync(string bizDate, string userId, string userPassword, string bookGroup, string functionPath) {
            this.SettlementSystsemProcessSetAsync(bizDate, userId, userPassword, bookGroup, functionPath, null);
        }
        
        public void SettlementSystsemProcessSetAsync(string bizDate, string userId, string userPassword, string bookGroup, string functionPath, object userState) {
            if ((this.onBeginSettlementSystsemProcessSetDelegate == null)) {
                this.onBeginSettlementSystsemProcessSetDelegate = new BeginOperationDelegate(this.OnBeginSettlementSystsemProcessSet);
            }
            if ((this.onEndSettlementSystsemProcessSetDelegate == null)) {
                this.onEndSettlementSystsemProcessSetDelegate = new EndOperationDelegate(this.OnEndSettlementSystsemProcessSet);
            }
            if ((this.onSettlementSystsemProcessSetCompletedDelegate == null)) {
                this.onSettlementSystsemProcessSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSettlementSystsemProcessSetCompleted);
            }
            base.InvokeAsync(this.onBeginSettlementSystsemProcessSetDelegate, new object[] {
                        bizDate,
                        userId,
                        userPassword,
                        bookGroup,
                        functionPath}, this.onEndSettlementSystsemProcessSetDelegate, this.onSettlementSystsemProcessSetCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService CreateChannel() {
            return new FunctionsServiceClientChannel(this);
        }
        
        private class FunctionsServiceClientChannel : ChannelBase<LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService>, LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService {
            
            public FunctionsServiceClientChannel(System.ServiceModel.ClientBase<LoanStarWorldWideAdmin.SVR_FunctionsService.IFunctionsService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetSourceIP(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSourceIP", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetSourceIP(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetSourceIP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHolidaySet(string bookGroupSet, string holidayDate, string countryCode, string description, bool isBankHoliday, bool isExchangeHoliday, string actUserId, bool isActive, string bookGroup, string userId, string userPassword, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[12];
                _args[0] = bookGroupSet;
                _args[1] = holidayDate;
                _args[2] = countryCode;
                _args[3] = description;
                _args[4] = isBankHoliday;
                _args[5] = isExchangeHoliday;
                _args[6] = actUserId;
                _args[7] = isActive;
                _args[8] = bookGroup;
                _args[9] = userId;
                _args[10] = userPassword;
                _args[11] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("HolidaySet", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndHolidaySet(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("HolidaySet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTimeZonesGet(string timeZoneId, string timeZoneName, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = timeZoneId;
                _args[1] = timeZoneName;
                _args[2] = userId;
                _args[3] = userPassword;
                _args[4] = bookGroup;
                _args[5] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("TimeZonesGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndTimeZonesGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("TimeZonesGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHolidaysGet(string bookGroupToCheck, string countryCode, string description, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = bookGroupToCheck;
                _args[1] = countryCode;
                _args[2] = description;
                _args[3] = utcOffSet;
                _args[4] = userId;
                _args[5] = userPassword;
                _args[6] = bookGroup;
                _args[7] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("HolidaysGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndHolidaysGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("HolidaysGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHolidaysGetList(string bookGroupToCheck, string compareDate, string description, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = bookGroupToCheck;
                _args[1] = compareDate;
                _args[2] = description;
                _args[3] = utcOffSet;
                _args[4] = userId;
                _args[5] = userPassword;
                _args[6] = bookGroup;
                _args[7] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("HolidaysGetList", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndHolidaysGetList(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("HolidaysGetList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIsBankHoliday(string bookGroupToCheck, string countryCode, string holidayDate, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = bookGroupToCheck;
                _args[1] = countryCode;
                _args[2] = holidayDate;
                _args[3] = utcOffSet;
                _args[4] = userId;
                _args[5] = userPassword;
                _args[6] = bookGroup;
                _args[7] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("IsBankHoliday", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndIsBankHoliday(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("IsBankHoliday", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIsExchangeHoliday(string bookGroupToCheck, string countryCode, string holidayDate, string utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = bookGroupToCheck;
                _args[1] = countryCode;
                _args[2] = holidayDate;
                _args[3] = utcOffSet;
                _args[4] = userId;
                _args[5] = userPassword;
                _args[6] = bookGroup;
                _args[7] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("IsExchangeHoliday", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndIsExchangeHoliday(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("IsExchangeHoliday", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginKeyValueSet(string keyId, string keyValue, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = keyId;
                _args[1] = keyValue;
                _args[2] = userId;
                _args[3] = userPassword;
                _args[4] = bookGroup;
                _args[5] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("KeyValueSet", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndKeyValueSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("KeyValueSet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginKeyValuesGet(string keyId, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = keyId;
                _args[1] = userId;
                _args[2] = userPassword;
                _args[3] = bookGroup;
                _args[4] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("KeyValuesGet", _args, callback, asyncState);
                return _result;
            }
            
            public string EndKeyValuesGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("KeyValuesGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginKeyValuesListGet(string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = userId;
                _args[1] = userPassword;
                _args[2] = bookGroup;
                _args[3] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("KeyValuesListGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndKeyValuesListGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("KeyValuesListGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLogicOperatorsGet(string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = userId;
                _args[1] = userPassword;
                _args[2] = bookGroup;
                _args[3] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("LogicOperatorsGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndLogicOperatorsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("LogicOperatorsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSettlementSystsemProcessSet(string bizDate, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = bizDate;
                _args[1] = userId;
                _args[2] = userPassword;
                _args[3] = bookGroup;
                _args[4] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("SettlementSystsemProcessSet", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSettlementSystsemProcessSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SettlementSystsemProcessSet", _args, result)));
                return _result;
            }
        }
    }
}
