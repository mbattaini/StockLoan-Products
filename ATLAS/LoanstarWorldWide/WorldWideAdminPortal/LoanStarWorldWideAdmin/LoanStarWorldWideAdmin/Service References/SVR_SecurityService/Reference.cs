//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace LoanStarWorldWideAdmin.SVR_SecurityService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SVR_SecurityService.ISecurityService")]
    public interface ISecurityService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurityService/GetSourceIP", ReplyAction="http://tempuri.org/ISecurityService/GetSourceIPResponse")]
        System.IAsyncResult BeginGetSourceIP(System.AsyncCallback callback, object asyncState);
        
        string EndGetSourceIP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurityService/UserPasswordChange", ReplyAction="http://tempuri.org/ISecurityService/UserPasswordChangeResponse")]
        System.IAsyncResult BeginUserPasswordChange(string userId, string oldEPassword, string newEPassword, System.AsyncCallback callback, object asyncState);
        
        bool EndUserPasswordChange(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurityService/UserPasswordReset", ReplyAction="http://tempuri.org/ISecurityService/UserPasswordResetResponse")]
        System.IAsyncResult BeginUserPasswordReset(string userId, string newEPassword, System.AsyncCallback callback, object asyncState);
        
        bool EndUserPasswordReset(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurityService/UserValidate", ReplyAction="http://tempuri.org/ISecurityService/UserValidateResponse")]
        System.IAsyncResult BeginUserValidate(string userId, string ePassword, string sourceAddress, int resetReq, System.AsyncCallback callback, object asyncState);
        
        int EndUserValidate(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISecurityServiceChannel : LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSourceIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSourceIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserPasswordChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserPasswordChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserPasswordResetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserPasswordResetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityServiceClient : System.ServiceModel.ClientBase<LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService>, LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService {
        
        private BeginOperationDelegate onBeginGetSourceIPDelegate;
        
        private EndOperationDelegate onEndGetSourceIPDelegate;
        
        private System.Threading.SendOrPostCallback onGetSourceIPCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserPasswordChangeDelegate;
        
        private EndOperationDelegate onEndUserPasswordChangeDelegate;
        
        private System.Threading.SendOrPostCallback onUserPasswordChangeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserPasswordResetDelegate;
        
        private EndOperationDelegate onEndUserPasswordResetDelegate;
        
        private System.Threading.SendOrPostCallback onUserPasswordResetCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserValidateDelegate;
        
        private EndOperationDelegate onEndUserValidateDelegate;
        
        private System.Threading.SendOrPostCallback onUserValidateCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SecurityServiceClient() {
        }
        
        public SecurityServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SecurityServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SecurityServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SecurityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetSourceIPCompletedEventArgs> GetSourceIPCompleted;
        
        public event System.EventHandler<UserPasswordChangeCompletedEventArgs> UserPasswordChangeCompleted;
        
        public event System.EventHandler<UserPasswordResetCompletedEventArgs> UserPasswordResetCompleted;
        
        public event System.EventHandler<UserValidateCompletedEventArgs> UserValidateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService.BeginGetSourceIP(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSourceIP(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService.EndGetSourceIP(System.IAsyncResult result) {
            return base.Channel.EndGetSourceIP(result);
        }
        
        private System.IAsyncResult OnBeginGetSourceIP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService)(this)).BeginGetSourceIP(callback, asyncState);
        }
        
        private object[] OnEndGetSourceIP(System.IAsyncResult result) {
            string retVal = ((LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService)(this)).EndGetSourceIP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSourceIPCompleted(object state) {
            if ((this.GetSourceIPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSourceIPCompleted(this, new GetSourceIPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSourceIPAsync() {
            this.GetSourceIPAsync(null);
        }
        
        public void GetSourceIPAsync(object userState) {
            if ((this.onBeginGetSourceIPDelegate == null)) {
                this.onBeginGetSourceIPDelegate = new BeginOperationDelegate(this.OnBeginGetSourceIP);
            }
            if ((this.onEndGetSourceIPDelegate == null)) {
                this.onEndGetSourceIPDelegate = new EndOperationDelegate(this.OnEndGetSourceIP);
            }
            if ((this.onGetSourceIPCompletedDelegate == null)) {
                this.onGetSourceIPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSourceIPCompleted);
            }
            base.InvokeAsync(this.onBeginGetSourceIPDelegate, null, this.onEndGetSourceIPDelegate, this.onGetSourceIPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService.BeginUserPasswordChange(string userId, string oldEPassword, string newEPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserPasswordChange(userId, oldEPassword, newEPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService.EndUserPasswordChange(System.IAsyncResult result) {
            return base.Channel.EndUserPasswordChange(result);
        }
        
        private System.IAsyncResult OnBeginUserPasswordChange(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            string oldEPassword = ((string)(inValues[1]));
            string newEPassword = ((string)(inValues[2]));
            return ((LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService)(this)).BeginUserPasswordChange(userId, oldEPassword, newEPassword, callback, asyncState);
        }
        
        private object[] OnEndUserPasswordChange(System.IAsyncResult result) {
            bool retVal = ((LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService)(this)).EndUserPasswordChange(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserPasswordChangeCompleted(object state) {
            if ((this.UserPasswordChangeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserPasswordChangeCompleted(this, new UserPasswordChangeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserPasswordChangeAsync(string userId, string oldEPassword, string newEPassword) {
            this.UserPasswordChangeAsync(userId, oldEPassword, newEPassword, null);
        }
        
        public void UserPasswordChangeAsync(string userId, string oldEPassword, string newEPassword, object userState) {
            if ((this.onBeginUserPasswordChangeDelegate == null)) {
                this.onBeginUserPasswordChangeDelegate = new BeginOperationDelegate(this.OnBeginUserPasswordChange);
            }
            if ((this.onEndUserPasswordChangeDelegate == null)) {
                this.onEndUserPasswordChangeDelegate = new EndOperationDelegate(this.OnEndUserPasswordChange);
            }
            if ((this.onUserPasswordChangeCompletedDelegate == null)) {
                this.onUserPasswordChangeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserPasswordChangeCompleted);
            }
            base.InvokeAsync(this.onBeginUserPasswordChangeDelegate, new object[] {
                        userId,
                        oldEPassword,
                        newEPassword}, this.onEndUserPasswordChangeDelegate, this.onUserPasswordChangeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService.BeginUserPasswordReset(string userId, string newEPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserPasswordReset(userId, newEPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService.EndUserPasswordReset(System.IAsyncResult result) {
            return base.Channel.EndUserPasswordReset(result);
        }
        
        private System.IAsyncResult OnBeginUserPasswordReset(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            string newEPassword = ((string)(inValues[1]));
            return ((LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService)(this)).BeginUserPasswordReset(userId, newEPassword, callback, asyncState);
        }
        
        private object[] OnEndUserPasswordReset(System.IAsyncResult result) {
            bool retVal = ((LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService)(this)).EndUserPasswordReset(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserPasswordResetCompleted(object state) {
            if ((this.UserPasswordResetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserPasswordResetCompleted(this, new UserPasswordResetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserPasswordResetAsync(string userId, string newEPassword) {
            this.UserPasswordResetAsync(userId, newEPassword, null);
        }
        
        public void UserPasswordResetAsync(string userId, string newEPassword, object userState) {
            if ((this.onBeginUserPasswordResetDelegate == null)) {
                this.onBeginUserPasswordResetDelegate = new BeginOperationDelegate(this.OnBeginUserPasswordReset);
            }
            if ((this.onEndUserPasswordResetDelegate == null)) {
                this.onEndUserPasswordResetDelegate = new EndOperationDelegate(this.OnEndUserPasswordReset);
            }
            if ((this.onUserPasswordResetCompletedDelegate == null)) {
                this.onUserPasswordResetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserPasswordResetCompleted);
            }
            base.InvokeAsync(this.onBeginUserPasswordResetDelegate, new object[] {
                        userId,
                        newEPassword}, this.onEndUserPasswordResetDelegate, this.onUserPasswordResetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService.BeginUserValidate(string userId, string ePassword, string sourceAddress, int resetReq, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserValidate(userId, ePassword, sourceAddress, resetReq, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService.EndUserValidate(System.IAsyncResult result) {
            return base.Channel.EndUserValidate(result);
        }
        
        private System.IAsyncResult OnBeginUserValidate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            string ePassword = ((string)(inValues[1]));
            string sourceAddress = ((string)(inValues[2]));
            int resetReq = ((int)(inValues[3]));
            return ((LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService)(this)).BeginUserValidate(userId, ePassword, sourceAddress, resetReq, callback, asyncState);
        }
        
        private object[] OnEndUserValidate(System.IAsyncResult result) {
            int retVal = ((LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService)(this)).EndUserValidate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserValidateCompleted(object state) {
            if ((this.UserValidateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserValidateCompleted(this, new UserValidateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserValidateAsync(string userId, string ePassword, string sourceAddress, int resetReq) {
            this.UserValidateAsync(userId, ePassword, sourceAddress, resetReq, null);
        }
        
        public void UserValidateAsync(string userId, string ePassword, string sourceAddress, int resetReq, object userState) {
            if ((this.onBeginUserValidateDelegate == null)) {
                this.onBeginUserValidateDelegate = new BeginOperationDelegate(this.OnBeginUserValidate);
            }
            if ((this.onEndUserValidateDelegate == null)) {
                this.onEndUserValidateDelegate = new EndOperationDelegate(this.OnEndUserValidate);
            }
            if ((this.onUserValidateCompletedDelegate == null)) {
                this.onUserValidateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserValidateCompleted);
            }
            base.InvokeAsync(this.onBeginUserValidateDelegate, new object[] {
                        userId,
                        ePassword,
                        sourceAddress,
                        resetReq}, this.onEndUserValidateDelegate, this.onUserValidateCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService CreateChannel() {
            return new SecurityServiceClientChannel(this);
        }
        
        private class SecurityServiceClientChannel : ChannelBase<LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService>, LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService {
            
            public SecurityServiceClientChannel(System.ServiceModel.ClientBase<LoanStarWorldWideAdmin.SVR_SecurityService.ISecurityService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetSourceIP(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSourceIP", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetSourceIP(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetSourceIP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserPasswordChange(string userId, string oldEPassword, string newEPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userId;
                _args[1] = oldEPassword;
                _args[2] = newEPassword;
                System.IAsyncResult _result = base.BeginInvoke("UserPasswordChange", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUserPasswordChange(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UserPasswordChange", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserPasswordReset(string userId, string newEPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = newEPassword;
                System.IAsyncResult _result = base.BeginInvoke("UserPasswordReset", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUserPasswordReset(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UserPasswordReset", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserValidate(string userId, string ePassword, string sourceAddress, int resetReq, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = userId;
                _args[1] = ePassword;
                _args[2] = sourceAddress;
                _args[3] = resetReq;
                System.IAsyncResult _result = base.BeginInvoke("UserValidate", _args, callback, asyncState);
                return _result;
            }
            
            public int EndUserValidate(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("UserValidate", _args, result)));
                return _result;
            }
        }
    }
}
