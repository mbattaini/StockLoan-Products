//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockLoanPlatformTester.SecMasterService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecMasterService.ISecMasterService")]
    public interface ISecMasterService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecMasterService/GetSourceIP", ReplyAction="http://tempuri.org/ISecMasterService/GetSourceIPResponse")]
        string GetSourceIP();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecMasterService/PriceSet", ReplyAction="http://tempuri.org/ISecMasterService/PriceSetResponse")]
        bool PriceSet(string bizDate, string secId, string countryCode, string currencyIso, string price, string priceDate, string userId, string userPassword, string bookGroup, string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecMasterService/PricesGet", ReplyAction="http://tempuri.org/ISecMasterService/PricesGetResponse")]
        byte[] PricesGet(string bizDate, string secId, string currencyIso, string userId, string userPassword, string bookGroup, string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecMasterService/SecIdAliasSet", ReplyAction="http://tempuri.org/ISecMasterService/SecIdAliasSetResponse")]
        bool SecIdAliasSet(string secId, string secIdTypeIndex, string secIdAlias, string userId, string userPassword, string bookGroup, string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecMasterService/SecMasterGet", ReplyAction="http://tempuri.org/ISecMasterService/SecMasterGetResponse")]
        byte[] SecMasterGet(string secId, string countryCode, string currencyIso, string bookGroup, string lookUpCriteria, string userId, string userPassword, string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecMasterService/SecMasterSet", ReplyAction="http://tempuri.org/ISecMasterService/SecMasterSetResponse")]
        bool SecMasterSet(
                    string secId, 
                    string description, 
                    string baseType, 
                    string classGroup, 
                    string countryCode, 
                    string currencyIso, 
                    string accruedInterest, 
                    string recordDateCash, 
                    string dividendRate, 
                    string secIdGroup, 
                    string symbol, 
                    string Isin, 
                    string cusip, 
                    string price, 
                    string priceDate, 
                    bool isActive, 
                    string userId, 
                    string userPassword, 
                    string bookGroup, 
                    string functionPath);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISecMasterServiceChannel : StockLoanPlatformTester.SecMasterService.ISecMasterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecMasterServiceClient : System.ServiceModel.ClientBase<StockLoanPlatformTester.SecMasterService.ISecMasterService>, StockLoanPlatformTester.SecMasterService.ISecMasterService {
        
        public SecMasterServiceClient() {
        }
        
        public SecMasterServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SecMasterServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SecMasterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SecMasterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetSourceIP() {
            return base.Channel.GetSourceIP();
        }
        
        public bool PriceSet(string bizDate, string secId, string countryCode, string currencyIso, string price, string priceDate, string userId, string userPassword, string bookGroup, string functionPath) {
            return base.Channel.PriceSet(bizDate, secId, countryCode, currencyIso, price, priceDate, userId, userPassword, bookGroup, functionPath);
        }
        
        public byte[] PricesGet(string bizDate, string secId, string currencyIso, string userId, string userPassword, string bookGroup, string functionPath) {
            return base.Channel.PricesGet(bizDate, secId, currencyIso, userId, userPassword, bookGroup, functionPath);
        }
        
        public bool SecIdAliasSet(string secId, string secIdTypeIndex, string secIdAlias, string userId, string userPassword, string bookGroup, string functionPath) {
            return base.Channel.SecIdAliasSet(secId, secIdTypeIndex, secIdAlias, userId, userPassword, bookGroup, functionPath);
        }
        
        public byte[] SecMasterGet(string secId, string countryCode, string currencyIso, string bookGroup, string lookUpCriteria, string userId, string userPassword, string functionPath) {
            return base.Channel.SecMasterGet(secId, countryCode, currencyIso, bookGroup, lookUpCriteria, userId, userPassword, functionPath);
        }
        
        public bool SecMasterSet(
                    string secId, 
                    string description, 
                    string baseType, 
                    string classGroup, 
                    string countryCode, 
                    string currencyIso, 
                    string accruedInterest, 
                    string recordDateCash, 
                    string dividendRate, 
                    string secIdGroup, 
                    string symbol, 
                    string Isin, 
                    string cusip, 
                    string price, 
                    string priceDate, 
                    bool isActive, 
                    string userId, 
                    string userPassword, 
                    string bookGroup, 
                    string functionPath) {
            return base.Channel.SecMasterSet(secId, description, baseType, classGroup, countryCode, currencyIso, accruedInterest, recordDateCash, dividendRate, secIdGroup, symbol, Isin, cusip, price, priceDate, isActive, userId, userPassword, bookGroup, functionPath);
        }
    }
}
