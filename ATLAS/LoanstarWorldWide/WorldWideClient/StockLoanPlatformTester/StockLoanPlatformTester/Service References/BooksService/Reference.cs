//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockLoanPlatformTester.BooksService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BooksService.IBooksService")]
    public interface IBooksService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/GetSourceIP", ReplyAction="http://tempuri.org/IBooksService/GetSourceIPResponse")]
        string GetSourceIP();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/BookClearingInstructionSet", ReplyAction="http://tempuri.org/IBooksService/BookClearingInstructionSetResponse")]
        bool BookClearingInstructionSet(string bookGroup, string book, string countryCode, string currencyIso, string divRate, string cashInstructions, string securityInstructions, string ActUserId, bool isActive, string userId, string userPassword, string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/BookClearingInstructionsGet", ReplyAction="http://tempuri.org/IBooksService/BookClearingInstructionsGetResponse")]
        byte[] BookClearingInstructionsGet(string bookGroup, string book, string userId, string userPassword, string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/BookContactSet", ReplyAction="http://tempuri.org/IBooksService/BookContactSetResponse")]
        bool BookContactSet(string bookGroup, string book, string firstName, string lastName, string function, string phoneNumber, string faxNumber, string comment, string actUserId, bool isActive, string userId, string userPassword, string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/BookContactsGet", ReplyAction="http://tempuri.org/IBooksService/BookContactsGetResponse")]
        byte[] BookContactsGet(string bookGroup, string book, short utcOffSet, string userId, string userPassword, string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/BookCreditLimitSet", ReplyAction="http://tempuri.org/IBooksService/BookCreditLimitSetResponse")]
        bool BookCreditLimitSet(string bizDate, string bookGroup, string bookParent, string book, string borrowLimitAmount, string loanLimitAmount, string actUserId, string userId, string userPassword, string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/BookCreditLimitsGet", ReplyAction="http://tempuri.org/IBooksService/BookCreditLimitsGetResponse")]
        byte[] BookCreditLimitsGet(string bizDate, string bookGroup, string bookParent, string book, short utcOffSet, string userId, string userPassword, string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/BookFundSet", ReplyAction="http://tempuri.org/IBooksService/BookFundSetResponse")]
        bool BookFundSet(string bookGroup, string book, string actUserId, string currencyIso, string fund, bool isActive, string userId, string userPassword, string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/BookFundsGet", ReplyAction="http://tempuri.org/IBooksService/BookFundsGetResponse")]
        byte[] BookFundsGet(string bookGroup, string book, string currencyIso, string userId, string userPassword, string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/BookGroupRoll", ReplyAction="http://tempuri.org/IBooksService/BookGroupRollResponse")]
        bool BookGroupRoll(string bizDate, string bizDatePrior, string userId, string userPassword, string bookGroup, string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/BookGroupSet", ReplyAction="http://tempuri.org/IBooksService/BookGroupSetResponse")]
        bool BookGroupSet(
                    string bookGroup, 
                    string bookName, 
                    string timeZoneId, 
                    string bizDate, 
                    string bizDateContract, 
                    string bizDateBank, 
                    string bizDateExchange, 
                    string bizDatePrior, 
                    string bizDatePriorBank, 
                    string bizDatePriorExchange, 
                    string bizDateNext, 
                    string bizDateNextBank, 
                    string bizDateNextExchange, 
                    bool useWeekends, 
                    string settlementType, 
                    string userId, 
                    string userPassword, 
                    string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/BookGroupsGet", ReplyAction="http://tempuri.org/IBooksService/BookGroupsGetResponse")]
        byte[] BookGroupsGet(string bookGroup, string bizDate, string userId, string userPassword, string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/BookSet", ReplyAction="http://tempuri.org/IBooksService/BookSetResponse")]
        bool BookSet(
                    string bookGroup, 
                    string bookParent, 
                    string book, 
                    string bookName, 
                    string addressLine1, 
                    string addressLine2, 
                    string addressLine3, 
                    string phoneNumber, 
                    string faxNumber, 
                    string marginBorrow, 
                    string marginLoan, 
                    string markRoundHouse, 
                    string roundInstitution, 
                    string rateStockBorrow, 
                    string rateStockLoan, 
                    string rateBondBorrow, 
                    string rateBondLoan, 
                    string countryCode, 
                    string fundDefault, 
                    string priceMin, 
                    string amountMin, 
                    string actUserId, 
                    bool isActive, 
                    string userId, 
                    string userPassword, 
                    string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooksService/BooksGet", ReplyAction="http://tempuri.org/IBooksService/BooksGetResponse")]
        byte[] BooksGet(string bookGroup, string book, string userId, string userPassword, string functionPath);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBooksServiceChannel : StockLoanPlatformTester.BooksService.IBooksService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BooksServiceClient : System.ServiceModel.ClientBase<StockLoanPlatformTester.BooksService.IBooksService>, StockLoanPlatformTester.BooksService.IBooksService {
        
        public BooksServiceClient() {
        }
        
        public BooksServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BooksServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BooksServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BooksServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetSourceIP() {
            return base.Channel.GetSourceIP();
        }
        
        public bool BookClearingInstructionSet(string bookGroup, string book, string countryCode, string currencyIso, string divRate, string cashInstructions, string securityInstructions, string ActUserId, bool isActive, string userId, string userPassword, string functionPath) {
            return base.Channel.BookClearingInstructionSet(bookGroup, book, countryCode, currencyIso, divRate, cashInstructions, securityInstructions, ActUserId, isActive, userId, userPassword, functionPath);
        }
        
        public byte[] BookClearingInstructionsGet(string bookGroup, string book, string userId, string userPassword, string functionPath) {
            return base.Channel.BookClearingInstructionsGet(bookGroup, book, userId, userPassword, functionPath);
        }
        
        public bool BookContactSet(string bookGroup, string book, string firstName, string lastName, string function, string phoneNumber, string faxNumber, string comment, string actUserId, bool isActive, string userId, string userPassword, string functionPath) {
            return base.Channel.BookContactSet(bookGroup, book, firstName, lastName, function, phoneNumber, faxNumber, comment, actUserId, isActive, userId, userPassword, functionPath);
        }
        
        public byte[] BookContactsGet(string bookGroup, string book, short utcOffSet, string userId, string userPassword, string functionPath) {
            return base.Channel.BookContactsGet(bookGroup, book, utcOffSet, userId, userPassword, functionPath);
        }
        
        public bool BookCreditLimitSet(string bizDate, string bookGroup, string bookParent, string book, string borrowLimitAmount, string loanLimitAmount, string actUserId, string userId, string userPassword, string functionPath) {
            return base.Channel.BookCreditLimitSet(bizDate, bookGroup, bookParent, book, borrowLimitAmount, loanLimitAmount, actUserId, userId, userPassword, functionPath);
        }
        
        public byte[] BookCreditLimitsGet(string bizDate, string bookGroup, string bookParent, string book, short utcOffSet, string userId, string userPassword, string functionPath) {
            return base.Channel.BookCreditLimitsGet(bizDate, bookGroup, bookParent, book, utcOffSet, userId, userPassword, functionPath);
        }
        
        public bool BookFundSet(string bookGroup, string book, string actUserId, string currencyIso, string fund, bool isActive, string userId, string userPassword, string functionPath) {
            return base.Channel.BookFundSet(bookGroup, book, actUserId, currencyIso, fund, isActive, userId, userPassword, functionPath);
        }
        
        public byte[] BookFundsGet(string bookGroup, string book, string currencyIso, string userId, string userPassword, string functionPath) {
            return base.Channel.BookFundsGet(bookGroup, book, currencyIso, userId, userPassword, functionPath);
        }
        
        public bool BookGroupRoll(string bizDate, string bizDatePrior, string userId, string userPassword, string bookGroup, string functionPath) {
            return base.Channel.BookGroupRoll(bizDate, bizDatePrior, userId, userPassword, bookGroup, functionPath);
        }
        
        public bool BookGroupSet(
                    string bookGroup, 
                    string bookName, 
                    string timeZoneId, 
                    string bizDate, 
                    string bizDateContract, 
                    string bizDateBank, 
                    string bizDateExchange, 
                    string bizDatePrior, 
                    string bizDatePriorBank, 
                    string bizDatePriorExchange, 
                    string bizDateNext, 
                    string bizDateNextBank, 
                    string bizDateNextExchange, 
                    bool useWeekends, 
                    string settlementType, 
                    string userId, 
                    string userPassword, 
                    string functionPath) {
            return base.Channel.BookGroupSet(bookGroup, bookName, timeZoneId, bizDate, bizDateContract, bizDateBank, bizDateExchange, bizDatePrior, bizDatePriorBank, bizDatePriorExchange, bizDateNext, bizDateNextBank, bizDateNextExchange, useWeekends, settlementType, userId, userPassword, functionPath);
        }
        
        public byte[] BookGroupsGet(string bookGroup, string bizDate, string userId, string userPassword, string functionPath) {
            return base.Channel.BookGroupsGet(bookGroup, bizDate, userId, userPassword, functionPath);
        }
        
        public bool BookSet(
                    string bookGroup, 
                    string bookParent, 
                    string book, 
                    string bookName, 
                    string addressLine1, 
                    string addressLine2, 
                    string addressLine3, 
                    string phoneNumber, 
                    string faxNumber, 
                    string marginBorrow, 
                    string marginLoan, 
                    string markRoundHouse, 
                    string roundInstitution, 
                    string rateStockBorrow, 
                    string rateStockLoan, 
                    string rateBondBorrow, 
                    string rateBondLoan, 
                    string countryCode, 
                    string fundDefault, 
                    string priceMin, 
                    string amountMin, 
                    string actUserId, 
                    bool isActive, 
                    string userId, 
                    string userPassword, 
                    string functionPath) {
            return base.Channel.BookSet(bookGroup, bookParent, book, bookName, addressLine1, addressLine2, addressLine3, phoneNumber, faxNumber, marginBorrow, marginLoan, markRoundHouse, roundInstitution, rateStockBorrow, rateStockLoan, rateBondBorrow, rateBondLoan, countryCode, fundDefault, priceMin, amountMin, actUserId, isActive, userId, userPassword, functionPath);
        }
        
        public byte[] BooksGet(string bookGroup, string book, string userId, string userPassword, string functionPath) {
            return base.Channel.BooksGet(bookGroup, book, userId, userPassword, functionPath);
        }
    }
}
