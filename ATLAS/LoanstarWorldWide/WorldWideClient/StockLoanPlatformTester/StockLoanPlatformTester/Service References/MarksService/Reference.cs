//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockLoanPlatformTester.MarksService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MarksService.IMarksService")]
    public interface IMarksService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarksService/GetSourceIP", ReplyAction="http://tempuri.org/IMarksService/GetSourceIPResponse")]
        string GetSourceIP();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarksService/MarkAsOfSet", ReplyAction="http://tempuri.org/IMarksService/MarkAsOfSetResponse")]
        int MarkAsOfSet(string tradeDate, string settleDate, string bookGroup, string book, string contractId, string contractType, string price, string markId, string deliveryCode, string actUserId, string userId, string userPassword, string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarksService/MarkIsExistGet", ReplyAction="http://tempuri.org/IMarksService/MarkIsExistGetResponse")]
        bool MarkIsExistGet(string bizDate, string bookGroup, string book, string contractId, string contractType, string secId, string amount, string userId, string userPassword, string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarksService/MarkSet", ReplyAction="http://tempuri.org/IMarksService/MarkSetResponse")]
        bool MarkSet(
                    string markId, 
                    string bizDate, 
                    string bookGroup, 
                    string book, 
                    string contractId, 
                    string contractType, 
                    string secId, 
                    string amount, 
                    string openDate, 
                    string settleDate, 
                    string deliveryCode, 
                    string actUserId, 
                    bool isActive, 
                    string userId, 
                    string userPassword, 
                    string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarksService/MarksGet", ReplyAction="http://tempuri.org/IMarksService/MarksGetResponse")]
        byte[] MarksGet(string markId, string bizDate, string contractId, string bookGroup, short utcOffset, string userId, string userPassword, string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarksService/MarksSummaryByCashGet", ReplyAction="http://tempuri.org/IMarksService/MarksSummaryByCashGetResponse")]
        byte[] MarksSummaryByCashGet(string markId, string bizDate, string contractId, string bookGroup, string userId, string userPassword, string functionPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarksService/MarksSummaryGet", ReplyAction="http://tempuri.org/IMarksService/MarksSummaryGetResponse")]
        byte[] MarksSummaryGet(string markId, string bizDate, string bizDateFormat, string contractId, string bookGroup, string userId, string userPassword, string functionPath);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMarksServiceChannel : StockLoanPlatformTester.MarksService.IMarksService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MarksServiceClient : System.ServiceModel.ClientBase<StockLoanPlatformTester.MarksService.IMarksService>, StockLoanPlatformTester.MarksService.IMarksService {
        
        public MarksServiceClient() {
        }
        
        public MarksServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MarksServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MarksServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MarksServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetSourceIP() {
            return base.Channel.GetSourceIP();
        }
        
        public int MarkAsOfSet(string tradeDate, string settleDate, string bookGroup, string book, string contractId, string contractType, string price, string markId, string deliveryCode, string actUserId, string userId, string userPassword, string functionPath) {
            return base.Channel.MarkAsOfSet(tradeDate, settleDate, bookGroup, book, contractId, contractType, price, markId, deliveryCode, actUserId, userId, userPassword, functionPath);
        }
        
        public bool MarkIsExistGet(string bizDate, string bookGroup, string book, string contractId, string contractType, string secId, string amount, string userId, string userPassword, string functionPath) {
            return base.Channel.MarkIsExistGet(bizDate, bookGroup, book, contractId, contractType, secId, amount, userId, userPassword, functionPath);
        }
        
        public bool MarkSet(
                    string markId, 
                    string bizDate, 
                    string bookGroup, 
                    string book, 
                    string contractId, 
                    string contractType, 
                    string secId, 
                    string amount, 
                    string openDate, 
                    string settleDate, 
                    string deliveryCode, 
                    string actUserId, 
                    bool isActive, 
                    string userId, 
                    string userPassword, 
                    string functionPath) {
            return base.Channel.MarkSet(markId, bizDate, bookGroup, book, contractId, contractType, secId, amount, openDate, settleDate, deliveryCode, actUserId, isActive, userId, userPassword, functionPath);
        }
        
        public byte[] MarksGet(string markId, string bizDate, string contractId, string bookGroup, short utcOffset, string userId, string userPassword, string functionPath) {
            return base.Channel.MarksGet(markId, bizDate, contractId, bookGroup, utcOffset, userId, userPassword, functionPath);
        }
        
        public byte[] MarksSummaryByCashGet(string markId, string bizDate, string contractId, string bookGroup, string userId, string userPassword, string functionPath) {
            return base.Channel.MarksSummaryByCashGet(markId, bizDate, contractId, bookGroup, userId, userPassword, functionPath);
        }
        
        public byte[] MarksSummaryGet(string markId, string bizDate, string bizDateFormat, string contractId, string bookGroup, string userId, string userPassword, string functionPath) {
            return base.Channel.MarksSummaryGet(markId, bizDate, bizDateFormat, contractId, bookGroup, userId, userPassword, functionPath);
        }
    }
}
