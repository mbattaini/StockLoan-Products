//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace WorldWideClient.ServiceUserAdmin {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceUserAdmin.IUserAdminService")]
    public interface IUserAdminService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserAdminService/FunctionSet", ReplyAction="http://tempuri.org/IUserAdminService/FunctionSetResponse")]
        System.IAsyncResult BeginFunctionSet(string functionPathSet, bool mayView, bool mayEdit, string bookGroup, string functionPath, string userId, string userPassword, System.AsyncCallback callback, object asyncState);
        
        bool EndFunctionSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserAdminService/FunctionsGet", ReplyAction="http://tempuri.org/IUserAdminService/FunctionsGetResponse")]
        System.IAsyncResult BeginFunctionsGet(string functionPathGet, string bookGroup, string functionPath, string userId, string userPassword, System.AsyncCallback callback, object asyncState);
        
        byte[] EndFunctionsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserAdminService/RoleFunctionsBookGroupGet", ReplyAction="http://tempuri.org/IUserAdminService/RoleFunctionsBookGroupGetResponse")]
        System.IAsyncResult BeginRoleFunctionsBookGroupGet(string userIdGet, string bookGroupGet, string bookGroup, string functionPath, string userId, string userPassword, System.AsyncCallback callback, object asyncState);
        
        byte[] EndRoleFunctionsBookGroupGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserAdminService/RoleFunctionsBookGroupSet", ReplyAction="http://tempuri.org/IUserAdminService/RoleFunctionsBookGroupSetResponse")]
        System.IAsyncResult BeginRoleFunctionsBookGroupSet(string roleNameSet, string functionPathSet, string bookGroupSet, string actUserId, short isActive, short delete, string bookGroup, string functionPath, string userId, string userPassword, System.AsyncCallback callback, object asyncState);
        
        bool EndRoleFunctionsBookGroupSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserAdminService/RoleFunctionSet", ReplyAction="http://tempuri.org/IUserAdminService/RoleFunctionSetResponse")]
        System.IAsyncResult BeginRoleFunctionSet(string roleName, string functionPathSet, bool mayView, bool mayEdit, string comment, bool delete, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState);
        
        bool EndRoleFunctionSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserAdminService/RoleSet", ReplyAction="http://tempuri.org/IUserAdminService/RoleSetResponse")]
        System.IAsyncResult BeginRoleSet(string roleId, string roleName, string comment, bool delete, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState);
        
        bool EndRoleSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserAdminService/RolesGet", ReplyAction="http://tempuri.org/IUserAdminService/RolesGetResponse")]
        System.IAsyncResult BeginRolesGet(string roleCode, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndRolesGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserAdminService/UserGet", ReplyAction="http://tempuri.org/IUserAdminService/UserGetResponse")]
        System.IAsyncResult BeginUserGet(string userIdGet, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndUserGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserAdminService/RoleFunctionsGet", ReplyAction="http://tempuri.org/IUserAdminService/RoleFunctionsGetResponse")]
        System.IAsyncResult BeginRoleFunctionsGet(string roleName, string functionPathGet, short utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndRoleFunctionsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserAdminService/UserRolesGet", ReplyAction="http://tempuri.org/IUserAdminService/UserRolesGetResponse")]
        System.IAsyncResult BeginUserRolesGet(string userIdGet, string roleName, short utcOffset, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndUserRolesGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserAdminService/UserRolesSet", ReplyAction="http://tempuri.org/IUserAdminService/UserRolesSetResponse")]
        System.IAsyncResult BeginUserRolesSet(string userIdSet, string roleName, string comment, bool delete, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState);
        
        bool EndUserRolesSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserAdminService/UserSet", ReplyAction="http://tempuri.org/IUserAdminService/UserSetResponse")]
        System.IAsyncResult BeginUserSet(string userIdSet, string shortName, string newPassword, string email, string title, string comment, bool isLocked, bool isActive, bool isLoggedIn, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState);
        
        bool EndUserSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserAdminService/UserBookGroupsGet", ReplyAction="http://tempuri.org/IUserAdminService/UserBookGroupsGetResponse")]
        System.IAsyncResult BeginUserBookGroupsGet(string userId, string functionPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndUserBookGroupsGet(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserAdminServiceChannel : WorldWideClient.ServiceUserAdmin.IUserAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FunctionSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FunctionSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FunctionsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FunctionsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleFunctionsBookGroupGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RoleFunctionsBookGroupGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleFunctionsBookGroupSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RoleFunctionsBookGroupSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleFunctionSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RoleFunctionSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RoleSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RolesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RolesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleFunctionsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RoleFunctionsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserRolesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserRolesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserRolesSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserRolesSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserBookGroupsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserBookGroupsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserAdminServiceClient : System.ServiceModel.ClientBase<WorldWideClient.ServiceUserAdmin.IUserAdminService>, WorldWideClient.ServiceUserAdmin.IUserAdminService {
        
        private BeginOperationDelegate onBeginFunctionSetDelegate;
        
        private EndOperationDelegate onEndFunctionSetDelegate;
        
        private System.Threading.SendOrPostCallback onFunctionSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginFunctionsGetDelegate;
        
        private EndOperationDelegate onEndFunctionsGetDelegate;
        
        private System.Threading.SendOrPostCallback onFunctionsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginRoleFunctionsBookGroupGetDelegate;
        
        private EndOperationDelegate onEndRoleFunctionsBookGroupGetDelegate;
        
        private System.Threading.SendOrPostCallback onRoleFunctionsBookGroupGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginRoleFunctionsBookGroupSetDelegate;
        
        private EndOperationDelegate onEndRoleFunctionsBookGroupSetDelegate;
        
        private System.Threading.SendOrPostCallback onRoleFunctionsBookGroupSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginRoleFunctionSetDelegate;
        
        private EndOperationDelegate onEndRoleFunctionSetDelegate;
        
        private System.Threading.SendOrPostCallback onRoleFunctionSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginRoleSetDelegate;
        
        private EndOperationDelegate onEndRoleSetDelegate;
        
        private System.Threading.SendOrPostCallback onRoleSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginRolesGetDelegate;
        
        private EndOperationDelegate onEndRolesGetDelegate;
        
        private System.Threading.SendOrPostCallback onRolesGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserGetDelegate;
        
        private EndOperationDelegate onEndUserGetDelegate;
        
        private System.Threading.SendOrPostCallback onUserGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginRoleFunctionsGetDelegate;
        
        private EndOperationDelegate onEndRoleFunctionsGetDelegate;
        
        private System.Threading.SendOrPostCallback onRoleFunctionsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserRolesGetDelegate;
        
        private EndOperationDelegate onEndUserRolesGetDelegate;
        
        private System.Threading.SendOrPostCallback onUserRolesGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserRolesSetDelegate;
        
        private EndOperationDelegate onEndUserRolesSetDelegate;
        
        private System.Threading.SendOrPostCallback onUserRolesSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserSetDelegate;
        
        private EndOperationDelegate onEndUserSetDelegate;
        
        private System.Threading.SendOrPostCallback onUserSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserBookGroupsGetDelegate;
        
        private EndOperationDelegate onEndUserBookGroupsGetDelegate;
        
        private System.Threading.SendOrPostCallback onUserBookGroupsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public UserAdminServiceClient() {
        }
        
        public UserAdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserAdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserAdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserAdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<FunctionSetCompletedEventArgs> FunctionSetCompleted;
        
        public event System.EventHandler<FunctionsGetCompletedEventArgs> FunctionsGetCompleted;
        
        public event System.EventHandler<RoleFunctionsBookGroupGetCompletedEventArgs> RoleFunctionsBookGroupGetCompleted;
        
        public event System.EventHandler<RoleFunctionsBookGroupSetCompletedEventArgs> RoleFunctionsBookGroupSetCompleted;
        
        public event System.EventHandler<RoleFunctionSetCompletedEventArgs> RoleFunctionSetCompleted;
        
        public event System.EventHandler<RoleSetCompletedEventArgs> RoleSetCompleted;
        
        public event System.EventHandler<RolesGetCompletedEventArgs> RolesGetCompleted;
        
        public event System.EventHandler<UserGetCompletedEventArgs> UserGetCompleted;
        
        public event System.EventHandler<RoleFunctionsGetCompletedEventArgs> RoleFunctionsGetCompleted;
        
        public event System.EventHandler<UserRolesGetCompletedEventArgs> UserRolesGetCompleted;
        
        public event System.EventHandler<UserRolesSetCompletedEventArgs> UserRolesSetCompleted;
        
        public event System.EventHandler<UserSetCompletedEventArgs> UserSetCompleted;
        
        public event System.EventHandler<UserBookGroupsGetCompletedEventArgs> UserBookGroupsGetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorldWideClient.ServiceUserAdmin.IUserAdminService.BeginFunctionSet(string functionPathSet, bool mayView, bool mayEdit, string bookGroup, string functionPath, string userId, string userPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFunctionSet(functionPathSet, mayView, mayEdit, bookGroup, functionPath, userId, userPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WorldWideClient.ServiceUserAdmin.IUserAdminService.EndFunctionSet(System.IAsyncResult result) {
            return base.Channel.EndFunctionSet(result);
        }
        
        private System.IAsyncResult OnBeginFunctionSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string functionPathSet = ((string)(inValues[0]));
            bool mayView = ((bool)(inValues[1]));
            bool mayEdit = ((bool)(inValues[2]));
            string bookGroup = ((string)(inValues[3]));
            string functionPath = ((string)(inValues[4]));
            string userId = ((string)(inValues[5]));
            string userPassword = ((string)(inValues[6]));
            return ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).BeginFunctionSet(functionPathSet, mayView, mayEdit, bookGroup, functionPath, userId, userPassword, callback, asyncState);
        }
        
        private object[] OnEndFunctionSet(System.IAsyncResult result) {
            bool retVal = ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).EndFunctionSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFunctionSetCompleted(object state) {
            if ((this.FunctionSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FunctionSetCompleted(this, new FunctionSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FunctionSetAsync(string functionPathSet, bool mayView, bool mayEdit, string bookGroup, string functionPath, string userId, string userPassword) {
            this.FunctionSetAsync(functionPathSet, mayView, mayEdit, bookGroup, functionPath, userId, userPassword, null);
        }
        
        public void FunctionSetAsync(string functionPathSet, bool mayView, bool mayEdit, string bookGroup, string functionPath, string userId, string userPassword, object userState) {
            if ((this.onBeginFunctionSetDelegate == null)) {
                this.onBeginFunctionSetDelegate = new BeginOperationDelegate(this.OnBeginFunctionSet);
            }
            if ((this.onEndFunctionSetDelegate == null)) {
                this.onEndFunctionSetDelegate = new EndOperationDelegate(this.OnEndFunctionSet);
            }
            if ((this.onFunctionSetCompletedDelegate == null)) {
                this.onFunctionSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFunctionSetCompleted);
            }
            base.InvokeAsync(this.onBeginFunctionSetDelegate, new object[] {
                        functionPathSet,
                        mayView,
                        mayEdit,
                        bookGroup,
                        functionPath,
                        userId,
                        userPassword}, this.onEndFunctionSetDelegate, this.onFunctionSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorldWideClient.ServiceUserAdmin.IUserAdminService.BeginFunctionsGet(string functionPathGet, string bookGroup, string functionPath, string userId, string userPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFunctionsGet(functionPathGet, bookGroup, functionPath, userId, userPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] WorldWideClient.ServiceUserAdmin.IUserAdminService.EndFunctionsGet(System.IAsyncResult result) {
            return base.Channel.EndFunctionsGet(result);
        }
        
        private System.IAsyncResult OnBeginFunctionsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string functionPathGet = ((string)(inValues[0]));
            string bookGroup = ((string)(inValues[1]));
            string functionPath = ((string)(inValues[2]));
            string userId = ((string)(inValues[3]));
            string userPassword = ((string)(inValues[4]));
            return ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).BeginFunctionsGet(functionPathGet, bookGroup, functionPath, userId, userPassword, callback, asyncState);
        }
        
        private object[] OnEndFunctionsGet(System.IAsyncResult result) {
            byte[] retVal = ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).EndFunctionsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFunctionsGetCompleted(object state) {
            if ((this.FunctionsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FunctionsGetCompleted(this, new FunctionsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FunctionsGetAsync(string functionPathGet, string bookGroup, string functionPath, string userId, string userPassword) {
            this.FunctionsGetAsync(functionPathGet, bookGroup, functionPath, userId, userPassword, null);
        }
        
        public void FunctionsGetAsync(string functionPathGet, string bookGroup, string functionPath, string userId, string userPassword, object userState) {
            if ((this.onBeginFunctionsGetDelegate == null)) {
                this.onBeginFunctionsGetDelegate = new BeginOperationDelegate(this.OnBeginFunctionsGet);
            }
            if ((this.onEndFunctionsGetDelegate == null)) {
                this.onEndFunctionsGetDelegate = new EndOperationDelegate(this.OnEndFunctionsGet);
            }
            if ((this.onFunctionsGetCompletedDelegate == null)) {
                this.onFunctionsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFunctionsGetCompleted);
            }
            base.InvokeAsync(this.onBeginFunctionsGetDelegate, new object[] {
                        functionPathGet,
                        bookGroup,
                        functionPath,
                        userId,
                        userPassword}, this.onEndFunctionsGetDelegate, this.onFunctionsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorldWideClient.ServiceUserAdmin.IUserAdminService.BeginRoleFunctionsBookGroupGet(string userIdGet, string bookGroupGet, string bookGroup, string functionPath, string userId, string userPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRoleFunctionsBookGroupGet(userIdGet, bookGroupGet, bookGroup, functionPath, userId, userPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] WorldWideClient.ServiceUserAdmin.IUserAdminService.EndRoleFunctionsBookGroupGet(System.IAsyncResult result) {
            return base.Channel.EndRoleFunctionsBookGroupGet(result);
        }
        
        private System.IAsyncResult OnBeginRoleFunctionsBookGroupGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdGet = ((string)(inValues[0]));
            string bookGroupGet = ((string)(inValues[1]));
            string bookGroup = ((string)(inValues[2]));
            string functionPath = ((string)(inValues[3]));
            string userId = ((string)(inValues[4]));
            string userPassword = ((string)(inValues[5]));
            return ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).BeginRoleFunctionsBookGroupGet(userIdGet, bookGroupGet, bookGroup, functionPath, userId, userPassword, callback, asyncState);
        }
        
        private object[] OnEndRoleFunctionsBookGroupGet(System.IAsyncResult result) {
            byte[] retVal = ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).EndRoleFunctionsBookGroupGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRoleFunctionsBookGroupGetCompleted(object state) {
            if ((this.RoleFunctionsBookGroupGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RoleFunctionsBookGroupGetCompleted(this, new RoleFunctionsBookGroupGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RoleFunctionsBookGroupGetAsync(string userIdGet, string bookGroupGet, string bookGroup, string functionPath, string userId, string userPassword) {
            this.RoleFunctionsBookGroupGetAsync(userIdGet, bookGroupGet, bookGroup, functionPath, userId, userPassword, null);
        }
        
        public void RoleFunctionsBookGroupGetAsync(string userIdGet, string bookGroupGet, string bookGroup, string functionPath, string userId, string userPassword, object userState) {
            if ((this.onBeginRoleFunctionsBookGroupGetDelegate == null)) {
                this.onBeginRoleFunctionsBookGroupGetDelegate = new BeginOperationDelegate(this.OnBeginRoleFunctionsBookGroupGet);
            }
            if ((this.onEndRoleFunctionsBookGroupGetDelegate == null)) {
                this.onEndRoleFunctionsBookGroupGetDelegate = new EndOperationDelegate(this.OnEndRoleFunctionsBookGroupGet);
            }
            if ((this.onRoleFunctionsBookGroupGetCompletedDelegate == null)) {
                this.onRoleFunctionsBookGroupGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRoleFunctionsBookGroupGetCompleted);
            }
            base.InvokeAsync(this.onBeginRoleFunctionsBookGroupGetDelegate, new object[] {
                        userIdGet,
                        bookGroupGet,
                        bookGroup,
                        functionPath,
                        userId,
                        userPassword}, this.onEndRoleFunctionsBookGroupGetDelegate, this.onRoleFunctionsBookGroupGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorldWideClient.ServiceUserAdmin.IUserAdminService.BeginRoleFunctionsBookGroupSet(string roleNameSet, string functionPathSet, string bookGroupSet, string actUserId, short isActive, short delete, string bookGroup, string functionPath, string userId, string userPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRoleFunctionsBookGroupSet(roleNameSet, functionPathSet, bookGroupSet, actUserId, isActive, delete, bookGroup, functionPath, userId, userPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WorldWideClient.ServiceUserAdmin.IUserAdminService.EndRoleFunctionsBookGroupSet(System.IAsyncResult result) {
            return base.Channel.EndRoleFunctionsBookGroupSet(result);
        }
        
        private System.IAsyncResult OnBeginRoleFunctionsBookGroupSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string roleNameSet = ((string)(inValues[0]));
            string functionPathSet = ((string)(inValues[1]));
            string bookGroupSet = ((string)(inValues[2]));
            string actUserId = ((string)(inValues[3]));
            short isActive = ((short)(inValues[4]));
            short delete = ((short)(inValues[5]));
            string bookGroup = ((string)(inValues[6]));
            string functionPath = ((string)(inValues[7]));
            string userId = ((string)(inValues[8]));
            string userPassword = ((string)(inValues[9]));
            return ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).BeginRoleFunctionsBookGroupSet(roleNameSet, functionPathSet, bookGroupSet, actUserId, isActive, delete, bookGroup, functionPath, userId, userPassword, callback, asyncState);
        }
        
        private object[] OnEndRoleFunctionsBookGroupSet(System.IAsyncResult result) {
            bool retVal = ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).EndRoleFunctionsBookGroupSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRoleFunctionsBookGroupSetCompleted(object state) {
            if ((this.RoleFunctionsBookGroupSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RoleFunctionsBookGroupSetCompleted(this, new RoleFunctionsBookGroupSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RoleFunctionsBookGroupSetAsync(string roleNameSet, string functionPathSet, string bookGroupSet, string actUserId, short isActive, short delete, string bookGroup, string functionPath, string userId, string userPassword) {
            this.RoleFunctionsBookGroupSetAsync(roleNameSet, functionPathSet, bookGroupSet, actUserId, isActive, delete, bookGroup, functionPath, userId, userPassword, null);
        }
        
        public void RoleFunctionsBookGroupSetAsync(string roleNameSet, string functionPathSet, string bookGroupSet, string actUserId, short isActive, short delete, string bookGroup, string functionPath, string userId, string userPassword, object userState) {
            if ((this.onBeginRoleFunctionsBookGroupSetDelegate == null)) {
                this.onBeginRoleFunctionsBookGroupSetDelegate = new BeginOperationDelegate(this.OnBeginRoleFunctionsBookGroupSet);
            }
            if ((this.onEndRoleFunctionsBookGroupSetDelegate == null)) {
                this.onEndRoleFunctionsBookGroupSetDelegate = new EndOperationDelegate(this.OnEndRoleFunctionsBookGroupSet);
            }
            if ((this.onRoleFunctionsBookGroupSetCompletedDelegate == null)) {
                this.onRoleFunctionsBookGroupSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRoleFunctionsBookGroupSetCompleted);
            }
            base.InvokeAsync(this.onBeginRoleFunctionsBookGroupSetDelegate, new object[] {
                        roleNameSet,
                        functionPathSet,
                        bookGroupSet,
                        actUserId,
                        isActive,
                        delete,
                        bookGroup,
                        functionPath,
                        userId,
                        userPassword}, this.onEndRoleFunctionsBookGroupSetDelegate, this.onRoleFunctionsBookGroupSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorldWideClient.ServiceUserAdmin.IUserAdminService.BeginRoleFunctionSet(string roleName, string functionPathSet, bool mayView, bool mayEdit, string comment, bool delete, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRoleFunctionSet(roleName, functionPathSet, mayView, mayEdit, comment, delete, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WorldWideClient.ServiceUserAdmin.IUserAdminService.EndRoleFunctionSet(System.IAsyncResult result) {
            return base.Channel.EndRoleFunctionSet(result);
        }
        
        private System.IAsyncResult OnBeginRoleFunctionSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string roleName = ((string)(inValues[0]));
            string functionPathSet = ((string)(inValues[1]));
            bool mayView = ((bool)(inValues[2]));
            bool mayEdit = ((bool)(inValues[3]));
            string comment = ((string)(inValues[4]));
            bool delete = ((bool)(inValues[5]));
            string userId = ((string)(inValues[6]));
            string userPassword = ((string)(inValues[7]));
            string bookGroup = ((string)(inValues[8]));
            string functionPath = ((string)(inValues[9]));
            return ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).BeginRoleFunctionSet(roleName, functionPathSet, mayView, mayEdit, comment, delete, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        private object[] OnEndRoleFunctionSet(System.IAsyncResult result) {
            bool retVal = ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).EndRoleFunctionSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRoleFunctionSetCompleted(object state) {
            if ((this.RoleFunctionSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RoleFunctionSetCompleted(this, new RoleFunctionSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RoleFunctionSetAsync(string roleName, string functionPathSet, bool mayView, bool mayEdit, string comment, bool delete, string userId, string userPassword, string bookGroup, string functionPath) {
            this.RoleFunctionSetAsync(roleName, functionPathSet, mayView, mayEdit, comment, delete, userId, userPassword, bookGroup, functionPath, null);
        }
        
        public void RoleFunctionSetAsync(string roleName, string functionPathSet, bool mayView, bool mayEdit, string comment, bool delete, string userId, string userPassword, string bookGroup, string functionPath, object userState) {
            if ((this.onBeginRoleFunctionSetDelegate == null)) {
                this.onBeginRoleFunctionSetDelegate = new BeginOperationDelegate(this.OnBeginRoleFunctionSet);
            }
            if ((this.onEndRoleFunctionSetDelegate == null)) {
                this.onEndRoleFunctionSetDelegate = new EndOperationDelegate(this.OnEndRoleFunctionSet);
            }
            if ((this.onRoleFunctionSetCompletedDelegate == null)) {
                this.onRoleFunctionSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRoleFunctionSetCompleted);
            }
            base.InvokeAsync(this.onBeginRoleFunctionSetDelegate, new object[] {
                        roleName,
                        functionPathSet,
                        mayView,
                        mayEdit,
                        comment,
                        delete,
                        userId,
                        userPassword,
                        bookGroup,
                        functionPath}, this.onEndRoleFunctionSetDelegate, this.onRoleFunctionSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorldWideClient.ServiceUserAdmin.IUserAdminService.BeginRoleSet(string roleId, string roleName, string comment, bool delete, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRoleSet(roleId, roleName, comment, delete, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WorldWideClient.ServiceUserAdmin.IUserAdminService.EndRoleSet(System.IAsyncResult result) {
            return base.Channel.EndRoleSet(result);
        }
        
        private System.IAsyncResult OnBeginRoleSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string roleId = ((string)(inValues[0]));
            string roleName = ((string)(inValues[1]));
            string comment = ((string)(inValues[2]));
            bool delete = ((bool)(inValues[3]));
            string userId = ((string)(inValues[4]));
            string userPassword = ((string)(inValues[5]));
            string bookGroup = ((string)(inValues[6]));
            string functionPath = ((string)(inValues[7]));
            return ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).BeginRoleSet(roleId, roleName, comment, delete, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        private object[] OnEndRoleSet(System.IAsyncResult result) {
            bool retVal = ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).EndRoleSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRoleSetCompleted(object state) {
            if ((this.RoleSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RoleSetCompleted(this, new RoleSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RoleSetAsync(string roleId, string roleName, string comment, bool delete, string userId, string userPassword, string bookGroup, string functionPath) {
            this.RoleSetAsync(roleId, roleName, comment, delete, userId, userPassword, bookGroup, functionPath, null);
        }
        
        public void RoleSetAsync(string roleId, string roleName, string comment, bool delete, string userId, string userPassword, string bookGroup, string functionPath, object userState) {
            if ((this.onBeginRoleSetDelegate == null)) {
                this.onBeginRoleSetDelegate = new BeginOperationDelegate(this.OnBeginRoleSet);
            }
            if ((this.onEndRoleSetDelegate == null)) {
                this.onEndRoleSetDelegate = new EndOperationDelegate(this.OnEndRoleSet);
            }
            if ((this.onRoleSetCompletedDelegate == null)) {
                this.onRoleSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRoleSetCompleted);
            }
            base.InvokeAsync(this.onBeginRoleSetDelegate, new object[] {
                        roleId,
                        roleName,
                        comment,
                        delete,
                        userId,
                        userPassword,
                        bookGroup,
                        functionPath}, this.onEndRoleSetDelegate, this.onRoleSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorldWideClient.ServiceUserAdmin.IUserAdminService.BeginRolesGet(string roleCode, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRolesGet(roleCode, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] WorldWideClient.ServiceUserAdmin.IUserAdminService.EndRolesGet(System.IAsyncResult result) {
            return base.Channel.EndRolesGet(result);
        }
        
        private System.IAsyncResult OnBeginRolesGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string roleCode = ((string)(inValues[0]));
            string userId = ((string)(inValues[1]));
            string userPassword = ((string)(inValues[2]));
            string bookGroup = ((string)(inValues[3]));
            string functionPath = ((string)(inValues[4]));
            return ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).BeginRolesGet(roleCode, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        private object[] OnEndRolesGet(System.IAsyncResult result) {
            byte[] retVal = ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).EndRolesGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRolesGetCompleted(object state) {
            if ((this.RolesGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RolesGetCompleted(this, new RolesGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RolesGetAsync(string roleCode, string userId, string userPassword, string bookGroup, string functionPath) {
            this.RolesGetAsync(roleCode, userId, userPassword, bookGroup, functionPath, null);
        }
        
        public void RolesGetAsync(string roleCode, string userId, string userPassword, string bookGroup, string functionPath, object userState) {
            if ((this.onBeginRolesGetDelegate == null)) {
                this.onBeginRolesGetDelegate = new BeginOperationDelegate(this.OnBeginRolesGet);
            }
            if ((this.onEndRolesGetDelegate == null)) {
                this.onEndRolesGetDelegate = new EndOperationDelegate(this.OnEndRolesGet);
            }
            if ((this.onRolesGetCompletedDelegate == null)) {
                this.onRolesGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRolesGetCompleted);
            }
            base.InvokeAsync(this.onBeginRolesGetDelegate, new object[] {
                        roleCode,
                        userId,
                        userPassword,
                        bookGroup,
                        functionPath}, this.onEndRolesGetDelegate, this.onRolesGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorldWideClient.ServiceUserAdmin.IUserAdminService.BeginUserGet(string userIdGet, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserGet(userIdGet, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] WorldWideClient.ServiceUserAdmin.IUserAdminService.EndUserGet(System.IAsyncResult result) {
            return base.Channel.EndUserGet(result);
        }
        
        private System.IAsyncResult OnBeginUserGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdGet = ((string)(inValues[0]));
            string userId = ((string)(inValues[1]));
            string userPassword = ((string)(inValues[2]));
            string bookGroup = ((string)(inValues[3]));
            string functionPath = ((string)(inValues[4]));
            return ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).BeginUserGet(userIdGet, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        private object[] OnEndUserGet(System.IAsyncResult result) {
            byte[] retVal = ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).EndUserGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserGetCompleted(object state) {
            if ((this.UserGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserGetCompleted(this, new UserGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserGetAsync(string userIdGet, string userId, string userPassword, string bookGroup, string functionPath) {
            this.UserGetAsync(userIdGet, userId, userPassword, bookGroup, functionPath, null);
        }
        
        public void UserGetAsync(string userIdGet, string userId, string userPassword, string bookGroup, string functionPath, object userState) {
            if ((this.onBeginUserGetDelegate == null)) {
                this.onBeginUserGetDelegate = new BeginOperationDelegate(this.OnBeginUserGet);
            }
            if ((this.onEndUserGetDelegate == null)) {
                this.onEndUserGetDelegate = new EndOperationDelegate(this.OnEndUserGet);
            }
            if ((this.onUserGetCompletedDelegate == null)) {
                this.onUserGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserGetCompleted);
            }
            base.InvokeAsync(this.onBeginUserGetDelegate, new object[] {
                        userIdGet,
                        userId,
                        userPassword,
                        bookGroup,
                        functionPath}, this.onEndUserGetDelegate, this.onUserGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorldWideClient.ServiceUserAdmin.IUserAdminService.BeginRoleFunctionsGet(string roleName, string functionPathGet, short utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRoleFunctionsGet(roleName, functionPathGet, utcOffSet, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] WorldWideClient.ServiceUserAdmin.IUserAdminService.EndRoleFunctionsGet(System.IAsyncResult result) {
            return base.Channel.EndRoleFunctionsGet(result);
        }
        
        private System.IAsyncResult OnBeginRoleFunctionsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string roleName = ((string)(inValues[0]));
            string functionPathGet = ((string)(inValues[1]));
            short utcOffSet = ((short)(inValues[2]));
            string userId = ((string)(inValues[3]));
            string userPassword = ((string)(inValues[4]));
            string bookGroup = ((string)(inValues[5]));
            string functionPath = ((string)(inValues[6]));
            return ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).BeginRoleFunctionsGet(roleName, functionPathGet, utcOffSet, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        private object[] OnEndRoleFunctionsGet(System.IAsyncResult result) {
            byte[] retVal = ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).EndRoleFunctionsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRoleFunctionsGetCompleted(object state) {
            if ((this.RoleFunctionsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RoleFunctionsGetCompleted(this, new RoleFunctionsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RoleFunctionsGetAsync(string roleName, string functionPathGet, short utcOffSet, string userId, string userPassword, string bookGroup, string functionPath) {
            this.RoleFunctionsGetAsync(roleName, functionPathGet, utcOffSet, userId, userPassword, bookGroup, functionPath, null);
        }
        
        public void RoleFunctionsGetAsync(string roleName, string functionPathGet, short utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, object userState) {
            if ((this.onBeginRoleFunctionsGetDelegate == null)) {
                this.onBeginRoleFunctionsGetDelegate = new BeginOperationDelegate(this.OnBeginRoleFunctionsGet);
            }
            if ((this.onEndRoleFunctionsGetDelegate == null)) {
                this.onEndRoleFunctionsGetDelegate = new EndOperationDelegate(this.OnEndRoleFunctionsGet);
            }
            if ((this.onRoleFunctionsGetCompletedDelegate == null)) {
                this.onRoleFunctionsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRoleFunctionsGetCompleted);
            }
            base.InvokeAsync(this.onBeginRoleFunctionsGetDelegate, new object[] {
                        roleName,
                        functionPathGet,
                        utcOffSet,
                        userId,
                        userPassword,
                        bookGroup,
                        functionPath}, this.onEndRoleFunctionsGetDelegate, this.onRoleFunctionsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorldWideClient.ServiceUserAdmin.IUserAdminService.BeginUserRolesGet(string userIdGet, string roleName, short utcOffset, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserRolesGet(userIdGet, roleName, utcOffset, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] WorldWideClient.ServiceUserAdmin.IUserAdminService.EndUserRolesGet(System.IAsyncResult result) {
            return base.Channel.EndUserRolesGet(result);
        }
        
        private System.IAsyncResult OnBeginUserRolesGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdGet = ((string)(inValues[0]));
            string roleName = ((string)(inValues[1]));
            short utcOffset = ((short)(inValues[2]));
            string userId = ((string)(inValues[3]));
            string userPassword = ((string)(inValues[4]));
            string bookGroup = ((string)(inValues[5]));
            string functionPath = ((string)(inValues[6]));
            return ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).BeginUserRolesGet(userIdGet, roleName, utcOffset, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        private object[] OnEndUserRolesGet(System.IAsyncResult result) {
            byte[] retVal = ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).EndUserRolesGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserRolesGetCompleted(object state) {
            if ((this.UserRolesGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserRolesGetCompleted(this, new UserRolesGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserRolesGetAsync(string userIdGet, string roleName, short utcOffset, string userId, string userPassword, string bookGroup, string functionPath) {
            this.UserRolesGetAsync(userIdGet, roleName, utcOffset, userId, userPassword, bookGroup, functionPath, null);
        }
        
        public void UserRolesGetAsync(string userIdGet, string roleName, short utcOffset, string userId, string userPassword, string bookGroup, string functionPath, object userState) {
            if ((this.onBeginUserRolesGetDelegate == null)) {
                this.onBeginUserRolesGetDelegate = new BeginOperationDelegate(this.OnBeginUserRolesGet);
            }
            if ((this.onEndUserRolesGetDelegate == null)) {
                this.onEndUserRolesGetDelegate = new EndOperationDelegate(this.OnEndUserRolesGet);
            }
            if ((this.onUserRolesGetCompletedDelegate == null)) {
                this.onUserRolesGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserRolesGetCompleted);
            }
            base.InvokeAsync(this.onBeginUserRolesGetDelegate, new object[] {
                        userIdGet,
                        roleName,
                        utcOffset,
                        userId,
                        userPassword,
                        bookGroup,
                        functionPath}, this.onEndUserRolesGetDelegate, this.onUserRolesGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorldWideClient.ServiceUserAdmin.IUserAdminService.BeginUserRolesSet(string userIdSet, string roleName, string comment, bool delete, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserRolesSet(userIdSet, roleName, comment, delete, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WorldWideClient.ServiceUserAdmin.IUserAdminService.EndUserRolesSet(System.IAsyncResult result) {
            return base.Channel.EndUserRolesSet(result);
        }
        
        private System.IAsyncResult OnBeginUserRolesSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdSet = ((string)(inValues[0]));
            string roleName = ((string)(inValues[1]));
            string comment = ((string)(inValues[2]));
            bool delete = ((bool)(inValues[3]));
            string userId = ((string)(inValues[4]));
            string userPassword = ((string)(inValues[5]));
            string bookGroup = ((string)(inValues[6]));
            string functionPath = ((string)(inValues[7]));
            return ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).BeginUserRolesSet(userIdSet, roleName, comment, delete, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        private object[] OnEndUserRolesSet(System.IAsyncResult result) {
            bool retVal = ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).EndUserRolesSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserRolesSetCompleted(object state) {
            if ((this.UserRolesSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserRolesSetCompleted(this, new UserRolesSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserRolesSetAsync(string userIdSet, string roleName, string comment, bool delete, string userId, string userPassword, string bookGroup, string functionPath) {
            this.UserRolesSetAsync(userIdSet, roleName, comment, delete, userId, userPassword, bookGroup, functionPath, null);
        }
        
        public void UserRolesSetAsync(string userIdSet, string roleName, string comment, bool delete, string userId, string userPassword, string bookGroup, string functionPath, object userState) {
            if ((this.onBeginUserRolesSetDelegate == null)) {
                this.onBeginUserRolesSetDelegate = new BeginOperationDelegate(this.OnBeginUserRolesSet);
            }
            if ((this.onEndUserRolesSetDelegate == null)) {
                this.onEndUserRolesSetDelegate = new EndOperationDelegate(this.OnEndUserRolesSet);
            }
            if ((this.onUserRolesSetCompletedDelegate == null)) {
                this.onUserRolesSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserRolesSetCompleted);
            }
            base.InvokeAsync(this.onBeginUserRolesSetDelegate, new object[] {
                        userIdSet,
                        roleName,
                        comment,
                        delete,
                        userId,
                        userPassword,
                        bookGroup,
                        functionPath}, this.onEndUserRolesSetDelegate, this.onUserRolesSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorldWideClient.ServiceUserAdmin.IUserAdminService.BeginUserSet(string userIdSet, string shortName, string newPassword, string email, string title, string comment, bool isLocked, bool isActive, bool isLoggedIn, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserSet(userIdSet, shortName, newPassword, email, title, comment, isLocked, isActive, isLoggedIn, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WorldWideClient.ServiceUserAdmin.IUserAdminService.EndUserSet(System.IAsyncResult result) {
            return base.Channel.EndUserSet(result);
        }
        
        private System.IAsyncResult OnBeginUserSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdSet = ((string)(inValues[0]));
            string shortName = ((string)(inValues[1]));
            string newPassword = ((string)(inValues[2]));
            string email = ((string)(inValues[3]));
            string title = ((string)(inValues[4]));
            string comment = ((string)(inValues[5]));
            bool isLocked = ((bool)(inValues[6]));
            bool isActive = ((bool)(inValues[7]));
            bool isLoggedIn = ((bool)(inValues[8]));
            string userId = ((string)(inValues[9]));
            string userPassword = ((string)(inValues[10]));
            string bookGroup = ((string)(inValues[11]));
            string functionPath = ((string)(inValues[12]));
            return ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).BeginUserSet(userIdSet, shortName, newPassword, email, title, comment, isLocked, isActive, isLoggedIn, userId, userPassword, bookGroup, functionPath, callback, asyncState);
        }
        
        private object[] OnEndUserSet(System.IAsyncResult result) {
            bool retVal = ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).EndUserSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserSetCompleted(object state) {
            if ((this.UserSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserSetCompleted(this, new UserSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserSetAsync(string userIdSet, string shortName, string newPassword, string email, string title, string comment, bool isLocked, bool isActive, bool isLoggedIn, string userId, string userPassword, string bookGroup, string functionPath) {
            this.UserSetAsync(userIdSet, shortName, newPassword, email, title, comment, isLocked, isActive, isLoggedIn, userId, userPassword, bookGroup, functionPath, null);
        }
        
        public void UserSetAsync(string userIdSet, string shortName, string newPassword, string email, string title, string comment, bool isLocked, bool isActive, bool isLoggedIn, string userId, string userPassword, string bookGroup, string functionPath, object userState) {
            if ((this.onBeginUserSetDelegate == null)) {
                this.onBeginUserSetDelegate = new BeginOperationDelegate(this.OnBeginUserSet);
            }
            if ((this.onEndUserSetDelegate == null)) {
                this.onEndUserSetDelegate = new EndOperationDelegate(this.OnEndUserSet);
            }
            if ((this.onUserSetCompletedDelegate == null)) {
                this.onUserSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserSetCompleted);
            }
            base.InvokeAsync(this.onBeginUserSetDelegate, new object[] {
                        userIdSet,
                        shortName,
                        newPassword,
                        email,
                        title,
                        comment,
                        isLocked,
                        isActive,
                        isLoggedIn,
                        userId,
                        userPassword,
                        bookGroup,
                        functionPath}, this.onEndUserSetDelegate, this.onUserSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WorldWideClient.ServiceUserAdmin.IUserAdminService.BeginUserBookGroupsGet(string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserBookGroupsGet(userId, functionPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] WorldWideClient.ServiceUserAdmin.IUserAdminService.EndUserBookGroupsGet(System.IAsyncResult result) {
            return base.Channel.EndUserBookGroupsGet(result);
        }
        
        private System.IAsyncResult OnBeginUserBookGroupsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            string functionPath = ((string)(inValues[1]));
            return ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).BeginUserBookGroupsGet(userId, functionPath, callback, asyncState);
        }
        
        private object[] OnEndUserBookGroupsGet(System.IAsyncResult result) {
            byte[] retVal = ((WorldWideClient.ServiceUserAdmin.IUserAdminService)(this)).EndUserBookGroupsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserBookGroupsGetCompleted(object state) {
            if ((this.UserBookGroupsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserBookGroupsGetCompleted(this, new UserBookGroupsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserBookGroupsGetAsync(string userId, string functionPath) {
            this.UserBookGroupsGetAsync(userId, functionPath, null);
        }
        
        public void UserBookGroupsGetAsync(string userId, string functionPath, object userState) {
            if ((this.onBeginUserBookGroupsGetDelegate == null)) {
                this.onBeginUserBookGroupsGetDelegate = new BeginOperationDelegate(this.OnBeginUserBookGroupsGet);
            }
            if ((this.onEndUserBookGroupsGetDelegate == null)) {
                this.onEndUserBookGroupsGetDelegate = new EndOperationDelegate(this.OnEndUserBookGroupsGet);
            }
            if ((this.onUserBookGroupsGetCompletedDelegate == null)) {
                this.onUserBookGroupsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserBookGroupsGetCompleted);
            }
            base.InvokeAsync(this.onBeginUserBookGroupsGetDelegate, new object[] {
                        userId,
                        functionPath}, this.onEndUserBookGroupsGetDelegate, this.onUserBookGroupsGetCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WorldWideClient.ServiceUserAdmin.IUserAdminService CreateChannel() {
            return new UserAdminServiceClientChannel(this);
        }
        
        private class UserAdminServiceClientChannel : ChannelBase<WorldWideClient.ServiceUserAdmin.IUserAdminService>, WorldWideClient.ServiceUserAdmin.IUserAdminService {
            
            public UserAdminServiceClientChannel(System.ServiceModel.ClientBase<WorldWideClient.ServiceUserAdmin.IUserAdminService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginFunctionSet(string functionPathSet, bool mayView, bool mayEdit, string bookGroup, string functionPath, string userId, string userPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = functionPathSet;
                _args[1] = mayView;
                _args[2] = mayEdit;
                _args[3] = bookGroup;
                _args[4] = functionPath;
                _args[5] = userId;
                _args[6] = userPassword;
                System.IAsyncResult _result = base.BeginInvoke("FunctionSet", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndFunctionSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("FunctionSet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFunctionsGet(string functionPathGet, string bookGroup, string functionPath, string userId, string userPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = functionPathGet;
                _args[1] = bookGroup;
                _args[2] = functionPath;
                _args[3] = userId;
                _args[4] = userPassword;
                System.IAsyncResult _result = base.BeginInvoke("FunctionsGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndFunctionsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("FunctionsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRoleFunctionsBookGroupGet(string userIdGet, string bookGroupGet, string bookGroup, string functionPath, string userId, string userPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = userIdGet;
                _args[1] = bookGroupGet;
                _args[2] = bookGroup;
                _args[3] = functionPath;
                _args[4] = userId;
                _args[5] = userPassword;
                System.IAsyncResult _result = base.BeginInvoke("RoleFunctionsBookGroupGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndRoleFunctionsBookGroupGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("RoleFunctionsBookGroupGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRoleFunctionsBookGroupSet(string roleNameSet, string functionPathSet, string bookGroupSet, string actUserId, short isActive, short delete, string bookGroup, string functionPath, string userId, string userPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[10];
                _args[0] = roleNameSet;
                _args[1] = functionPathSet;
                _args[2] = bookGroupSet;
                _args[3] = actUserId;
                _args[4] = isActive;
                _args[5] = delete;
                _args[6] = bookGroup;
                _args[7] = functionPath;
                _args[8] = userId;
                _args[9] = userPassword;
                System.IAsyncResult _result = base.BeginInvoke("RoleFunctionsBookGroupSet", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRoleFunctionsBookGroupSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RoleFunctionsBookGroupSet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRoleFunctionSet(string roleName, string functionPathSet, bool mayView, bool mayEdit, string comment, bool delete, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[10];
                _args[0] = roleName;
                _args[1] = functionPathSet;
                _args[2] = mayView;
                _args[3] = mayEdit;
                _args[4] = comment;
                _args[5] = delete;
                _args[6] = userId;
                _args[7] = userPassword;
                _args[8] = bookGroup;
                _args[9] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("RoleFunctionSet", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRoleFunctionSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RoleFunctionSet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRoleSet(string roleId, string roleName, string comment, bool delete, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = roleId;
                _args[1] = roleName;
                _args[2] = comment;
                _args[3] = delete;
                _args[4] = userId;
                _args[5] = userPassword;
                _args[6] = bookGroup;
                _args[7] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("RoleSet", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRoleSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RoleSet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRolesGet(string roleCode, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = roleCode;
                _args[1] = userId;
                _args[2] = userPassword;
                _args[3] = bookGroup;
                _args[4] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("RolesGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndRolesGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("RolesGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserGet(string userIdGet, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = userIdGet;
                _args[1] = userId;
                _args[2] = userPassword;
                _args[3] = bookGroup;
                _args[4] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("UserGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndUserGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("UserGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRoleFunctionsGet(string roleName, string functionPathGet, short utcOffSet, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = roleName;
                _args[1] = functionPathGet;
                _args[2] = utcOffSet;
                _args[3] = userId;
                _args[4] = userPassword;
                _args[5] = bookGroup;
                _args[6] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("RoleFunctionsGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndRoleFunctionsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("RoleFunctionsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserRolesGet(string userIdGet, string roleName, short utcOffset, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = userIdGet;
                _args[1] = roleName;
                _args[2] = utcOffset;
                _args[3] = userId;
                _args[4] = userPassword;
                _args[5] = bookGroup;
                _args[6] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("UserRolesGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndUserRolesGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("UserRolesGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserRolesSet(string userIdSet, string roleName, string comment, bool delete, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = userIdSet;
                _args[1] = roleName;
                _args[2] = comment;
                _args[3] = delete;
                _args[4] = userId;
                _args[5] = userPassword;
                _args[6] = bookGroup;
                _args[7] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("UserRolesSet", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUserRolesSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UserRolesSet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserSet(string userIdSet, string shortName, string newPassword, string email, string title, string comment, bool isLocked, bool isActive, bool isLoggedIn, string userId, string userPassword, string bookGroup, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[13];
                _args[0] = userIdSet;
                _args[1] = shortName;
                _args[2] = newPassword;
                _args[3] = email;
                _args[4] = title;
                _args[5] = comment;
                _args[6] = isLocked;
                _args[7] = isActive;
                _args[8] = isLoggedIn;
                _args[9] = userId;
                _args[10] = userPassword;
                _args[11] = bookGroup;
                _args[12] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("UserSet", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUserSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UserSet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserBookGroupsGet(string userId, string functionPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = functionPath;
                System.IAsyncResult _result = base.BeginInvoke("UserBookGroupsGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndUserBookGroupsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("UserBookGroupsGet", _args, result)));
                return _result;
            }
        }
    }
}
