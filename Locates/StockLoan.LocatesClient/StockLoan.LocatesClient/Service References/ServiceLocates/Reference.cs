//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17379
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace StockLoan_LocatesClient.ServiceLocates {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceLocates.ILocatesService")]
    public interface ILocatesService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocatesService/WebUserAuthorize", ReplyAction="http://tempuri.org/ILocatesService/WebUserAuthorizeResponse")]
        System.IAsyncResult BeginWebUserAuthorize(string userId, string password, System.AsyncCallback callback, object asyncState);
        
        bool EndWebUserAuthorize(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocatesService/TradingGroupsGet", ReplyAction="http://tempuri.org/ILocatesService/TradingGroupsGetResponse")]
        System.IAsyncResult BeginTradingGroupsGet(string tradeDate, short utcOffset, System.AsyncCallback callback, object asyncState);
        
        byte[] EndTradingGroupsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocatesService/LocateListSubmit", ReplyAction="http://tempuri.org/ILocatesService/LocateListSubmitResponse")]
        System.IAsyncResult BeginLocateListSubmit(string clientId, string groupCode, string clientComment, string list, System.AsyncCallback callback, object asyncState);
        
        string EndLocateListSubmit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocatesService/InventoryGet", ReplyAction="http://tempuri.org/ILocatesService/InventoryGetResponse")]
        System.IAsyncResult BeginInventoryGet(string groupCode, string secId, short utcOffset, System.AsyncCallback callback, object asyncState);
        
        byte[] EndInventoryGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocatesService/LocateItemGet", ReplyAction="http://tempuri.org/ILocatesService/LocateItemGetResponse")]
        System.IAsyncResult BeginLocateItemGet(string groupCode, string locateId, short utcOffset, System.AsyncCallback callback, object asyncState);
        
        byte[] EndLocateItemGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocatesService/LocatesGet", ReplyAction="http://tempuri.org/ILocatesService/LocatesGetResponse")]
        System.IAsyncResult BeginLocatesGet(string tradeDate, string groupCode, string clientId, short utcOffset, string status, System.AsyncCallback callback, object asyncState);
        
        byte[] EndLocatesGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocatesService/LocateSummaryGet", ReplyAction="http://tempuri.org/ILocatesService/LocateSummaryGetResponse")]
        System.IAsyncResult BeginLocateSummaryGet(string tradeDate, string secId, System.AsyncCallback callback, object asyncState);
        
        byte[] EndLocateSummaryGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocatesService/LocateGroupCodeSummaryGet", ReplyAction="http://tempuri.org/ILocatesService/LocateGroupCodeSummaryGetResponse")]
        System.IAsyncResult BeginLocateGroupCodeSummaryGet(string tradeDate, System.AsyncCallback callback, object asyncState);
        
        byte[] EndLocateGroupCodeSummaryGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocatesService/LocateItemSet", ReplyAction="http://tempuri.org/ILocatesService/LocateItemSetResponse")]
        System.IAsyncResult BeginLocateItemSet(long locateId, string quantity, string source, string feeRate, string preBorrow, string comment, string actUserId, System.AsyncCallback callback, object asyncState);
        
        void EndLocateItemSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocatesService/SecMasterItemGet", ReplyAction="http://tempuri.org/ILocatesService/SecMasterItemGetResponse")]
        System.IAsyncResult BeginSecMasterItemGet(string secId, System.AsyncCallback callback, object asyncState);
        
        byte[] EndSecMasterItemGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocatesService/BoxPositionItemGet", ReplyAction="http://tempuri.org/ILocatesService/BoxPositionItemGetResponse")]
        System.IAsyncResult BeginBoxPositionItemGet(string bookGroup, string secId, System.AsyncCallback callback, object asyncState);
        
        byte[] EndBoxPositionItemGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocatesService/BookGroupsGet", ReplyAction="http://tempuri.org/ILocatesService/BookGroupsGetResponse")]
        System.IAsyncResult BeginBookGroupsGet(System.AsyncCallback callback, object asyncState);
        
        byte[] EndBookGroupsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocatesService/LocatesMessageGet", ReplyAction="http://tempuri.org/ILocatesService/LocatesMessageGetResponse")]
        System.IAsyncResult BeginLocatesMessageGet(System.AsyncCallback callback, object asyncState);
        
        byte[] EndLocatesMessageGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocatesService/LocatesMessageSet", ReplyAction="http://tempuri.org/ILocatesService/LocatesMessageSetResponse")]
        System.IAsyncResult BeginLocatesMessageSet(string userId, string message, System.AsyncCallback callback, object asyncState);
        
        void EndLocatesMessageSet(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILocatesServiceChannel : StockLoan_LocatesClient.ServiceLocates.ILocatesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebUserAuthorizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebUserAuthorizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TradingGroupsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TradingGroupsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocateListSubmitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LocateListSubmitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventoryGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InventoryGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocateItemGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LocateItemGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocatesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LocatesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocateSummaryGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LocateSummaryGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocateGroupCodeSummaryGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LocateGroupCodeSummaryGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecMasterItemGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecMasterItemGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BoxPositionItemGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BoxPositionItemGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookGroupsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BookGroupsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocatesMessageGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LocatesMessageGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocatesServiceClient : System.ServiceModel.ClientBase<StockLoan_LocatesClient.ServiceLocates.ILocatesService>, StockLoan_LocatesClient.ServiceLocates.ILocatesService {
        
        private BeginOperationDelegate onBeginWebUserAuthorizeDelegate;
        
        private EndOperationDelegate onEndWebUserAuthorizeDelegate;
        
        private System.Threading.SendOrPostCallback onWebUserAuthorizeCompletedDelegate;
        
        private BeginOperationDelegate onBeginTradingGroupsGetDelegate;
        
        private EndOperationDelegate onEndTradingGroupsGetDelegate;
        
        private System.Threading.SendOrPostCallback onTradingGroupsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginLocateListSubmitDelegate;
        
        private EndOperationDelegate onEndLocateListSubmitDelegate;
        
        private System.Threading.SendOrPostCallback onLocateListSubmitCompletedDelegate;
        
        private BeginOperationDelegate onBeginInventoryGetDelegate;
        
        private EndOperationDelegate onEndInventoryGetDelegate;
        
        private System.Threading.SendOrPostCallback onInventoryGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginLocateItemGetDelegate;
        
        private EndOperationDelegate onEndLocateItemGetDelegate;
        
        private System.Threading.SendOrPostCallback onLocateItemGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginLocatesGetDelegate;
        
        private EndOperationDelegate onEndLocatesGetDelegate;
        
        private System.Threading.SendOrPostCallback onLocatesGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginLocateSummaryGetDelegate;
        
        private EndOperationDelegate onEndLocateSummaryGetDelegate;
        
        private System.Threading.SendOrPostCallback onLocateSummaryGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginLocateGroupCodeSummaryGetDelegate;
        
        private EndOperationDelegate onEndLocateGroupCodeSummaryGetDelegate;
        
        private System.Threading.SendOrPostCallback onLocateGroupCodeSummaryGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginLocateItemSetDelegate;
        
        private EndOperationDelegate onEndLocateItemSetDelegate;
        
        private System.Threading.SendOrPostCallback onLocateItemSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginSecMasterItemGetDelegate;
        
        private EndOperationDelegate onEndSecMasterItemGetDelegate;
        
        private System.Threading.SendOrPostCallback onSecMasterItemGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginBoxPositionItemGetDelegate;
        
        private EndOperationDelegate onEndBoxPositionItemGetDelegate;
        
        private System.Threading.SendOrPostCallback onBoxPositionItemGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginBookGroupsGetDelegate;
        
        private EndOperationDelegate onEndBookGroupsGetDelegate;
        
        private System.Threading.SendOrPostCallback onBookGroupsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginLocatesMessageGetDelegate;
        
        private EndOperationDelegate onEndLocatesMessageGetDelegate;
        
        private System.Threading.SendOrPostCallback onLocatesMessageGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginLocatesMessageSetDelegate;
        
        private EndOperationDelegate onEndLocatesMessageSetDelegate;
        
        private System.Threading.SendOrPostCallback onLocatesMessageSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public LocatesServiceClient() {
        }
        
        public LocatesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LocatesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocatesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocatesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<WebUserAuthorizeCompletedEventArgs> WebUserAuthorizeCompleted;
        
        public event System.EventHandler<TradingGroupsGetCompletedEventArgs> TradingGroupsGetCompleted;
        
        public event System.EventHandler<LocateListSubmitCompletedEventArgs> LocateListSubmitCompleted;
        
        public event System.EventHandler<InventoryGetCompletedEventArgs> InventoryGetCompleted;
        
        public event System.EventHandler<LocateItemGetCompletedEventArgs> LocateItemGetCompleted;
        
        public event System.EventHandler<LocatesGetCompletedEventArgs> LocatesGetCompleted;
        
        public event System.EventHandler<LocateSummaryGetCompletedEventArgs> LocateSummaryGetCompleted;
        
        public event System.EventHandler<LocateGroupCodeSummaryGetCompletedEventArgs> LocateGroupCodeSummaryGetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LocateItemSetCompleted;
        
        public event System.EventHandler<SecMasterItemGetCompletedEventArgs> SecMasterItemGetCompleted;
        
        public event System.EventHandler<BoxPositionItemGetCompletedEventArgs> BoxPositionItemGetCompleted;
        
        public event System.EventHandler<BookGroupsGetCompletedEventArgs> BookGroupsGetCompleted;
        
        public event System.EventHandler<LocatesMessageGetCompletedEventArgs> LocatesMessageGetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LocatesMessageSetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult StockLoan_LocatesClient.ServiceLocates.ILocatesService.BeginWebUserAuthorize(string userId, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebUserAuthorize(userId, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool StockLoan_LocatesClient.ServiceLocates.ILocatesService.EndWebUserAuthorize(System.IAsyncResult result) {
            return base.Channel.EndWebUserAuthorize(result);
        }
        
        private System.IAsyncResult OnBeginWebUserAuthorize(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).BeginWebUserAuthorize(userId, password, callback, asyncState);
        }
        
        private object[] OnEndWebUserAuthorize(System.IAsyncResult result) {
            bool retVal = ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).EndWebUserAuthorize(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWebUserAuthorizeCompleted(object state) {
            if ((this.WebUserAuthorizeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebUserAuthorizeCompleted(this, new WebUserAuthorizeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebUserAuthorizeAsync(string userId, string password) {
            this.WebUserAuthorizeAsync(userId, password, null);
        }
        
        public void WebUserAuthorizeAsync(string userId, string password, object userState) {
            if ((this.onBeginWebUserAuthorizeDelegate == null)) {
                this.onBeginWebUserAuthorizeDelegate = new BeginOperationDelegate(this.OnBeginWebUserAuthorize);
            }
            if ((this.onEndWebUserAuthorizeDelegate == null)) {
                this.onEndWebUserAuthorizeDelegate = new EndOperationDelegate(this.OnEndWebUserAuthorize);
            }
            if ((this.onWebUserAuthorizeCompletedDelegate == null)) {
                this.onWebUserAuthorizeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebUserAuthorizeCompleted);
            }
            base.InvokeAsync(this.onBeginWebUserAuthorizeDelegate, new object[] {
                        userId,
                        password}, this.onEndWebUserAuthorizeDelegate, this.onWebUserAuthorizeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult StockLoan_LocatesClient.ServiceLocates.ILocatesService.BeginTradingGroupsGet(string tradeDate, short utcOffset, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTradingGroupsGet(tradeDate, utcOffset, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] StockLoan_LocatesClient.ServiceLocates.ILocatesService.EndTradingGroupsGet(System.IAsyncResult result) {
            return base.Channel.EndTradingGroupsGet(result);
        }
        
        private System.IAsyncResult OnBeginTradingGroupsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string tradeDate = ((string)(inValues[0]));
            short utcOffset = ((short)(inValues[1]));
            return ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).BeginTradingGroupsGet(tradeDate, utcOffset, callback, asyncState);
        }
        
        private object[] OnEndTradingGroupsGet(System.IAsyncResult result) {
            byte[] retVal = ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).EndTradingGroupsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTradingGroupsGetCompleted(object state) {
            if ((this.TradingGroupsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TradingGroupsGetCompleted(this, new TradingGroupsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TradingGroupsGetAsync(string tradeDate, short utcOffset) {
            this.TradingGroupsGetAsync(tradeDate, utcOffset, null);
        }
        
        public void TradingGroupsGetAsync(string tradeDate, short utcOffset, object userState) {
            if ((this.onBeginTradingGroupsGetDelegate == null)) {
                this.onBeginTradingGroupsGetDelegate = new BeginOperationDelegate(this.OnBeginTradingGroupsGet);
            }
            if ((this.onEndTradingGroupsGetDelegate == null)) {
                this.onEndTradingGroupsGetDelegate = new EndOperationDelegate(this.OnEndTradingGroupsGet);
            }
            if ((this.onTradingGroupsGetCompletedDelegate == null)) {
                this.onTradingGroupsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTradingGroupsGetCompleted);
            }
            base.InvokeAsync(this.onBeginTradingGroupsGetDelegate, new object[] {
                        tradeDate,
                        utcOffset}, this.onEndTradingGroupsGetDelegate, this.onTradingGroupsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult StockLoan_LocatesClient.ServiceLocates.ILocatesService.BeginLocateListSubmit(string clientId, string groupCode, string clientComment, string list, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLocateListSubmit(clientId, groupCode, clientComment, list, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string StockLoan_LocatesClient.ServiceLocates.ILocatesService.EndLocateListSubmit(System.IAsyncResult result) {
            return base.Channel.EndLocateListSubmit(result);
        }
        
        private System.IAsyncResult OnBeginLocateListSubmit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientId = ((string)(inValues[0]));
            string groupCode = ((string)(inValues[1]));
            string clientComment = ((string)(inValues[2]));
            string list = ((string)(inValues[3]));
            return ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).BeginLocateListSubmit(clientId, groupCode, clientComment, list, callback, asyncState);
        }
        
        private object[] OnEndLocateListSubmit(System.IAsyncResult result) {
            string retVal = ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).EndLocateListSubmit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLocateListSubmitCompleted(object state) {
            if ((this.LocateListSubmitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LocateListSubmitCompleted(this, new LocateListSubmitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LocateListSubmitAsync(string clientId, string groupCode, string clientComment, string list) {
            this.LocateListSubmitAsync(clientId, groupCode, clientComment, list, null);
        }
        
        public void LocateListSubmitAsync(string clientId, string groupCode, string clientComment, string list, object userState) {
            if ((this.onBeginLocateListSubmitDelegate == null)) {
                this.onBeginLocateListSubmitDelegate = new BeginOperationDelegate(this.OnBeginLocateListSubmit);
            }
            if ((this.onEndLocateListSubmitDelegate == null)) {
                this.onEndLocateListSubmitDelegate = new EndOperationDelegate(this.OnEndLocateListSubmit);
            }
            if ((this.onLocateListSubmitCompletedDelegate == null)) {
                this.onLocateListSubmitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLocateListSubmitCompleted);
            }
            base.InvokeAsync(this.onBeginLocateListSubmitDelegate, new object[] {
                        clientId,
                        groupCode,
                        clientComment,
                        list}, this.onEndLocateListSubmitDelegate, this.onLocateListSubmitCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult StockLoan_LocatesClient.ServiceLocates.ILocatesService.BeginInventoryGet(string groupCode, string secId, short utcOffset, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInventoryGet(groupCode, secId, utcOffset, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] StockLoan_LocatesClient.ServiceLocates.ILocatesService.EndInventoryGet(System.IAsyncResult result) {
            return base.Channel.EndInventoryGet(result);
        }
        
        private System.IAsyncResult OnBeginInventoryGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string groupCode = ((string)(inValues[0]));
            string secId = ((string)(inValues[1]));
            short utcOffset = ((short)(inValues[2]));
            return ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).BeginInventoryGet(groupCode, secId, utcOffset, callback, asyncState);
        }
        
        private object[] OnEndInventoryGet(System.IAsyncResult result) {
            byte[] retVal = ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).EndInventoryGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInventoryGetCompleted(object state) {
            if ((this.InventoryGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InventoryGetCompleted(this, new InventoryGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InventoryGetAsync(string groupCode, string secId, short utcOffset) {
            this.InventoryGetAsync(groupCode, secId, utcOffset, null);
        }
        
        public void InventoryGetAsync(string groupCode, string secId, short utcOffset, object userState) {
            if ((this.onBeginInventoryGetDelegate == null)) {
                this.onBeginInventoryGetDelegate = new BeginOperationDelegate(this.OnBeginInventoryGet);
            }
            if ((this.onEndInventoryGetDelegate == null)) {
                this.onEndInventoryGetDelegate = new EndOperationDelegate(this.OnEndInventoryGet);
            }
            if ((this.onInventoryGetCompletedDelegate == null)) {
                this.onInventoryGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInventoryGetCompleted);
            }
            base.InvokeAsync(this.onBeginInventoryGetDelegate, new object[] {
                        groupCode,
                        secId,
                        utcOffset}, this.onEndInventoryGetDelegate, this.onInventoryGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult StockLoan_LocatesClient.ServiceLocates.ILocatesService.BeginLocateItemGet(string groupCode, string locateId, short utcOffset, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLocateItemGet(groupCode, locateId, utcOffset, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] StockLoan_LocatesClient.ServiceLocates.ILocatesService.EndLocateItemGet(System.IAsyncResult result) {
            return base.Channel.EndLocateItemGet(result);
        }
        
        private System.IAsyncResult OnBeginLocateItemGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string groupCode = ((string)(inValues[0]));
            string locateId = ((string)(inValues[1]));
            short utcOffset = ((short)(inValues[2]));
            return ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).BeginLocateItemGet(groupCode, locateId, utcOffset, callback, asyncState);
        }
        
        private object[] OnEndLocateItemGet(System.IAsyncResult result) {
            byte[] retVal = ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).EndLocateItemGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLocateItemGetCompleted(object state) {
            if ((this.LocateItemGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LocateItemGetCompleted(this, new LocateItemGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LocateItemGetAsync(string groupCode, string locateId, short utcOffset) {
            this.LocateItemGetAsync(groupCode, locateId, utcOffset, null);
        }
        
        public void LocateItemGetAsync(string groupCode, string locateId, short utcOffset, object userState) {
            if ((this.onBeginLocateItemGetDelegate == null)) {
                this.onBeginLocateItemGetDelegate = new BeginOperationDelegate(this.OnBeginLocateItemGet);
            }
            if ((this.onEndLocateItemGetDelegate == null)) {
                this.onEndLocateItemGetDelegate = new EndOperationDelegate(this.OnEndLocateItemGet);
            }
            if ((this.onLocateItemGetCompletedDelegate == null)) {
                this.onLocateItemGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLocateItemGetCompleted);
            }
            base.InvokeAsync(this.onBeginLocateItemGetDelegate, new object[] {
                        groupCode,
                        locateId,
                        utcOffset}, this.onEndLocateItemGetDelegate, this.onLocateItemGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult StockLoan_LocatesClient.ServiceLocates.ILocatesService.BeginLocatesGet(string tradeDate, string groupCode, string clientId, short utcOffset, string status, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLocatesGet(tradeDate, groupCode, clientId, utcOffset, status, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] StockLoan_LocatesClient.ServiceLocates.ILocatesService.EndLocatesGet(System.IAsyncResult result) {
            return base.Channel.EndLocatesGet(result);
        }
        
        private System.IAsyncResult OnBeginLocatesGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string tradeDate = ((string)(inValues[0]));
            string groupCode = ((string)(inValues[1]));
            string clientId = ((string)(inValues[2]));
            short utcOffset = ((short)(inValues[3]));
            string status = ((string)(inValues[4]));
            return ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).BeginLocatesGet(tradeDate, groupCode, clientId, utcOffset, status, callback, asyncState);
        }
        
        private object[] OnEndLocatesGet(System.IAsyncResult result) {
            byte[] retVal = ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).EndLocatesGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLocatesGetCompleted(object state) {
            if ((this.LocatesGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LocatesGetCompleted(this, new LocatesGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LocatesGetAsync(string tradeDate, string groupCode, string clientId, short utcOffset, string status) {
            this.LocatesGetAsync(tradeDate, groupCode, clientId, utcOffset, status, null);
        }
        
        public void LocatesGetAsync(string tradeDate, string groupCode, string clientId, short utcOffset, string status, object userState) {
            if ((this.onBeginLocatesGetDelegate == null)) {
                this.onBeginLocatesGetDelegate = new BeginOperationDelegate(this.OnBeginLocatesGet);
            }
            if ((this.onEndLocatesGetDelegate == null)) {
                this.onEndLocatesGetDelegate = new EndOperationDelegate(this.OnEndLocatesGet);
            }
            if ((this.onLocatesGetCompletedDelegate == null)) {
                this.onLocatesGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLocatesGetCompleted);
            }
            base.InvokeAsync(this.onBeginLocatesGetDelegate, new object[] {
                        tradeDate,
                        groupCode,
                        clientId,
                        utcOffset,
                        status}, this.onEndLocatesGetDelegate, this.onLocatesGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult StockLoan_LocatesClient.ServiceLocates.ILocatesService.BeginLocateSummaryGet(string tradeDate, string secId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLocateSummaryGet(tradeDate, secId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] StockLoan_LocatesClient.ServiceLocates.ILocatesService.EndLocateSummaryGet(System.IAsyncResult result) {
            return base.Channel.EndLocateSummaryGet(result);
        }
        
        private System.IAsyncResult OnBeginLocateSummaryGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string tradeDate = ((string)(inValues[0]));
            string secId = ((string)(inValues[1]));
            return ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).BeginLocateSummaryGet(tradeDate, secId, callback, asyncState);
        }
        
        private object[] OnEndLocateSummaryGet(System.IAsyncResult result) {
            byte[] retVal = ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).EndLocateSummaryGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLocateSummaryGetCompleted(object state) {
            if ((this.LocateSummaryGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LocateSummaryGetCompleted(this, new LocateSummaryGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LocateSummaryGetAsync(string tradeDate, string secId) {
            this.LocateSummaryGetAsync(tradeDate, secId, null);
        }
        
        public void LocateSummaryGetAsync(string tradeDate, string secId, object userState) {
            if ((this.onBeginLocateSummaryGetDelegate == null)) {
                this.onBeginLocateSummaryGetDelegate = new BeginOperationDelegate(this.OnBeginLocateSummaryGet);
            }
            if ((this.onEndLocateSummaryGetDelegate == null)) {
                this.onEndLocateSummaryGetDelegate = new EndOperationDelegate(this.OnEndLocateSummaryGet);
            }
            if ((this.onLocateSummaryGetCompletedDelegate == null)) {
                this.onLocateSummaryGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLocateSummaryGetCompleted);
            }
            base.InvokeAsync(this.onBeginLocateSummaryGetDelegate, new object[] {
                        tradeDate,
                        secId}, this.onEndLocateSummaryGetDelegate, this.onLocateSummaryGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult StockLoan_LocatesClient.ServiceLocates.ILocatesService.BeginLocateGroupCodeSummaryGet(string tradeDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLocateGroupCodeSummaryGet(tradeDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] StockLoan_LocatesClient.ServiceLocates.ILocatesService.EndLocateGroupCodeSummaryGet(System.IAsyncResult result) {
            return base.Channel.EndLocateGroupCodeSummaryGet(result);
        }
        
        private System.IAsyncResult OnBeginLocateGroupCodeSummaryGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string tradeDate = ((string)(inValues[0]));
            return ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).BeginLocateGroupCodeSummaryGet(tradeDate, callback, asyncState);
        }
        
        private object[] OnEndLocateGroupCodeSummaryGet(System.IAsyncResult result) {
            byte[] retVal = ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).EndLocateGroupCodeSummaryGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLocateGroupCodeSummaryGetCompleted(object state) {
            if ((this.LocateGroupCodeSummaryGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LocateGroupCodeSummaryGetCompleted(this, new LocateGroupCodeSummaryGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LocateGroupCodeSummaryGetAsync(string tradeDate) {
            this.LocateGroupCodeSummaryGetAsync(tradeDate, null);
        }
        
        public void LocateGroupCodeSummaryGetAsync(string tradeDate, object userState) {
            if ((this.onBeginLocateGroupCodeSummaryGetDelegate == null)) {
                this.onBeginLocateGroupCodeSummaryGetDelegate = new BeginOperationDelegate(this.OnBeginLocateGroupCodeSummaryGet);
            }
            if ((this.onEndLocateGroupCodeSummaryGetDelegate == null)) {
                this.onEndLocateGroupCodeSummaryGetDelegate = new EndOperationDelegate(this.OnEndLocateGroupCodeSummaryGet);
            }
            if ((this.onLocateGroupCodeSummaryGetCompletedDelegate == null)) {
                this.onLocateGroupCodeSummaryGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLocateGroupCodeSummaryGetCompleted);
            }
            base.InvokeAsync(this.onBeginLocateGroupCodeSummaryGetDelegate, new object[] {
                        tradeDate}, this.onEndLocateGroupCodeSummaryGetDelegate, this.onLocateGroupCodeSummaryGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult StockLoan_LocatesClient.ServiceLocates.ILocatesService.BeginLocateItemSet(long locateId, string quantity, string source, string feeRate, string preBorrow, string comment, string actUserId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLocateItemSet(locateId, quantity, source, feeRate, preBorrow, comment, actUserId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void StockLoan_LocatesClient.ServiceLocates.ILocatesService.EndLocateItemSet(System.IAsyncResult result) {
            base.Channel.EndLocateItemSet(result);
        }
        
        private System.IAsyncResult OnBeginLocateItemSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long locateId = ((long)(inValues[0]));
            string quantity = ((string)(inValues[1]));
            string source = ((string)(inValues[2]));
            string feeRate = ((string)(inValues[3]));
            string preBorrow = ((string)(inValues[4]));
            string comment = ((string)(inValues[5]));
            string actUserId = ((string)(inValues[6]));
            return ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).BeginLocateItemSet(locateId, quantity, source, feeRate, preBorrow, comment, actUserId, callback, asyncState);
        }
        
        private object[] OnEndLocateItemSet(System.IAsyncResult result) {
            ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).EndLocateItemSet(result);
            return null;
        }
        
        private void OnLocateItemSetCompleted(object state) {
            if ((this.LocateItemSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LocateItemSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LocateItemSetAsync(long locateId, string quantity, string source, string feeRate, string preBorrow, string comment, string actUserId) {
            this.LocateItemSetAsync(locateId, quantity, source, feeRate, preBorrow, comment, actUserId, null);
        }
        
        public void LocateItemSetAsync(long locateId, string quantity, string source, string feeRate, string preBorrow, string comment, string actUserId, object userState) {
            if ((this.onBeginLocateItemSetDelegate == null)) {
                this.onBeginLocateItemSetDelegate = new BeginOperationDelegate(this.OnBeginLocateItemSet);
            }
            if ((this.onEndLocateItemSetDelegate == null)) {
                this.onEndLocateItemSetDelegate = new EndOperationDelegate(this.OnEndLocateItemSet);
            }
            if ((this.onLocateItemSetCompletedDelegate == null)) {
                this.onLocateItemSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLocateItemSetCompleted);
            }
            base.InvokeAsync(this.onBeginLocateItemSetDelegate, new object[] {
                        locateId,
                        quantity,
                        source,
                        feeRate,
                        preBorrow,
                        comment,
                        actUserId}, this.onEndLocateItemSetDelegate, this.onLocateItemSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult StockLoan_LocatesClient.ServiceLocates.ILocatesService.BeginSecMasterItemGet(string secId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSecMasterItemGet(secId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] StockLoan_LocatesClient.ServiceLocates.ILocatesService.EndSecMasterItemGet(System.IAsyncResult result) {
            return base.Channel.EndSecMasterItemGet(result);
        }
        
        private System.IAsyncResult OnBeginSecMasterItemGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string secId = ((string)(inValues[0]));
            return ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).BeginSecMasterItemGet(secId, callback, asyncState);
        }
        
        private object[] OnEndSecMasterItemGet(System.IAsyncResult result) {
            byte[] retVal = ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).EndSecMasterItemGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSecMasterItemGetCompleted(object state) {
            if ((this.SecMasterItemGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SecMasterItemGetCompleted(this, new SecMasterItemGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SecMasterItemGetAsync(string secId) {
            this.SecMasterItemGetAsync(secId, null);
        }
        
        public void SecMasterItemGetAsync(string secId, object userState) {
            if ((this.onBeginSecMasterItemGetDelegate == null)) {
                this.onBeginSecMasterItemGetDelegate = new BeginOperationDelegate(this.OnBeginSecMasterItemGet);
            }
            if ((this.onEndSecMasterItemGetDelegate == null)) {
                this.onEndSecMasterItemGetDelegate = new EndOperationDelegate(this.OnEndSecMasterItemGet);
            }
            if ((this.onSecMasterItemGetCompletedDelegate == null)) {
                this.onSecMasterItemGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSecMasterItemGetCompleted);
            }
            base.InvokeAsync(this.onBeginSecMasterItemGetDelegate, new object[] {
                        secId}, this.onEndSecMasterItemGetDelegate, this.onSecMasterItemGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult StockLoan_LocatesClient.ServiceLocates.ILocatesService.BeginBoxPositionItemGet(string bookGroup, string secId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBoxPositionItemGet(bookGroup, secId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] StockLoan_LocatesClient.ServiceLocates.ILocatesService.EndBoxPositionItemGet(System.IAsyncResult result) {
            return base.Channel.EndBoxPositionItemGet(result);
        }
        
        private System.IAsyncResult OnBeginBoxPositionItemGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bookGroup = ((string)(inValues[0]));
            string secId = ((string)(inValues[1]));
            return ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).BeginBoxPositionItemGet(bookGroup, secId, callback, asyncState);
        }
        
        private object[] OnEndBoxPositionItemGet(System.IAsyncResult result) {
            byte[] retVal = ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).EndBoxPositionItemGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBoxPositionItemGetCompleted(object state) {
            if ((this.BoxPositionItemGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BoxPositionItemGetCompleted(this, new BoxPositionItemGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BoxPositionItemGetAsync(string bookGroup, string secId) {
            this.BoxPositionItemGetAsync(bookGroup, secId, null);
        }
        
        public void BoxPositionItemGetAsync(string bookGroup, string secId, object userState) {
            if ((this.onBeginBoxPositionItemGetDelegate == null)) {
                this.onBeginBoxPositionItemGetDelegate = new BeginOperationDelegate(this.OnBeginBoxPositionItemGet);
            }
            if ((this.onEndBoxPositionItemGetDelegate == null)) {
                this.onEndBoxPositionItemGetDelegate = new EndOperationDelegate(this.OnEndBoxPositionItemGet);
            }
            if ((this.onBoxPositionItemGetCompletedDelegate == null)) {
                this.onBoxPositionItemGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBoxPositionItemGetCompleted);
            }
            base.InvokeAsync(this.onBeginBoxPositionItemGetDelegate, new object[] {
                        bookGroup,
                        secId}, this.onEndBoxPositionItemGetDelegate, this.onBoxPositionItemGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult StockLoan_LocatesClient.ServiceLocates.ILocatesService.BeginBookGroupsGet(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBookGroupsGet(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] StockLoan_LocatesClient.ServiceLocates.ILocatesService.EndBookGroupsGet(System.IAsyncResult result) {
            return base.Channel.EndBookGroupsGet(result);
        }
        
        private System.IAsyncResult OnBeginBookGroupsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).BeginBookGroupsGet(callback, asyncState);
        }
        
        private object[] OnEndBookGroupsGet(System.IAsyncResult result) {
            byte[] retVal = ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).EndBookGroupsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBookGroupsGetCompleted(object state) {
            if ((this.BookGroupsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BookGroupsGetCompleted(this, new BookGroupsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BookGroupsGetAsync() {
            this.BookGroupsGetAsync(null);
        }
        
        public void BookGroupsGetAsync(object userState) {
            if ((this.onBeginBookGroupsGetDelegate == null)) {
                this.onBeginBookGroupsGetDelegate = new BeginOperationDelegate(this.OnBeginBookGroupsGet);
            }
            if ((this.onEndBookGroupsGetDelegate == null)) {
                this.onEndBookGroupsGetDelegate = new EndOperationDelegate(this.OnEndBookGroupsGet);
            }
            if ((this.onBookGroupsGetCompletedDelegate == null)) {
                this.onBookGroupsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBookGroupsGetCompleted);
            }
            base.InvokeAsync(this.onBeginBookGroupsGetDelegate, null, this.onEndBookGroupsGetDelegate, this.onBookGroupsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult StockLoan_LocatesClient.ServiceLocates.ILocatesService.BeginLocatesMessageGet(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLocatesMessageGet(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] StockLoan_LocatesClient.ServiceLocates.ILocatesService.EndLocatesMessageGet(System.IAsyncResult result) {
            return base.Channel.EndLocatesMessageGet(result);
        }
        
        private System.IAsyncResult OnBeginLocatesMessageGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).BeginLocatesMessageGet(callback, asyncState);
        }
        
        private object[] OnEndLocatesMessageGet(System.IAsyncResult result) {
            byte[] retVal = ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).EndLocatesMessageGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLocatesMessageGetCompleted(object state) {
            if ((this.LocatesMessageGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LocatesMessageGetCompleted(this, new LocatesMessageGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LocatesMessageGetAsync() {
            this.LocatesMessageGetAsync(null);
        }
        
        public void LocatesMessageGetAsync(object userState) {
            if ((this.onBeginLocatesMessageGetDelegate == null)) {
                this.onBeginLocatesMessageGetDelegate = new BeginOperationDelegate(this.OnBeginLocatesMessageGet);
            }
            if ((this.onEndLocatesMessageGetDelegate == null)) {
                this.onEndLocatesMessageGetDelegate = new EndOperationDelegate(this.OnEndLocatesMessageGet);
            }
            if ((this.onLocatesMessageGetCompletedDelegate == null)) {
                this.onLocatesMessageGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLocatesMessageGetCompleted);
            }
            base.InvokeAsync(this.onBeginLocatesMessageGetDelegate, null, this.onEndLocatesMessageGetDelegate, this.onLocatesMessageGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult StockLoan_LocatesClient.ServiceLocates.ILocatesService.BeginLocatesMessageSet(string userId, string message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLocatesMessageSet(userId, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void StockLoan_LocatesClient.ServiceLocates.ILocatesService.EndLocatesMessageSet(System.IAsyncResult result) {
            base.Channel.EndLocatesMessageSet(result);
        }
        
        private System.IAsyncResult OnBeginLocatesMessageSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            string message = ((string)(inValues[1]));
            return ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).BeginLocatesMessageSet(userId, message, callback, asyncState);
        }
        
        private object[] OnEndLocatesMessageSet(System.IAsyncResult result) {
            ((StockLoan_LocatesClient.ServiceLocates.ILocatesService)(this)).EndLocatesMessageSet(result);
            return null;
        }
        
        private void OnLocatesMessageSetCompleted(object state) {
            if ((this.LocatesMessageSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LocatesMessageSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LocatesMessageSetAsync(string userId, string message) {
            this.LocatesMessageSetAsync(userId, message, null);
        }
        
        public void LocatesMessageSetAsync(string userId, string message, object userState) {
            if ((this.onBeginLocatesMessageSetDelegate == null)) {
                this.onBeginLocatesMessageSetDelegate = new BeginOperationDelegate(this.OnBeginLocatesMessageSet);
            }
            if ((this.onEndLocatesMessageSetDelegate == null)) {
                this.onEndLocatesMessageSetDelegate = new EndOperationDelegate(this.OnEndLocatesMessageSet);
            }
            if ((this.onLocatesMessageSetCompletedDelegate == null)) {
                this.onLocatesMessageSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLocatesMessageSetCompleted);
            }
            base.InvokeAsync(this.onBeginLocatesMessageSetDelegate, new object[] {
                        userId,
                        message}, this.onEndLocatesMessageSetDelegate, this.onLocatesMessageSetCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override StockLoan_LocatesClient.ServiceLocates.ILocatesService CreateChannel() {
            return new LocatesServiceClientChannel(this);
        }
        
        private class LocatesServiceClientChannel : ChannelBase<StockLoan_LocatesClient.ServiceLocates.ILocatesService>, StockLoan_LocatesClient.ServiceLocates.ILocatesService {
            
            public LocatesServiceClientChannel(System.ServiceModel.ClientBase<StockLoan_LocatesClient.ServiceLocates.ILocatesService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginWebUserAuthorize(string userId, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("WebUserAuthorize", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndWebUserAuthorize(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("WebUserAuthorize", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTradingGroupsGet(string tradeDate, short utcOffset, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = tradeDate;
                _args[1] = utcOffset;
                System.IAsyncResult _result = base.BeginInvoke("TradingGroupsGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndTradingGroupsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("TradingGroupsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLocateListSubmit(string clientId, string groupCode, string clientComment, string list, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = clientId;
                _args[1] = groupCode;
                _args[2] = clientComment;
                _args[3] = list;
                System.IAsyncResult _result = base.BeginInvoke("LocateListSubmit", _args, callback, asyncState);
                return _result;
            }
            
            public string EndLocateListSubmit(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("LocateListSubmit", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInventoryGet(string groupCode, string secId, short utcOffset, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = groupCode;
                _args[1] = secId;
                _args[2] = utcOffset;
                System.IAsyncResult _result = base.BeginInvoke("InventoryGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndInventoryGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("InventoryGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLocateItemGet(string groupCode, string locateId, short utcOffset, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = groupCode;
                _args[1] = locateId;
                _args[2] = utcOffset;
                System.IAsyncResult _result = base.BeginInvoke("LocateItemGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndLocateItemGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("LocateItemGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLocatesGet(string tradeDate, string groupCode, string clientId, short utcOffset, string status, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = tradeDate;
                _args[1] = groupCode;
                _args[2] = clientId;
                _args[3] = utcOffset;
                _args[4] = status;
                System.IAsyncResult _result = base.BeginInvoke("LocatesGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndLocatesGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("LocatesGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLocateSummaryGet(string tradeDate, string secId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = tradeDate;
                _args[1] = secId;
                System.IAsyncResult _result = base.BeginInvoke("LocateSummaryGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndLocateSummaryGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("LocateSummaryGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLocateGroupCodeSummaryGet(string tradeDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = tradeDate;
                System.IAsyncResult _result = base.BeginInvoke("LocateGroupCodeSummaryGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndLocateGroupCodeSummaryGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("LocateGroupCodeSummaryGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLocateItemSet(long locateId, string quantity, string source, string feeRate, string preBorrow, string comment, string actUserId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = locateId;
                _args[1] = quantity;
                _args[2] = source;
                _args[3] = feeRate;
                _args[4] = preBorrow;
                _args[5] = comment;
                _args[6] = actUserId;
                System.IAsyncResult _result = base.BeginInvoke("LocateItemSet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndLocateItemSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("LocateItemSet", _args, result);
            }
            
            public System.IAsyncResult BeginSecMasterItemGet(string secId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = secId;
                System.IAsyncResult _result = base.BeginInvoke("SecMasterItemGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndSecMasterItemGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("SecMasterItemGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBoxPositionItemGet(string bookGroup, string secId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = bookGroup;
                _args[1] = secId;
                System.IAsyncResult _result = base.BeginInvoke("BoxPositionItemGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndBoxPositionItemGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("BoxPositionItemGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBookGroupsGet(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("BookGroupsGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndBookGroupsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("BookGroupsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLocatesMessageGet(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("LocatesMessageGet", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndLocatesMessageGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("LocatesMessageGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLocatesMessageSet(string userId, string message, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = message;
                System.IAsyncResult _result = base.BeginInvoke("LocatesMessageSet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndLocatesMessageSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("LocatesMessageSet", _args, result);
            }
        }
    }
}
