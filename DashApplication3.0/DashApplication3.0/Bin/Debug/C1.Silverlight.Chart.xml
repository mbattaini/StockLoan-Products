<?xml version="1.0"?>
<doc>
    <assembly>
        <name>C1.Silverlight.Chart</name>
    </assembly>
    <members>
        <member name="T:C1.Silverlight.Chart.Action">
            <summary>
            Represents the action object that supports interactive chart actions such as rotating, scaling, translation and zooming.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Action.Modifiers">
            <summary>
            Gets or sets the state of modifier keys that starts the action.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.TranslateAction">
            <summary>
            Represents translate action.
            </summary>
            <remarks>
            The Scale property of Axis should be less than 1. Otherwise
            the translate along the axis is not available.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Chart.TranslateAction.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:C1.Silverlight.Chart.TranslateAction"/> class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.TranslateAction.MouseWheelFactor">
            <summary>
            Gets or sets the factor that defines sensitivity to the mouse wheel.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.TranslateAction.MouseWheelDirection">
            <summary>
            Gets or sets the mouse wheel direction.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.ZoomAction">
            <summary>
            Represents zoom action.
            </summary>
            <remarks>
            The MinScale property of Axis property specifies the minimum 
            scale that can set for the axis. If MinScale is equal to 1
            the zoom is not applied to the axis.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Chart.ZoomAction.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:C1.Silverlight.Chart.ZoomAction"/> class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ZoomAction.Stroke">
            <summary>
            Gets or sets the stroke brush that is used for
            painting the selection area.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ZoomAction.Fill">
            <summary>
            Gets or sets the fill brush that is used for
            painting selection area.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.MouseWheelDirection">
            <summary>
            Specifies available values for mouse wheel direction.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.MouseWheelDirection.None">
            <summary>
            Mouse wheel has no effect.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.MouseWheelDirection.X">
            <summary>
            Mouse wheel causes action along x-axis.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.MouseWheelDirection.Y">
            <summary>
            Mouse wheel causes action along y-axis.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.MouseWheelDirection.XY">
            <summary>
            Mouse wheel causes action along both x- and y- axes.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.ScaleAction">
            <summary>
            Represents the scale action.
            </summary>
            <remarks>
            The MinScale property of Axis property specifies the minimum 
            scale that can set for the axis. If MinScale is equal to 1
            the zoom is not applied to the axis.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Chart.ScaleAction.#ctor">
            <summary>
            Creates a new instance of the ScaleAction class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ScaleAction.MouseWheelDirection">
            <summary>
            Gets or sets the mouse wheel direction.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ScaleAction.MouseWheelFactor">
            <summary>
            Gets or sets the factor that defines sensitivity to the mouse wheel.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.ActionCollection">
            <summary>
            Represents a collection of Action objects that describe
            the interactive behavior of a <see cref="T:C1.Silverlight.Chart.C1Chart"/> at runtime.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ActionCollection.UpdateDelay">
            <summary>
            Gets or sets chart update delay in milliseconds after interactive action.
            </summary>
        </member>
        <member name="T:System.Windows.Media.Imaging.WriteableBitmapExtensions">
            <summary>
            Collection of draw extension methods for the Silverlight WriteableBitmap class.
            </summary>
            <summary>
            Collection of draw extension methods for the Silverlight WriteableBitmap class.
            </summary>
            <summary>
            Collection of draw extension methods for the Silverlight WriteableBitmap class.
            </summary>
            <summary>
            Collection of draw spline extension methods for the Silverlight WriteableBitmap class.
            </summary>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Clear(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color)">
            <summary>
            Fills the whole WriteableBitmap with a color.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="color">The color used for filling.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Clear(System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>
            Fills the whole WriteableBitmap with an empty color (0).
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a filled rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a filled rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillEllipse(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing filled ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillEllipse(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing filled ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing filled ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing filled ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillPolygon(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Windows.Media.Color)">
            <summary>
            Draws a filled polygon. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polygon in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillPolygon(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Int32)">
            <summary>
            Draws a filled polygon. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polygon in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillQuad(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a filled quad.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="x4">The x-coordinate of the 4th point.</param>
            <param name="y4">The y-coordinate of the 4th point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillQuad(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a filled quad.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="x4">The x-coordinate of the 4th point.</param>
            <param name="y4">The y-coordinate of the 4th point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillTriangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a filled triangle.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillTriangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a filled triangle.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLineBresenham(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a colored line by connecting two points using the Bresenham algorithm.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLineBresenham(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using the Bresenham algorithm.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLineDDA(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a colored line by connecting two points using a DDA algorithm (Digital Differential Analyzer).
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLineDDA(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using a DDA algorithm (Digital Differential Analyzer).
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLine(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLine(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLine(System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA. 
            Uses the pixels array and the width directly for best performance.
            </summary>
            <param name="pixels">An array containing the pixels as int RGBA value.</param>
            <param name="pixelWidth">The width of one scanline in the pixels array.</param>
            <param name="pixelHeight">The height of the bitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawPolyline(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Windows.Media.Color)">
            <summary>
            Draws a polyline. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polyline in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawPolyline(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Int32)">
            <summary>
            Draws a polyline. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polyline in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawTriangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a triangle.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawTriangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a triangle.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawQuad(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a quad.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="x4">The x-coordinate of the 4th point.</param>
            <param name="y4">The y-coordinate of the 4th point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawQuad(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a quad.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="x4">The x-coordinate of the 4th point.</param>
            <param name="y4">The y-coordinate of the 4th point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawEllipse(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawEllipse(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="T:C1.Silverlight.Chart.C1Chart">
            <summary>
            Represents a C1Chart control.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.C1Chart.ChartTypeProperty">
            <summary>
            Identifies the ChartType dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.C1Chart.DataProperty">
            <summary>
            Identifies the Data dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.C1Chart.ViewProperty">
            <summary>
            Identifies the View dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.C1Chart.#ctor">
            <summary>
            Initializes a new instance of the C1Chart class. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.C1Chart.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.C1Chart.BeginUpdate">
            <summary>
            Starts batch updating.
            </summary>
            <remarks>
            Prevents updating of the control until the <see cref="M:C1.Silverlight.Chart.C1Chart.EndUpdate"/> method is called.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Chart.C1Chart.EndUpdate">
            <summary>
            Ends batch updating.
            </summary>
            <remarks>
            Updates the controls with changes made after the previous call of <see cref="M:C1.Silverlight.Chart.C1Chart.BeginUpdate"/> method.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Chart.C1Chart.ShouldSerializeData">
            <summary>
            Whether the data should be serialized
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.C1Chart.ResetData">
            <summary>
            Resets the data to the default value.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.C1Chart.Reset(System.Boolean)">
            <summary>
            Resets the chart specific properties to its default state.
            The common control properties and properties controlling
            visual appearance such as Background, Foreground, Palette, Theme
            are not changed.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.C1Chart.FindPlotElement(System.String)">
            <summary>
            Find the plot element by its name.
            </summary>
            <param name="name">The name of element to find.</param>
            <returns>The plot element with the specified name.</returns>
        </member>
        <member name="F:C1.Silverlight.Chart.C1Chart.LegendItemsProperty">
            <summary>
            Identifies the LegendItems dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.C1Chart.ApplyChartType(System.String)">
            <summary>
            Applies the specified chart type.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:C1.Silverlight.Chart.C1Chart.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Called before MouseWheel event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:C1.Silverlight.Chart.C1Chart.CustomPaletteProperty">
            <summary>
            Identifies the CustomPalette dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.C1Chart.AggregateProperty">
            <summary>
            Identifies the Aggregate dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.C1Chart.MeasureOverride(System.Windows.Size)">
            <summary>
            
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.C1Chart.ArrangeOverride(System.Windows.Size)">
            <summary>
            
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.C1Chart.OnApplyTemplate">
            <summary>
            Invoked when control template was applied.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.C1Chart.ThemeProperty">
            <summary>
            Identifies the Theme dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.C1Chart.CustomThemeProperty">
            <summary>
            Identifies the CustomeTheme dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1Chart.CornerRadius">
            <summary>
            Gets or sets corner radius of the chart.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1Chart.Data">
            <summary>
            Gets or sets the chart data.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1Chart.ViewElement">
            <summary>
            Gets or sets real element that presents chart data.
            Canvas for 2D charts, Viewport3D for 3D charts.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1Chart.View">
            <summary>
            Gets or sets the chart view.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1Chart.LegendItems">
            <summary>
            Gets the collection of legend items.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1Chart.Palette">
            <summary>
            Gets or sets color palette.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1Chart.ChartType">
            <summary>
            Gets or sets the chart type.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1Chart.Actions">
            <summary>
            Stores the Action objects that control interactive features at runtime.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1Chart.CustomPalette">
            <summary>
            Gets or sets the custom brushes array for the plot elements.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.C1Chart.ActionEnter">
            <summary>
            Fires when interactive action is started.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.C1Chart.ActionLeave">
            <summary>
            Fires when interactive action is finished.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1Chart.ActionUpdateDelay">
            <summary>
            Gets or sets chart update delay in milliseconds after interactive action.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1Chart.GradientMethod">
            <summary>
            Specifies how to handle gradient brushes in themes and custom palettes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1Chart.VisualEffect">
            <summary>
            Gets or sets visual effect that applied to the chart data elements(bar,column,pie etc.).
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1Chart.Aggregate">
            <summary>
            Gets or sets the value which specifies how to aggregate data for charting. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1Chart.AutoGenerateSeries">
            <summary>
            Gets or sets a value that indicates whether data series are created automatically.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1Chart.Bindings">
            <summary>
            Gets or sets chart bindings.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.C1Chart.PropertyChanged">
            <summary>
            Fires when property was changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1Chart.Children">
            <summary>
            Gets collection of child elements.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.C1Chart.LegendChanged">
            <summary>
            Fires when the chart legend was updated.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1Chart.Theme">
            <summary>
            Gets or sets chart theme.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1Chart.CustomTheme">
            <summary>
            Gets or sets user-defined theme.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.GradientMethod">
            <summary>
            Specifies how to handle gradient brushes in themes and custom palettes.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.GradientMethod.Auto">
            <summary>
            Automatic, chart converts linear brushes to radial if it is
            appropriate for the current chart type.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.GradientMethod.None">
            <summary>
            There is no conversion for gradient brushes.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.GradientMethod.Linear">
            <summary>
            Chart always uses linear gradient.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.GradientMethod.Radial">
            <summary>
            Chart always uses radial gradient.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.BubbleOptions">
            <summary>
            Bubble chart options.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.BubbleOptions.ScaleProperty">
            Identifies the Scale dependency property.
        </member>
        <member name="M:C1.Silverlight.Chart.BubbleOptions.GetScale(C1.Silverlight.Chart.C1Chart)">
            <summary>
            Returns the value of the ScaleProperty attached property for a specified chart.
            </summary>
            <param name="chart"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.BubbleOptions.SetScale(C1.Silverlight.Chart.C1Chart,C1.Silverlight.Chart.BubbleScale)">
            <summary>
            Sets the value of the ScaleProperty attached property for a specified chart.
            </summary>
            <param name="chart"></param>
            <param name="value"></param>
        </member>
        <member name="F:C1.Silverlight.Chart.BubbleOptions.MinSizeProperty">
            <summary>
            Identifies the MinSize dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.BubbleOptions.GetMinSize(C1.Silverlight.Chart.C1Chart)">
            <summary>
            Returns the value of the MinSizeProperty attached property for a specified chart.
            </summary>
            <param name="chart"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.BubbleOptions.SetMinSize(C1.Silverlight.Chart.C1Chart,System.Windows.Size)">
            <summary>
            Sets the value of the MinSizeProperty attached property for a specified chart.
            </summary>
            <param name="chart"></param>
            <param name="value"></param>
        </member>
        <member name="F:C1.Silverlight.Chart.BubbleOptions.MaxSizeProperty">
            <summary>
            Identifies the MaxSize dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.BubbleOptions.GetMaxSize(C1.Silverlight.Chart.C1Chart)">
            <summary>
            Returns the value of the MaxSizeProperty attached property for a specified chart.
            </summary>
            <param name="chart"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.BubbleOptions.SetMaxSize(C1.Silverlight.Chart.C1Chart,System.Windows.Size)">
            <summary>
            Sets the value of the MinSizeProperty attached property for a specified chart.
            </summary>
            <param name="chart"></param>
            <param name="value"></param>
        </member>
        <member name="T:C1.Silverlight.Chart.BarColumnOptions">
            <summary>
            Bar/column chart options.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.BarColumnOptions.SizeProperty">
            Identifies the Size dependency property.
        </member>
        <member name="M:C1.Silverlight.Chart.BarColumnOptions.GetSize(C1.Silverlight.Chart.C1Chart)">
            <summary>
            Returns the value of the SizeProperty attached property for a specified chart.
            The BarColumnOptions.Size property specifies the size(column width or bar height)
            of elements for bar and column charts. The value of the property is relative
            to the available space e.g. when BarColumnOptions.Size the elements fill all
            available space on the plot.
            </summary>
            <param name="chart"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.BarColumnOptions.SetSize(C1.Silverlight.Chart.C1Chart,System.Double)">
            <summary>
            Sets the value of the SizeProperty attached property for a specified chart.
            </summary>
            <param name="chart"></param>
            <param name="value"></param>
        </member>
        <member name="F:C1.Silverlight.Chart.BarColumnOptions.OriginProperty">
            <summary>
            Identifies the Origin dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.BarColumnOptions.GetOrigin(C1.Silverlight.Chart.C1Chart)">
            <summary>
            Returns the value of the OriginProperty attached property for a specified chart.
            </summary>
            <param name="chart"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.BarColumnOptions.SetOrigin(C1.Silverlight.Chart.C1Chart,System.Double)">
            <summary>
            Sets the value of the OriginProperty attached property for a specified chart.
            </summary>
            <param name="chart"></param>
            <param name="value"></param>
        </member>
        <member name="F:C1.Silverlight.Chart.BarColumnOptions.RadiusXProperty">
            <summary>
            Identifies the RadiusX dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.BarColumnOptions.GetRadiusX(C1.Silverlight.Chart.C1Chart)">
            <summary>
            Returns the value of the RadiusXProperty attached property for a specified chart.
            </summary>
            <param name="chart"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.BarColumnOptions.SetRadiusX(C1.Silverlight.Chart.C1Chart,System.Double)">
            <summary>
            Sets the value of the RadiusXProperty attached property for a specified chart.
            </summary>
            <param name="chart"></param>
            <param name="value"></param>
        </member>
        <member name="F:C1.Silverlight.Chart.BarColumnOptions.RadiusYProperty">
            <summary>
            Identifies the RadiusY dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.BarColumnOptions.GetRadiusY(C1.Silverlight.Chart.C1Chart)">
            <summary>
            Returns the value of the RadiusYProperty attached property for a specified chart.
            </summary>
            <param name="chart"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.BarColumnOptions.SetRadiusY(C1.Silverlight.Chart.C1Chart,System.Double)">
            <summary>
            Sets the value of the RadiusYProperty attached property for a specified chart.
            </summary>
            <param name="chart"></param>
            <param name="value"></param>
        </member>
        <member name="F:C1.Silverlight.Chart.BarColumnOptions.StackGroupProperty">
            <summary>
            Identifies the StackGroup attached dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.BarColumnOptions.GetStackGroup(C1.Silverlight.Chart.DataSeries)">
            <summary>
            Returns the value of the StackGroupProperty attached property for a specified data series.
            </summary>
            <param name="ds"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.BarColumnOptions.SetStackGroup(C1.Silverlight.Chart.DataSeries,System.Int32)">
            <summary>
            Sets the value of the StackGroupProperty attached property for a specified chart.
            </summary>
            <param name="ds"></param>
            <param name="value"></param>
        </member>
        <member name="T:C1.Silverlight.Chart.OptimizationRadiusScope">
            <summary>
            Specifies available options of optimization radius scope.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.OptimizationRadiusScope.Lines">
            <summary>
            Optimization radius applies only for lines.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.OptimizationRadiusScope.Symbols">
            <summary>
            Optimization radius applies only for symbols.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.OptimizationRadiusScope.LinesAndSymbols">
            <summary>
            Optimization radius applies for lines and symbols.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.LineAreaOptions">
            <summary>
            Specifies various advanced options for line and area charts.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.LineAreaOptions.OptimizationRadiusProperty">
            Identifies the OptimizationRadius dependency property.
        </member>
        <member name="M:C1.Silverlight.Chart.LineAreaOptions.GetOptimizationRadius(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the OptimizationRadius attached property for a specified chart.
            </summary>
            <param name="chart"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.LineAreaOptions.SetOptimizationRadius(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the value of the OptimizationRadius attached property for a specified chart.
            The property controls rendering optimization for line and area charts with large
            data arrays. If the distance between consequent data points is less than radius
            the point is skipped from rendering.
            </summary>
            <param name="chart"></param>
            <param name="value"></param>
            <remarks>
            By default the optimization is switch off(OptimizationRadius=double.NaN).
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Chart.LineAreaOptions.ClippingProperty">
            Identifies the Clipping dependency property.
        </member>
        <member name="M:C1.Silverlight.Chart.LineAreaOptions.GetClipping(C1.Silverlight.Chart.C1Chart)">
            <summary>
            Gets the value of the Clipping attached property for a specified chart.
            </summary>
            <param name="chart"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.LineAreaOptions.SetClipping(C1.Silverlight.Chart.C1Chart,C1.Silverlight.Chart.Clipping)">
            <summary>
            Sets the value of the ClippingProperty attached property for a specified chart.
            </summary>
            <param name="chart"></param>
            <param name="value"></param>
        </member>
        <member name="M:C1.Silverlight.Chart.LineAreaOptions.GetOptimizationRadiusScope(C1.Silverlight.Chart.C1Chart)">
            <summary>
            Gets the value of the OptimizationRadiusScope attached property for the specified chart.
            </summary>
            <param name="chart"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.LineAreaOptions.SetOptimizationRadiusScope(System.Windows.DependencyObject,C1.Silverlight.Chart.OptimizationRadiusScope)">
            <summary>
            Sets the value of the OptimizationRadiusScope attached property for the specified chart.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:C1.Silverlight.Chart.LineAreaOptions.OptimizationRadiusScopeProperty">
            Identifies the OptimizationRadiusScope attached dependency property.
        </member>
        <member name="T:C1.Silverlight.Chart.PolarRadarOptions">
            <summary>
            Specifies various advanced options for polar and radar charts.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PolarRadarOptions.StartingAngleProperty">
            Identifies the StartingAngle attached dependency property.
        </member>
        <member name="M:C1.Silverlight.Chart.PolarRadarOptions.GetStartingAngle(C1.Silverlight.Chart.C1Chart)">
            <summary>
            Gets the value of the StartingAngle attached property for the specified chart.
            </summary>
            <param name="chart">The chart.</param>
            <returns>The starting angle for polar and radar charts.</returns>
        </member>
        <member name="M:C1.Silverlight.Chart.PolarRadarOptions.SetStartingAngle(C1.Silverlight.Chart.C1Chart,System.Double)">
            <summary>
            Sets the value of the StartingAngle attached property for the specified chart.
            </summary>
            <param name="chart">The chart.</param>
            <param name="value">The value of starting angle for polar and radar charts.</param>
        </member>
        <member name="F:C1.Silverlight.Chart.PolarRadarOptions.DirectionProperty">
            Identifies the Direction attached dependency property.
        </member>
        <member name="M:C1.Silverlight.Chart.PolarRadarOptions.GetDirection(C1.Silverlight.Chart.C1Chart)">
            <summary>
            Gets the value of the Direction attached property for the specified chart.
            </summary>
            <param name="chart">The chart.</param>
            <returns>The direction of plotting for polar and radar charts.</returns>
        </member>
        <member name="M:C1.Silverlight.Chart.PolarRadarOptions.SetDirection(C1.Silverlight.Chart.C1Chart,System.Windows.Media.SweepDirection)">
            <summary>
            Sets the value of the Direction attached property for the specified chart.
            </summary>
            <param name="chart">The chart</param>
            <param name="value">The direction of plotting for polar and radar charts.</param>
        </member>
        <member name="T:C1.Silverlight.Chart.PieOptions">
            <summary>
            Specifies various options for pie charts.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PieOptions.StartingAngleProperty">
            Identifies the StartingAngle attached dependency property.
        </member>
        <member name="M:C1.Silverlight.Chart.PieOptions.GetStartingAngle(C1.Silverlight.Chart.C1Chart)">
            <summary>
            Gets the value of the StartingAngle attached property for the specified chart.
            </summary>
            <param name="chart"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.PieOptions.SetStartingAngle(C1.Silverlight.Chart.C1Chart,System.Double)">
            <summary>
            Sets the value of the StartingAngle attached property for the specified chart.
            </summary>
            <param name="chart"></param>
            <param name="value"></param>
        </member>
        <member name="F:C1.Silverlight.Chart.PieOptions.DirectionProperty">
            Identifies the Direction attached dependency property.
        </member>
        <member name="M:C1.Silverlight.Chart.PieOptions.GetDirection(C1.Silverlight.Chart.C1Chart)">
            <summary>
            Gets the value of the Direction attached property for the specified chart.
            </summary>
            <param name="chart"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.PieOptions.SetDirection(C1.Silverlight.Chart.C1Chart,System.Windows.Media.SweepDirection)">
            <summary>
            Sets the value of the Direction attached property for the specified chart.
            </summary>
            <param name="chart"></param>
            <param name="value"></param>
        </member>
        <member name="T:C1.Silverlight.Chart.Aggregate">
            <summary>
            Specifies how data should be aggregated for charting.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Aggregate.None">
            <summary>
            Raw values (no aggregation).
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Aggregate.Sum">
            <summary>
            Sum all values for each point.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Aggregate.Count">
            <summary>
            Number of values for each point.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Aggregate.Average">
            <summary>
            Average all values for each point.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Aggregate.Minimum">
            <summary>
            Get the minimum value for each point.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Aggregate.Maximum">
            <summary>
            Get the maximum value for each point.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Aggregate.Variance">
            <summary>
            Gets the variance of the values for each point (sample).
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Aggregate.VariancePop">
            <summary>
            Gets the variance of the values for each point (population).
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Aggregate.StandardDeviation">
            <summary>
            Gets the standard deviation of the values for each point (sample).
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Aggregate.StandardDeviationPop">
            <summary>
            Gets the standard deviation of the values for each point (population).
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.ChartData">
            <summary>
            Main class of data handling, contains collection of data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartData.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartData.ItemNamesProperty">
            <summary>
            Identifies the ItemNames dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartData.RendererProperty">
            <summary>
            Identifies the Renderer dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartData.ShouldSerializeChildren">
            <summary>
            Determines whether the Children collection should be serialized. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartData.CreateDesignTimeData">
            <summary>
            Creates set of design-time default data values.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.ChartData.DataChanged">
            <summary>
            Fires when data was changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartData.ItemNameBinding">
            <summary>
            Gets or sets the item name binding.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.ChartData.PropertyChanged">
            <summary>
            Fires when a property value changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartData.Children">
            <summary>
            Gets the collection of data series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartData.Renderer">
            <summary>
            Gets or sets renderer which is responsible for data visualization.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartData.ItemNames">
            <summary>
            Gets or sets the item names.
            </summary>
            <remarks>
            The item names are common for all data series.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartData.ItemsSource">
            <summary>
            Gets or sets the items source.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.DataSeries">
            <summary>
            Represents data series which contains a group of data values.
            </summary>
            <remarks>
            The DataSeries class has the single set of data values.
            </remarks>
        </member>
        <member name="T:C1.Silverlight.Chart.IDataSeriesInfo">
            <summary>
            Generic data series.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.IDataSeriesInfo.GetDataNames">
            <summary>
            Gets data column names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.IDataSeriesInfo.GetValues">
            <summary>
            Gets 2D array containing data values.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.IDataSeriesInfo.GetValueCoordinates">
            <summary>
            Gets coordinates which correspond to the data values.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.IDataSeriesInfo.SetResolvedValues(System.Int32,System.Object[])">
            <summary>
            Setup bounded data values.
            </summary>
            <param name="index"></param>
            <param name="values"></param>
        </member>
        <member name="P:C1.Silverlight.Chart.IDataSeriesInfo.Label">
            <summary>
            Gets or sets the text label of data series
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.IDataSeriesInfo.Symbol">
            <summary>
            Gets or sets the symbol template for data series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.IDataSeriesInfo.Connection">
            <summary>
            Gets or sets the connection template for data series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.IDataSeriesInfo.MemberPaths">
            <summary>
            Gets the member bindings for the data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.AggregateProperty">
            <summary>
            Identifies the Aggregate dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.SymbolProperty">
            <summary>
            Identifies the Symbol dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.ConnectionProperty">
            <summary>
            Identifies the Connection dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.ValuesSourceProperty">
            <summary>
            Identifies the ValueSource dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.xfmt">
            <summary>
            Stores default formats for x- and y- axes.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.yfmt">
            <summary>
            Stores default formats for x- and y- axes.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.isTimeValues">
            <summary>
            Flags for time values.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.datavalues">
            <summary>
            Cached data values.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.listY">
            <summary>
            Temporary list of y-values.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.DataSeries.Invalidate">
            <summary>
            Forces the data series repainting.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.SymbolStyleProperty">
            <summary>
            Identifies the SymbolStyle dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.ConnectionStyleProperty">
            <summary>
            Identifies the ConnectionStyle dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.LabelProperty">
            <summary>
            Identifies the Label dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.DataSeries.ProcessValues(System.Double[0:,0:])">
            <summary>
            Performs additional processing of data values.
            </summary>
            <param name="values">The array of initial data values.</param>
            <returns>The array of processed data values.</returns>
        </member>
        <member name="M:C1.Silverlight.Chart.DataSeries.IsTimeData(System.Collections.Generic.List{System.Object})">
            <summary>
            Whether the list is time-values.
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.DataSeries.OnChangeValues(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles change values notification.
            </summary>
            <param name="obj"></param>
            <param name="args"></param>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.PointLabelTemplateProperty">
            <summary>
            Identifies the PointLabelTemplate dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.PointTooltipTemplateProperty">
            <summary>
            Identifies the PointTooltipTemplate dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.DataSeries.#ctor">
            <summary>
            Initializes a new instance of DataSeries class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.DataSeries.ToString">
            <summary>
            Returns string representation of the data series.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.DataSeries.GetDataValue(System.String,System.Int32)">
            <summary>
            Gets the data value with specified name at the specified index.
            </summary>
            <param name="name">Name of data array.</param>
            <param name="pointIndex">Index of the value.</param>
            <returns></returns>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.SymbolFillProperty">
            <summary>
            Identifies the SymbolFill dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.SymbolStrokeProperty">
            <summary>
            Identifies the SymbolStroke dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.ConnectionFillProperty">
            <summary>
            Identifies the ConnectionFill dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.ConnectionStrokeProperty">
            <summary>
            Identifies the ConnectionStroke dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.ConnectionStrokeThicknessProperty">
            <summary>
            Identifies the ConnectionStrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.SymbolStrokeThicknessProperty">
            <summary>
            Identifies the SymbolStrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.SymbolStrokeDashesProperty">
            <summary>
            Identifies the SymbolStrokeDashes dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.ConnectionStrokeDashesProperty">
            <summary>
            Identifies the ConnectionStrokeDashes dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.SymbolMarkerProperty">
            <summary>
            Identifies the SymbolMarker dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.DisplayProperty">
            <summary>
            Identifies the Display dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.SymbolSizeProperty">
            <summary>
            Identifies the SymbolSize dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.DataSeries.ChartTypeProperty">
            <summary>
            Identifies the ChartType dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.Aggregate">
            <summary>
            Gets or sets the value which specifies how to aggregate data for charting. 
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.DataSeries.PlotElementLoaded">
            <summary>
            Fires when plot element associated with this data series is loaded.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.DataSeries.PlotElementUnloaded">
            <summary>
            Fires when plot element associated with this data series is unloaded.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.Dirty">
            <summary>
            Gets or sets whether the data values array should be regenerated.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.Symbol">
            <summary>
            Gets or sets the symbol template which applies
            to the each data point of the series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.Connection">
            <summary>
            Gets or sets the connection template which applies 
            to whole set of data points of series.
            </summary>
            <remarks>
            The connection template is used for visualizing the data series
            as a single visual such as line connecting the data points.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.SymbolStyle">
            <summary>
            Gets or sets the style of symbol.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.ConnectionStyle">
            <summary>
            Gets or sets the style of connection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.SymbolShape">
            <summary>
            Gets or sets the symbol shape.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.ConnectionShape">
            <summary>
            Gets or sets the connection shape.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.AxisX">
            <summary>
            Gets or sets the name of auxiliary axis that is used as x-axis for the series.
            </summary>
            <remarks>
            If AxisX is an empty string the default x-axis is used for this series.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.AxisY">
            <summary>
            Gets or sets the name of auxiliary axis that is used as y-axis for the series.
            </summary>
            <remarks>
            If AxisY is an empty string the default y-axis is used for this series.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.Chart.DataSeries.PropertyChanged">
            <summary>
            Fires when a property value was changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.MemberPaths">
            <summary>
            Gets the array of member bindings for the series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.ValueBinding">
            <summary>
            Gets or sets the value binding.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.Values">
            <summary>
            Gets or sets the data values collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.PointLabelTemplate">
            <summary>
            Gets or sets the template for data point label.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.PointTooltipTemplate">
            <summary>
            Gets or sets the template for data point tooltip.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.Label">
            <summary>
            Gets or sets the text label of data series.
            </summary>
            <remarks>
            Usually the Label property is used to identify the data series
            in the chart legend.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.ValuesSource">
            <summary>
            Gets or sets the data values source.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.ItemsSource">
            <summary>
            Gets or sets items source of data series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.SymbolFill">
            <summary>
            Gets or sets the symbol fill brush.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.SymbolStroke">
            <summary>
            Gets or sets the symbol outline brush.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.ConnectionFill">
            <summary>
            Gets or sets the connection fill brush.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.ConnectionStroke">
            <summary>
            Gets or sets the connection outline brush.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.ConnectionStrokeThickness">
            <summary>
            Gets or sets the connection outline thickness.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.SymbolStrokeThickness">
            <summary>
            Gets or sets the symbol outline thickness.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.SymbolStrokeDashes">
            <summary>
            Gets or sets the dash pattern of symbol stroke.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.ConnectionStrokeDashes">
            <summary>
            Gets or sets the dash pattern of connection stroke.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.SymbolMarker">
            <summary>
            Gets or sets the symbol marker.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.Display">
            <summary>
            Gets or sets the data series display.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.SymbolSize">
            <summary>
            Gets or sets the symbol size in pixels.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.DataSeries.Loaded">
            <summary>
            Fires when plot element associated with this data series is loaded.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.AutoGenerated">
            <summary>
            Gets the value that indicates whether the data series was generated automatically.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.ChartType">
            <summary>
            Gets or sets series-specific chart type. By default, chart type is defined by
            C1Chart.ChartType property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataSeries.RenderMode">
            <summary>
            Gets or sets the render mode for the series.
            </summary>
            <remarks>
            Only RenderMode.Default supports all chart types.
            </remarks>
        </member>
        <member name="T:C1.Silverlight.Chart.DataSeriesCollection">
            <summary>
            Represents collection of data series.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.DataSeriesCollection.#ctor">
            <summary>
            Initializes a new instance of DataSeriesCollection class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.DataSeriesCollection.ClearItems">
            <summary>
            Removes all items from the collection. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.DataSeriesCollection.InsertItem(System.Int32,C1.Silverlight.Chart.DataSeries)">
            <summary>
            Inserts an element into the Collection at the specified index. 
            </summary>
            <param name="index">The index at which element should be inserted.</param>
            <param name="item">The element to insert.</param>
        </member>
        <member name="M:C1.Silverlight.Chart.DataSeriesCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the Collection. 
            </summary>
            <param name="index">The index of element to remove.</param>
        </member>
        <member name="M:C1.Silverlight.Chart.DataSeriesCollection.SetItem(System.Int32,C1.Silverlight.Chart.DataSeries)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">The index of element to replace.</param>
            <param name="item">The new element at the specified index.</param>
        </member>
        <member name="T:C1.Silverlight.Chart.ChartBindings">
            <summary>
            Specifies various data bindings for chart.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartBindings.XBinding">
            <summary>
            Gets or sets x-value binding for data series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartBindings.ItemNameBinding">
            <summary>
            Gets or sets item name binding for chart data.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartBindings.SeriesBindings">
            <summary>
            Gets the collection that contains data series value bindings.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.SeriesDisplay">
            <summary>
            Specifies various display options for data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.SeriesDisplay.SkipNaN">
            <summary>
            Skip NaN values(default) behavior.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.SeriesDisplay.ShowNaNGap">
            <summary>
            Gaps are shown if there are NaN values in data.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.SeriesDisplay.HideLegend">
            <summary>
            Hides series from the legend.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.RenderMode">
            <summary>
            Specifies available render mode for data series. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.RenderMode.Default">
            <summary>
            Default render mode. All chart types are supported. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.RenderMode.Bitmap">
            <summary>
            Bitmap mode. High performance render mode. At this moment only line and symbol charts are supported.
            Data point labels, tooltips and PlotElementLoaded event are not available.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.ValueCoordinate">
            <summary>
            Specifies which coordinate corresponds to the data values.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ValueCoordinate.None">
            <summary>
            None or default.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ValueCoordinate.X">
            <summary>
            X-coordinate.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ValueCoordinate.Y">
            <summary>
            Y-coordinate.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ValueCoordinate.Z">
            <summary>
            Z-coordinate.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ValueCoordinate.Size">
            <summary>
            Size-coordinate.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.AxisPoint">
            <summary>
            Represents the point on the axis.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.AxisPoint.ToString">
            <summary>
            Returns string that represents the object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.Chart.AxisPoint.Value">
            <summary>
            Gets the coordinate value of the axis point.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.AxisPoint.FormattedValue">
            <summary>
            Gets the formatted value of axis point.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.AxisPoint.LogValue">
            <summary>
            Gets the logarithmic value of the axis point. For the linear(non-logarithmic)
            axis it returns axis value.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.AxisPoint.FormattedLogBase">
            <summary>
            Gets the formatted logarithmic base.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.AxisPoint.LogBase">
            <summary>
            Gets the logarithmic base of the axis.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.AxisPoint.DataObject">
            <summary>
            Gets the object associated with axis point.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.AxisPoint.Axis">
            <summary>
            Gets the axis which corresponds to the point.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.DataPoint">
            <summary>
            Represent the single data point that may have several data values.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.DataPoint.ToString">
            <summary>
            Returns a string that represents the current DataPoint.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.Chart.DataPoint.SeriesIndex">
            <summary>
            Gets the index of data series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataPoint.PointIndex">
            <summary>
            Gets the point index.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataPoint.Item(System.String)">
            <summary>
            Gets the value of the data point.
            </summary>
            <param name="name">String name of value.</param>
            <returns>The value</returns>
        </member>
        <member name="P:C1.Silverlight.Chart.DataPoint.Item(System.Int32)">
            <summary>
            Gets the indexed value of the point.
            </summary>
            <param name="index">Index of value.</param>
            <returns>The indexed value.</returns>
        </member>
        <member name="P:C1.Silverlight.Chart.DataPoint.Item(System.String,System.String)">
            <summary>
            Gets the value of the data point formatted with the specified format string. 
            </summary>
            <param name="name"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.Chart.DataPoint.Value">
            <summary>
            Gets the value of the point.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataPoint.DataObject">
            <summary>
            Gets the object which is associated with the data point.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataPoint.PercentageSeries">
            <summary>
            Gets the percentage value of the point in the series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataPoint.PercentagePoint">
            <summary>
            Gets the percentage value of the point in the all series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataPoint.Series">
            <summary>
            Gets the data series related to the data point.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DataPoint.Name">
            <summary>
            Gets the name associated with the data point.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.XYDataSeries">
            <summary>
            Represents data series with X- and Y-values.
            </summary>
            <remarks>
            The XYDataSeries class has two sets of data values
            (for x-coordinates and for y-coordinates).
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Chart.XYDataSeries.#ctor">
            <summary>
            Creates an instance of XYDataSeries class.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.XYDataSeries.XValuesSourceProperty">
            <summary>
            Identifies the XValuesSource dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.XYDataSeries.listX">
            <summary>
            Temporary list for x-values.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.XYDataSeries.XValueBinding">
            <summary>
            Gets or sets binding for x data values.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.XYDataSeries.XValues">
            <summary>
            Gets or set the x-data values collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.XYDataSeries.MemberPaths">
            <summary>
            Gets the array of member bindings for the series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.XYDataSeries.XValuesSource">
            <summary>
            Gets or sets the x-data values source.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.XYDataSeries.XYDataPoint">
            <summary>
            Represents data point for XYDataSeries.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.XYDataSeries.XYDataPoint.X">
            <summary>
            Gets the x-value.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.XYDataSeries.XYDataPoint.XAsString">
            <summary>
            Gets the x-value as formatted string.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.XYDataSeries.XYDataPoint.Y">
            <summary>
            Gets the y-value.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.XYDataSeries.XYDataPoint.YAsString">
            <summary>
            Gets the y-value as formatted string.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.HighLowSeries">
            <summary>
            Represents data series with X, Y, High and Low values.
            </summary>
            <remarks>
            The HighLowSeries class has four sets of data values 
            (x-coordinates, y-coordinates, high values, low values).
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Chart.HighLowSeries.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:C1.Silverlight.Chart.HighLowSeries"/> class.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.HighLowSeries.HighValuesSourceProperty">
            <summary>
            Identifies the HighValuesSource dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.HighLowSeries.LowValuesSourceProperty">
            <summary>
            Identifies the LowValuesSource dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.HighLowSeries.alLo">
            <summary>
            Temporary list for low data values.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.HighLowSeries.alHi">
            <summary>
            Temporary list for high data values.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.HighLowSeries.HighValueBinding">
            <summary>
            Gets or sets binding for high data values.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.HighLowSeries.LowValueBinding">
            <summary>
            Gets or sets binding for low data values.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.HighLowSeries.HighValues">
            <summary>
            Gets or set the high data values collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.HighLowSeries.LowValues">
            <summary>
            Gets or set the high data values collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.HighLowSeries.HighValuesSource">
            <summary>
            Gets or sets the source for high data values.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.HighLowSeries.LowValuesSource">
            <summary>
            Gets or sets the source for low data values.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.HighLowSeries.MemberPaths">
            <summary>
            Gets the array of member bindings for the series.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.HighLowOpenCloseSeries">
            <summary>
            Represents data series with x, y, high, low, open, close data arrays.
            </summary>
            <remarks>
            HighLowOpenCloseSeries class is typically used for financial data.
            It has six sets of data value (x-coordinates, y-coordinates, high values,
            low values, open values, close values).
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Chart.HighLowOpenCloseSeries.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:C1.Silverlight.Chart.HighLowOpenCloseSeries"/> class.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.HighLowOpenCloseSeries.OpenValuesSourceProperty">
            <summary>
            Identifies the OpenValuesSource dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.HighLowOpenCloseSeries.CloseValuesSourceProperty">
            <summary>
            Identifies the CloseValuesSource dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.HighLowOpenCloseSeries.alOp">
            <summary>
            Temporary list for open data values.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.HighLowOpenCloseSeries.alCl">
            <summary>
            Temporary list for close data values.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.HighLowOpenCloseSeries.OpenValueBinding">
            <summary>
            Gets or sets binding for open data values.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.HighLowOpenCloseSeries.CloseValueBinding">
            <summary>
            Gets or sets binding for close data values.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.HighLowOpenCloseSeries.OpenValues">
            <summary>
            Gets or set the open data values collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.HighLowOpenCloseSeries.CloseValues">
            <summary>
            Gets or set the close data values collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.HighLowOpenCloseSeries.MemberPaths">
            <summary>
            Gets the array of member bindings for the series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.HighLowOpenCloseSeries.OpenValuesSource">
            <summary>
            Gets or sets the source for open data values.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.HighLowOpenCloseSeries.CloseValuesSource">
            <summary>
            Gets or sets the source for close data values.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.HighLowOpenCloseSeries.HLOCDataPoint">
            <summary>
            Represents data point for HighLowOpenCloseSeries.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.HighLowOpenCloseSeries.HLOCDataPoint.High">
            <summary>
            Gets the high value.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.HighLowOpenCloseSeries.HLOCDataPoint.Low">
            <summary>
            Gets the low value.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.HighLowOpenCloseSeries.HLOCDataPoint.Open">
            <summary>
            Gets the open value.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.HighLowOpenCloseSeries.HLOCDataPoint.Close">
            <summary>
            Gets the close value.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.BubbleScale">
            <summary>
            Specifies how to calculate the size of symbols for Bubble chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.BubbleScale.Diameter">
            <summary>
            Scales the symbols according to diameter(linear size).
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.BubbleScale.Area">
            <summary>
            Scales the symbols according to area(quadratic size).
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.BubbleSeries">
            <summary>
            BubbleSeries can contains values that specify size of the symbol
            for each data point. Use BubbleSeries to create bubble charts.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.BubbleSeries.#ctor">
            <summary>
            Creates an instance of BubbleSeries class.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.BubbleSeries.SizeValuesSourceProperty">
            <summary>
            Identifies the SizeValuesSource dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.BubbleSeries.listSize">
            <summary>
            Temporary list for x-values.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.BubbleSeries.SizeValueBinding">
            <summary>
            Gets or sets binding for size data values.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.BubbleSeries.SizeValues">
            <summary>
            Gets or set the size data values collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.BubbleSeries.MemberPaths">
            <summary>
            Gets the array of member bindings for the series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.BubbleSeries.SizeValuesSource">
            <summary>
            Gets or sets the x-data values source.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.ChartPanelAction">
            <summary>
            Specifies possible action for the chart panel objects.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartPanelAction.None">
            <summary>
            No action.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartPanelAction.MouseMove">
            <summary>
            Follow mouse.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartPanelAction.LeftMouseButtonDrag">
            <summary>
            Can be dragged with left mouse button. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartPanelAction.RightMouseButtonDrag">
            <summary>
            Can be dragged with right mouse button.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.ChartPanelAttach">
            <summary>
            Specifies possible attach options for chart panel object,
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartPanelAttach.None">
            <summary>
            Not attached.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartPanelAttach.DataX">
            <summary>
            Data x-coordinate.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartPanelAttach.DataY">
            <summary>
            Data y-coordinate.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartPanelAttach.DataXY">
            <summary>
            Data x- and y-coordinates.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.IChartLayer">
            <summary>
            Defines chart layer interface.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.IChartLayer.Chart">
            <summary>
            Gets or sets the parent chart.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.ChartPanel">
            <summary>
            Defines panel that contains UIElement attached to the data coordinates.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartPanel.#ctor">
            <summary>
            Creates a new instance of chart panel.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartPanel.GetDataCoordinates(System.Windows.Input.MouseEventArgs)">
            <summary>
            Calculates the data coordinates for mouse event arguments.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the framework element.
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartPanel.Children">
            <summary>
            Gets the collection of child elements.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartPanel.Chart">
            <summary>
            Gets or sets the parent chart.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.ChartPanelObject">
            <summary>
            Defines element of chart panel.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartPanelObject.#ctor">
            <summary>
            Creates an instance of chart panel object.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartPanelObject.OnDataPointChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when data point was changed.
            </summary>
            <param name="args"></param>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartPanelObject.DataPointProperty">
            <summary>
            Identifies the DataPoint dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartPanelObject.ActionProperty">
            <summary>
            Identifies the Action dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartPanelObject.AttachProperty">
            <summary>
            Identifies the DataPoint dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartPanelObject.AxisXProperty">
            <summary>
            Using a DependencyProperty as the backing store for AxisX.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartPanelObject.AxisYProperty">
            <summary>
            Using a DependencyProperty as the backing store for AxisY.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartPanelObject.UseAxisLimitsProperty">
            <summary>
            Using a DependencyProperty as the backing store for UseAxisLimits.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartPanelObject.DataPoint">
            <summary>
            Gets or sets the data point corresponding to the object.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.ChartPanelObject.DataPointChanged">
            <summary>
            Fires when DataPoint was changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartPanelObject.Action">
            <summary>
            Gets or sets action corresponding to the panel object.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartPanelObject.Attach">
            <summary>
            Gets or sets the attach of chart panel object.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartPanelObject.AxisX">
            <summary>
            Gets or sets the name of x-axis.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartPanelObject.AxisY">
            <summary>
            Gets or sets the name of y-axis.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartPanelObject.UseAxisLimits">
            <summary>
            Gets or sets the value that specifies whether to limit the element position inside plot area.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.ChartPanelObjectCollection">
            <summary>
            Defines collection of chart panel objects.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartPanelObjectCollection.ClearItems">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartPanelObjectCollection.InsertItem(System.Int32,C1.Silverlight.Chart.ChartPanelObject)">
            <summary>
            Inserts an element into the collection at the specified index. 
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartPanelObjectCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection. 
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartPanelObjectCollection.SetItem(System.Int32,C1.Silverlight.Chart.ChartPanelObject)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="T:C1.Silverlight.Chart.StackedOptions">
            <summary>
            Specifies options of stacked chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.StackedOptions.None">
            <summary>
            Normal (non-stacked) chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.StackedOptions.Stacked">
            <summary>
            Stacked chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.StackedOptions.Stacked100pc">
            <summary>
            Stacked 100% chart.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.ICoordConverter">
            <summary>
            Represents coordinate converter
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.ICoordConverter.ConvertX(System.Double)">
            <summary>
            Converts x-value from data to space coordinate.
            </summary>
            <param name="x">X-data value.</param>
            <returns>View coordinate.</returns>
        </member>
        <member name="M:C1.Silverlight.Chart.ICoordConverter.ConvertY(System.Double)">
            <summary>
            Converts y-value from data to space coordinate.
            </summary>
            <param name="y">Y-data value.</param>
            <returns>View coordinate.</returns>
        </member>
        <member name="M:C1.Silverlight.Chart.ICoordConverter.ConvertZ(System.Double)">
            <summary>
            Converts z-value from data to space coordinate.
            </summary>
            <param name="z">Z-data value.</param>
            <returns>View coordinate.</returns>
        </member>
        <member name="M:C1.Silverlight.Chart.ICoordConverter.ConvertPoint(System.Windows.Point)">
            <summary>
            Converts point from data to plot coordinates.
            </summary>
            <param name="point">Point in data coordinates.</param>
            <returns>The corresponding point in plot coordinates.</returns>
        </member>
        <member name="P:C1.Silverlight.Chart.ICoordConverter.DataBounds2D">
            <summary>
            Gets 2D data bounds.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ICoordConverter.DataBounds">
            <summary>
            Gets the bounds of the plot in data coordinates.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ICoordConverter.ViewBounds">
            <summary>
            Gets the bounds of the plot in view coordinates.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.IRenderer">
            <summary>
            Generic renderer interface.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.IRenderer.AddSeries(C1.Silverlight.Chart.IDataSeriesInfo)">
            <summary>
            Adds data series.
            </summary>
            <param name="seriesInfo"></param>
        </member>
        <member name="M:C1.Silverlight.Chart.IRenderer.Clear">
            <summary>
            Clear data series list.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.IRenderer.Changed">
            <summary>
            Occurs when the object was modified.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.IRenderer.Dirty">
            <summary>
            Requires rebuilding.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.IRenderer.Visual">
            <summary>
            Visual element that is used for rendering.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.IRenderer.CoordConverter">
            <summary>
            Gets or sets coordinate converter
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.IRenderer.Options">
            <summary>
            Gets or sets rendering options.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.ColorScheme">
            <summary>
            Specifies how color scheme is generated.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ColorScheme.Auto">
            <summary>
            Color scheme is generated automatically.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ColorScheme.Series">
            <summary>
            New color scheme is generated for each data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ColorScheme.Point">
            <summary>
            New color scheme is generated for each data point.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.BaseRenderer">
            <summary>
            Represents base renderer class. The renderer class performs data visualization.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.BaseRenderer.FireChanged(System.Object,System.EventArgs)">
            <summary>
            Fires the Changed event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:C1.Silverlight.Chart.BaseRenderer._analyzed">
            <summary>
            Whether data was analyzed.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.BaseRenderer.AnalyzeData(System.Boolean)">
            <summary>
            Analyses data values, finds data limits.
            </summary>
            <param name="isStacked"></param>
        </member>
        <member name="M:C1.Silverlight.Chart.BaseRenderer.CreateElement(System.Object,System.Windows.Style)">
            <summary>
            Create plot element based on specified template and style.
            </summary>
            <param name="element"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.BaseRenderer.RenderElement(System.Collections.Generic.List{System.Windows.UIElement},C1.Silverlight.Chart.IPlotElement,C1.Silverlight.Chart.DataSeries,C1.Silverlight.Chart.RenderContext,C1.Silverlight.Chart.ShapeStyle,C1.Silverlight.Chart.DataPoint)">
            <summary>
            Renders the element and add it to the specified list.
            </summary>
            <param name="objects"></param>
            <param name="pe"></param>
            <param name="ds"></param>
            <param name="rc"></param>
            <param name="shapeStyle"></param>
            <param name="dp"></param>
        </member>
        <member name="M:C1.Silverlight.Chart.BaseRenderer.AttachTooltip(C1.Silverlight.Chart.DataSeries,C1.Silverlight.Chart.PlotElement)">
            <summary>
            Attaches the tooltip to the specified plot element.
            </summary>
            <param name="ds"></param>
            <param name="ple"></param>
        </member>
        <member name="M:C1.Silverlight.Chart.BaseRenderer.RenderConnection(C1.Silverlight.Chart.DataSeries,C1.Silverlight.Chart.RenderContext,System.Int32)">
            <summary>
            Renders connection and returns the created element.
            </summary>
            <param name="ds"></param>
            <param name="rc"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.BaseRenderer.CreateSymbolShape(C1.Silverlight.Chart.ShapeStyle)">
            <summary>
            Create symbol shape based on the specified shape style.
            </summary>
            <param name="shapeStyle"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.BaseRenderer.CreateSymbolShape(C1.Silverlight.Chart.DataSeries)">
            <summary>
            Create symbol shape based on the specified data series.
            </summary>
            <param name="ds"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.BaseRenderer.CreateLineShape(C1.Silverlight.Chart.DataSeries)">
            <summary>
            Create line shape based on the specified data series.
            </summary>
            <param name="ds"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.BaseRenderer.InitOptions">
            <summary>
            Add options to the bag.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.BaseRenderer.CoordConverter">
            <summary>
            Gets or sets coordinate mapping engine.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.BaseRenderer.Symbol">
            <summary>
            Gets or sets the data template that is used for data point visualization.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.BaseRenderer.Connection">
            <summary>
            Gets or sets the data template that is used for visualization of all data points of the series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.BaseRenderer.Stacked">
            <summary>
            Gets or sets the stacked options of the plot.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.BaseRenderer.Inverted">
            <summary>
            Gets or sets whether the direction of plotting is inverted. 
            </summary>
            <remarks>
            By default (Inverted=false) the direction of plotting is horizontal.
            When the Inverted property is set to true the direction becomes vertical.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Chart.BaseRenderer.SizeX">
            <summary>
            Gets or sets the size of data element along x-axis.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.BaseRenderer.SizeY">
            <summary>
            Gets or sets the size of data element along y-axis.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.BaseRenderer.ColorScheme">
            <summary>
            Gets or sets how the colors are assigned to the plot elements.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.RenderContext">
            <summary>
            Represents the render context.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.RenderContext.ConvertX(System.Double)">
            <summary>
            Converts x data value to the control coordinate.
            </summary>
            <param name="x">X data value</param>
            <returns>Value in control coordinates corresponding to given 
            data value.</returns>
        </member>
        <member name="M:C1.Silverlight.Chart.RenderContext.ConvertY(System.Double)">
            <summary>
            Converts y data value to the control coordinate.
            </summary>
            <param name="y">Y data value.</param>
            <returns>Value in control coordinates corresponding to given 
            data value.</returns>
        </member>
        <member name="P:C1.Silverlight.Chart.RenderContext.DataSeries">
            <summary>
            Gets the current data series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.RenderContext.Current">
            <summary>
            Gets the current data point in data coordinates.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.RenderContext.CurrentView">
            <summary>
            Gets the current data point in control(view) coordinates.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.RenderContext.Previous">
            <summary>
            Gets the previous data point.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.RenderContext.Bounds">
            <summary>
            Gets the range of data values.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.RenderContext.Rect">
            <summary>
            Gets the rectangle that corresponds to the current data point.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.RenderContext.Data">
            <summary>
            Gets the array of data values of current series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.RenderContext.PointIndex">
            <summary>
            Gets the current index of data point.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.RenderContext.Points">
            <summary>
            Gets the array of points for the current data series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.RenderContext.PreviousValues">
            <summary>
            Gets the array of value for the previous data series.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.RenderContext.Renderer">
            <summary>
            Gets the current renderer.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.RenderContext.Item(System.String)">
            <summary>
            Gets the value of current data point by its name.
            </summary>
            <param name="name">The name of data array.</param>
            <returns>The data value.</returns>
        </member>
        <member name="T:C1.Silverlight.Chart.ChartType">
            <summary>
            Specifies the chart type.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.Bar">
            <summary>
            Default bar chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.BarStacked">
            <summary>
            Stacked bar chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.BarStacked100pc">
            <summary>
            100% stacked bar chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.Column">
            <summary>
            Default column chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.ColumnStacked">
            <summary>
            Stacked column chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.ColumnStacked100pc">
            <summary>
            100% stacked column chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.Line">
            <summary>
            Default line chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.LineSmoothed">
            <summary>
            Smoothed line chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.LineStacked">
            <summary>
            Stacked line chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.LineStacked100pc">
            <summary>
            100% stacked line chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.LineSymbols">
            <summary>
            Line chart with symbols.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.LineSymbolsStacked">
            <summary>
            Stacked line chart with symbols.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.LineSymbolsStacked100pc">
            <summary>
            100% stacked line chart with symbols.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.LineSymbolsSmoothed">
            <summary>
            Smoothed line chart with symbols.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.Area">
            <summary>
            Default area chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.AreaStacked">
            <summary>
            Stacked area chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.AreaStacked100pc">
            <summary>
             100% stacked area chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.AreaSmoothed">
            <summary>
            Smoothed area chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.Pie">
            <summary>
            Default pie chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.PieExploded">
            <summary>
            Exploded pie chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.PieDoughnut">
            <summary>
            Doughnut pie chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.PieExplodedDoughnut">
            <summary>
            Exploded doughnut pie chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.PieStacked">
            <summary>
            Stacked pie chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.XYPlot">
            <summary>
            Scatter(point) plot in Cartesian coordinates.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.Bubble">
            <summary>
            Bubble chart. To specify control size of symbols use BubbleSeries
            and set its SizeValues or SizeValuesource property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.Radar">
            <summary>
            Default radar chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.RadarSymbols">
            <summary>
            Radar chart with symbols.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.RadarFilled">
            <summary>
            Filled(area) radar chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.HighLowOpenClose">
            <summary>
            High-low-open-close financial chart.
            Use HighLowOpenCloseSeries to specify data for the chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.Candle">
            <summary>
            Candle financial chart.
            Use HighLowOpenCloseSeries to specify data for the chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.Gantt">
            <summary>
            Gantt chart.
            Use HighLowSeries to specify data for the chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.Step">
            <summary>
            Step chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.StepSymbols">
            <summary>
            Step chart with symbols.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.StepArea">
            <summary>
            Step area chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.PolarLines">
            <summary>
            Polar line chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.PolarSymbols">
            <summary>
            Polar symbol chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.PolarLinesSymbols">
            <summary>
            Polar line chart with symbols.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.Polygon">
            <summary>
            Polygon chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartType.PolygonFilled">
            <summary>
            Filled polygon chart.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.ChartSubtype">
            <summary>
            Represents chart type in the gallery.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartSubtype.#ctor">
            <summary>
            Initialize an instance of the <see cref="T:C1.Silverlight.Chart.ChartSubtype"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartSubtype.Apply(C1.Silverlight.Chart.C1Chart)">
            <summary>
            Apply the subtype to the specified chart.
            </summary>
            <param name="chart">Instance of chart.</param>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartSubtype.Name">
            <summary>
            Gets or sets the name of the subtype.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartSubtype.Renderer">
            <summary>
            Gets or sets the name of the renderer.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartSubtype.RendererOptions">
            <summary>
            Gets or sets the options of the renderer.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartSubtype.Symbol">
            <summary>
            Gets or sets the template of the symbol.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartSubtype.Connection">
            <summary>
            Gets or sets the template of the connection.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.ChartTypeInfo">
            <summary>
            Represents the chart type.
            The type contains from the collection of subtypes that describe
            different variations of the chart type.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartTypeInfo.#ctor">
            <summary>
            Initializes an instance of <see cref="T:C1.Silverlight.Chart.ChartTypeInfo"/> class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartTypeInfo.Name">
            <summary>
            Gets or sets the name of chart type.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartTypeInfo.Subtypes">
            <summary>
            Gets the list of subtypes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartTypeInfo.Item(System.String)">
            <summary>
            Gets the chart subtype by its name.
            </summary>
            <param name="name">The name of subtype.</param>
            <returns>Subtype with the specified name.</returns>
        </member>
        <member name="T:C1.Silverlight.Chart.ChartTypes">
            <summary>
            Provides access to the gallery of built-in chart types.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartTypes.GetSubtype(System.String)">
            <summary>
            Get subtype by its full name.
            </summary>
            <param name="name">Format ChartTypeName.ChartSubtypeName, for example, Bar.Stacked</param>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartTypes.Gallery">
            <summary>
            Gets the list of chart types.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.Clipping">
            <summary>
            Specifies possible values for clipping algorithm.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Clipping.Auto">
            <summary>
            The clipping algorithm is selected automatically.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Clipping.System">
            <summary>
            The standard system clipping.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Clipping.Custom">
            <summary>
            The custom clipping.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.PieRenderContext">
            <summary>
            Provides information about the render context for pie visualization.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PieRenderContext.PieInfo">
            <summary>
            Contains information about pie slice.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.BasePieRenderer">
            <summary>
            Base class for pie renderers.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.BasePieRenderer.InitOptions">
            <summary>
            Adds the options set to the bag.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.BasePieRenderer.Radius">
            <summary>
            Gets or sets the radius of pie.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.BasePieRenderer.InnerRadius">
            <summary>
            Gets or sets the inner radius of pie.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.BasePieRenderer.Offset">
            <summary>
            Gets or sets the offset of slices.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.PieRenderer">
            <summary>
            Performs 2D pie visualization.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.PieRenderer.#ctor">
            <summary>
            Creates an instance of pie renderer.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.RadarRenderer">
            <summary>
            Renders radar charts.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.RadarRenderer.InitOptions">
            <summary>
            Initializes the options of renderer.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.RadarRenderer.IsPolar">
            <summary>
            Specifies whether the chart is polar.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.Renderer2D">
            <summary>
            Renderer which creates plot in Cartesian coordinates.
            </summary>
            <remarks>
            Renderer2D allows creating most of 2D chart types that use Cartesian axes
            including bar, area, line, scatter charts. The specific presentation of the
            data values is defined by templates (Symbol and Connection properties).
            The templates can also be set using corresponding properties of DataSeries class.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.Chart.Renderer2D.#ctor">
            <summary>
            Initializes a new instance of Renderer2D class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Renderer2D.C1#Silverlight#Chart#IView2DRenderer#Measure(System.Windows.Size)">
            <summary>
            Measure size of plot in data coordinates.
            </summary>
            <param name="sz">Available size in control coordinates.</param>
            <returns>Size of plot in data coordinates.</returns>
        </member>
        <member name="M:C1.Silverlight.Chart.Renderer2D.C1#Silverlight#Chart#IView2DRenderer#Generate">
            <summary>
            Builds visual presentation from data values.
            </summary>
            <returns>Array of visuals.</returns>
        </member>
        <member name="P:C1.Silverlight.Chart.Renderer2D.C1#Silverlight#Chart#IView2DRenderer#Axis">
            <summary>
            Returns axis style.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.SplineNew">
            <summary>
            Summary description for Spline.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.Marker">
            <summary>
            Specifies data point marker.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Marker.None">
            <summary>
            None or default marker.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Marker.Box">
            <summary>
            Box marker.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Marker.Dot">
            <summary>
            Dot marker.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Marker.Diamond">
            <summary>
            Diamond marker.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Marker.Triangle">
            <summary>
            Triangle marker.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Marker.Star4">
            <summary>
            4-ray star marker.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Marker.Star8">
            <summary>
            8-ray star marker.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Marker.Cross">
            <summary>
            Cross marker.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Marker.DiagonalCross">
            <summary>
            Diagonal cross marker.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.PieInfo">
            <summary>
            Represents parameters of pie slice.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.PieInfo.#ctor(System.Windows.Point,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new PieInfo structure with the specified parameters.
            </summary>
            <param name="center"></param>
            <param name="radiusX"></param>
            <param name="radiusY"></param>
            <param name="inner"></param>
            <param name="angle"></param>
            <param name="sweep"></param>
            <param name="height"></param>
            <param name="offset"></param>
        </member>
        <member name="F:C1.Silverlight.Chart.PieInfo.Center">
            <summary>
            Gets or sets the center of the pie.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PieInfo.RadiusX">
            <summary>
            Gets or sets the x-radius of the pie.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PieInfo.RadiusY">
            <summary>
            Gets or sets the y-radius of the pie.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PieInfo.Angle">
            <summary>
            Gets or sets the start angle of the pie.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PieInfo.Sweep">
            <summary>
            Gets or sets the sweep of the pie.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PieInfo.Height">
            <summary>
            Gets or sets the height of the pie.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PieInfo.InnerRadius">
            <summary>
            Gets or sets the inner radius of the pie.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PieInfo.Offset">
            <summary>
            Gets or sets the radial offset of pie slice from the center. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.PieInfo.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.PieInfo.op_Equality(C1.Silverlight.Chart.PieInfo,C1.Silverlight.Chart.PieInfo)">
            <summary>
            
            </summary>
            <param name="pie1"></param>
            <param name="pie2"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.PieInfo.op_Inequality(C1.Silverlight.Chart.PieInfo,C1.Silverlight.Chart.PieInfo)">
            <summary>
            
            </summary>
            <param name="pie1"></param>
            <param name="pie2"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.PieInfo.Equals(C1.Silverlight.Chart.PieInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.PieInfo.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Silverlight.Chart.ShapeStyle">
            <summary>
            Describes shape appearance.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.ShapeStyle.#ctor">
            <summary>
            Creates an instance of shape style.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ShapeStyle.Stroke">
            <summary>
            Gets or sets the stroke brush of the shape.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ShapeStyle.Fill">
            <summary>
            Gets or sets the fill brush of the shape.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ShapeStyle.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness of the shape.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ShapeStyle.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array of the shape.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ShapeStyle.RenderTransform">
            <summary>
            Gets or sets the render transform of the shape.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.IPlotElement">
            <summary>
            Represents generic plot element.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.IPlotElement.Render(C1.Silverlight.Chart.RenderContext)">
            <summary>
            Renders the plot element based on specified context.
            </summary>
            <param name="rc"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.IPlotElement.SetShape(C1.Silverlight.Chart.ShapeStyle)">
            <summary>
            Sets the shape style of the plot element.
            </summary>
            <param name="shapeStyle"></param>
        </member>
        <member name="M:C1.Silverlight.Chart.IPlotElement.IsCompatible(C1.Silverlight.Chart.IRenderer)">
            <summary>
            Whether the plot element is compatible with the specified renderer.
            </summary>
            <param name="rend"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.Chart.IPlotElement.IsClustered">
            <summary>
            Whether the plot element can be clustered.
            </summary>
            <remarks>
            Only for Cartesian plots.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Chart.IPlotElement.Label">
            <summary>
            Gets or sets the data label associated with the plot element.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.IPlotElement.LegendShape">
            <summary>
            Gets the shape that represents the appearance of plot element in the legend.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.IPlotElement.Style">
            <summary>
            Gets or sets the style that should be applied to the plot element.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.LabelAlignment">
            <summary>
            Specifies the position of data label relative to the corresponding plot element.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.LabelAlignment.Auto">
            <summary>
            Automatic label position.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.LabelAlignment.BottomCenter">
            <summary>
            Bottom center position.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.LabelAlignment.BottomLeft">
            <summary>
            Bottom left position.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.LabelAlignment.BottomRight">
            <summary>
            Bottom right position.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.LabelAlignment.MiddleCenter">
            <summary>
            Middle center position.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.LabelAlignment.MiddleLeft">
            <summary>
            Middle left position.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.LabelAlignment.MiddleRight">
            <summary>
            Middle right position.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.LabelAlignment.TopCenter">
            <summary>
            Top center position.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.LabelAlignment.TopLeft">
            <summary>
            Top left position.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.LabelAlignment.TopRight">
            <summary>
            Top right position.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.TransformMode">
            <summary>
            Specifies transformation mode for plot elements.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.TransformMode.Relative">
            <summary>
            Transformation is relative to the center of the plot element.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.TransformMode.Absolute">
            <summary>
            Transformation is applied based on the absolute control coordinates.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.PlotElement">
            <summary>
            Generic plot element.
            </summary>
            <remarks>
            Plot element is a visual presentation of data such as
            bar on the bar chart or slice of pie on the pie chart.
            </remarks>
        </member>
        <member name="F:C1.Silverlight.Chart.PlotElement.autoStyle">
            <summary>
            Stores automatic shape style that was set to the plot element.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.PlotElement.IsCompatible(C1.Silverlight.Chart.IRenderer)">
            <summary>
            Whether the plot element is compatible with the specified renderer.
            </summary>
            <param name="rend"></param>
            <returns></returns>
        </member>
        <member name="F:C1.Silverlight.Chart.PlotElement.LabelAlignmentProperty">
            <summary>
            Identifies the PlotElement.LabelAlignment attached dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.PlotElement.SetLabelAlignment(System.Windows.DependencyObject,C1.Silverlight.Chart.LabelAlignment)">
            <summary>
            Sets the label alignment of the element.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:C1.Silverlight.Chart.PlotElement.GetLabelAlignment(System.Windows.DependencyObject)">
            <summary>
            Gets the label alignment of the element.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="F:C1.Silverlight.Chart.PlotElement.LabelOffsetProperty">
            <summary>
            Identifies the PlotElement.LabelOffset attached dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.PlotElement.SetLabelOffset(System.Windows.DependencyObject,System.Windows.Point)">
            <summary>
            Sets the label offset for the element.
            </summary>
            <param name="obj"></param>
            <param name="offset"></param>
        </member>
        <member name="M:C1.Silverlight.Chart.PlotElement.GetLabelOffset(System.Windows.DependencyObject)">
            <summary>
            Gets the labels offset for the element.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="F:C1.Silverlight.Chart.PlotElement.LabelLineProperty">
            <summary>
            Identifies the PlotElement.LabelLine attached dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.PlotElement.SetLabelLine(System.Windows.DependencyObject,System.Windows.Shapes.Line)">
            <summary>
            Gets the line connecting data point and label for the element.
            </summary>
            <param name="obj"></param>
            <param name="line"></param>
        </member>
        <member name="M:C1.Silverlight.Chart.PlotElement.GetLabelLine(System.Windows.DependencyObject)">
            <summary>
            Sets the line connecting data point and label for the element.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="F:C1.Silverlight.Chart.PlotElement.DataPointProperty">
            <summary>
            Identifies the DataPoint dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.PlotElement.AutoPosition(System.Windows.Size,System.Windows.Point@,System.Windows.Point@)">
            <summary>
            Calculates automatic position of data label.
            </summary>
            <param name="labelSize">Size of the label.</param>
            <param name="hot">Hot point (coordinates of the data point) of l.</param>
            <param name="offset">Offset of the label from the hot point.</param>
            <returns>The alignment of the label.</returns>
        </member>
        <member name="M:C1.Silverlight.Chart.PlotElement.UpdateLabelPosition">
            <summary>
            Updates the position of data label associated with this plot element.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PlotElement.effects">
            <summary>
            List of visual effects.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PlotElement.m_isFilled">
            <summary>
            Whether the plot element should be filled.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.PlotElement.Render(C1.Silverlight.Chart.RenderContext)">
            <summary>
            Renders the element based on the specified context.
            </summary>
            <param name="rc"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.PlotElement.CloneAttributes(C1.Silverlight.Chart.PlotElement)">
            <summary>
            Clone the attributes of the plot element.
            </summary>
            <param name="clone"></param>
        </member>
        <member name="M:C1.Silverlight.Chart.PlotElement.AdjustLegendShape(System.Windows.Shapes.Shape)">
            <summary>
            Adjusts property of legend shape.
            </summary>
            <param name="shape"></param>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotElement.Size">
            <summary>
            Gets or sets the size of the plot element.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotElement.IsClustered">
            <summary>
            Whether the plot element can be clustered.
            </summary>
            <remarks>Only for Cartesian plots.</remarks>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotElement.Label">
            <summary>
            Gets or sets the visual label attached to the plot element.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotElement.DataPoint">
            <summary>
            Gets the data point associated with the plot element.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotElement.Shape">
            <summary>
            Gets the shape of the plot element.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotElement.Center">
            <summary>
            Gets the center of the plot element.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotElement.PlotRect">
            <summary>
            Gets the rectangle that limits the plot area.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotElement.TransformMode">
            <summary>
            Gets or sets the transformation mode for the plot element.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotElement.Fill">
            <summary>
            Gets or sets the fill brush for the plot element.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotElement.Stroke">
            <summary>
            Gets or sets the stroke brush for the plot element.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotElement.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness for the plot element.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotElement.StrokeLineJoin">
            <summary>
            Gets or sets the line join type used by the plot element.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotElement.LegendShape">
            <summary>
            Gets the shape of the element for the legend presentation.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotElement.DefaultLegendShape">
            <summary>
            Gets the default shape for legend.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.PlotElement.MouseEnter">
            <summary>
            Fires when the mouse pointer enters the bounds of the plot element.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.PlotElement.Loaded">
            <summary>
            Fires when the plot element is loaded.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.PlotElement.MouseLeave">
            <summary>
            Fires when the mouse pointer leaves the bounds of the plot element.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.PlotElement.MouseLeftButtonDown">
            <summary>
            Fires when the left mouse button is pressed while the mouse pointer is over this element. 
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.PlotElement.MouseLeftButtonUp">
            <summary>
            Fires when the left mouse button is released while the mouse pointer is over this element. 
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.PlotElement.Created">
            <summary>
            Fires when the plot element was created.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.DotSymbol">
            <summary>
            Represents a dot symbol.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.DotSymbol.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Chart.DotSymbol"/> class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.DotSymbol.LegendShape">
            <summary>
            Gets the legend shape for the plot element.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.BoxSymbol">
            <summary>
            Represents box symbol.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.BoxSymbol.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Chart.BoxSymbol"/> class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.BoxSymbol.LegendShape">
            <summary>
            Gets the legend shape for the plot element.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.HLBar">
            <summary>
            Represents plot element that connects high and low values.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.Bar">
            <summary>
            Represents bar plot element.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Bar.#ctor">
            <summary>
            Initializes an new instance of the <see cref="T:C1.Silverlight.Chart.Bar"/> class.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Bar.geometry">
            <summary>
            Stores shape geometry.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Bar.Render(C1.Silverlight.Chart.RenderContext)">
            <summary>
            Renders the plot element based on the specified context.
            </summary>
            <param name="rc"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.Chart.Bar.RadiusX">
            <summary>
            Gets or sets the x radius.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Bar.RadiusY">
            <summary>
            Gets or sets the y radius.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Bar.IsClustered">
            <summary>
            Specifies whether the plot element can be clustered.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.HLBar.Render(C1.Silverlight.Chart.RenderContext)">
            <summary>
            Renders the plot element based on the specified context.
            </summary>
            <param name="rc"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.Chart.HLBar.IsClustered">
            <summary>
            Specifies whether the element can be clustered.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.HLOCAppearance">
            <summary>
            Defines the appearance of HLOC (high-low-open-close) plot element.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.HLOCAppearance.Default">
            <summary>
            Default appearance as line segments.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.HLOCAppearance.Candle">
            <summary>
            Candle plot.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.HLOC">
            <summary>
            Represents element of financial chart (high-low-open-close).
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.HLOC.app">
            <summary>
            Stores the appearance of the symbol.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.HLOC.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Chart.HLOC"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.HLOC.Render(C1.Silverlight.Chart.RenderContext)">
            <summary>
            Renders the plot element based on the specified context.
            </summary>
            <param name="rc"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.HLOC.RenderCandle(C1.Silverlight.Chart.RenderContext)">
            <summary>
            Renders candle based on the specified context.
            </summary>
            <param name="rc"></param>
        </member>
        <member name="P:C1.Silverlight.Chart.HLOC.Appearance">
            <summary>
            Gets or sets the appearance of plot element.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.Pie">
            <summary>
            Represents the element of pie chart.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Pie.#ctor">
            <summary>
            Initializes a new instance of of <see cref="T:C1.Silverlight.Chart.Pie"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Pie.AutoPosition(System.Windows.Size,System.Windows.Point@,System.Windows.Point@)">
            <summary>
            Calculates automatic position of data label.
            </summary>
            <param name="labelSize">Size of the label.</param>
            <param name="hot">Hot point (coordinates of the data point) of l.</param>
            <param name="offset">Offset of the label from the hot point.</param>
            <returns>The alignment of the label.</returns>
        </member>
        <member name="M:C1.Silverlight.Chart.Pie.IsCompatible(C1.Silverlight.Chart.IRenderer)">
            <summary>
            Whether the plot element is compatible with the specified renderer. 
            </summary>
            <param name="rend"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.Pie.Render(C1.Silverlight.Chart.RenderContext)">
            <summary>
            Renders the plot element based on the specified context.
            </summary>
            <param name="rc"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.Pie.UpdateOffset">
            <summary>
            Updates slice offset.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.PieSlice">
            <summary>
            Represents plot element of pie chart.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.PieSlice.#ctor">
            <summary>
            Creates an instance of PieSlice class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.PieSlice.Render(C1.Silverlight.Chart.RenderContext)">
            <summary>
            Renders the plot element.
            </summary>
            <param name="rc"></param>
            <returns></returns>
        </member>
        <member name="F:C1.Silverlight.Chart.PieSlice.OffsetProperty">
            <summary>
            Using a DependencyProperty as the backing store for Offset.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PieSlice.Offset">
            <summary>
            Gets or sets the pie slice offset from center.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PieSlice.PieCenter">
            <summary>
            Gets the pie center.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PieSlice.Angle">
            <summary>
            Gets the pie slice angle measured in degrees.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.Symbol">
            <summary>
            Represents base class for 2D plot symbols.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Symbol.geometry">
            <summary>
            Contains geometry of element.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Symbol.symCenter">
            <summary>
            Stores the center point of the symbol.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Symbol.UpdateGeometry(System.Windows.Media.PathGeometry,System.Windows.Size)">
            <summary>
            Recreates the geometry describing the symbol.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Symbol.Render(C1.Silverlight.Chart.RenderContext)">
            <summary>
            Renders the plot element based on the specified context.
            </summary>
            <param name="rc"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.Symbol.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size of the plot element.
            </summary>
            <param name="constraint"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.Symbol.IsCompatible(C1.Silverlight.Chart.IRenderer)">
            <summary>
            Returns whether the plot element is compatible with renderer.
            </summary>
            <param name="rend"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.Chart.Symbol.LegendShape">
            <summary>
            Gets the legend shape for the plot element.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.RPolygon">
            <summary>
            Represents regular polygon.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.RPolygon.#ctor">
            <summary>
            Initializes a new instance of RPolygon class.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.RPolygon.NumVerticesProperty">
            <summary>
            Identifies the NumVertices dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.RPolygon.AddFakeEllipse(System.Windows.Media.PathGeometry,System.Windows.Point,System.Double,System.Double,System.Double)">
            <summary>
            Creates and adds ellipse geometry that is used for hit testing.
            </summary>
            <param name="pg"></param>
            <param name="center"></param>
            <param name="rx"></param>
            <param name="ry"></param>
            <param name="w2"></param>
        </member>
        <member name="M:C1.Silverlight.Chart.RPolygon.UpdateGeometry(System.Windows.Media.PathGeometry,System.Windows.Size)">
            <summary>
            Recreates the geometry describing the symbol.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.RPolygon.NumVertices">
            <summary>
            Gets or sets number of polygon vertices.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.RPolygon.LegendShape">
            <summary>
            Gets the legend shape of plot element.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.Star">
            <summary>
            Represents star symbol.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Star.InnerRadiusProperty">
            <summary>
            Identifies the InnerRadius dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Star.#ctor">
            <summary>
            Creates an instance of Star class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Star.UpdateGeometry(System.Windows.Media.PathGeometry,System.Windows.Size)">
            <summary>
            Recreates the geometry describing the symbol.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Star.InnerRadius">
            <summary>
            Gets or sets the inner radius of symbol.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Star.Size">
            <summary>
            Gets or sets the plot element size.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.Lines">
            <summary>
            Represents plot element that connects the data points.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Lines.geometry">
            <summary>
            Stores the geometry of the plot element.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Lines.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:C1.Silverlight.Chart.Lines"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Lines.Render(C1.Silverlight.Chart.RenderContext)">
            <summary>
            Renders the plot element based on the specified context.
            </summary>
            <param name="rc"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.Lines.SplitPointsWithHoles(System.Windows.Point[])">
            <summary>
            Returns list of point arrays split by NaN values.
            </summary>
            <param name="pts"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.Lines.Decimate(System.Windows.Point[],System.Double)">
            <summary>
            Decimate point array according to the specified radius.
            </summary>
            <param name="pts"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.Lines.DecimateAsCollection(System.Windows.Point[],System.Double)">
            <summary>
            Decimate point collection according to the specified radius.
            </summary>
            <param name="pts"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.Lines.RenderSegment(System.Windows.Point[],System.Double,System.Windows.Rect)">
            <summary>
            Creates path figure from the specified points.
            </summary>
            <param name="pts"></param>
            <param name="optRadius"></param>
            <param name="clip"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.Lines.IsCompatible(C1.Silverlight.Chart.IRenderer)">
            <summary>
            Returns whether the plot element is compatible with renderer.
            </summary>
            <param name="rend"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.Chart.Lines.Smoothed">
            <summary>
            Gets or sets whether the points are connected with smooth lines.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Lines.IsFilled">
            <summary>
            Gets or sets whether the area inside points is filled.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Lines.IsClosed">
            <summary>
            Gets or sets whether the figure from data points is closed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Lines.LegendShape">
            <summary>
            Gets the shape that represents the appearance of plot element in the legend.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.Area">
            <summary>
            Represents the area plot element that fills the area between data point and base line.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Area.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.Chart.Area"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Area.Render(C1.Silverlight.Chart.RenderContext)">
            <summary>
            Renders the element based on the specified context.
            </summary>
            <param name="rc">Render context.</param>
            <returns>Whether the rendering was successful.</returns>
        </member>
        <member name="P:C1.Silverlight.Chart.Area.Origin">
            <summary>
            Gets or sets the area origin.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Area.LegendShape">
            <summary>
            Gets the shape that represents the appearance of plot element in the legend.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.StepLines">
            <summary>
            Represents step lines that connects data points.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.StepLines.Render(C1.Silverlight.Chart.RenderContext)">
            <summary>
            Renders the plot element.
            </summary>
            <param name="rc"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Silverlight.Chart.StepArea">
            <summary>
            Represents plot element of step area chart.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.StepArea.Render(C1.Silverlight.Chart.RenderContext)">
            <summary>
            Renders the plot element.
            </summary>
            <param name="rc"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Silverlight.Chart.ChartTheme">
            <summary>
            Specifies available chart themes
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartTheme.None">
            <summary>
            Theme is not set.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartTheme.Custom">
            <summary>
            User-defined theme is set with <see cref="P:C1.Silverlight.Chart.C1Chart.CustomTheme"/> property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartTheme.DuskBlue">
            <summary>
            Built-in DuskBlue theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartTheme.DuskGreen">
            <summary>
            Built-in DuskGreen theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartTheme.MediaPlayer">
            <summary>
            Built-in MediaPlayer theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartTheme.Office2003Blue">
            <summary>
            Built-in Office2003Blue theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartTheme.Office2003Classic">
            <summary>
            Built-in Office2003Classic theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartTheme.Office2003Olive">
            <summary>
            Built-in Office2003Olive theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartTheme.Office2003Royale">
            <summary>
            Built-in Office2003Royale theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartTheme.Office2003Silver">
            <summary>
            Built-in Office2003Silver theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartTheme.Office2007Black">
            <summary>
            Built-in Office2007Black theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartTheme.Office2007Blue">
            <summary>
            Built-in Office2007Blue theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartTheme.Office2007Silver">
            <summary>
            Built-in Office2007Silver theme.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartTheme.Vista">
            <summary>
            Built-in Vista theme.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.Themes">
            <summary>
            Store for built-in themes.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.ThemeConverter">
            <summary>
            Extract value from dictionary based on provided key.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.Palette">
            <summary>
            This enumeration specifies color themes used to
            generate colors for data series.  Named color themes
            other than <b>Custom</b> are similar to those in Microsoft Office.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Default">
            <summary>
            Specifies the Default color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Standard">
            <summary>
            Specifies the Standard color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Office">
            <summary>
            Specifies the Office color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.GrayScale">
            <summary>
            Specifies the GrayScale color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Apex">
            <summary>
            Specifies the Apex color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Aspect">
            <summary>
            Specifies the Aspect color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Civic">
            <summary>
            Specifies the Civic color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Concourse">
            <summary>
            Specifies the Concourse color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Equity">
            <summary>
            Specifies the Equity color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Flow">
            <summary>
            Specifies the Flow color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Foundry">
            <summary>
            Specifies the Foundry color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Median">
            <summary>
            Specifies the Median color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Metro">
            <summary>
            Specifies the Metro color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Module">
            <summary>
            Specifies the Module color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Opulent">
            <summary>
            Specifies the Opulent color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Oriel">
            <summary>
            Specifies the Oriel color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Origin">
            <summary>
            Specifies the Origin color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Paper">
            <summary>
            Specifies the Paper color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Solstice">
            <summary>
            Specifies the Solstice color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Technic">
            <summary>
            Specifies the Technic color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Trek">
            <summary>
            Specifies the Trek color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Urban">
            <summary>
            Specifies the Urban color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Palette.Verve">
            <summary>
            Specifies the Verve color theme used in the Chart's data series.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.Office2007Themes">
            <summary>
            These are the "Color Themes" defined in Office 2007.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.Converters">
            <summary>
            Contains static instances of built-in converters.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Converters.Format">
            <summary>
            Gets the format converter.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.FormatConverter">
            <summary>
            Performs conversion to string based on the specified format string.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.FormatConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value when the value is transferred from binding source to target.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.FormatConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value when the value is transferred from target to binding source.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Silverlight.Chart.DataPointConverter">
            <summary>
            Performs conversion from DataPoint to string based on the specified
            format string.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.DataPointConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value when the value is transferred from binding source to target.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.DataPointConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value when the value is transferred from target to binding source.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Silverlight.Chart.Extensions">
            <summary>
            Class that provides static extension methods for several other classes.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Extensions.ToCollection(System.Windows.Point[])">
            <summary>
            Converts the array of Points into a <see cref="T:System.Windows.Media.PointCollection"/>
            </summary>
            <param name="thisPointArray"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.Extensions.ToCollection(System.Double[])">
            <summary>
            Converts the array of doubles into a <see cref="T:System.Windows.Media.DoubleCollection"/>
            </summary>
            <param name="thisPointArray"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Silverlight.Chart.BorderStyle">
            <summary>
            Specifies border style for Border effect.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.BorderStyle.Light">
            <summary>
            Light border.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.BorderStyle.Dark">
            <summary>
            Dark border.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.BorderStyle.Combo">
            <summary>
            Combination of ligth and dark borders.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.BorderEffect">
            <summary>
            Defines border effect.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.VisualEffect">
            <summary>
            Base visual effect.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.VisualEffect.OnChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires the EffectChanged event.
            </summary>
            <param name="obj"></param>
            <param name="args"></param>
        </member>
        <member name="M:C1.Silverlight.Chart.VisualEffect.GetColor(System.Windows.Media.Brush)">
            <summary>
            Gets the color from brush.
            </summary>
            <param name="brush"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.VisualEffect.GetGeometry(System.Windows.Shapes.Shape)">
            <summary>
            Gets geometry from shape.
            </summary>
            <param name="shape"></param>
            <returns></returns>
        </member>
        <member name="F:C1.Silverlight.Chart.BorderEffect.BorderStyleProperty">
            <summary>
            Identifies the BorderStyle dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.BorderEffect.LightAngleProperty">
            <summary>
            Identifies the LightAngle dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.BorderEffect.ThicknessProperty">
            <summary>
            Identifies the Thickness dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.BorderEffect.BorderStyle">
            <summary>
            Gets or sets the border style
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.BorderEffect.LightAngle">
            <summary>
            Gets or sets the light direction.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.BorderEffect.Thickness">
            <summary>
            Gets or sets the thickness of border.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.ShadowEffect">
            <summary>
            Defines shadow effect.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ShadowEffect.DepthProperty">
            <summary>
            Identifies the Depth dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ShadowEffect.OpacityProperty">
            <summary>
            Identifies the Opacity dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ShadowEffect.ColorProperty">
            <summary>
            Identifies the Color dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ShadowEffect.SoftnessProperty">
            <summary>
            Identifies the Softness dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.ShadowEffect.LightAngleProperty">
            <summary>
            Identifies the LightAngle dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ShadowEffect.Depth">
            <summary>
            Gets or sets the shadow depth.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ShadowEffect.Opacity">
            <summary>
            Gets or sets the shadow opacity(0-1).
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ShadowEffect.Color">
            <summary>
            Gets or sets the shadow color.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ShadowEffect.Softness">
            <summary>
            Gets or sets the shadow softness. 0 is sharp shadow and 1 is soft shadow.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ShadowEffect.LightAngle">
            <summary>
            Gets or sets the light direction.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.VisualEffectGroup">
            <summary>
            Defines visual effect that consists from several effects.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.VisualEffectGroup.Children">
            <summary>
            Gets the collection of child elements.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.RadarLabelVisibility">
            <summary>
            Specifies available options for labels on radial axes for radar chart.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.RadarLabelVisibility.First">
            <summary>
            The labels appear on the first radial axis.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.RadarLabelVisibility.All">
            <summary>
            The labels appear on all radial axes.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.RadarLabelVisibility.None">
            <summary>
            No labels on the axes.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.AnnoVisibility">
            <summary>
            Specifies annotation visibility options.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.AnnoVisibility.HideOverlapped">
            <summary>
            Hides overlapped axis annotations.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.AnnoVisibility.ShowAll">
            <summary>
            Shows all axis annotations.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.Axis">
            <summary>
            Represents the class for Axis object. The axes appear on the plot area of the chart.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.AxisCanvas">
            <summary>
            2D Axis.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.AnnoFormatProperty">
            <summary>
            Identifies the AnnoFormat dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MajorGridFillProperty">
            <summary>
            Identifies the MajorGridFill dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MajorGridStrokeProperty">
            <summary>
            Identifies the MajorGridStroke dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MajorGridStrokeThicknessProperty">
            <summary>
            Identifies the MajorGridStrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MajorGridStrokeDashesProperty">
            <summary>
            Identifies the MajorGridStrokeDashArray dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MinorGridStrokeThicknessProperty">
            <summary>
            Identifies the MinorGridStrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MinorGridStrokeDashesProperty">
            <summary>
            Identifies the MinorGridStrokeDashArray dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MinorGridStrokeProperty">
            <summary>
            Identifies the MinorGridStroke dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MinorTickStrokeProperty">
            <summary>
            Identifies the MinorTickStroke dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MinorTickHeightProperty">
            <summary>
            Identifies the MinorTickHeight dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MinorTickThicknessProperty">
            <summary>
            Identifies the MinorTickThickness dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MajorTickStrokeProperty">
            <summary>
            Identifies the MajorTickStroke dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MajorTickHeightProperty">
            <summary>
            Identifies the MajorTickHeight dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MajorTickThicknessProperty">
            <summary>
            Identifies the MajorTickThickness dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.AnnoVisibilityProperty">
            <summary>
            Identifies the AnnoVisibility dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.VisibleProperty">
            <summary>
            Identifies the Visible dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.AnnoTemplateProperty">
            <summary>
            Identifies the AnnoTemplate dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.AnnoAngleProperty">
            <summary>
            Identifies the AnnoAngle dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MinorUnitProperty">
            <summary>
            Identifies the MinorUnit dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MajorUnitProperty">
            <summary>
            Identifies the MajorUnit dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.ForegroundProperty">
            <summary>
            Identifies the Foreground dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.LogBaseProperty">
            <summary>
            Identifies the LogBase dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.RadarPointIndicesProperty">
            <summary>
            Using a DependencyProperty as the backing store for PointIndices.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.RadarLabelVisibilityProperty">
            <summary>
            Using a DependencyProperty as the backing store for RadarLabelVisibility.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Axis.SetFixedType(C1.Silverlight.Chart.AxisType)">
            <summary>
            Sets the axis type for the default axes.
            </summary>
            <param name="type"></param>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.AnnoPositionProperty">
            <summary>
            Identifies the AnnoPosition dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Axis.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:C1.Silverlight.Chart.Axis"/> class.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MinProperty">
            <summary>
            Identifies the Min dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.AutoMaxProperty">
            <summary>
            Identifies the AutoMax dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MaxProperty">
            <summary>
            Identifies the Max dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.AutoMinProperty">
            <summary>
            Identifies the AutoMin dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.IsTimeProperty">
            <summary>
            Identifies the IsTime dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.AxisLineProperty">
            <summary>
            Identifies the AxisLine dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.PositionProperty">
            <summary>
            Identifies the Position dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.ItemsValueBindingProperty">
            <summary>
            Identifies the ItemsValueBinding dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.ItemsLabelBindingProperty">
            <summary>
            Identifies the ItemsLabelBinding dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.ScaleProperty">
            <summary>
            Identifies the Scale dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.ReversedProperty">
            <summary>
            Identifies the Reversed dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.OriginProperty">
            <summary>
            Identifies the Origin dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MajorTickOverlapProperty">
            <summary>
            Identifies the MajorTickOverlap dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.MinorTickOverlapProperty">
            <summary>
            Identifies the MinorTickOverlap dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Axis.PointToData(System.Windows.Point)">
            <summary>
            Transforms the point from chart view coordinates to the axis data coordinates.
            </summary>
            <param name="pt">The point in chart view coordinates.</param>
            <returns>The point in axis data coordinates.</returns>
        </member>
        <member name="M:C1.Silverlight.Chart.Axis.PointFromData(System.Windows.Point)">
            <summary>
            Transforms the point from axis data coordinates to the chart view coordinates.
            </summary>
            <param name="pt">The point in axis data coordinates.</param>
            <returns>The point in chart view coordinates.</returns>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.PlotAreaIndexProperty">
            <summary>
            Identifies the PlotAreaIndex dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.FontFamilyProperty">
            <summary>
            Identifies the FontFamily dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.FontSizeProperty">
            <summary>
            Identifies the FontSize dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.FontStretchProperty">
            <summary>
            Identifies the FontStretch dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.FontStyleProperty">
            <summary>
            Identifies the FontStyle dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.FontWeightProperty">
            <summary>
            Identifies the FontWeight dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.Axis.UseExactLimitsProperty">
            <summary>
             Using a DependencyProperty as the backing store for UseExactLimits.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Axis.GetAxisRect">
            <summary>
            Gets the coordinates of axis rectangle.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.AnnoFormat">
            <summary>
            Gets or sets the format of the axis annotation.
            </summary>
            <remarks>
            The format conforms to the standard .NET formatting.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.MajorGridFill">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to fill the major grid.
            </summary>
            <remarks>
            You can use this property to create a striped plot appearance.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.AnnoVisibility">
            <summary>
            Gets or sets the annotation visibility.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.MajorGridStroke">
            <summary>
            Gets or sets the brush of major grid lines.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.MajorGridStrokeThickness">
            <summary>
            Gets or sets the thickness of major grid lines.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.MajorGridStrokeDashes">
            <summary>
            Gets or sets the dash pattern of major grid lines.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.MinorGridStrokeThickness">
            <summary>
            Gets or sets the thickness of minor grid lines.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.MinorGridStroke">
            <summary>
            Gets or sets the brush of minor grid lines.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.MinorGridStrokeDashes">
            <summary>
            Gets or sets the dash pattern of minor grid lines.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.LogBase">
            <summary>
            Gets or sets the logarithmic base for the axis. Default value double.Nan
            corresponds to the default linear axis.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.RadarPointIndices">
            <summary>
            Gets or set the collection of point indices for the axis.
            </summary>
            <remarks>
            This property allows to use different axes for data points.
            </remarks>
            <example>
            Add auxiliary axis for second(index=1) data point.
            <code>
            chart.View.Axes.Add( new Axis() { AxisType= AxisType.Y, RadarPointIndices=new int[] {1} });
            </code>
            </example>
        </member>
        <member name="E:C1.Silverlight.Chart.Axis.AnnoCreated">
            <summary>
            Fires when annotation label was created.
            </summary>
            <remarks>
            In the event handler it's possible to customize appearance of the label 
            created by default.
            </remarks>
            <example>
            The following code sets color of labels depending on its values.
            <code>
             chart.View.AxisY.AnnoCreated += (s, e) =>
               {
                 var label = (TextBlock)e.Label;
                 if (e.Value >= 0)
                   label.Foreground = Brushes.Red;
                 else
                   label.Foreground = Brushes.Blue;
               };
            </code>   
            </example>   
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.RadarLabelVisibility">
            <summary>
            Gets or sets annotation label visibility for the axis of radar chart.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.MajorUnit">
            <summary>
            Gets or sets the major unit (distance between labels).
            </summary>
            <remarks>
            For time axis the distance is measured in days. E.g. 6 hours = 0.25 (days).
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.MinorUnit">
            <summary>
            Gets or sets the minor unit (distance between minor tick marks).
            </summary>
            <remarks>
            For time axis the distance is measured in days. E.g. 6 hours = 0.25 (days).
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.AxisType">
            <summary>
            Gets or sets the axis type for the auxiliary axis.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.AnnoPosition">
            <summary>
            Gets or sets the annotation position.
            </summary>
            <remarks>
            The position is relative to the value on the axis which corresponds
            to the axis annotation.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.AnnoTemplate">
            <summary>
            Gets or sets the template used to create the axis annotations.
            </summary>
            <remarks>
            The template is used for generation of axis labels.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.Title">
            <summary>
            Gets or sets the axis title.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.AnnoAngle">
            <summary>
            Gets or sets the rotation angle of axis annotations.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.Foreground">
            <summary>
            Gets or sets the foreground brush of the axis.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.Min">
            <summary>
            Gets or sets the minimum value shown on the axis.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.AutoMax">
            <summary>
            Gets or sets whether the maximum value for the axis is set automatically.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.Max">
            <summary>
            Gets or sets the maximum value shown on the axis.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.AutoMin">
            <summary>
            Gets or sets whether the minimum value for the axis is set automatically.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.IsTime">
            <summary>
            Gets or sets whether the axis represents time values.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.MinorTickStroke">
            <summary>
            Gets or sets the minor tick stroke.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.MinorTickThickness">
            <summary>
            Gets or sets the minor tick thickness.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.MinorTickHeight">
            <summary>
            Gets or sets the minor tick height.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.MajorTickStroke">
            <summary>
            Gets or sets the major tick stroke.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.MajorTickThickness">
            <summary>
            Gets or sets the major tick thickness.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.MajorTickHeight">
            <summary>
            Gets or sets the major tick height.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.AxisLine">
            <summary>
            Gets or sets the axis line.
            </summary>
            <remarks>
            The axis line connects the points on plot which correspond
            to the <see cref="P:C1.Silverlight.Chart.Axis.Min"/> and <see cref="P:C1.Silverlight.Chart.Axis.Max"/> of the axis.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.Visible">
            <summary>
            Gets or sets the axis visibility.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.Position">
            <summary>
            Gets or sets the position of the axis.
            </summary>
            <remarks>
            For vertical axis AxisPosition.Near corresponds to the left and
            AxisPosition.Far corresponds to the right.
            For horizontal axis AxisPosition.Near corresponds to bottom and
            AxisPosition.Far corresponds to the top.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.ItemsSource">
            <summary>
            Gets or sets the source for axis annotations.
            </summary>
            <remarks>
            The ItemsSource provides the data that is used for display
            in axis labels instead of automatic annotation with numeric 
            or DataTime values.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.ItemsValueBinding">
            <summary>
            Gets or sets the binding for axis values.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.ItemsLabelBinding">
            <summary>
            Gets or sets the binding for axis labels.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.ActualMin">
            <summary>
            Gets the actual axis minimum.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.ActualMax">
            <summary>
            Gets the actual axis maximum.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.Scale">
            <summary>
            Gets or set the scale of axis.
            </summary>
            <remarks>
            The scale should be more than 0 and less or equal to 1.
            The scale specifies which part of the range between Min and Max
            is shown. When scale is 1 (default value) the whole axis range
            is visible.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.MinScale">
            <summary>
            Gets or set the minimum scale of axis.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.Value">
            <summary>
            Gets or sets the current scrolling position of the axis.
            </summary>
            <remarks>
            The Value represents scrolling position on the axis when the Scale
            is less than 1 otherwise the Value has no effect. The Value should
            be from 0 to 1.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.Reversed">
            <summary>
            Gets or sets whether the axis is reversed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.Origin">
            <summary>
            Gets or sets the value at which the axis crosses perpendicular axis.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.MajorTickOverlap">
            <summary>
            Gets or sets the relative overlap of major axis tick. The range of values is from 0 to 1.
            The default value 0 means no overlap,when the overlap is 1, the whole tick is inside the plot area.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.MinorTickOverlap">
            <summary>
            Gets or sets the relative overlap of major axis tick. The range of values is from 0 to 1.
            The default value 0 means no overlap,when the overlap is 1, the whole tick is inside the plot area.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.IsDependent">
            <summary>
            Gets or sets whether the axis is dependent from the main chart axis.
            Only for auxiliary axes. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.DependentAxisConverter">
            <summary>
            Gets or sets axis value converter for dependent axis.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.ScrollBar">
            <summary>
            Gets or sets the axis scroll bar.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.PlotAreaIndex">
            <summary>
            Gets or sets the plot area index.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.FontFamily">
            <summary>
            Gets or sets font family for the axis annotations.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.FontSize">
            <summary>
            Gets or sets font size for the axis annotations.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.FontStretch">
            <summary>
            Gets or sets font stretch for the axis annotations.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.FontStyle">
            <summary>
            Gets or sets font style for the axis annotations.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.FontWeight">
            <summary>
            Gets or sets font weight for the axis annotations.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.Axis.UseExactLimits">
            <summary>
            Specifies whether to use exact data values for axis minimum and maximum.
            By default(UseExactLimits=false), the minimum and maximum can be adjusted to round numbers. 
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.AxisType">
            <summary>
            Specifies axis type.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.AxisType.X">
            <summary>
            X-axis.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.AxisType.Y">
            <summary>
            Y-axis.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.AxisType.Z">
            <summary>
            Z-axis.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.AnnoCreatedEventHandler">
            <summary>
            Represents the method that handles a Axis.AnnoCreated event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Silverlight.Chart.AnnoCreatedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:C1.Silverlight.Chart.AnnoCreatedEventArgs">
            <summary>
            Provides data for a Axis.AnnoCreated event.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.AnnoCreatedEventArgs.Canvas">
            <summary>
            Gets the axis canvas.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.AnnoCreatedEventArgs.Label">
            <summary>
            Gets or sets the label element.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.AnnoCreatedEventArgs.Index">
            <summary>
            Gets the index of annotation label.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.AnnoCreatedEventArgs.Value">
            <summary>
            Gets the axis value that corresponds to the annotation label.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.AxisPosition">
            <summary>
            Specifies position of the axis.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.AxisPosition.Near">
            <summary>
            Left for vertical, bottom for horizontal.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.AxisPosition.Far">
            <summary>
            Right for vertical, top for horizontal.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.AxisPosition.OverData">
            <summary>
            The axis is over the plot elements.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.AxisPosition.DisableLastLabelOverflow">
            <summary>
            Hide last label on the axis if it does not fit to the axis bounds.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.AxisPosition.Inner">
            <summary>
            Axis annotations are inside plot area.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.AnnoPosition">
            <summary>
            Specifies position of the axis labels.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.AnnoPosition.Auto">
            <summary>
            Automatic selection.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.AnnoPosition.Near">
            <summary>
            Near position.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.AnnoPosition.Far">
            <summary>
            Far position.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.AxisCollection">
            <summary>
            Represents collection of axes.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.AxisCollection.#ctor">
            <summary>
            Initializes a new instance of AxisCollection class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.AxisCollection.InsertItem(System.Int32,C1.Silverlight.Chart.Axis)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <param name="index">Index at which the element is inserted.</param>
            <param name="item">Element to insert</param>
        </member>
        <member name="M:C1.Silverlight.Chart.AxisCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">Index of the element to remove.</param>
        </member>
        <member name="M:C1.Silverlight.Chart.AxisCollection.ClearItems">
            <summary>
            Removes items from the collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.AxisCollection.Item(System.String)">
            <summary>
            Gets the axis by its name.
            </summary>
            <param name="name">The name of the axis.</param>
            <returns>Axis with the specified name. Null if there is no axis with
            the specified name.</returns>
        </member>
        <member name="T:C1.Silverlight.Chart.AxisScrollBarPosition">
            <summary>
            Specifies available positions for axis scroll bar.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.AxisScrollBarPosition.Auto">
            <summary>
            Scroll bar is placed on the axis.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.AxisScrollBarPosition.None">
            <summary>
            Scroll bar is not on the axis.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.AxisRangeChangedEventArgs">
            <summary>
            Provides the data for AxisRangeChanged event.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.AxisRangeChangedEventArgs.Value">
            <summary>
            Stores the axis value.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.AxisRangeChangedEventArgs.Scale">
            <summary>
            Stores the axis scale.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.AxisRangeChangedEventArgs.#ctor(System.Double,System.Double)">
            <summary>
            Creates an instance of AxisRangeChangedEventArgs class.
            </summary>
            <param name="value">Initial axis value.</param>
            <param name="scale">Initial axis scale.</param>
        </member>
        <member name="T:C1.Silverlight.Chart.AxisRangeChangedEventHandler">
            <summary>
            Specifies delegates for the 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:C1.Silverlight.Chart.IAxisScrollBar">
            <summary>
            Descirbes the axis scroll bar.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.IAxisScrollBar.Axis">
            <summary>
            Gets or sets the axis which corresponds to the scroll bar.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.IAxisScrollBar.AxisRangeChanged">
            <summary>
            Fires when the axis range is changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.IAxisScrollBar.ScrollBarMargin">
            <summary>
            Gets the scroll bar margin.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.IAxisScrollBar.ScrollBarPosition">
            <summary>
            Gets the scroll bar position.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.AxisScrollBar">
            <summary>
            Represent axis scroll bar control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.AxisScrollBar.#ctor">
            <summary>
            Create an instance of AxisScrollBar class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.AxisScrollBar.OnApplyTemplate">
            <summary>
            Called during call of ApplyTemplate() method.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.AxisScrollBar.ScrollBarMargin">
            <summary>
            Gets the scroll bar margin.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.AxisScrollBar.ScrollBarPosition">
            <summary>
            Gets or sets the scroll bar postion.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.AxisScrollBar.Axis">
            <summary>
            Gets or sets the axis which corresponds to the scroll bar.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.AxisScrollBar.AxisRangeChanged">
            <summary>
            Fires when the axis range is changed.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.ChartView">
            <summary>
            Represents class view object that contains all visual plot elements:
            axes, visualized data.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartView.#ctor">
            <summary>
            Initialize an instance of ChartView class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartView.GetPosition(System.Windows.Input.MouseEventArgs)">
            <summary>
            Returns coordinates of the mouse pointer in the ChartView space.
            </summary>
            <param name="e">Mouse event data.</param>
            <returns>The coordinates of the mouse position.</returns>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartView.PlotBackgroundProperty">
            <summary>
            Identifies the PlotBackground dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartView.SetDataPoint(System.Windows.UIElement,System.Windows.Point)">
            <summary>
            Attaches the specified visual to the specified data point on the plot.
            </summary>
            <param name="visual">The visual to attach.</param>
            <param name="point">The point in data coordinates.</param>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartView.GetDataPoint(System.Windows.UIElement)">
            <summary>
            Gets the data point attached to the specified visual. 
            </summary>
            <param name="visual">The visual.</param>
            <returns>The data point.</returns>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartView.PointFromData(System.Windows.Point)">
            <summary>
            Transforms the point from data coordinates to control coordinates.
            </summary>
            <param name="pt">Point in data coordinates</param>
            <returns>The corresponding point in control coordinates.</returns>
            <remarks>Only 2D Cartesian charts.</remarks>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartView.PointToData(System.Windows.Point)">
            <summary>
            Transforms the point from control coordinates to data coordinates.
            </summary>
            <param name="pt">Point in control coordinates</param>
            <returns>The corresponding point in data coordinates.</returns>
            <remarks>Only 2D Cartesian charts.</remarks>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartView.DataIndexToPoint(System.Int32,System.Int32)">
            <summary>
            Returns the point that corresponds to the specified data point.
            The data point is specified by its series and point indices.
            </summary>
            <param name="seriesIndex">Index of data series.</param>
            <param name="pointIndex">Index of the point in the data series.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.ChartView.DataIndexFromPoint(System.Windows.Point,System.Int32,C1.Silverlight.Chart.MeasureOption,System.Double@)">
            <summary>
            Get the index of closest data point that corresponds to the specified point.
            </summary>
            <param name="pt">Point in the control coordinates.</param>
            <param name="seriesIndex">Index of series.</param>
            <param name="option">Measure option.</param>
            <param name="distance">Distance from the data point to the specified point.</param>
            <returns>The index of the data point that is closest to the specified point.</returns>
        </member>
        <member name="F:C1.Silverlight.Chart.ChartView.InvertedProperty">
            <summary>
            Identifies the Inverted dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartView.Axes">
            <summary>
            Gets the axis collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartView.PlotAreas">
            <summary>
            Gets the plot area collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartView.PlotAreaColumnDefinitions">
            <summary>
            Gets the collection of plot area column definitions.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartView.PlotAreaRowDefinitions">
            <summary>
            Gets the collection of plot area row definitions.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartView.Layers">
            <summary>
            Gets the collection of layers.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartView.PlotBackground">
            <summary>
            Gets or sets the background brush for plot area.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartView.AxisX">
            <summary>
            Gets or sets X axis.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartView.AxisY">
            <summary>
            Gets or sets Y axis.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartView.Children">
            <summary>
            Gets the list of the additional visuals that are rendered on the plot.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartView.PlotShape">
            <summary>
            Gets or sets the shape that should be rendered on the plot background.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartView.PlotRect">
            <summary>
            Gets the plot rectangle (area inside axes).
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.ChartView.Inverted">
            <summary>
            Gets or sets whether the direction of plotting is inverted. 
            </summary>
            <remarks>
            By default (Inverted=false) the direction of plotting is horizontal.
            When the Inverted property is set to true the direction becomes vertical
            and the axes are swapped(AxisX and AxisY).
            </remarks>
        </member>
        <member name="T:C1.Silverlight.Chart.MeasureOption">
            <summary>
            Specifies how the distance between points is calculated.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.MeasureOption.X">
            <summary>
            Only x-coordinates is used.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.MeasureOption.Y">
            <summary>
            Only y-coordinates is used. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.MeasureOption.XY">
            <summary>
            Both x- and y-coordinates are used.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.ChartViewport2D">
            <summary>
            Canvas that presents 2D charts.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.LegendItem">
            <summary>
            Represents the item in the chart legend.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.LegendItem.ToString">
            <summary>
            Returns textual presentation of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.Chart.LegendItem.Symbol">
            <summary>
            Gets the symbol shape of the plot element.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.LegendItem.Line">
            <summary>
            Gets the line (connection) shape of the plot element.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.LegendItem.Label">
            <summary>
            Gets the text label of the plot element.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.LegendItem.Item">
            <summary>
            Gets the object associated with the plot element.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.LegendItemCollection">
            <summary>
            Represents the collection of legend items.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.LegendItemCollection.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:C1.Silverlight.Chart.LegendItemCollection.CollectionChanged">
            <summary>
            Occurs when an item in the collection changes, or the entire collection changes.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.Legend">
            <summary>
            Represents the chart legend.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.C1ChartLegend">
            <summary>
            Represents the chart legend.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.C1ChartLegend.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius dependency property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.C1ChartLegend.#ctor">
            <summary>
            Initializes a new instance of Legend class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.C1ChartLegend.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element"></param>
            <param name="item"></param>
        </member>
        <member name="F:C1.Silverlight.Chart.C1ChartLegend.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.C1ChartLegend.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1ChartLegend.CornerRadius">
            <summary>
            Gets or sets corner radius of the legend.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1ChartLegend.Position">
            <summary>
            Gets or sets legend position.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1ChartLegend.Chart">
            <summary>
            Gets or sets the instance of Chart that corresponds to the Legend.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1ChartLegend.Orientation">
            <summary>
            Gets or sets the layout orientation for the legend.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.C1ChartLegend.Title">
            <summary>
            Gets or sets the legend title.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.LegendPosition">
            <summary>
            Specifies legend position.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.LegendPosition.Left">
            <summary>
            At left from the chart. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.LegendPosition.Right">
            <summary>
            At right from the chart. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.LegendPosition.Top">
            <summary>
            At top from the chart. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.LegendPosition.Bottom">
            <summary>
            At bottom from the chart. 
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.PlotArea">
            <summary>
            Defines the area containing plot elements that correspond to the data points.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PlotArea.BackgroundProperty">
            <summary>
            Identifies the Background dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PlotArea.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PlotArea.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PlotArea.ColumnProperty">
            <summary>
            Identifies the Column dependency property.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PlotArea.RowProperty">
            <summary>
            Identifies the Row dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotArea.Background">
            <summary>
            Gets or sets the plot area background.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotArea.Stroke">
            <summary>
            Gets or sets the stroke of plot area bounds.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotArea.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness 
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotArea.Column">
            <summary>
            Gets or sets column index of plot area.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotArea.Row">
            <summary>
            Gets or sets the row index of plot area.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.PlotAreaColumnDefinition">
            <summary>
            Defines column-specific properties for plot area.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PlotAreaColumnDefinition.WidthProperty">
            <summary>
            Identifies the Width dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotAreaColumnDefinition.Width">
            <summary>
            Gets or sets the width of element.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.PlotAreaRowDefinition">
            <summary>
            Defines row-specific properties for plot area.
            </summary>
        </member>
        <member name="F:C1.Silverlight.Chart.PlotAreaRowDefinition.HeightProperty">
            <summary>
            Identifies the Height dependency property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotAreaRowDefinition.Height">
            <summary>
            Gets or sets the height of element.
            </summary>
        </member>
        <member name="T:C1.Silverlight.Chart.PlotAreaCollection">
            <summary>
            Defines collection of plot areas
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotAreaCollection.ColumnDefinitions">
            <summary>
            Gets the collection of column definitions.
            </summary>
        </member>
        <member name="P:C1.Silverlight.Chart.PlotAreaCollection.RowDefinitions">
            <summary>
            Gets the collection of row definitions.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.Utils.FindIntersection(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Find intersection point between two lines and returns their relative position.
            </summary>
            <param name="start1">Start of 1st line.</param>
            <param name="end1">End of 1st line.</param>
            <param name="start2">Start of 2nd line.</param>
            <param name="end2">End of 2nd line.</param>
            <returns>
            0 - no intersection, 
            +1 - second line above first after intersection, 
            -1 - second line below first after intersection.
            </returns>
        </member>
        <member name="T:C1.Silverlight.Chart.NullableChartTypeConverter">
            <summary>
            Type converter for DataSeries.ChartType property.
            </summary>
        </member>
        <member name="M:C1.Silverlight.Chart.NullableChartTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of one type to the type of this converter.
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.Chart.NullableChartTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given value to the type of this converter.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
    </members>
</doc>
