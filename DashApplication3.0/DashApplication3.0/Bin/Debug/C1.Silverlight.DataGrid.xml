<?xml version="1.0"?>
<doc>
    <assembly>
        <name>C1.Silverlight.DataGrid</name>
    </assembly>
    <members>
        <member name="T:C1.Silverlight.DataGrid.C1DataGridScrollMode">
            <summary>
            Scroll Modes supported by the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGridScrollMode.RealTime">
            <summary>
            The page is updated every time the ThumbTrack event of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> is fired.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGridScrollMode.Deferred">
            <summary>
            The page is updated once the EndScroll event of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> is fired.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridScrollMode">
            <summary>
            Scroll Modes supported by the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridScrollMode.RealTime">
            <summary>
            The page is updated every time the ThumbTrack event of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> is fired.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridScrollMode.Deferred">
            <summary>
            The page is updated once the EndScroll event of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> is fired.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.C1ValidationBehavior">
            <summary>
            Validates rows automatically on loading and after committed row.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1ValidationBehavior.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.C1ValidationBehavior"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1ValidationBehavior.GetValidationBehavior(C1.Silverlight.DataGrid.C1DataGrid)">
            <summary>
            Gets the validation behavior.
            </summary>
            <param name="obj">The data grid to which the validation is applied.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1ValidationBehavior.SetValidationBehavior(C1.Silverlight.DataGrid.C1DataGrid,C1.Silverlight.DataGrid.C1ValidationBehavior)">
            <summary>
            Sets the validation behavior.
            </summary>
            <param name="obj">The data grid to which the validation will be applied.</param>
            <param name="value">The behavior.</param>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1ValidationBehavior.ValidationBehaviorProperty">
            <summary>
            Attached advanced filters behavior.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.C1CollectionChangedEventArgs">
            <summary>
            Provides event data for changes in the data source collection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1CollectionChangedEventArgs.AddedItems">
            <summary>
            Gets the item affected by an Add operation.
            </summary>
            <remarks>
            The added items are represented by a KeyValuePair [int,object], where the key
            is the index where the item was added and the value is the data item itself.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1CollectionChangedEventArgs.RemovedItems">
            <summary>
            Gets the item affected by a Remove operation.
            </summary>
            <remarks>
            The removed items are represented by a KeyValuePair[int,object], where the key
            is the index of the removed item and the value is the data item itself.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1CollectionChangedEventArgs.ItemPropertiesChanged">
            <summary>
            Gets or sets a value indicating whether the meta-data of the items contained in the collection
            was changed (i.e. a property was added/removed to/from the item).
            </summary>
             <remarks>
            The C1DataGrid uses this information to re-create the auto-generated columns.
            </remarks>
            <value><c>true</c> if a property was changed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.C1CollectionChangedEventHandler">
            <summary>
            Is risen when a change in the data source collection occurs.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.C1DataGrid">
            <summary>
            Used to display, analyze, and edit tabular information. Supports virtualized data-binding, xaml styling and automatic sorting and filters in client/server scenarios.
            </summary>	
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.GetCellFromFrameworkElement(System.Windows.FrameworkElement)">
            <summary>
            Gets the corresponding cell from a <see cref="T:System.Windows.FrameworkElement"/> contained inside the cell.
            </summary>
            <remarks>
            This methods walks the visual tree from the passed in element searching for a <see cref="T:C1.Silverlight.DataGrid.DataGridCellPresenter"/>.
            </remarks>
            <param name="element">The element inside the cell.</param>
            <returns>The cell that contains the <see cref="T:System.Windows.FrameworkElement"/></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.GetCellFromPoint(System.Windows.Point)">
            <summary>
            Gets the corresponding cell from a specific point in the screen.
            </summary>
            <param name="point">The point in the coordinate system where the hit test is to be performed.</param>
            <returns>The cell in that point of the screen</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.GetCell(System.Int32,System.Int32)">
            <summary>
            Gets the cell corresponding to specified row and a column indexes.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="columnIndex">Index of the column.</param>
            <returns>The cell in the specified row and column indexes</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.GetDetailFromPoint(System.Windows.Point)">
            <summary>
            Gets the detail presenter from a specific point in the screen.
            </summary>
            <param name="point">The point in the screen coordinates.</param>
            <returns>The detail presenter from a specific point in the screen</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.BeginEdit">
            <summary>
            Begins the edit of the currently selected cell.
            </summary>
            <returns>True, if the edit began, otherwise False</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.BeginEdit(System.Int32,System.Int32)">
            <summary>
            Begins the edit of the cell in the specified row and column indexes.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="columnIndex">Index of the column.</param>
            <returns>True, if the edit began, otherwise False</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.BeginEdit(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Begins the edit of the specified cell.
            </summary>
            <param name="cell">The cell to be edited.</param>
            <returns>True, if the edit began, otherwise False</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.BeginEdit(System.Windows.RoutedEventArgs)">
            <summary>
            Begins the edit of the currently selected cell.
            </summary>
            <param name="editingEventArgs">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
            <returns>True, if the edit began, otherwise False</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.CancelEdit">
            <summary>
            Cancels the edit of the currently editing cell.
            </summary>
            <returns>True, if the edit was cancelled, otherwise False</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.EndEdit">
            <summary>
            Ends the edit of the currently editing cell committing the changes.
            </summary>
            <returns>True, if the edit was committed, otherwise False</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.EndEdit(System.Boolean)">
            <summary>
            Ends the edit of the currently editing cell.
            </summary>
            <param name="commitChanges">if set to <c>true</c> commit the changes.</param>
            <returns>True, if the edit finish, otherwise False</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.EndEdit(System.Boolean,System.Boolean)">
            <summary>
            Ends the edit of the currently editing cell.
            </summary>
            <param name="commitChanges">if set to <c>true</c> commit the changes.</param>
            <param name="exitEditingMode">if set to <c>true</c> exit editing mode.</param>
            <returns>True, if the edit finish, otherwise False</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.EndEditRow(System.Boolean)">
            <summary>
            Ends the edit of the currently editing row.
            </summary>
            <param name="commitChanges">if set to <c>true</c> commit the changes.</param>
            <returns>True, if the edit was committed, otherwise False</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.BeginNewRow">
            <summary>
            Begins the edit of a new row. It will scroll the new row into view.
            </summary>
            <returns>True, if the edit began, otherwise False</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.EndNewRow(System.Boolean)">
            <summary>
            Ends the edit of the new row.
            </summary>
            <param name="commitChanges">if set to <c>true</c> commit the changes.</param>
            <returns>True, If the new row edit finished</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.RemoveRow(System.Int32)">
            <summary>
            Removes a row from the grid from the specified index.
            </summary>
            <param name="rowIndex">Index of the row to remove.</param>
            <returns>True, If the row was removed</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.RemoveRows(C1.Silverlight.DataGrid.DataGridRow[])">
            <summary>
            Removes a specified collection of rows.
            </summary>
            <param name="removedRows">The rows to remove.</param>
            <returns>True, if the rows were removed</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.RemoveRows(System.Int32[])">
            <summary>
            Removes a collection of rows from a collection of row indexes.
            </summary>
            <param name="rowIndexes">The row indexes to be removed.</param>
            <returns>True, if the rows were removed</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.ScrollIntoView(System.Object,C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Scrolls into the view the cell in the intersection of the specified data item and column.
            </summary>
            <remarks>
            If the cell is already inside the viewport nothing happens.
            </remarks>
            <param name="item">The item.</param>
            <param name="column">The column.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.ScrollIntoView">
            <summary>
            Scrolls into the view the currently selected cell.
            </summary>
            <remarks>
            If the cell is already inside the viewport nothing happens.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.ScrollIntoView(System.Int32,System.Int32)">
            <summary>
            Scrolls into the view the specified cell.
            </summary>
            <remarks>
            If the cell is already inside the viewport nothing happens.
            </remarks>
            <param name="rowIndex">Index of the row.</param>
            <param name="columnIndex">Index of the column.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.ScrollIntoView(System.Windows.FrameworkElement)">
            <summary>
            Scrolls into the view to show the specified <see cref="T:System.Windows.FrameworkElement"/>.
            </summary>
            <remarks>
            If the cell is already inside the viewport nothing happens.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.PageUp(System.Boolean)">
            <summary>
            Scrolls a page upward.
            </summary>
            <param name="changeSelection">if set to <c>true</c> changes the selected row.</param>
            <returns>true, if the scroll occurs</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.PageDown(System.Boolean)">
            <summary>
            Scrolls a page downward.
            </summary>
            <param name="changeSelection">if set to <c>true</c> changes the selected row.</param>
            <returns>true, if the scroll occurs</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.Reload(System.Boolean)">
            <summary>
            Reloads the content of the grid by bringing all the information again from the inner <see cref="T:System.ComponentModel.ICollectionView"/>.
            </summary>
            <remarks>
            This method is typically used when the data source changed in an unnoticeable way to the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>. 
            e.g. when the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ItemsSource"/> is a <see cref="T:List"/> and a row is added directly to the list.
            </remarks>
            <param name="createColumns">If true, the columns will be reloaded, otherwise the columns won't be reloaded</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.Refresh">
            <summary>
            Recreate all the visual elements of the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
            <remarks>
            The creation of the elements is delegated to the Silverlight layout mechanism, 
            so if you query a visual element after calling this method (e.g. grid[0,0].Presenter) it will return nothing, 
            if you need to access the elements you will need to call <see cref="M:FrameworkElement.UpdateLayout"/> method 
            to force Silverlight layout to pass.
            </remarks>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.MoveColumn(C1.Silverlight.DataGrid.DataGridColumn,System.Int32)">
            <summary>
            Moves the specified column to the target display index.
            </summary>
            <param name="column">The column to move.</param>
            <param name="targetDisplayIndex">Target display index of the column.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.SortBy(C1.Silverlight.DataGrid.DataGridColumn,C1.Silverlight.DataGrid.DataGridSortDirection)">
            <summary>
            Sorts the data by the specified column and direction.
            </summary>
            <param name="column">The column that will be ordered.</param>
            <param name="direction">The order of the column.</param>
            <exception cref="T:C1.Silverlight.DataGrid.DataGridSortException">This exception is raised whether the collection view is not ready to execute a sort operation.</exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.SortBy(C1.Silverlight.DataGrid.DataGridColumn,C1.Silverlight.DataGrid.DataGridSortDirection,System.Boolean)">
            <summary>
            Sorts the data by the specified column and direction.
            </summary>
            <param name="column">The column that will be ordered.</param>
            <param name="direction">The order of the column.</param>
            <param name="preservePreviousSorting">If true the sorting state of the other columns will be preserved.</param>
            <exception cref="T:C1.Silverlight.DataGrid.DataGridSortException">This exception is raised whether the collection view is not ready to execute a sort operation.</exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.SortBy(C1.Silverlight.DataGrid.DataGridColumn[])">
            <summary>
            Sorts the data by the specified columns in ascending direction.
            </summary>
            <param name="columns">The columns that will be ordered.</param>
            <exception cref="T:C1.Silverlight.DataGrid.DataGridSortException">This exception is raised whether the collection view is not ready to execute a sort operation.</exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.SortBy(System.Collections.Generic.KeyValuePair{C1.Silverlight.DataGrid.DataGridColumn,C1.Silverlight.DataGrid.DataGridSortDirection}[])">
            <summary>
            Sorts the data by the specified columns and directions.
            </summary>
            <param name="columns">Pairs of columns and sort directions.</param>
            <exception cref="T:C1.Silverlight.DataGrid.DataGridSortException">This exception is raised whether the collection view is not ready to execute a sort operation.</exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.SortBy(C1.Silverlight.DataGrid.DataGridColumnValue{C1.Silverlight.DataGrid.DataGridSortDirection}[])">
            <summary>
            Sorts the data by the specified columns and directions.
            </summary>
            <param name="columns">Array of pairs of columns and sort directions.</param>
            <exception cref="T:C1.Silverlight.DataGrid.DataGridSortException">This exception is raised whether the collection view is not ready to execute a sort operation.</exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.FilterBy(C1.Silverlight.DataGrid.DataGridColumn,C1.Silverlight.DataGrid.DataGridFilterState)">
            <summary>
            Sorts the data by the specified column and direction.
            </summary>
            <param name="column">The column that will be ordered.</param>
            <param name="filterState">State of the filter.</param>
            <exception cref="T:C1.Silverlight.DataGrid.DataGridFilterException">This exception is raised whether the collection view is not ready to filter.</exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.FilterBy(C1.Silverlight.DataGrid.DataGridColumn,C1.Silverlight.DataGrid.DataGridFilterState,System.Boolean)">
            <summary>
            Sorts the data by the specified column and direction.
            </summary>
            <param name="column">The column that will be ordered.</param>
            <param name="filterState">State of the filter.</param>
            <param name="preservePreviousFilters">If true, keeps previous filtered columns</param>
            <exception cref="T:C1.Silverlight.DataGrid.DataGridFilterException">This exception is raised whether the collection view is not ready to filter.</exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.FilterBy(System.Collections.Generic.KeyValuePair{C1.Silverlight.DataGrid.DataGridColumn,C1.Silverlight.DataGrid.DataGridFilterState}[])">
            <summary>
            Filters the data by the specified columns and filter states.
            </summary>
            <param name="columns">Pairs of columns and filter states.</param>
            <exception cref="T:C1.Silverlight.DataGrid.DataGridFilterException">This exception is raised whether the collection view is not ready to filter.</exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.FilterBy(C1.Silverlight.DataGrid.DataGridColumnValue{C1.Silverlight.DataGrid.DataGridFilterState}[])">
            <summary>
            Filters the data by the specified columns and filter states.
            </summary>
            <param name="columns">Pairs of columns and filter states.</param>
            <exception cref="T:C1.Silverlight.DataGrid.DataGridFilterException">This exception is raised whether the collection view is not ready to filter.</exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.GroupBy(C1.Silverlight.DataGrid.DataGridColumn,C1.Silverlight.DataGrid.DataGridSortDirection)">
            <summary>
            Groups the data by the specified column and direction.
            </summary>
            <param name="column">The column that will be grouped by.</param>
            <param name="direction">The order of the group.</param>
            <exception cref="T:C1.Silverlight.DataGrid.DataGridGroupException">This exception is raised whether the collection view is not ready to execute a group operation.</exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.GroupBy(C1.Silverlight.DataGrid.DataGridColumn,C1.Silverlight.DataGrid.DataGridSortDirection,System.Boolean)">
            <summary>
            Groups the data by the specified column and direction.
            </summary>
            <param name="column">The column that will be grouped by.</param>
            <param name="direction">The order of the group.</param>
            <param name="preserveOtherColumnsGrouping">If true, the other columns will preserve the current state.</param>
            <exception cref="T:C1.Silverlight.DataGrid.DataGridGroupException">This exception is raised whether the collection view is not ready to execute a group operation.</exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.GroupBy(C1.Silverlight.DataGrid.DataGridColumn[])">
            <summary>
            Groups the data by the specified columns in Ascending direction.
            </summary>
            <param name="columns">The columns that will be grouped by.</param>
            <exception cref="T:C1.Silverlight.DataGrid.DataGridGroupException">This exception is raised whether the collection view is not ready to execute a group operation.</exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.GroupBy(System.Collections.Generic.KeyValuePair{C1.Silverlight.DataGrid.DataGridColumn,C1.Silverlight.DataGrid.DataGridSortDirection}[])">
            <summary>
            Groups the data by the specified columns and directions.
            </summary>
            <param name="columns">Pairs of columns and group directions.</param>
            <exception cref="T:C1.Silverlight.DataGrid.DataGridGroupException">This exception is raised whether the collection view is not ready to execute a group operation.</exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.GroupBy(C1.Silverlight.DataGrid.DataGridColumnValue{C1.Silverlight.DataGrid.DataGridSortDirection}[])">
            <summary>
            Groups the data by the specified columns and directions.
            </summary>
            <param name="columns">Pairs of columns and group directions.</param>
            <exception cref="T:C1.Silverlight.DataGrid.DataGridGroupException">This exception is raised whether the collection view is not ready to execute a group operation.</exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnAutoGeneratingColumn(C1.Silverlight.DataGrid.DataGridAutoGeneratingColumnEventArgs)">
            <summary>
            Raises the <see cref="E:AutoGeneratingColumn"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridAutoGeneratingColumnEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnCreatingRow(C1.Silverlight.DataGrid.DataGridCreatingRowEventArgs)">
            <summary>
            Raises the <see cref="E:CreatingRow"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridCreatingRowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnLoadedRow(C1.Silverlight.DataGrid.DataGridRowEventArgs)">
            <summary>
            Raises the <see cref="E:LoadingRow"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridRowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnLoadedRowPresenter(C1.Silverlight.DataGrid.DataGridRowEventArgs)">
            <summary>
            Raises the <see cref="E:LoadedRowPresenter"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridRowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnLoadedCellPresenter(C1.Silverlight.DataGrid.DataGridCellEventArgs)">
            <summary>
            Raises the <see cref="E:LoadedCellPresenter"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridRowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnLoadedRowHeaderPresenter(C1.Silverlight.DataGrid.DataGridRowEventArgs)">
            <summary>
            Raises the <see cref="E:LoadedRowHeaderPresenter"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridRowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnLoadedColumnHeaderPresenter(C1.Silverlight.DataGrid.DataGridColumnEventArgs)">
            <summary>
            Raises the <see cref="E:LoadedColumnHeaderPresenter"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridColumnEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnUnloadingRow(C1.Silverlight.DataGrid.DataGridRowEventArgs)">
            <summary>
            Raises the <see cref="E:UnloadingRow"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridRowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnUnloadedRowPresenter(C1.Silverlight.DataGrid.DataGridRowEventArgs)">
            <summary>
            Raises the <see cref="E:UnloadedRowPresenter"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridRowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnUnloadedRowHeaderPresenter(C1.Silverlight.DataGrid.DataGridRowEventArgs)">
            <summary>
            Raises the <see cref="E:UnloadedRowHeaderPresenter"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridRowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnUnloadedColumnHeaderPresenter(C1.Silverlight.DataGrid.DataGridColumnEventArgs)">
            <summary>
            Raises the <see cref="E:UnloadedColumnHeaderPresenter"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridColumnEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnBeginningEdit(C1.Silverlight.DataGrid.DataGridBeginningEditEventArgs)">
            <summary>
            Raises the <see cref="E:BeginningEdit"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridBeginningEditEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnBeganEdit(C1.Silverlight.DataGrid.DataGridBeganEditEventArgs)">
            <summary>
            Raises the <see cref="E:BeganEdit"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridBeganEditEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnCommittingEdit(C1.Silverlight.DataGrid.DataGridEndingEditEventArgs)">
            <summary>
            Raises the <see cref="E:CommittingEdit"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridEndingEditEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnCommittedEdit(C1.Silverlight.DataGrid.DataGridCellEventArgs)">
            <summary>
            Raises the <see cref="E:CommittedEdit"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridCellEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnCancelingEdit(C1.Silverlight.DataGrid.DataGridEndingEditEventArgs)">
            <summary>
            Raises the <see cref="E:CancelingEdit"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridEndingEditEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnBeginningRowEdit(C1.Silverlight.DataGrid.DataGridEditingRowEventArgs)">
            <summary>
            Raises the <see cref="E:BeginningRowEdit"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridEditingRowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnSelectionChanging(C1.Silverlight.DataGrid.DataGridSelectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:SelectionChanging"/> event.
            </summary>
            <param name="e">The EventArgs instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnSelectionChanged(C1.Silverlight.DataGrid.DataGridSelectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:SelectionChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnCurrentRowOrColumnChanged(C1.Silverlight.DataGrid.DataGridCellEventArgs)">
            <summary>
            Raises the <see cref="E:CurrentCellChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnLoadedRowDetailsPresenter(C1.Silverlight.DataGrid.DataGridRowDetailsEventArgs)">
            <summary>
            Raises the <see cref="E:LoadedRowDetailsPresenter"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridRowDetailsEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnUnloadedRowDetailsPresenter(C1.Silverlight.DataGrid.DataGridRowDetailsEventArgs)">
            <summary>
            Raises the <see cref="E:UnloadedRowDetailsPresenter"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridRowDetailsEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnRowDetailsVisibilityChanged(C1.Silverlight.DataGrid.DataGridRowEventArgs)">
            <summary>
            Raises the <see cref="E:RowDetailsVisibilityChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridRowDetailsEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnColumnHeaderDragStarted(C1.Silverlight.MouseDragEventArgs)">
            <summary>
            Raises the <see cref="E:ColumnHeaderDragStarted"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.MouseDragEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnColumnHeaderDragDelta(C1.Silverlight.MouseDragEventArgs)">
            <summary>
            Raises the <see cref="E:ColumnHeaderDragDelta"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.MouseDragEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnColumnHeaderDragCompleted(C1.Silverlight.MouseDragEventArgs)">
            <summary>
            Raises the <see cref="E:ColumnHeaderDragCompleted"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.MouseDragEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnColumnReordering(C1.Silverlight.DataGrid.DataGridColumnReorderingEventArgs)">
            <summary>
            Raises the <see cref="E:ColumnReordering"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridColumnReorderingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnColumnReordered(C1.Silverlight.DataGrid.DataGridColumnEventArgs)">
            <summary>
            Raises the <see cref="E:ColumnReordered"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Silverlight.DataGrid.DataGridColumnEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.BeginInit">
            <summary>
            This method is called when the initialization process starts.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.EndInit">
            <summary>
            This method is called when the initialization process finishes.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.RaisePropertyChanged(System.String)">
            <summary>
            Raises the property changed event.
            </summary>
            <param name="propertyName">Name of the property that changed.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.Print(System.String)">
            <summary>
            Shows Print Dialog and prints the grid.
            </summary>
            <param name="documentName">
            Name of the document to print.
            </param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.Print(System.String,C1.Silverlight.DataGrid.ScaleMode,System.Windows.Thickness,System.Int32)">
            <summary>
            Prints the grid using a specified scale mode.
            </summary>
            <param name="documentName">Name of the document to print.</param>
            <param name="scaleMode">How to scale the document to fit the pages.</param>
            <param name="margin">Margin around the page in pixels.</param>
            <param name="maxPages">The maximum number of pages to print.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.GetPageImages(C1.Silverlight.DataGrid.ScaleMode,System.Windows.Size,System.Windows.Thickness,System.Int32,System.Int32@)">
            <summary>
            Gets a list of elements that represent parts of the grid fit for rendering
            into pages of a document.
            </summary>
            <param name="scaleMode">How to scale the document to fit the pages.</param>
            <param name="pageSize">Size of the pages in pixels.</param>
            <param name="margin">Margin around the page in pixels.</param>
            <param name="maxPages">The maximum number of pages to print.</param>
            <param name="verticalPageCount">Returns the number of vertical pages. Note that if C1DataGrid width doesn't
            fit to the specified page width, each vertical page is additionally split horizontally to subpages
            that fit to the specified width, so one vertical page is represented by multiple items in the collection
            returned by this method. This out parameter returns the number of vertical pages, that doesn't take
            into account horizontal splits. The number of horizontal subpages for each vertical page can be calculated
            by dividing the number of items returned by this method by the value returned in the 
            <paramref name="verticalPageCount"/> parameter.</param>
            <returns>A list with elements that correspond to the pages.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.GetPageImages(C1.Silverlight.DataGrid.ScaleMode,System.Windows.Size,System.Windows.Thickness,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Gets a list of elements that represent parts of the grid fit for rendering
            into pages of a document.
            </summary>
            <param name="scaleMode">How to scale the document to fit the pages.</param>
            <param name="pageSize">Size of the pages in pixels.</param>
            <param name="margin">Margin around the page in pixels.</param>
            <param name="maxPages">The maximum number of pages to print.</param>
            <param name="showPageInfo">Indicates whether page info like a page number/count should be added to the generated images.</param>
            <param name="verticalPageCount">Returns the number of vertical pages. Note that if C1DataGrid width doesn't
            fit to the specified page width, each vertical page is additionally split horizontally to subpages
            that fit to the specified width, so one vertical page is represented by multiple items in the collection
            returned by this method. This out parameter returns the number of vertical pages, that doesn't take
            into account horizontal splits. The number of horizontal subpages for each vertical page can be calculated
            by dividing the number of items returned by this method by the value returned in the 
            <paramref name="verticalPageCount"/> parameter.</param>
            <returns>A list with elements that correspond to the pages.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.ChangeVisualStateLoading(System.Boolean)">
            <summary>
            Updates the current visual state of the Loading visual state group to match the object's properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.ChangeVisualStateCommon(System.Boolean)">
            <summary>
            Updates the current visual state of the Common visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.AutoGenerateColumnsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.AutoGenerateColumns"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ItemsSource"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.CanUserReorderColumnsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserReorderColumns"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.CanUserResizeColumnsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserResizeColumns"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.CanUserResizeRowsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserResizeRows"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.CanUserFilterProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserFilter"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.CanUserSortProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserSort"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.CanUserGroupProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserGroup"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.CanUserAddRowsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserAddRows"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.CanUserEditRowsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserEditRows"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.CanUserRemoveRowsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserRemoveRows"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.CanUserToggleDetailsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserToggleDetails"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.CanUserFreezeColumnsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserFreezeColumns"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.IsReadOnlyProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.IsReadOnly"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.HeadersVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.HeadersVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.GridLinesVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.GridLinesVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.NewRowVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.NewRowVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.ShowFluidMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ShowFluidMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.ShowValidationIndicatorsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ShowValidationIndicators"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.ShowVerticalFreezingSeparatorProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ShowVerticalFreezingSeparator"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.ShowGroupingPanelProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ShowGroupingPanel"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.VerticalScrollBarVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.VerticalScrollBarVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.HorizontalScrollBarVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.HorizontalScrollBarVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.ColumnWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ColumnWidth"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.MinColumnWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.MinColumnWidth"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.MaxColumnWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.MaxColumnWidth"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.IndentWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.IndentWidth"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.LeadingColumnWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.LeadingColumnWidth"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.ColumnHeaderHeightProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ColumnHeaderHeight"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.RowHeightProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.RowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.GroupRowHeightProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.GroupRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.MinRowHeightProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.MinRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.MaxRowHeightProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.MaxRowHeight"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.RowHeaderWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.RowHeaderWidth"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.VerticalFreezingSeparatorWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.VerticalFreezingSeparatorWidth"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.FrozenColumnCountProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.FrozenColumnCount"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.FrozenTopRowsCountProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.FrozenTopRowsCount"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.FrozenBottomRowsCountProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.FrozenBottomRowsCount"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.SelectionModeProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.SelectionMode"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.SelectedIndexProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.SelectedIndex"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.SelectedItemProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.SelectedItem"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.RowDetailsTemplateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.RowDetailsTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.RowDetailsVisibilityModeProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.RowDetailsVisibilityMode"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.IsLoadingProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.IsLoading"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.BodyRectProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.BodyRect"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.CurrentColumnProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CurrentColumn"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.CurrentRowProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CurrentRow"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.ColumnHeaderClickActionProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ColumnHeaderClickAction"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.VerticalScrollStepProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.VerticalScrollStep"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.ScrollPreviewRowTemplateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ScrollPreviewRowTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.ScrollModeProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ScrollMode"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.FiltersCombinationProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.FiltersCombination"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.RowStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.RowStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.NewRowStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.NewRowStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.RowHeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.RowHeaderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.NewRowHeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.NewRowHeaderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.FocusStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.FocusStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.CellStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CellStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.ColumnHeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ColumnHeaderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.GroupColumnHeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.GroupColumnHeaderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.DragSourceColumnStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.DragSourceColumnStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.DropIndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.DropIndicatorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.DragOverColumnStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.DragOverColumnStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.FilterStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.FilterStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.GroupRowStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.GroupRowStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.GroupRowHeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.GroupRowHeaderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.VerticalFreezingSeparatorStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.VerticalFreezingSeparatorStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.ScrollBarStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ScrollBarStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.RowBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.RowBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.RowForegroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.RowForeground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.AlternatingRowBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.AlternatingRowBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.AlternatingRowForegroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.AlternatingRowForeground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.HorizontalGridLinesBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.HorizontalGridLinesBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.VerticalGridLinesBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.VerticalGridLinesBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.HeaderBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.HeaderBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.HeaderForegroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.HeaderForeground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.GroupingPanelBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.GroupingPanelBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.GroupingPanelForegroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.GroupingPanelForeground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.GroupingPanelStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.GroupingPanelStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.IsMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.IsMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.ForceMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ForceMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.MouseOverBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.MouseOverBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.PressedBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.PressedBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.SelectedBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.SelectedBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.ValidationBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ValidationBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DataGrid.ValidationForegroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ValidationForeground"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGrid.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.AutoGeneratingColumn">
            <summary>
            Occurs when the auto-generated columns are being created.
            </summary>
            <remarks>
            You can change the auto-generated column by setting the property <see cref="P:C1.Silverlight.DataGrid.DataGridAutoGeneratingColumnEventArgs.Column"/>.
            You can cancel an auto-generated column by setting the property <see cref="P:C1.Silverlight.DataGrid.DataGridAutoGeneratingColumnEventArgs.Cancel"/> to true, 
            in this case there will not be column for this property.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.AutoGeneratedColumns">
            <summary>
            Occurs after all the auto-generated columns are created.
            </summary>
            <remarks>
            You can use this event to reorder the auto-generated columns by setting the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.DisplayIndex"/> of the columns.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.MergingCells">
            <summary>
            Occurs after the measuring the cells, so that the user can combine adjacent cells.
            In order to merge the cells you should call the method Merge 
            of the <see cref="T:C1.Silverlight.DataGrid.DataGridMergingCellsEventArgs"/> passed in.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.KeyDown">
            <summary>
            Occurs when a keyboard key is pressed while the <see cref="T:System.Windows.UIElement"/> has focus.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.CreatingRow">
            <summary>
            Occurs when a row is being created in the model, so you can 
            override the creation returning a different row type.
            </summary>
            <remarks>
            Typically used to inject custom rows like SummaryRow, TemplateRow, etc
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.LoadingRow">
            <summary>
            Occurs when a data item is being loaded in the model 
            This might happen both by bringing the row into view or requesting the row programmatically.
            </summary>
            <remarks>
            Typically used to initialize properties for a particular row.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.LoadedRowPresenter">
            <summary>
            Occurs after the visual element of the row is added in the visual tree 
            and is ready for interaction.
            </summary>
            <remarks>
            Typically used to set visual properties to the row visual element.
            Please note you might need to unset the visual properties in the 
            <see cref="E:C1.Silverlight.DataGrid.C1DataGrid.UnloadedRowPresenter"/> event.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.LoadedCellPresenter">
            <summary>
            Occurs after the visual element of the cell is added to the visual tree
            and is ready for interaction.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.LoadedRowHeaderPresenter">
            <summary>
            Occurs after the visual element of the row header is added to the visual tree
            and is ready for interaction.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.LoadedColumnHeaderPresenter">
            <summary>
            Occurs after the column header presenter is added in the visual tree 
            and is ready for interaction.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.LoadedRowDetailsPresenter">
            <summary>
            Occurs after the visual element of the row details is added in the visual tree 
            and is ready for interaction.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.UnloadingRow">
            <summary>
            Occurs after a row is unloaded from the model.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.UnloadedRowPresenter">
            <summary>
            Occurs before the visual element of a row is removed from the visual tree.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.UnloadedCellPresenter">
            <summary>
            Occurs before the visual element of a cell is removed from the visual tree.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.UnloadedRowHeaderPresenter">
            <summary>
            Occurs before the visual element of a row header is removed from the visual tree.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.UnloadedColumnHeaderPresenter">
            <summary>
            Occurs before the visual element of a column header is removed from the visual tree.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.UnloadedRowDetailsPresenter">
            <summary>
            Occurs before the visual element of a row details is removed from the visual tree.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.BeginningEdit">
            <summary>
            Occurs before a cell begins to be edited.
            </summary>
            <remarks>
            This event typically occurs when the user press F2 over a cell or click a cell or a row that already contains the current cell.
            You can cancel the event setting <see cref="P:C1.Silverlight.DataGrid.DataGridBeginningEditEventArgs.Cancel"/> to true.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.BeganEdit">
            <summary>
            Occurs after a cell began to be edited.
            </summary>
            <remarks>
            This event typically occurs when the user press F2 over a cell or click a cell or a row that already contains the current cell.
            This event can be used to modify the editing control.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.CommittingEdit">
            <summary>
            Occurs before a cell change is committed.
            </summary>
            <remarks>
            This event typically occurs when the user press enter or tab in an editing cell.
            You can cancel the event setting <see cref="P:C1.Silverlight.DataGrid.DataGridEndingEditEventArgs.Cancel"/> to true.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.CommittedEdit">
            <summary>
            Occurs after a cell editing has been committed.
            </summary>
            <remarks>
            This event typically occurs when the user press enter or tab in an editing cell.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.CancelingEdit">
            <summary>
            Occurs before a cell change is canceled.
            </summary>
            <remarks>
            This event typically occurs when the user press escape in an editing cell.
            You can cancel the event setting <see cref="P:C1.Silverlight.DataGrid.DataGridEndingEditEventArgs.Cancel"/> to true.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.BeginningRowEdit">
            <summary>
            Occurs before a row begins to be edited.
            A row begins to be edited when one cell of the row begins editing 
            and there was not previously editing cells in the row.
            </summary>
            <remarks>
            You can cancel the event setting <see cref="P:C1.Silverlight.DataGrid.DataGridEditingRowEventArgs.Cancel"/> to true.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.CommittingRowEdit">
            <summary>
            Occurs before a row editing is committed.
            A row editing is committed when a cell of the row has been previously edited 
            and the current cell is changed to a cell which does not belong to the edited row.
            </summary>
            <remarks>
            You can cancel the event setting <see cref="P:C1.Silverlight.DataGrid.DataGridEditingRowEventArgs.Cancel"/> to true.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.CommittedRowEdit">
            <summary>
            Occurs after a row editing has been committed.
            A row editing is committed when a cell of the row has been previously edited 
            and the current cell is changed to a cell which does not belong to the edited row.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.CancelingRowEdit">
            <summary>
            Occurs before a row editing is canceled.
            A row editing is cancelled when the user press escape. 
            Notice that whether escape is pressed on an editing cell the action will cancel the editing of the cell, 
            if escape is pressed again the changes in the whole row will be reverted.
            </summary>
            <remarks>
            You can cancel the event setting <see cref="P:C1.Silverlight.DataGrid.DataGridEditingRowEventArgs.Cancel"/> to true.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.SelectionChanged">
            <summary>
            Occurs when the SelectedItem or SelectedItems property value changes.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.SelectionChanging">
            <summary>
            Occurs before the selection changes.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.CurrentCellChanged">
            <summary>
            Occurs when a different cell becomes the current cell. 
            Typically this occurs when a user clicks a cell, but it can be set programmatically too 
            by setting <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CurrentRow"/> and <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CurrentColumn"/>.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.SortChanging">
            <summary>
            Occurs before the sorting state of <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> is changed.
            </summary>
            <remarks>
            Sorting state changes when user click in a column header or when the SortBy method is called.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.SortChanged">
            <summary>
            Occurs after the sorting state changed.
            </summary>
            <remarks>
            Sorting state changes when user click in a column header or when the SortBy method is called.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.FilterChanging">
            <summary>
            Occurs before the filter state of <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> is changed.
            </summary>
            <remarks>
            Filtering state changes when user manipulates the filter included in the column header or when the FilterBy method is called.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.FilterChanged">
            <summary>
            Occurs after the filtering state changed.
            </summary>
            <remarks>
            Filtering state changes when user manipulates the filter included in the column header or when the FilterBy method is called.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.GroupChanging">
            <summary>
            Occurs before the grouping state of the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> is changed.
            </summary>
            <remarks>
            Grouping state changes when user drag a column on the grouping panel or when the GroupBy method is called.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.GroupChanged">
            <summary>
            Occurs after the grouping state changed.
            </summary>
            <remarks>
            Grouping state changes when user drag a column on the grouping panel or when the GroupBy method is called.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.BeginningNewRow">
            <summary>
            Occurs when a new row begins to be edited.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.CommittingNewRow">
            <summary>
            Occurs before a new row is committed, allowing to cancel the action.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.CommittedNewRow">
            <summary>
            Occurs after a new row is committed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.CancelingNewRow">
            <summary>
            Occurs when a new row is canceled.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.DeletingRows">
            <summary>
            Occurs before a deletion of rows happens.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.RowsAdded">
            <summary>
            Occurs after new rows have been added to the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.RowsDeleted">
            <summary>
            Occurs after rows have been deleted from the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.ColumnHeaderDragStarted">
            <summary>
            Occurs when a column header drag operation started.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.ColumnHeaderDragDelta">
            <summary>
            Occurs when a column header is being dragged.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.ColumnHeaderDragCompleted">
            <summary>
            Occurs when a column header drag operation finish.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.ColumnReordering">
            <summary>
            Occurs before a move column operation is committed. 
            The move operation can be started by the user when it drops a column header 
            in a new position or when <see cref="M:C1.Silverlight.DataGrid.C1DataGrid.MoveColumn(C1.Silverlight.DataGrid.DataGridColumn,System.Int32)"/> method is called.
            </summary>
            <remarks>
            The move operation can be cancelled by setting <see cref="P:C1.Silverlight.DataGrid.DataGridColumnReorderingEventArgs.Cancel"/> property of the event arguments to true;
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.ColumnReordered">
            <summary>
            Occurs after a move column operation is committed.
            The move operation can be started by the user when it drops a column header 
            in a new position or when <see cref="M:C1.Silverlight.DataGrid.C1DataGrid.MoveColumn(C1.Silverlight.DataGrid.DataGridColumn,System.Int32)"/> method is called.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.ColumnResizing">
            <summary>
            Occurs while the user is resizing a column by dragging the border on the right of the column header.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.ColumnResized">
            <summary>
            Occurs when the user release the mouse after dragging the border on the right of the column header.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.RowDetailsVisibilityChanged">
            <summary>
            Occurs when the visibility of a row details changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.RowResizing">
            <summary>
            Occurs while the user is resizing a row by dragging the border at the bottom of the row header.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.RowResized">
            <summary>
            Occurs when the user release the mouse after dragging the border at the bottom of the column header.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.FilterLoading">
            <summary>
            Occurs before the filter of a column is loaded allowing to change the filter that will be displayed to the user.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.FilterOpened">
            <summary>
            Occurs when the filter of a column is opened by clicking the button on the right side of the column header.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.DataSourceView">
            <summary>
            Gets the data source view currently used by the C1DataGrid.
            </summary>
            <value>The data source view.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.Columns">
            <summary>
            Gets the collection of columns currently present in the grid.
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.Focused">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> is focused.
            </summary>
            <value><c>true</c> if the grid is focused; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.Item(System.Int32,System.Int32)">
            <summary>
            Gets the <see cref="T:C1.Silverlight.DataGrid.DataGridCell"/> with the specified row and column index.
            </summary>
            <value>The cell in the specified row and column</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.Item(C1.Silverlight.DataGrid.DataGridRow,C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Gets the <see cref="T:C1.Silverlight.DataGrid.DataGridCell"/> with the specified row and column.
            </summary>
            <value>The cell in the specified row and column</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.Rows">
            <summary>
            Gets the collection containing all the rows in the grid.
            </summary>
            <value>The rows in the grid.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.TopRows">
            <summary>
            Gets the collection of rows that are placed on top of the item rows.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.BottomRows">
            <summary>
            Gets the collection of rows that are placed at the bottom of the item rows.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.CurrentCell">
            <summary>
            Gets or sets the cell that contains the focus inside the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>. 
            This cell can be changed by the user when navigating with the keyboard or mouse interaction.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.SelectedItems">
            <summary>
            Gets the collection of selected items.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.Selection">
            <summary>
            Gets the selection object which allows to query the current selection as well as modifying it.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.GroupedColumns">
            <summary>
            Gets the collection of columns whose <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.GroupState"/> is different from null.
            This group of columns determine the grouping state of the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
            <remarks>
            The order of the columns in the array is the order the groups are created.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.FilteredColumns">
            <summary>
            Gets the collection of columns whose <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.FilterState"/> is different from null.
            This group of columns determine the filtering state of the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
            <remarks>
            Use <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.FiltersCombination"/> property in order to change the logical way the filter predicates are joined.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.SortedColumns">
            <summary>
            Gets the collection of columns whose <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.SortState"/> is different from null.
            This group of columns determine the sorting state of the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
            <remarks>
            The order of the columns in the array is the order the data is sorted.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.Viewport">
            <summary>
            Gets useful information about the scrolling state as well as current top/left or bottom/right shown cells.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.IsFilteringRowsAllowed">
            <summary>
            Gets a value indicating whether it is possible to filter rows 
            according to the inner <see cref="T:System.ComponentModel.ICollectionView"/> and <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> configuration.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.IsSortingRowsAllowed">
            <summary>
            Gets a value indicating whether it is possible to sort rows 
            according to the inner <see cref="T:System.ComponentModel.ICollectionView"/> and <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> configuration.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.IsGroupingRowsAllowed">
            <summary>
            Gets a value indicating whether it is possible to group rows 
            according to the inner <see cref="T:System.ComponentModel.ICollectionView"/> and <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> configuration.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.IsDetailsTogglingAllowed">
            <summary>
            Gets a value indicating whether it is possible to toggle row details 
            according to the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> configuration.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.IsAddingNewRowsAllowed">
            <summary>
            Gets a value indicating whether it is possible to add new rows 
            according to the inner <see cref="T:System.ComponentModel.ICollectionView"/> and <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> configuration.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.IsRemovingRowsAllowed">
            <summary>
            Gets a value indicating whether it is possible to remove rows 
            according to the inner <see cref="T:System.ComponentModel.ICollectionView"/> and <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> configuration.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.IsEditingRowsAllowed">
            <summary>
            Gets a value indicating whether it is possible to edit rows 
            according to the inner <see cref="T:System.ComponentModel.ICollectionView"/> and <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> configuration.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.SelectionDragStarted">
            <summary>
            Occurs the first time the mouse is dragged in the area containing the rows.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.SelectionDragDelta">
            <summary>
            Occurs when the mouse is being dragged in the area containing the rows.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.SelectionDragCompleted">
            <summary>
            Occurs when the mouse drag operation in the area containing the rows is completed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.AutoGenerateColumns">
            <summary>
            Gets or sets a value indicating whether columns are created automatically when the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ItemsSource"/> property is set.
            </summary>
            <remarks>
            The event <see cref="E:C1.Silverlight.DataGrid.C1DataGrid.AutoGeneratingColumn"/> will be raised for each column allowing to change or replace the generated column. After all columns are created the event <see cref="E:C1.Silverlight.DataGrid.C1DataGrid.AutoGeneratedColumns"/> will be raised.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.ItemsSource">
            <summary>
            Gets or sets a collection that is used to generate the content of the control.
            </summary>
            <remarks>
            If the collection passed in is a <see cref="T:System.ComponentModel.ICollectionView"/>, the group, filter, and sort operations will be delegated to it.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserReorderColumns">
            <summary>
            Gets or sets a value indicating whether the user is able to reorder columns by dragging the corresponding column header.
            </summary>
            <remarks>
            When the column header is being dragged an indicator will appear to determine the position where the column will be moved to. Dragging a column close to the viewport border will cause the data grid to auto-scroll.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserResizeColumns">
            <summary>
            Gets or sets a value indicating whether the user is able to resize a column by dragging the right border of the column header.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserResizeRows">
            <summary>
            Gets or sets a value indicating whether the user is able to resize a row by dragging the bottom border of the row header.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserFilter">
            <summary>
            Gets or sets a value indicating whether the user is able to filter a column by opening the corresponding filter popup in the column header.
            </summary>
            <remarks>
            If set to false, no filter will be shown, otherwise will depend on the specific column filter availability.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserSort">
            <summary>
            Gets or sets a value indicating whether the user is able to sort the data by clicking the column header.
            </summary>
            <remarks>
            <para>If set to false, the user will not be able to sort the data, otherwise it will depend on the clicked column settings.</para>
            <para>The first time the user click the column header the data will be sorted in ascending order, and the second time in descending order. if the Ctrl key is pressed while the user clicks the column header the sorting state of the others column will be preserved, otherwise the current column sort criteria will override the previous sorting state.</para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserGroup">
            <summary>
            Gets or sets a value indicating whether the user is able to change groups by dragging column headers over the grouping area, removing groups pressing the remove button of each grouped column element inside the grouping area, or change the order of the groups clicking the grouped column element itself.
            </summary>
            <remarks>
            If you want to show the grouping panel but you want to prevent the user from changing the groups, set <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ShowGroupingPanel"/> to true and set this property to false.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserAddRows">
            <summary>
            Gets or sets a value indicating whether the user is able to enter new rows by entering the data in each cell of the "new row" typically located at the bottom of the data grid.
            </summary>
            <remarks>
            <para>If set to false the "new row" element will not appear, therefore the user will not be able to enter new rows.</para>
            <para>Notice the availability of this feature is conditioned to the fact that the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ItemsSource"/> set supports adding new items.</para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserEditRows">
            <summary>
            Gets or sets a value indicating whether the user is able to edit the data of the cells.
            </summary>
            <remarks>
            If you want to prevent users from removing rows as well you can use <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.IsReadOnly"/> instead.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserRemoveRows">
            <summary>
            Gets or sets a value indicating whether the user is able to remove rows by pressing Del key.
            </summary>
            <remarks>
            <para>If you want to prevent users from adding and editing rows as well you can use <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.IsReadOnly"/> instead.</para>
            <para>Notice the availability of this feature is conditioned to the fact that the <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ItemsSource"/> set supports removing items.</para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserToggleDetails">
            <summary>
            Gets or sets a value indicating whether the user is able to change the visibility of the row details by clicking a toggle button located in the top right corner of the corresponding row header.
            </summary>
            <remarks>
            <para>Notice <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.RowDetailsTemplate"/> must be set in order to display the toggle button.</para>
            <para>Optionally the property <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.RowDetailsVisibilityMode"/> can be set if the requirements fits one of the built-in modes.</para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserFreezeColumns">
            <summary>
            Gets or sets a value indicating which of the freezing separators (currently only Left separator is supported) the user is able to drag in order to change the amount of frozen columns or rows.
            </summary>
            <remarks>
            Notice <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ShowVerticalFreezingSeparator"/> must be set to true so that the separator is visible.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether the user is able to add remove or modify info from the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.HeadersVisibility">
            <summary>
            Gets or sets a value that indicates whether column or row headers are displayed or not.
            </summary>
            <remarks>
            Default value is All, Both column and row headers will be shown.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.GridLinesVisibility">
            <summary>
            Gets or sets a value that indicates whether the horizontal or vertical grid lines among cells are displayed or not.
            </summary>
            <remarks>
            Default value is Vertical
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.NewRowVisibility">
            <summary>
            Gets or sets a value that indicates where the new row will be located. If Top is set the new row will be located on top of the data rows, if Bottom is set will be located at the bottom of the data rows.
            </summary>
            <remarks>
            This property can be used along with <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.FrozenTopRowsCount"/> or <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.FrozenBottomRowsCount"/> to make the row always visible when the user scrolls the data.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.ShowFluidMouseOver">
            <summary>
            When set to true, hides the mouse over of the rows provides a fluid mouse effect over the body of the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>. Uses the FluidMouseOverBrush and the RowHeight.
            </summary>
            <remarks>
            Recommended use of this property is for not editable <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> with fixed RowHeight, in other cases the selection might be confusing for the end user.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.ShowValidationIndicators">
            <summary>
            Gets or sets  a value indicating whether the validation icon will appear inside the corresponding row header as well as the background of the row with errors is turned to red.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.ShowVerticalFreezingSeparator">
            <summary>
            Gets or sets a value indicating which of the freezing separators (currently only Left separator is supported) is visible.
            </summary>
            <remarks>
            <para>If you want to prevent the user from changing the amount of frozen columns you should set the property <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserFreezeColumns"/> to None.</para>
            <para>Additionally you can change the width of the separator by changing the property <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.VerticalFreezingSeparatorWidth"/>.</para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.ShowGroupingPanel">
            <summary>
            Gets or sets a value indicating whether the panel above the cells area used to group by a column is displayed.
            </summary>
            <remarks>
            If you want to show the grouping panel but you want to prevent the user from changing the groups you should set the property <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserGroup"/> to false.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.VerticalScrollBarVisibility">
            <summary>
            Gets or sets a value that indicates how the vertical scroll bar is displayed.
            </summary>
            <remarks>
            Default value is Auto.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.HorizontalScrollBarVisibility">
            <summary>
            Gets or sets a value that indicates how the horizontal scroll bar is displayed.
            </summary>
            <remarks>
            Default value is Auto.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.ColumnWidth">
            <summary>
            Gets or sets the column width for all the columns in the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
            <remarks>
            <see cref="T:C1.Silverlight.DataGrid.DataGridLength"/> supports four different modes
            <list type="table">
            <listheader><term>Type</term><description>Description</description></listheader>
            <item><term>Pixel</term><description>The width of the column will be the same as the amount of pixels specified.</description></item>
            <item><term>Auto</term><description>The width of the column will be determined by the content of the cells in the columns.</description></item>
            <item><term>Star</term><description>The viewport space will be divided among the Star and AutoStar columns.</description></item>
            <item><term>AutoStar</term><description>Each column is assured to have enough space to show its content and when extra space is available it is divided among the Star and AutoStar columns.</description></item>
            </list>
            <para>If a column has the property <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.Width"/> set, the layout will take the value set in the column over the one in the data grid.</para>
            <para>Notice <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.MinColumnWidth"/> and <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.MaxColumnWidth"/> has precedence over this property, that mean that if you set ColumnWidth=100 and MinColumnWidth=110 the actual value will be 110.</para>
            <para>If you want to know the actual width in pixels of an auto-width column you should query <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.ActualWidth"/>.</para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.MinColumnWidth">
            <summary>
            Gets or sets the minimum column width for all the columns in the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
            <remarks>
            If a column has the property <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.MinWidth"/> set, the layout will take the value set in the column over the one in the data grid.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.MaxColumnWidth">
            <summary>
            Gets or sets the maximum column width for all the columns in the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
            <remarks>
            If a column has the property <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.MaxWidth"/> set, the layout will take the value set in the column over the one in the data grid.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.IndentWidth">
            <summary>
            Gets or sets the width in pixels of each indentation level visible when the data is grouped.
            </summary>
            <remarks>
            The width of the leading column (that is the empty space between the row headers and the first column, only visible when the data grid is grouped) is determined by default as (IndentWidth * number of grouping levels). If you want to change that value you can set  <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.LeadingColumnWidth"/>.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.LeadingColumnWidth">
            <summary>
            Gets or sets the column width for the leading column (that is the empty space between the row headers and the first column, only visible when the data grid is grouped).
            </summary>
            <remarks>
            If the value is set to Auto, the width of the leading column will be calculated as (IndentWidth * number of group levels).
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.LeadingColumnWidthChanged">
            <summary> 
            Event raised when the <see cref="P:LeadingColumnWidth"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.ColumnHeaderHeight">
            <summary>
            Gets or sets the height in pixels of all the column headers.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.RowHeight">
            <summary>
            Gets or sets the row height for all the data rows in the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
            <remarks>
            <para>Only Pixel and Auto modes are allowed. If the value to be set is of type pixel, the amount of pixels must be specified, If the value is of type Auto, the height of the row will be determined by the content of the cells of each row.</para>
            <para>If a row has the property <see cref="P:C1.Silverlight.DataGrid.DataGridRow.Height"/> set, the layout will take the value set in the row over the one in the data grid.</para>
            <para>Notice <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.MinRowHeight"/> and <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.MaxRowHeight"/> has precedence over this property, that mean that if you set RowHeight=100 and MinRowHeight=110 the actual value will be 110.</para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.GroupRowHeight">
            <summary>
            Gets or sets the row height for all rows of type group in the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
            <remarks>
            See <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.RowHeight"/> for more details.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.MinRowHeight">
            <summary>
            Gets or sets the minimum row height for all the rows in the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
            <remarks>
            If a row has the property <see cref="P:C1.Silverlight.DataGrid.DataGridRow.MinHeight"/> set, the layout will take the value set in the row over the one in the data grid.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.MaxRowHeight">
            <summary>
            Gets or sets the maximum row height for all the rows in the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
            <remarks>
            If a row has the property <see cref="P:C1.Silverlight.DataGrid.DataGridRow.MaxHeight"/> set, the layout will take the value set in the row over the one in the data grid.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.RowHeaderWidth">
            <summary>
            Gets or sets the width in pixels of all the row headers.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.VerticalFreezingSeparatorWidth">
            <summary>
            Gets or sets the width in pixels of the vertical freezing separator.
            </summary>
            <remarks>
            Default value is 5 pixels.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.FrozenColumnCount">
            <summary>
            Gets or sets the number of columns that remain docked to the left side of the viewport when the user scrolls horizontally.
            </summary>
            <remarks>
            The user can change the number of frozen column by dragging the vertical freezing separator, to make this the properties <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserFreezeColumns"/> and <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ShowVerticalFreezingSeparator"/> must be set to Left.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.FrozenColumnCountChanged">
            <summary> 
            Event raised when the <see cref="P:FrozenColumnCount"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.FrozenTopRowsCount">
            <summary>
            Gets or sets the number of rows that remain docked to the top of the viewport when the user scrolls vertically.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.FrozenTopRowsCountChanged">
            <summary> 
            Event raised when the <see cref="P:FrozenTopRowsCount"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.FrozenBottomRowsCount">
            <summary>
            Gets or sets the number of rows that remain docked to the bottom of the viewport when the user scrolls vertically.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.FrozenBottomRowsCountChanged">
            <summary> 
            Event raised when the <see cref="P:FrozenBottomRowsCount"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.SelectionMode">
            <summary>
            Gets or sets the selection mode of the grid. See <see cref="T:C1.Silverlight.DataGrid.DataGridSelectionMode"/> enumeration to get a description of each mode.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.SelectedIndex">
            <summary>
            Gets or sets the index of the selected row.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.SelectedItem">
            <summary>
            Gets or sets the data item corresponding to the selected row.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.RowDetailsTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used to present the details part of a row.
            </summary>
            <remarks>
            See <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.RowDetailsVisibilityMode"/> to set the way the details of each row are shown, or <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.CanUserToggleDetails"/> to set whether the toggle button in the row header is visible or not.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.RowDetailsVisibilityMode">
            <summary>
            The details part can be automatically opened when the row is selected, can be always visible, or can be always collapsed.
            </summary>
            <remarks>
            The details can be expanded by code using the property DetailsVisibility in the <see cref="T:C1.Silverlight.DataGrid.DataGridRow"/>, or manually by pressing the toggle button located inside the row headers. Notice the CanUserToggleDetails must be set to true.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.IsLoading">
            <summary>
            Gets or sets a value indicating whether a visual indicator that cover all the data grid template is shown, demonstrating that the data is being loaded.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.IsLoadingChanged">
            <summary> 
            Event raised when the <see cref="P:IsLoading"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.BodyRect">
            <summary>
            Gets the rectangle that represent the area where the rows of the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> are rendered. Useful to show adorners on top of the body.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.CurrentColumn">
            <summary>
            Gets or sets the column that contains the focused cell. This cell is changed automatically as the user navigate among cells with the keyboard or because the mouse interaction.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.CurrentRow">
            <summary>
            Gets or sets the row that contains the focused cell. This cell is changed automatically as the user navigate among cells with the keyboard or because the mouse interaction.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.ColumnHeaderClickAction">
            <summary>
            Gets or sets which action will be taken when user click a column header. By default the click action will execute a sorting operation, but this behavior can be changed to allow a user to select a whole column by pressing the corresponding column header. Typically used in Excel like scenarios.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.VerticalScrollStep">
            <summary>
            Gets a value indicating how the vertical scroll behaves when user press the up/down buttons of the vertical scroll bar or when the user uses the mouse wheel. This property is useful when the detail of the rows is too big, typically used in hierarchical scenarios.
            </summary>
            <remarks>
            <list type="table">
            <listheader><term>Mode</term><description>Description</description></listheader>
            <item><term>Discrete</term><description>Always a row will be scrolled independently the size of the row.</description></item>
            <item><term>Pixel</term><description>Each time the mouse wheel event is raised an specified number of pixels is scrolled.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.ScrollPreviewRowTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used as preview of the scrolling row, when using <see cref="F:C1.Silverlight.DataGrid.DataGridScrollMode.Deferred"/> as <see cref="P:C1.Silverlight.DataGrid.C1DataGrid.ScrollMode"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.ScrollMode">
            <summary>
            Gets or sets the scroll behavior of the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
            <remarks>
            <list type="table">
            <listheader><term>Mode</term><description>Description</description></listheader>
            <item><term>RealTime</term><description>The page is updated every time the ThumbTrack event of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> is fired.</description></item>
            <item><term>Deferred</term><description>The page is updated once the EndScroll event of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> is fired.</description></item>
            </list>
            Default value is RealTime.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.FiltersCombination">
            <summary>
            Gets or sets the logical way the filters are combined among the columns.
            </summary>
            <remarks>
            By default when the user filters the data by setting the filter in more than one column, the logical operator applied among filters is "And", that means that the data displayed must obey the criteria set in both filters. This can be changed to "Or" in order to allow showing data that obey at least one filter criteria.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.RowStyle">
            <summary>
            Gets or sets the style that is used when rendering rows.
            </summary>
            <remarks>
            <see cref="P:System.Windows.Style.TargetType"/> of the <see cref="T:System.Windows.Style"/> must be set to <see cref="T:C1.Silverlight.DataGrid.DataGridRowPresenter"/>.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.NewRowStyle">
            <summary>
            Gets or sets the style that is used when rendering the row for entering new items.
            </summary>
            <remarks>
            <see cref="P:System.Windows.Style.TargetType"/> of the <see cref="T:System.Windows.Style"/> must be set to <see cref="T:C1.Silverlight.DataGrid.DataGridNewRowPresenter"/>.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.RowHeaderStyle">
            <summary>
            Gets or sets the style that is used when rendering the row headers.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.NewRowHeaderStyle">
            <summary>
            Gets or sets the style that is used when rendering the row header for entering new items.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.FocusStyle">
            <summary>
            Gets or sets the style of the <see cref="T:System.Windows.Shapes.Rectangle"/> used to show the focus on the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
            <remarks>
            <see cref="P:System.Windows.Style.TargetType"/> of the <see cref="T:System.Windows.Style"/> must be set to <see cref="T:System.Windows.Shapes.Rectangle"/>.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.CellStyle">
            <summary>
            Gets or sets the style that is used when rendering the cells.
            </summary>
            <remarks>
            <see cref="P:System.Windows.Style.TargetType"/> of the <see cref="T:System.Windows.Style"/> must be set to <see cref="T:C1.Silverlight.DataGrid.DataGridCellPresenter"/>.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.ColumnHeaderStyle">
            <summary>
            Gets or sets the style that is used when rendering the column headers.
            </summary>
            <remarks>
            <see cref="P:System.Windows.Style.TargetType"/> of the <see cref="T:System.Windows.Style"/> must be set to <see cref="T:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter"/>.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.GroupColumnHeaderStyle">
            <summary>
            Gets or sets the style that is used when rendering the column headers in the group panel.
            </summary>
            <remarks>
            <see cref="P:System.Windows.Style.TargetType"/> of the <see cref="T:System.Windows.Style"/> must be set to <see cref="T:C1.Silverlight.DataGrid.DataGridGroupColumnHeaderPresenter"/>.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.DragSourceColumnStyle">
            <summary>
            Gets or sets the style applied to a <see cref="T:System.Windows.Controls.ContentControl"/> that is placed over the source column when it starts the Drag and Drop operation.
            </summary>
            <remarks>
            <see cref="P:System.Windows.Style.TargetType"/> of the <see cref="T:System.Windows.Style"/> must be set to <see cref="T:System.Windows.Controls.ContentControl"/>.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.DropIndicatorStyle">
            <summary>
            Gets or sets the style applied to a <see cref="T:System.Windows.Controls.ContentControl"/> element used to indicate the position where the dragged column will be dropped.
            </summary>
            <remarks>
            <see cref="P:System.Windows.Style.TargetType"/> of the <see cref="T:System.Windows.Style"/> must be set to <see cref="T:System.Windows.Controls.ContentControl"/>.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.DragOverColumnStyle">
            <summary>
            Gets or sets the style applied to a <see cref="T:System.Windows.Controls.ContentControl"/> element used to show the dragged column while it moves.
            </summary>
            <remarks>
            <see cref="P:System.Windows.Style.TargetType"/> of the <see cref="T:System.Windows.Style"/> must be set to <see cref="T:System.Windows.Controls.ContentControl"/>.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.FilterStyle">
            <summary>
            Gets or sets the Style used for the Filter control container.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.GroupRowStyle">
            <summary>
            Gets or sets the style of the grouping row.
            </summary>
            <remarks>
            <see cref="P:System.Windows.Style.TargetType"/> of the <see cref="T:System.Windows.Style"/> must be set to <see cref="T:C1.Silverlight.DataGrid.DataGridGroupRowPresenter"/>.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.GroupRowHeaderStyle">
            <summary>
            Gets or sets the style of the header of the group row.
            </summary>
            <remarks>
            <see cref="P:System.Windows.Style.TargetType"/> of the <see cref="T:System.Windows.Style"/> must be set to <see cref="T:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter"/>.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.VerticalFreezingSeparatorStyle">
            <summary>
            Gets or sets the style of the separator between fixed and scrollable columns.
            </summary>
            <remarks>
            <see cref="P:System.Windows.Style.TargetType"/> of the <see cref="T:System.Windows.Style"/> must be set to <see cref="T:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter"/>.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.ScrollBarStyle">
            <summary>
            Gets or sets the style that will be applied to the scrollbars of the data grid.
            </summary>
            <remarks>
            <see cref="P:System.Windows.Style.TargetType"/> of the <see cref="T:System.Windows.Style"/> must be set to <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.RowBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that is used to paint row backgrounds.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.RowForeground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that is used to paint row foregrounds.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.AlternatingRowBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that is used to paint the background of odd-numbered rows.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.AlternatingRowForeground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that is used to paint the foreground of odd-numbered rows.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.HorizontalGridLinesBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to display the horizontal grid lines.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.VerticalGridLinesBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to display the vertical grid lines.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.HeaderBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint the background of the headers of the datagrid besides grouping rows, freezing separator, scrollbars and filters.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.HeaderForeground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the foreground of the headers of the datagrid besides grouping rows, freezing separator, scrollbars and filters.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.GroupingPanelBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that is used to paint the background of the grouping panel that is on top of the datagrid.
            </summary>
            <remarks>
            ShowGroupingPanel or CanUserGroup must be true in order that the grouping panel is visible.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.GroupingPanelForeground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that is used to paint the foreground of the grouping panel that is on top of the datagrid.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.GroupingPanelStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> that is set to the grouping panel that is on top of the datagrid.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.IsMouseOver">
            <summary>
            Returns true if the mouse is over the control.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1DataGrid.IsMouseOverChanged">
            <summary> 
            Event raised when the <see cref="P:IsMouseOver"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.ForceMouseOver">
            <summary>
            Set to true to force the mouse over visual state.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.MouseOverBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it has the mouse over.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.PressedBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint a button when it is pressed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.SelectedBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it is selected.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.ValidationBackground">
            <summary>
            Gets or sets the brush used to paint the background of the validation elements.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1DataGrid.ValidationForeground">
            <summary>
            Gets or sets the brush used to paint the foreground of the validation elements.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridHeadersVisibility">
            <summary>
            Determines whether the row/column headers are shown or not.
            </summary> 
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridHeadersVisibility.All">
            <summary> 
            Show Row, Column, and Corner Headers 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridHeadersVisibility.Column">
            <summary>
            Show only Column Headers with top-right corner Header 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridHeadersVisibility.Row">
            <summary> 
            Show only Row Headers with bottom-left corner
            </summary> 
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridHeadersVisibility.None">
            <summary> 
            Don’t show any Headers
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridGridLinesVisibility">
            <summary>
            Specifies constants that define which grid lines separating DataGrid inner cells are shown.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridGridLinesVisibility.All">
            <summary>
            Both horizontal and vertical grid lines are shown.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridGridLinesVisibility.Horizontal">
            <summary>
            Only horizontal grid lines, which separate rows, are shown.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridGridLinesVisibility.Vertical">
            <summary>
            Only vertical grid lines, which separate columns, are shown.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridGridLinesVisibility.None">
            <summary>
            No grid lines are shown.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridNewRowVisibility">
            <summary>
            Determines where the new row will be placed.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridNewRowVisibility.Top">
            <summary>
            The new row will be placed on top.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridNewRowVisibility.Bottom">
            <summary>
            The new row will be placed at the bottom.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridRowDetailsVisibilityMode">
            <summary>
            Determines the visibility mode of the row details.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowDetailsVisibilityMode.VisibleWhenSelected">
            <summary>
            The details will become visible when the user select the row
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowDetailsVisibilityMode.Visible">
            <summary>
            The details will be visible at the beginning.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowDetailsVisibilityMode.Collapsed">
            <summary>
            The details will be collapsed at the beginning.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridColumnHeaderClickAction">
            <summary>
            Determines the action will be raised when user click in a column header.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumnHeaderClickAction.Sort">
            <summary>
            Sort when user click in a column header.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumnHeaderClickAction.Select">
            <summary>
            Select when user click in a column header.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridColumnFreezing">
            <summary>
            Determines all possible freezing states of the columns.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumnFreezing.None">
            <summary>
            Any freezing is specified.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumnFreezing.Left">
            <summary>
            Only applies to the left freezing.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataConnection.ToC1SortDescriptions">
            <summary>
            Transforms the sort representation used by MS's ICollectionView
            into the sort representation used by C1DataGrid.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataConnection.ToC1FilterDescriptions">
            <summary>
            Transforms the filter specification used by MS's ICollectionView
            into the filter specification used by C1DataGrid.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataConnection.ToMSSortDescriptions(C1.Silverlight.DataGrid.DataGridColumnValue{C1.Silverlight.DataGrid.DataGridSortDirection}[])">
            <summary>
            Transforms the sort specification used by C1DataGrid
            into the sort specification used by MS's ICollectionView.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataConnection.ToMSFilterDescriptions``1(C1.Silverlight.DataGrid.DataGridColumnValue{C1.Silverlight.DataGrid.DataGridFilterState}[])">
            <summary>
            Transforms the filter specification used by C1DataGrid
            into the filter specification used by MS's ICollectionView.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.GroupedField.PropertyName">
            <summary>
            Gets or sets the property name being used as the sorting criteria.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.GroupedField.GroupConverter">
            <summary>
            Gets or sets the group converter used to get the group the data.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.Data.ICollectionViewFilterExtension">
            <summary>
            The ICollectionViewFilterExtension contains the property used by the C1DataGrid
            to perform filtering. Users that need to customized filtering should implement
            this interface.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.ICollectionViewFilterExtension.C1FilterDescriptions">
            <summary>
            Gets or sets the filter descriptions. When setting the property the filter descriptions
            should be applied to the underlying data.
            </summary>
            <value>The c1 filter descriptions.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.Data.ICollectionViewSortExtension">
            <summary>
            The ICollectionViewFilterExtension contains the property used by the C1DataGrid
            to perform sorting. Users that need to customized sorting should implement
            this interface.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.ICollectionViewSortExtension.C1SortDescriptions">
            <summary>
            Gets or sets the sort descriptions. When setting the property the sort descriptions
            should be applied to the underlying data.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.Data.ICollectionViewGroupExtension">
            <summary>
            The ICollectionViewFilterExtension contains the property used by the C1DataGrid
            to perform grouping. Users that need to customized grouping should implement
            this interface.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.ICollectionViewGroupExtension.C1GroupDescriptions">
            <summary>
            Gets or sets the group descriptions. When setting the property the group descriptions
            should be applied to the underlying data.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.Data.BaseCollectionView">
            <summary>
            A basic implementation of the ICollectionView, IPagedCollectionView, IEditableCollectionView
            that can be used as base class and extended by the user who wants to implement one of the
            mentioned interfaces without creating the whole class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.Data.BaseCollectionView"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.Data.BaseCollectionView"/> class.
            </summary>
            <param name="collectionView">The collection view.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:C1.Silverlight.DataGrid.Data.BaseCollectionView"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.Contains(System.Object)">
            <summary>
            Indicates whether the specified item belongs to this collection view.
            </summary>
            <param name="item">The object to check.</param>
            <returns>
            true if the item belongs to this collection view; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.DeferRefresh">
            <summary>
            Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.
            </summary>
            <returns>
            The typical usage is to create a using scope with an implementation of this method and then include multiple view-changing calls within the scope. The implementation should delay automatic refresh until after the using scope exits.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.MoveCurrentTo(System.Object)">
            <summary>
            Sets the specified item in the view as the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/>.
            </summary>
            <param name="item">The item to set as the current item.</param>
            <returns>
            true if the resulting <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> is an item in the view; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.MoveCurrentToFirst">
            <summary>
            Sets the first item in the view as the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/>.
            </summary>
            <returns>
            true if the resulting <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> is an item in the view; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.MoveCurrentToLast">
            <summary>
            Sets the last item in the view as the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/>.
            </summary>
            <returns>
            true if the resulting <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> is an item in the view; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.MoveCurrentToNext">
            <summary>
            Sets the item after the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> in the view as the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/>.
            </summary>
            <returns>
            true if the resulting <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> is an item in the view; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.MoveCurrentToPosition(System.Int32)">
            <summary>
            Sets the item at the specified index to be the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> in the view.
            </summary>
            <param name="position">The index to set the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> to.</param>
            <returns>
            true if the resulting <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> is an item in the view; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.MoveCurrentToPrevious">
            <summary>
            Sets the item before the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> in the view to the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/>.
            </summary>
            <returns>
            true if the resulting <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> is an item in the view; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.Refresh">
            <summary>
            Recreates the view.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.MoveToFirstPage">
            <summary>
            Sets the first page as the current page.
            </summary>
            <returns>
            true if the operation was successful; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.MoveToLastPage">
            <summary>
            Sets the last page as the current page.
            </summary>
            <returns>
            true if the operation was successful; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.MoveToNextPage">
            <summary>
            Moves to the page after the current page.
            </summary>
            <returns>
            true if the operation was successful; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.MoveToPage(System.Int32)">
            <summary>
            Moves to the page at the specified index.
            </summary>
            <param name="pageIndex">The index of the page to move to.</param>
            <returns>
            true if the operation was successful; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.MoveToPreviousPage">
            <summary>
            Moves to the page before the current page.
            </summary>
            <returns>
            true if the operation was successful; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.AddNew">
            <summary>
            Adds a new item to the underlying collection.
            </summary>
            <returns>
            The new item that is added to the collection.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.CancelEdit">
            <summary>
            Ends the edit transaction and, if possible, restores the original value of the item.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.CancelNew">
            <summary>
            Ends the add transaction and discards the pending new item.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.CommitEdit">
            <summary>
            Ends the edit transaction and saves the pending changes.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.CommitNew">
            <summary>
            Ends the add transaction and saves the pending new item.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.EditItem(System.Object)">
            <summary>
            Begins an edit transaction on the specified item.
            </summary>
            <param name="item">The item to edit.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.Remove(System.Object)">
            <summary>
            Removes the specified item from the collection.
            </summary>
            <param name="item">The item to remove.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.Data.BaseCollectionView.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified position from the collection.
            </summary>
            <param name="index">Index of item to remove.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.PagedCollectionView">
            <summary>
            Gets the paged collection view associated to this class.
            </summary>
            <value>The paged collection view.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.EditableCollectionView">
            <summary>
            Gets the editable collection view associated to this class.
            </summary>
            <value>The editable collection view.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.CollectionView">
            <summary>
            Gets or sets the collection view associated to this class.
            </summary>
            <value>The collection view.</value>
        </member>
        <member name="E:C1.Silverlight.DataGrid.Data.BaseCollectionView.CurrentChanged">
            <summary>
            Occurs after the current item has been changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.Data.BaseCollectionView.CurrentChanging">
            <summary>
            Occurs before the current item changes.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.Data.BaseCollectionView.CollectionChanged">
            <summary>
            Occurs when the items list of the collection has changed, or the collection is reset.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.CanFilter">
            <summary>
            Gets a value that indicates whether this view supports filtering by way of the <see cref="P:System.ComponentModel.ICollectionView.Filter"/> property.
            </summary>
            <value></value>
            <returns>true if this view supports filtering; otherwise, false.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.CanGroup">
            <summary>
            Gets a value that indicates whether this view supports grouping by way of the <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions"/> property.
            </summary>
            <value></value>
            <returns>true if this view supports grouping; otherwise, false.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.CanSort">
            <summary>
            Gets a value that indicates whether this view supports sorting by way of the <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions"/> property.
            </summary>
            <value></value>
            <returns>true if this view supports sorting; otherwise, false.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.Culture">
            <summary>
            Gets or sets the cultural information for any operations of the view that may differ by culture, such as sorting.
            </summary>
            <value></value>
            <returns>The culture information to use during culture-sensitive operations. </returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.CurrentItem">
            <summary>
            Gets the current item in the view.
            </summary>
            <value></value>
            <returns>The current item in the view or null if there is no current item.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.CurrentPosition">
            <summary>
            Gets the ordinal position of the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> in the view.
            </summary>
            <value></value>
            <returns>The ordinal position of the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> in the view.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.Filter">
            <summary>
            Gets or sets a callback that is used to determine whether an item is appropriate for inclusion in the view.
            </summary>
            <value></value>
            <returns>A method that is used to determine whether an item is appropriate for inclusion in the view.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.GroupDescriptions">
            <summary>
            Gets a collection of <see cref="T:System.ComponentModel.GroupDescription"/> objects that describe how the items in the collection are grouped in the view.
            </summary>
            <value></value>
            <returns>A collection of objects that describe how the items in the collection are grouped in the view. </returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.Groups">
            <summary>
            Gets the top-level groups.
            </summary>
            <value></value>
            <returns>A read-only collection of the top-level groups or null if there are no groups.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.IsCurrentAfterLast">
            <summary>
            Gets a value that indicates whether the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> of the view is beyond the end of the collection.
            </summary>
            <value></value>
            <returns>true if the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> of the view is beyond the end of the collection; otherwise, false.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.IsCurrentBeforeFirst">
            <summary>
            Gets a value that indicates whether the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> of the view is beyond the start of the collection.
            </summary>
            <value></value>
            <returns>true if the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> of the view is beyond the start of the collection; otherwise, false.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.IsEmpty">
            <summary>
            Gets a value that indicates whether the view is empty.
            </summary>
            <value></value>
            <returns>true if the view is empty; otherwise, false.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.SortDescriptions">
            <summary>
            Gets a collection of <see cref="T:System.ComponentModel.SortDescription"/> instances that describe how the items in the collection are sorted in the view.
            </summary>
            <value></value>
            <returns>A collection of values that describe how the items in the collection are sorted in the view.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.SourceCollection">
            <summary>
            Gets the underlying collection.
            </summary>
            <value></value>
            <returns>The underlying collection.</returns>
        </member>
        <member name="E:C1.Silverlight.DataGrid.Data.BaseCollectionView.PageChanged">
            <summary>
            When implementing this interface, raise this event after the <see cref="P:System.ComponentModel.IPagedCollectionView.PageIndex"/> has changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.Data.BaseCollectionView.PageChanging">
            <summary>
            When implementing this interface, raise this event before changing the <see cref="P:System.ComponentModel.IPagedCollectionView.PageIndex"/>. The event handler can cancel this event.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.CanChangePage">
            <summary>
            Gets a value that indicates whether the <see cref="P:System.ComponentModel.IPagedCollectionView.PageIndex"/> value can change.
            </summary>
            <value></value>
            <returns>true if the <see cref="P:System.ComponentModel.IPagedCollectionView.PageIndex"/> value can change; otherwise, false.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.IsPageChanging">
            <summary>
            Gets a value that indicates whether the page index is changing.
            </summary>
            <value></value>
            <returns>true if the page index is changing; otherwise, false.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.ItemCount">
            <summary>
            Gets the number of known items in the view before paging is applied.
            </summary>
            <value></value>
            <returns>The number of known items in the view before paging is applied.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.PageIndex">
            <summary>
            Gets the zero-based index of the current page.
            </summary>
            <value></value>
            <returns>The zero-based index of the current page.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.PageSize">
            <summary>
            Gets or sets the number of items to display on a page.
            </summary>
            <value></value>
            <returns>The number of items to display on a page.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.TotalItemCount">
            <summary>
            Gets the total number of items in the view before paging is applied.
            </summary>
            <value></value>
            <returns>The total number of items in the view before paging is applied, or -1 if the total number is unknown.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.CanAddNew">
            <summary>
            Gets a value that indicates whether a new item can be added to the collection.
            </summary>
            <value></value>
            <returns>true if a new item can be added to the collection; otherwise, false.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.CanCancelEdit">
            <summary>
            Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.
            </summary>
            <value></value>
            <returns>true if the collection view can discard pending changes and restore the original values of an edited object; otherwise, false.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.CanRemove">
            <summary>
            Gets a value that indicates whether an item can be removed from the collection.
            </summary>
            <value></value>
            <returns>true if an item can be removed from the collection; otherwise, false.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.CurrentAddItem">
            <summary>
            Gets the item that is being added during the current add transaction.
            </summary>
            <value></value>
            <returns>The item that is being added if <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew"/> is true; otherwise, null.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.CurrentEditItem">
            <summary>
            Gets the item in the collection that is being edited.
            </summary>
            <value></value>
            <returns>The item that is being edited if <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem"/> is true; otherwise, null.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.IsAddingNew">
            <summary>
            Gets a value that indicates whether an add transaction is in progress.
            </summary>
            <value></value>
            <returns>true if an add transaction is in progress; otherwise, false.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.IsEditingItem">
            <summary>
            Gets a value that indicates whether an edit transaction is in progress.
            </summary>
            <value></value>
            <returns>true if an edit transaction is in progress; otherwise, false.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Data.BaseCollectionView.NewItemPlaceholderPosition">
            <summary>
            Gets or sets the position of the new item placeholder in the collection view.
            </summary>
            <value></value>
            <returns>An enumeration value that specifies the position of the new item placeholder in the collection view.</returns>
        </member>
        <member name="T:C1.Silverlight.DataGrid.C1VirtualList">
            <summary>
            Virtual list that allows to set the count of items but 
            the items will be loaded when the user request a non loaded item
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1VirtualList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.C1VirtualList"/> class.
            </summary>
            <param name="count">The count.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1VirtualList.Clear">
            <summary>
            Clears the items in the list and set count to 0.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1VirtualList.Insert(System.Int32,C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Inserts the specified item in the specified index, the count will be increased.
            </summary>
            <param name="newIndex">The index where the item will be placed.</param>
            <param name="newItem">The item to insert.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1VirtualList.Remove(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Removes the specified item and decrement the count.
            </summary>
            <param name="item">The item to remove.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1VirtualList.GetLoadedItems">
            <summary>
            Gets the loaded items.
            </summary>
            <returns>The loaded items.</returns>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1VirtualList.ItemRequested">
            <summary>
            Occurs when a non loaded item is requested.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1VirtualList.ItemLoaded">
            <summary>
            Occurs after an item is added to the list.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.C1VirtualList.CountChanged">
            <summary>
            Occurs when the count is changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1VirtualList.Count">
            <summary>
            Gets or sets the count of items.
            </summary>
            <value>The count of items.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.C1VirtualList.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridCheckBoxConverter">
            <summary>
            Converts Boolean values to string values according to the settings of the passed check box column.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCheckBoxConverter.#ctor(C1.Silverlight.DataGrid.DataGridCheckBoxColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridCheckBoxConverter"/> class.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCheckBoxConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCheckBoxConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:C1.Silverlight.DataGrid.ComboValueInfo">
            <summary>
            Value wrapper for <see cref="T:C1.Silverlight.DataGrid.DataGridComboBoxFilter"/>.
            The filter values are set in the <see cref="P:C1.Silverlight.DataGrid.DataGridComboBoxFilter.Values"/> property.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.ComboValueInfo.Show">
            <summary>
            Gets or sets a value indicating whether the filter value is shown.
            </summary>
            <value><c>true</c> if show; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.ComboValueInfo.Text">
            <summary>
            Gets or sets the text to be shown.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.ComboValueInfo.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="E:C1.Silverlight.DataGrid.ComboValueInfo.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridMultiValueFilter">
            <summary>
            filter which contains a list of items with a checkbox for each option.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.IDataGridFilter">
            <summary>
            Defines the interface required to support data filtering in the C1DataGrid.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.IDataGridFilter.Clear">
            <summary>
            Clears the current filter criteria and the values contained in the filter control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.IDataGridFilter.Create">
            <summary>
            Creates the filter based on the current filter criteria set by the user in the filter control.
            Raises the FilterChanged event if necessary.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.IDataGridFilter.Load(C1.Silverlight.DataGrid.DataGridFilterState)">
            <summary>
            Initializes the filter and filter control to the desired state.
            </summary>
            <param name="filterState">the desired state.</param>
        </member>
        <member name="E:C1.Silverlight.DataGrid.IDataGridFilter.FilterChanged">
            <summary>
            Occurs when the filter criteria changes.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.IDataGridFilterUnity">
            <summary>
            Interface used to implement a filter unity which will display a user interface 
            where users can change the filter criteria.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.IDataGridFilterUnity.Filter">
            <summary>
            Gets or sets the filter shown in the unity.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridMultiValueFilter.Clear">
            <summary>
            Clears the current filter criteria and the values contained in the filter control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridMultiValueFilter.Create">
            <summary>
            Creates the filter based on the current filter criteria set by the user in the filter control.
            Raises the FilterChanged event if necessary.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridMultiValueFilter.Load(C1.Silverlight.DataGrid.DataGridFilterState)">
            <summary>
            Initializes the filter and filter control to the desired state.
            </summary>
            <param name="filterState">the desired state.</param>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridMultiValueFilter.FilterProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridMultiValueFilter.Filter"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridMultiValueFilter.RaisePropertyChanged(System.String)">
            <summary>
            Raises the <see cref="e:PropertyChanged"/> event.
            </summary>
            <param name="propertyName">Name of the property that was changed.</param>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridMultiValueFilter.ValueMemberPathProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridMultiValueFilter.ValueMemberPath"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridMultiValueFilter.SetIsVirtualizing(System.Boolean)">
            <summary>
            Sets whether this control will use a virtualizing stack panel or not.
            </summary>
            <param name="isVirtualized">if set to <c>true</c> it will use a virtualizing stack panel.</param>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridMultiValueFilter.ItemStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridMultiValueFilter.ItemStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridMultiValueFilter.MouseOverBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridMultiValueFilter.MouseOverBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridMultiValueFilter.PressedBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridMultiValueFilter.PressedBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridMultiValueFilter.InputBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridMultiValueFilter.InputBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridMultiValueFilter.InputForegroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridMultiValueFilter.InputForeground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridMultiValueFilter.FocusBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridMultiValueFilter.FocusBrush"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridMultiValueFilter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridMultiValueFilter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridMultiValueFilter.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.DataGrid.DataGridMultiValueFilter"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridMultiValueFilter.FilterChanged">
            <summary>
            Occurs when the filter criteria changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridMultiValueFilter.Filter">
            <summary>
            Gets or sets the filter shown in the unity.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridMultiValueFilter.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridMultiValueFilter.ValueMemberPath">
            <summary>
            Gets or sets the name of the property or path of the items set in ItemsSource 
            in order to filter by the value contained in that property.
            </summary>
            <value>The value member path.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridMultiValueFilter.ItemStyle">
            <summary>
            Gets or sets the style that will be applied to each item of the list.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridMultiValueFilter.MouseOverBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it has the mouse over.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridMultiValueFilter.PressedBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint a button when it is pressed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridMultiValueFilter.InputBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that fills the background of the input control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridMultiValueFilter.InputForeground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> applied to the text inside an input control when this text is not selected.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridMultiValueFilter.FocusBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the focused control.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridBoundConverter">
            <summary>
            Multi-purpose converter.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridBoundConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridBoundConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the source object.
            </returns>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridRowHeaderColumn">
            <summary>
            Column whose cells are  row headers.
            This column is typically aligned to the left and can be used 
            with other columns of this type in order to merge row headers.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridBoundColumn">
            <summary>
            Represent a <see cref="T:C1.Silverlight.DataGrid.DataGridColumn"/> which is bound to a data property.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridColumn">
            <summary>
            Represent a column in the grid
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridColumn"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.CellStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.CellStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.CellContentStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.CellContentStyle"/> dependency property. 
            Using a DependencyProperty as the backing store for CellContentStyle.  
            This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.CellEditingContentStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.CellEditingContentStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.GroupContentStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.GroupContentStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.HeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.HeaderStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.HeaderProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.Header"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.GroupHeaderProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.GroupHeader"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.HorizontalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.HorizontalAlignment"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.VerticalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.VerticalAlignment"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.VisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.Visibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.MinWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.MinWidth"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.MaxWidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.MaxWidth"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.WidthProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.Width"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.EditOnSelectionProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.EditOnSelection"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.SortMemberPathProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.SortMemberPath"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.FilterMemberPathProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.FilterMemberPath"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.CanUserSortProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.CanUserSort"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.CanUserFilterProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.CanUserFilter"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.CanUserResizeProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.CanUserResize"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.CanUserResizeRowsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.CanUserResizeRows"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.CanUserMoveProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.CanUserMove"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.IsSelectableProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.IsSelectable"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.IsReadOnlyProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.IsReadOnly"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumn.TagProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.Tag"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.GetCellContentRecyclingKey(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Key used to store the cell content for future reuse in a shared pool.
            </summary>
            <remarks>
            <para>Columns returning the same RecyclingKey will be candidate to share the same cells content instances.</para>
            <para>Typically this method returns the type of the element returned by the method
            <see cref="M:C1.Silverlight.DataGrid.DataGridColumn.CreateCellContent(C1.Silverlight.DataGrid.DataGridRow)">CreateCellContent</see>.</para>
            <para>
            Cell content lifecycle.
            <list type="number">
            <item>
            <description>If there is no recycled cell content matching the recycling key,
            the method <see cref="M:C1.Silverlight.DataGrid.DataGridColumn.CreateCellContent(C1.Silverlight.DataGrid.DataGridRow)">CreateCellContent</see> will be called
            to create a new one. </description></item>
            <item>
            <description>Once the cell content is created or a recycled one is taken, the
            method <see cref="M:C1.Silverlight.DataGrid.DataGridColumn.BindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridRow)">BindCellContent</see> will be called.
            </description></item>
            <item>
            <description>When the cell content is not being used the method <see cref="M:C1.Silverlight.DataGrid.DataGridColumn.UnbindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridRow)">UnbindCellContent</see> will be called, and the cell
            content will be saved for future use in other cells.</description></item>
            </list>
            </para>
            </remarks>
            <param name="row">This parameter can be used to have different cell content
            depending on the row. In most cases this parameter won't be used.</param>
            <returns>
            The recycling key, or null to disable recycling.
            </returns>
            <example>
            <para><c>return typeof(TextBlock);</c></para>
            </example>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.CreateCellContent(C1.Silverlight.DataGrid.DataGridRow)">CreateCellContent</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.BindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridRow)">BindCellContent</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.UnbindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridRow)">UnbindCellContent</seealso>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.CreateCellContent(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Creates the visual element that will be used to display the info inside a cell
            of this column.
            </summary>
            <remarks>
            This method is only called if no cell content is found in the shared pool
            matching the recycling key returned by the method <see cref="M:C1.Silverlight.DataGrid.DataGridColumn.GetCellContentRecyclingKey(C1.Silverlight.DataGrid.DataGridRow)">GetCellContentRecyclingKey</see>.
            </remarks>
            <param name="row">This parameter might be used to have different cell content
            depending on the row. In most cases this parameter won't be used</param>
            <returns>
            Visual element used to display the content of a cell.
            </returns>
            <example>
            <c>return new TextBlock();</c>
            </example>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.GetCellContentRecyclingKey(C1.Silverlight.DataGrid.DataGridRow)">GetCellContentRecyclingKey</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.BindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridRow)">BindCellContent</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.UnbindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridRow)">UnbindCellContent</seealso>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.BindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Initializes the cell content presenter. 
            </summary>
            <remarks>
            <para>This method must include cellContent
            property settings, SetBinding of the corresponding dependency property being
            "row.DataItem" the source which can be set directly in the binding or
            as DataContext of the cellContent.</para>
            <para>This method is called after a cell content is created or a recycled one is
            taken.</para>
            </remarks>
            <param name="cellContent">Visual element that will be bound in order to display
            the cell content. If the cellContent received is not the expected you'll
            probably need to override the method <see cref="M:C1.Silverlight.DataGrid.DataGridColumn.GetCellContentRecyclingKey(C1.Silverlight.DataGrid.DataGridRow)">GetCellContentRecyclingKey</see>.</param>
            <param name="row">Row for which the cell will be initialized.</param>
            <example>
            <code>var txt = (TextBlock)cellContent;
            txt.HorizontalAlignment = HorizontalAlignment;
            txt.VerticalAlignment = VerticalAlignment;
            Binding newBinding = CopyBinding(Binding);
            newBinding.Source = row.DataItem;
            txt.SetBinding(TextBlock.TextProperty, newBinding);</code>
            </example>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.GetCellContentRecyclingKey(C1.Silverlight.DataGrid.DataGridRow)">GetCellContentRecyclingKey</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.CreateCellContent(C1.Silverlight.DataGrid.DataGridRow)">CreateCellContent</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.UnbindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridRow)">UnbindCellContent</seealso>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.UnbindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Unbinds the content of the cell.
            </summary>
            <remarks>
            This method is called before the cell content is recycled.
            
            If you set the DataContext in the <see cref="M:C1.Silverlight.DataGrid.DataGridColumn.BindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridRow)">BindCellContent</see> method, you must set it to null
            here to avoid memory leaking.
            </remarks>
            <param name="cellContent">Visual element which is currently bound to the
            row.</param>
            <param name="row">The row currently bound to the cellContent.</param>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.GetCellContentRecyclingKey(C1.Silverlight.DataGrid.DataGridRow)">GetCellContentRecyclingKey</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.CreateCellContent(C1.Silverlight.DataGrid.DataGridRow)">CreateCellContent</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.BindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridRow)">BindCellContent</seealso>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.GetCellEditingContent(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Creates and initialize the visual element that will be used to edit the info of
            a cell belonging to this column when the cell is in edit mode.
            </summary>
            <remarks>
            <para>The returned element won't be recycled, once the editing is
            finished the visual element will be discarded. if you need to release resources
            you can do it in the method <see cref="M:C1.Silverlight.DataGrid.DataGridColumn.EndEdit(System.Windows.FrameworkElement)"/>.</para>
            <para>It is no necessary to set the Source of the binding because the
            DataContext of the returned element will be set.</para>
            </remarks>
            <param name="row">The row corresponding to the editing cell.</param>
            <returns>
            Visual element used to edit the data of a cell when it is in edit mode.
            </returns>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.BeginEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)"/>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement)"/>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)"/>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.EndEdit(System.Windows.FrameworkElement)"/>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement)">
            <summary>
            When overridden in a derived class, called when a cell in the column enters edit
            mode.
            </summary>
            <param name="editingElement">The element that the column displays for a cell in
            editing mode.</param>
            <returns>
            The returned object will be passed in the <see cref="M:C1.Silverlight.DataGrid.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)"/> method as a parameter in
            order to set the original value in the editing element when user cancel the
            edit.
            </returns>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.GetCellEditingContent(C1.Silverlight.DataGrid.DataGridRow)">GetCellEditingContent</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.BeginEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">BeginEdit</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">CancelCellEdit</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.EndEdit(System.Windows.FrameworkElement)">EndEdit</seealso>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Causes the column cell being edited to revert to the specified value.
            </summary>
            <remarks>
            The object passed in the uneditedValue parameter is taken from the
            method <see cref="M:C1.Silverlight.DataGrid.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement)"/>.
            </remarks>
            <param name="editingElement">The element that the column displays for a cell in
            editing mode.</param>
            <param name="uneditedValue">The previous, unedited value in the cell being
            edited.</param>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.GetCellEditingContent(C1.Silverlight.DataGrid.DataGridRow)">GetCellEditingContent</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.BeginEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">BeginEdit</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement)">PrepareCellForEdit</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.EndEdit(System.Windows.FrameworkElement)">EndEdit</seealso>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.BeginEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
            <summary>
            Begins the edit passing the <see cref="T:System.Windows.RoutedEventArgs"/> that raised the edit of the cell.
            </summary>
            <param name="editingElement">The editing element.</param>
            <param name="routedEventArgs">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
            <returns>Returns true if the cell editing began correctly, otherwise the cell editing will be cancelled.</returns>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.GetCellEditingContent(C1.Silverlight.DataGrid.DataGridRow)"/>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement)"/>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)"/>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.EndEdit(System.Windows.FrameworkElement)"/>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.EndEdit(System.Windows.FrameworkElement)">
            <summary>
            This method is called when the user finish the editing of the cell.
            </summary>
            <param name="editingElement">The editing element.</param>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.GetCellEditingContent(C1.Silverlight.DataGrid.DataGridRow)"/>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.BeginEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)"/>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement)"/>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)"/>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.GetFilter">
            <summary>
            Gets the default filter of this column.
            </summary>
            <remarks>
            You can override the default filter by setting the property <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.Filter"/>, 
            or listening to the events <see cref="E:C1.Silverlight.DataGrid.DataGridColumn.FilterLoading"/> of this column 
            and <see cref="E:C1DataGrid.FilterLoading"/>.
            </remarks>
            <returns>The filter related to this column.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.CreateGroupContent">
            <summary>
            Creates and initializes the <see cref="T:System.Windows.FrameworkElement">FrameworkElement</see>
            used to display in the group row related to this column.
            </summary>
            <returns>
            <see cref="T:System.Windows.FrameworkElement">FrameworkElement</see> used to display in the group
            row related to this column
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.GetColumnHeaderPresenterRecyclingKey">
            <summary>
            Key used to store the column header for future reuse in a shared pool. 
            </summary>
            <remarks>
            <para>Columns returning the same RecyclingKey will be candidate to share the same column
            header instances.</para>
            <para>
            Column header presenter lifecycle.
            <list type="number">
            <item>
            <description>If there is no recycled column header matching the recycling key,
            the method <see cref="M:C1.Silverlight.DataGrid.DataGridColumn.CreateColumnHeaderPresenter">CreateColumnHeaderPresenter</see> will be
            called to create a new one. </description></item>
            <item>
            <description>Once the column header is created or a recycled one is taken, the
            method <see cref="M:C1.Silverlight.DataGrid.DataGridColumn.BindColumnHeaderPresenter(C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter)"/> will be called.</description></item>
            <item>
            <description>When the column header is not being used the method
            <see cref="M:C1.Silverlight.DataGrid.DataGridColumn.UnbindColumnHeaderPresenter(C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter)"/> will be called, and the column header will be saved for
            future use in other columns.</description></item>
            </list>
            </para>
            </remarks>
            <returns>
            The recycling key, or null to disable recycling.
            </returns>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.CreateColumnHeaderPresenter"/>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.BindColumnHeaderPresenter(C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter)"/>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.UnbindColumnHeaderPresenter(C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter)"/>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.CreateColumnHeaderPresenter">
            <summary>
            Creates a new column header presenter.
            </summary>
            <returns></returns>
            <remarks>If a recycled column header is used this method will not be called.</remarks>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.GetColumnHeaderPresenterRecyclingKey"/>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.BindColumnHeaderPresenter(C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter)"/>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.UnbindColumnHeaderPresenter(C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter)"/>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.BindColumnHeaderPresenter(C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter)">
            <summary>
            Initializes the column header presenter.
            </summary>
            <remarks>This method is called after a column header is created or an old one is recycled.</remarks>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.GetColumnHeaderPresenterRecyclingKey"/>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.CreateColumnHeaderPresenter"/>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridColumn.UnbindColumnHeaderPresenter(C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter)"/>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.UnbindColumnHeaderPresenter(C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter)">
            <summary>
            Unbinds the column header presenter.
            </summary>
            <remarks>This method is called when a column header is unloaded.</remarks>
            <param name="columnHeaderPresenter">The column header presenter.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.GetColumnHeaderPresenterStyle">
            <summary>
            Gets the column header presenter style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.CreateGroupColumnHeaderPresenter">
            <summary>
            Creates a group column header presenter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.GetGroupColumnHeaderPresenterStyle">
            <summary>
            Gets the group column header presenter style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.GetCellText(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Gets the text shown inside a cell.
            </summary>
            <remarks>
            <para>This feature is widely used in export operations like converting the data grid content to Excel or Pdf.</para>
            <para>When the cell does not show a text like a <see cref="T:C1.Silverlight.DataGrid.DataGridCheckBoxColumn"/> a representative text will be returned, e.g. "Yes", "No", "Undefined".</para>
            </remarks>
            <param name="row">The row.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.GetColumnText">
            <summary>
            Gets the text shown in the column header.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.GetGroupText(C1.Silverlight.DataGrid.DataGridGroupRow)">
            <summary>
            Gets the text shown in the group row.
            </summary>
            <param name="groupRow">The group row.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.GetCellValue(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Gets the value represented by the cell belonging to this column and the specified row.
            </summary>
            <param name="Row">The row used to determine the cell.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.OnWidthChanged(C1.Silverlight.DataGrid.DataGridLength,C1.Silverlight.DataGrid.DataGridLength)">
            <summary>
            Called when the width changed.
            </summary>
            <param name="newValue">The new width.</param>
            <param name="oldValue">The old width.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.OnSortMemberPathChanged(System.String,System.String)">
            <summary>
            Called when sort member path changed.
            </summary>
            <param name="newValue">The new sort member path.</param>
            <param name="oldValue">The old sort member path.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.OnFilterMemberPathChanged(System.String,System.String)">
            <summary>
            Called when filter member path changed.
            </summary>
            <param name="newValue">The new filter member path.</param>
            <param name="oldValue">The old filter member path.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.OnSortStateChanged(C1.Silverlight.DataGrid.DataGridSortState,C1.Silverlight.DataGrid.DataGridSortState)">
            <summary>
            Called when the sort state changed.
            </summary>
            <param name="newValue">The new state.</param>
            <param name="oldValue">The old state.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.OnFilterStateChanged(C1.Silverlight.DataGrid.DataGridFilterState,C1.Silverlight.DataGrid.DataGridFilterState)">
            <summary>
            Called when the filter state changed.
            </summary>
            <param name="newValue">The new state.</param>
            <param name="oldValue">The old state.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.OnGroupStateChanged(C1.Silverlight.DataGrid.DataGridGroupState,C1.Silverlight.DataGrid.DataGridGroupState)">
            <summary>
            Called when the group state changed.
            </summary>
            <param name="newValue">The new value.</param>
            <param name="oldValue">The old value.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.OnVisibilityChanging(System.Windows.Visibility,System.Windows.Visibility)">
            <summary>
            Called before the visibility change.
            </summary>
            <param name="newValue">The new visibility.</param>
            <param name="oldValue">The old visibility.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.OnVisibilityChanged(System.Windows.Visibility,System.Windows.Visibility)">
            <summary>
            Called when the visibility changed.
            </summary>
            <param name="newValue">The new visibility.</param>
            <param name="oldValue">The old visibility.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.OnFilterLoading(C1.Silverlight.DataGrid.DataGridFilterLoadingEventArgs)">
            <summary>
            Called before the filter is loaded.
            </summary>
            <returns>The filter</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.OnDisplayIndexChanging(System.Int32,System.Int32)">
            <summary>
            Called before the display index is changed.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event corresponding to the propertyName parameter.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.OnPropertyChanged(System.String,System.Boolean)">
            <summary>
            Raises the PropertyChanged event corresponding to the propertyName parameter.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="refreshUIElements">if set to <c>true</c> visual elements of the column will be unloaded.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumn.Refresh">
            <summary>
            Unload all the visual elements belonging to this column like cells, column headers and group headers causing these elements to be re-generated in the next layout pass.
            </summary>
            <remarks>
            You can force elements to be re-generated after calling this method by calling <see cref="M:FrameworkElement.UpdateLayout"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.DataGrid">
            <summary>
            Gets the owner data grid.
            </summary>
            <value>The owner data grid.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.CellStyle">
            <summary>
            Gets or sets the style applied to every cell of this column.
            </summary>
            <remarks>
            The TargetType of the style must be <see cref="T:C1.Silverlight.DataGrid.DataGridCellPresenter"/>.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.CellContentStyle">
            <summary>
            Gets or sets the style applied to the content of a cell in read mode.
            </summary>
            <remarks>
            The TargetType of this style must be the type of the object returned in <see cref="M:C1.Silverlight.DataGrid.DataGridColumn.CreateCellContent(C1.Silverlight.DataGrid.DataGridRow)"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.CellEditingContentStyle">
            <summary>
            Gets or sets the style applied to the content of a cell in edit mode.
            </summary>
            <remarks>
            The TargetType of this style must be the type of the object returned in <see cref="M:C1.Silverlight.DataGrid.DataGridColumn.GetCellEditingContent(C1.Silverlight.DataGrid.DataGridRow)"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.GroupContentStyle">
            <summary>
            Gets or sets the style applied to the title of each group row related to this column.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.HeaderStyle">
            <summary>
            Gets or sets the style of the header.
            </summary>
            <remarks>
            The TargetType of the style must be of the type <see cref="T:DataGridGroupColumnHeaderPresenter"/>.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.HeaderPresenter">
            <summary>
            Gets the presenter corresponding to the header of this column.
            </summary>
            <value>The header presenter.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.Header">
            <summary>
            Gets or sets the content of the header
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.GroupHeader">
            <summary>
            Gets or sets the header that will appear in the grouping panel as the column header is dragged there.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the cell content regarding the cell.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of the cell content regarding the cell.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.Visibility">
            <summary>
            Gets or sets whether the column is visible.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.MinWidth">
            <summary>
            Gets or sets the minimum width of the column.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.MaxWidth">
            <summary>
            Gets or sets the maximum width of the column.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.Width">
            <summary>
            Gets or sets the width of this column. 
            </summary>
            <remarks>
            <para><see cref="T:C1.Silverlight.DataGrid.DataGridLength"/> supports four different modes
            <list type="table">
            <listheader><term>Type</term><description>Description</description></listheader>
            <item><term>Pixel</term><description>The width of the column will be the same as the amount of pixels specified.</description></item>
            <item><term>Auto</term><description>The width of the column will be determined by the content of the cells in the columns.</description></item>
            <item><term>Star</term><description>The viewport space will be divided among the Star and AutoStar columns.</description></item>
            <item><term>AutoStar</term><description>Each column is assured to have enough space to show its content and when extra space is available it is divided among the Star and AutoStar columns.</description></item>
            </list></para>
            <para>Notice <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.MinWidth"/> and <see cref="P:C1.Silverlight.DataGrid.DataGridColumn.MaxWidth"/> has precedence over this property, that mean that if you set Width=100 and MinWidth=110 the actual value will be 110.</para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.ActualWidth">
            <summary>
            Gets the actual width in pixels.
            </summary>
            <value>The actual width in pixels.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.EditOnSelection">
            <summary>
            Gets or sets a value indicating how the cells enters in edit mode when the user clicks on a cell of this column.
            </summary>
            <remarks>
            If set to true, It enters in edit mode when the cell is selected, 
            otherwise the user should click one time to select the cell, 
            and click again to enter in edit mode.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.SortMemberPath">
            <summary>
            Gets or sets a property name, or a period-delimited hierarchy of property names, that indicates the member to sort by.
            </summary>
            <value>The path to the data-item member to sort by.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.GroupConverter">
            <summary>
            Gets or sets the converter used to customize the grouping behavior.
            </summary>
            <remarks>
            The grouping algorithm will be applied to the resulting collection of applying this converter to each data item.
            This converter can be used to make things like outlook dates grouping, or group numeric values in ranges.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.GroupContentConverter">
            <summary>
            Gets or sets the converter that will be applied to the visual element that 
            is inside the content of each group row. 
            </summary>
            <remarks>
            Typically this element is a <see cref="T:System.Windows.Controls.TextBlock"/> showing the grouping value.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.FilterMemberPath">
            <summary>
            Gets or sets a property name, or a period-delimited hierarchy of property names, that indicates the member to filter by.
            </summary>
            <value>The path to the data-item member to filter by.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.SortState">
            <summary>
            Gets the sorting state of this column.
            </summary>
            <remarks>
            Use <see cref="M:C1DataGrid.SortBy"/> to change the sort criteria.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.FilterState">
            <summary>
            Gets the filter state of this column.
            </summary>
            <remarks>
            Use <see cref="M:C1DataGrid.FilterBy"/> to change the filter criteria.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.GroupState">
            <summary>
            Gets the grouping state of this column.
            </summary>
            <remarks>
            Use <see cref="M:C1DataGrid.GroupBy"/> to change the group criteria.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.CanUserSort">
            <summary>
            Gets or sets a value indicating whether the user can sort by this column.
            </summary>
            <value>
            	<c>true</c> if the user can sort by this column; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.CanUserFilter">
            <summary>
            Gets a value indicating whether the user can filter by this column.
            </summary>
            <value>
            	<c>true</c> if the user can filter by this column; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.CanUserResize">
            <summary>
            Gets or sets whether the user can resize the column by dragging 
            the border on the right of the column header presenter.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.CanUserResizeRows">
            <summary>
            Gets or sets whether the user can resize the rows manipulating cells in this column.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.CanUserMove">
            <summary>
            Gets or sets a value that indicates whether the user can change the column display order by dragging column headers with the mouse.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.Name">
            <summary>
            Gets or sets the name of the column.
            </summary>
            <value>The name of the column.</value>
            <remarks>
            This property can be used to access the column in the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> columns collection.
            <code>grid.Columns["Name of the column"]</code>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.Index">
            <summary>
            Gets the index of a column.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.DisplayIndex">
            <summary>
            Gets or sets the desired index in which the column will be displayed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.IsSelectable">
            <summary>
            Gets or sets a value indicating whether the user is allowed to set the current cell from this column.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.IsReadOnly">
            <summary>
            Gets or sets whether the cells in the column are read only.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.IsFrozen">
            <summary>
            Gets a value indicating whether this column is moved out of the viewport when the user scrolls the data grid.
            </summary>
            <value><c>true</c> if this column is frozen; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.IsEditable">
            <summary>
            Gets a value indicating whether the cells in the column are editable or not.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.IsAutoGenerated">
            <summary>
            Gets a value that indicates whether the column is auto-generated.
            </summary>
            <value>
            	<c>true</c> if the column is auto-generated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.IsSelected">
            <summary>
            Gets a value indicating whether this column is selected.
            </summary>
            <value>
            	<c>true</c> if this row is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.IsMouseOver">
            <summary>
            Gets a value indicating whether the mouse is over the column.
            </summary>
            <value>
            	<c>true</c> if the mouse is over the column; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.Filter">
            <summary>
            Gets or sets the filter used in this column.
            </summary>
            <value>The filter that will be displayed when the options drop-down in the column header is opened.</value>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumn.WidthChanged">
            <summary>
            Occurs when the column width is changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumn.FilterMemberPathChanged">
            <summary>
            Occurs when filter member path is changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumn.SortMemberPathChanged">
            <summary>
            Occurs when sort member path is changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumn.SortStateChanged">
            <summary>
            Occurs when the state of the sort changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumn.FilterStateChanged">
            <summary>
            Occurs when the state of the filter changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumn.GroupStateChanged">
            <summary>
            Occurs when the state of the group changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumn.VisibilityChanging">
            <summary>
            Occurs before the visibility is changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumn.VisibilityChanged">
            <summary>
            Occurs when the visibility changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumn.FilterLoading">
            <summary>
            Occurs before the filter is loaded.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumn.LoadingFilter">
            <summary>
            Occurs when the filter is loading.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumn.HorizontalOffset">
            <summary>
            Gets the horizontal offset in pixels. 
            </summary>
            <remarks>
            Notice this offset is estimated if the column or previous columns have not been displayed before.
            double.Nan is returned if the template of the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> has not been loaded.
            </remarks>
            <value>The vertical offset in pixels.</value>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumn.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridBoundColumn.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridBoundColumn"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridBoundColumn.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridBoundColumn"/> class.
            </summary>
            <param name="property">The property info is used to initialize the column.</param>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridBoundColumn.AllowNullProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridBoundColumn.AllowNull"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridBoundColumn.TextWrappingProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridBoundColumn.TextWrapping"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridBoundColumn.TextTrimmingProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridBoundColumn.TextTrimming"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridBoundColumn.CreateCellContent(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Gets a TextBlock that will be used to display 
            the info inside a cell of this column.
            </summary>
            <returns>TextBlock that represent the cell content.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridBoundColumn.GetDesignTimeText(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Gets the text to show in the cell when the data grid is in design time.
            </summary>
            <param name="row">The row which the text belongs to.</param>
            <returns>The text showed in the cell in edit mode ("Bound")</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridBoundColumn.CopyBinding(System.Windows.Data.Binding)">
            <summary>
            Copies a binding object.
            </summary>
            <param name="binding">The binding object.</param>
            <returns>A copy of the binding object</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridBoundColumn.Binding">
            <summary>
            Gets or sets the binding object used to bind the 
            visual element against the data.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridBoundColumn.Name">
            <summary>
            Gets or sets the name of the column.
            </summary>
            <remarks>
            This property can be used to access the column in the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> columns collection.
            <code>grid.Columns["Name of the column"]</code>
            If No name is specified, it will take the <see cref="P:C1.Silverlight.DataGrid.DataGridBoundColumn.Binding"/> <see cref="P:System.Windows.Data.Binding.Path"/> as its name.
            </remarks>
            <value>The name of the column.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridBoundColumn.Format">
            <summary>
            Gets or sets the format of the content of the cells belonging this column.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridBoundColumn.DefaultConverter">
            <summary>
            Gets the converter that will be used in each cell.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridBoundColumn.AllowNull">
            <summary>
            Gets or sets a value indicating whether the editing control allows null values.
            </summary>
            <value><c>true</c> if the editing control allows null values; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridBoundColumn.TextWrapping">
            <summary>
            Gets or sets a value indicating whether the text inside the cell allows wrapping.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridBoundColumn.TextTrimming">
            <summary>
            Gets or sets a value indicating whether the text inside the cell allows trimming.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridRowHeaderColumn"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderColumn.GetCellContentRecyclingKey(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Gets the cell content recycling key.
            </summary>
            <param name="row">The row.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderColumn.CreateCellContent(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Gets a TextBlock that will be used to display
            the info into a cell of this column.
            </summary>
            <param name="row"></param>
            <returns>
            TextBlock that represent the cell content.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderColumn.BindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Binds the content of the cell.
            </summary>
            <param name="cellContent">Content of the cell.</param>
            <param name="row">The row.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderColumn.UnbindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Unbinds the content of the cell.
            </summary>
            <param name="cellContent">Content of the cell.</param>
            <param name="row">The row.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderColumn.GetColumnHeaderPresenterRecyclingKey">
            <summary>
            Key used to store the column header for future reuse in a shared pool. Columns
            returning the same RecyclingKey will be candidate to share the same column
            header instances.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderColumn.CreateColumnHeaderPresenter">
            <summary>
            Creates a new column header presenter.
            </summary>
            <returns></returns>
            <remarks>If a recycled column header is used this method won't be called.</remarks>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRowHeaderColumn.GetColumnHeaderPresenterRecyclingKey"/>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridCheckBoxColumn">
            <summary>
            Represent a <see cref="T:C1.Silverlight.DataGrid.DataGridColumn"/> that hosts Boolean content in its cells
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridCheckBoxColumn"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridCheckBoxColumn"/> class.
            </summary>
            <param name="property">The property info used to initialize the column.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.CheckedTextProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.CheckedText"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.UncheckedTextProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.UncheckedText"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.UndefinedTextProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.UndefinedText"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.CreateCellContent(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Gets a CheckBox that will be used to display 
            the info into a cell of this column.
            </summary>
            <returns>CheckBox that represent the cell content.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.GetCellEditingContent(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Gets a CheckBox that will be used to display 
            the info into a cell of this column when the row is in edit mode.
            </summary>
            <returns>CheckBox that represent a cell content in edit mode.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.GetCellText(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Gets the text which represent the value shown inside a cell.
            </summary>
            <remarks>
            If the value is <c>true</c> the text shown will be value of the property <see cref="P:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.CheckedText"/>.
            If the value is <c>false</c> the text shown will be value of the property <see cref="P:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.UncheckedText"/>.
            If the value is <c>null</c> the text shown will be value of the property <see cref="P:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.UndefinedText"/>.
            </remarks>
            <param name="row">The row that contains the cell that is being queried.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.CheckedText">
            <summary>
            Gets or sets the text displayed in the auto-filter and the method <see cref="M:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.GetCellText(C1.Silverlight.DataGrid.DataGridRow)"/> when the value of the cell is <c>true</c>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.UncheckedText">
            <summary>
            Gets or sets the text displayed in the auto-filter and the method <see cref="M:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.GetCellText(C1.Silverlight.DataGrid.DataGridRow)"/> when the value of the cell is <c>false</c>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.UndefinedText">
            <summary>
            Gets or sets the text displayed in the auto-filter and the method <see cref="M:C1.Silverlight.DataGrid.DataGridCheckBoxColumn.GetCellText(C1.Silverlight.DataGrid.DataGridRow)"/> when the value of the cell is <c>null</c>.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.LoadingFilterEventHandler">
            <summary>
            Handles the loading filter event.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridColumnHeaderTypeConverter">
            <summary>
            Converts a string to a list of headers and vice versa.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnHeaderTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnHeaderTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the intended conversion type of the converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotImplementedException">
            	<see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/> not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridDateTimeColumn">
            <summary>
            Represent a <see cref="T:C1.Silverlight.DataGrid.DataGridColumn"/> which is bound to a data property representing 
            <see cref="T:System.DateTime"/> or <see cref="T:System.Nullable`1"/> values.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDateTimeColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridDateTimeColumn"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDateTimeColumn.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridDateTimeColumn"/> class.
            </summary>
            <param name="property">The property info used to initialize the column.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDateTimeColumn.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateTimeColumn.DateFormatProperty">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.DatePickerFormat"/> value determining DatePicker format.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateTimeColumn.TimeFormatProperty">
            <summary>
            Gets or sets the <see cref="T:C1.Silverlight.DateTimeEditors.C1TimeEditorFormat"/> value determining TimeEditor format.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateTimeColumn.MinDateProperty">
            <summary>
            Gets or sets the minimum <see cref="T:System.DateTime"/> value allowed.
            Default value is <see cref="F:System.DateTime.MinValue"/>.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateTimeColumn.MaxDateProperty">
            <summary>
            Gets or sets the maximum <see cref="T:System.DateTime"/> value allowed.
            Default value is <see cref="F:System.DateTime.MaxValue"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeColumn.EditMode">
            <summary>
            Gets or sets the <see cref="T:C1.Silverlight.DataGrid.DataGridDateTimeColumnEditMode"/> value determining column representation.
            The default value is <see cref="F:C1.Silverlight.DataGrid.DataGridDateTimeColumnEditMode.DateTime"/>.
            </summary>
            <remarks>If <see cref="P:C1.Silverlight.DataGrid.DataGridDateTimeColumn.Format"/> property value has not been changed by external code, 
            it is set according to the <see cref="P:C1.Silverlight.DataGrid.DataGridDateTimeColumn.EditMode"/> property value:
            <list type="table">
            <listheader><term><see cref="P:C1.Silverlight.DataGrid.DataGridDateTimeColumn.EditMode"/></term><description>Format</description></listheader>
            <item><term><see cref="F:C1.Silverlight.DataGrid.DataGridDateTimeColumnEditMode.DateTime"/></term><description>g</description></item>
            <item><term><see cref="F:C1.Silverlight.DataGrid.DataGridDateTimeColumnEditMode.Date"/></term><description>d</description></item>
            <item><term><see cref="F:C1.Silverlight.DataGrid.DataGridDateTimeColumnEditMode.Time"/></term><description>t</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeColumn.DateFormat">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.DatePickerFormat"/> value determining DatePicker format.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeColumn.TimeFormat">
            <summary>
            Gets or sets the <see cref="T:C1.Silverlight.DateTimeEditors.C1TimeEditorFormat"/> value determining TimeEditor format.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeColumn.MinDate">
            <summary>
            Gets or sets the minimum <see cref="T:System.DateTime"/> value allowed.
            Default value is <see cref="F:System.DateTime.MinValue"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeColumn.MaxDate">
            <summary>
            Gets or sets the maximum <see cref="T:System.DateTime"/> value allowed.
            Default value is <see cref="F:System.DateTime.MaxValue"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeColumn.FirstDayOfWeek">
            <summary>
            Gets or sets the <see cref="T:System.DayOfWeek"/> value determining the first week day.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeColumn.Format">
            <summary>
            Gets or sets the format of the content.
            </summary>
            <remarks>If <see cref="P:C1.Silverlight.DataGrid.DataGridDateTimeColumn.Format"/> property value has not been changed by external code, 
            it is set according to the <see cref="P:C1.Silverlight.DataGrid.DataGridDateTimeColumn.EditMode"/> property value:
            <list type="table">
            <listheader><term><see cref="P:C1.Silverlight.DataGrid.DataGridDateTimeColumn.EditMode"/></term><description>Format</description></listheader>
            <item><term><see cref="F:C1.Silverlight.DataGrid.DataGridDateTimeColumnEditMode.DateTime"/></term><description>g</description></item>
            <item><term><see cref="F:C1.Silverlight.DataGrid.DataGridDateTimeColumnEditMode.Date"/></term><description>d</description></item>
            <item><term><see cref="F:C1.Silverlight.DataGrid.DataGridDateTimeColumnEditMode.Time"/></term><description>t</description></item>
            </list>
            </remarks>
        </member>
        <member name="T:C1.Silverlight.DataGrid.C1DateTimeColumnEditMode">
            <summary>
            Determines the <see cref="T:C1.Silverlight.DataGrid.DataGridDateTimeColumn"/> edit mode.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DateTimeColumnEditMode.Date">
            <summary>
            The <see cref="T:C1.Silverlight.DataGrid.DataGridDateTimeColumn"/> shows date picker only.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DateTimeColumnEditMode.Time">
            <summary>
            The <see cref="T:C1.Silverlight.DataGrid.DataGridDateTimeColumn"/> control shows time editor only.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DateTimeColumnEditMode.DateTime">
            <summary>
            The <see cref="T:C1.Silverlight.DataGrid.DataGridDateTimeColumn"/> control shows date and time parts.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.C1DateTimeColumnEditMode.Custom">
            <summary>
            The <see cref="T:C1.Silverlight.DataGrid.DataGridDateTimeColumn"/> control shows editable textbox containing DateTime value in a custom format.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridDateTimeColumnEditMode">
            <summary>
            Determines the <see cref="T:C1.Silverlight.DataGrid.DataGridDateTimeColumn"/> edit mode.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateTimeColumnEditMode.Date">
            <summary>
            The <see cref="T:C1.Silverlight.DataGrid.DataGridDateTimeColumn"/> shows date picker only.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateTimeColumnEditMode.Time">
            <summary>
            The <see cref="T:C1.Silverlight.DataGrid.DataGridDateTimeColumn"/> control shows time editor only.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateTimeColumnEditMode.DateTime">
            <summary>
            The <see cref="T:C1.Silverlight.DataGrid.DataGridDateTimeColumn"/> control shows date and time parts.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateTimeColumnEditMode.Custom">
            <summary>
            The <see cref="T:C1.Silverlight.DataGrid.DataGridDateTimeColumn"/> control shows editable textbox containing DateTime value in a custom format.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridDateTimeConverter">
            <summary>
            DateTime Converter.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDateTimeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDateTimeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the source object.
            </returns>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridDateTimeFilter">
            <summary>
            The filter for DateTime values. This control should be used as InnerControl for the DataGridFilter
            control to create the DateTime filter for the C1DataGrid.
            </summary>
            <summary>
            Represents the default filter control for DateTime columns.
            </summary>	
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDateTimeFilter.RaisePropertyChanged(System.String)">
            <summary>
            Raises the <see cref="e:PropertyChanged"/> event.
            </summary>
            <param name="propertyName">Name of the property that was changed.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDateTimeFilter.Clear">
            <summary>
            Clears the current filter criteria and the values contained in the filter control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDateTimeFilter.Create">
            <summary>
            Creates the filter based on the current filter criteria set by the user in the filter control.
            Raises the FilterChanged event if necessary.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDateTimeFilter.Load(C1.Silverlight.DataGrid.DataGridFilterState)">
            <summary>
            Initializes the filter and filter control to the desired state.
            </summary>
            <param name="filterState">the desired state.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDateTimeFilter.SetFilter(C1.Silverlight.DataGrid.DataGridFilterState)">
            <summary>
            Sets the filter into the control.
            </summary>
            <param name="filterState">State of the filter.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDateTimeFilter.GetFilter">
            <summary>
            Gets the filter state object from the information gathered in the control.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateTimeFilter.MouseOverBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.MouseOverBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateTimeFilter.PressedBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.PressedBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateTimeFilter.InputBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.InputBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateTimeFilter.InputForegroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.InputForeground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateTimeFilter.SelectedBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.SelectedBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateTimeFilter.FocusBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.FocusBrush"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDateTimeFilter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridDateTimeFilter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDateTimeFilter.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.DataGrid.DataGridDateTimeFilter"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.DateFormat">
            <summary>
            Specifies the C1DatePickerFormat format that is used to display the selected date.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.TimeFormat">
            <summary>
            Specifies the C1TimeEditorFormat format that is used to display the selected time.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.EditMode">
            <summary>
            Defines edit mode.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.FirstDayOfWeek">
            <summary>
            Gets or sets the day that is considered the beginning of the week.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.StartDate">
            <summary>
            Gets or sets the start date shown in the filter control.
            </summary>
            <value>
            The start date shown in the filter control, if null no value will be shown.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.EndDate">
            <summary>
            Gets or sets the end date shown in the filter control.
            </summary>
            <value>
            The end date shown in the filter control, if null no value will be shown.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.Filter">
            <summary>
            Gets or sets the filter shown in the unity.
            </summary>
            <value></value>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridDateTimeFilter.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridDateTimeFilter.FilterChanged">
            <summary>
            Occurs when the filter criteria changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.MouseOverBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it has the mouse over.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.PressedBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint a button when it is pressed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.InputBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that fills the background of the input control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.InputForeground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> applied to the text inside an input control when this text is not selected.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.SelectedBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it is selected.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateTimeFilter.FocusBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the focused control.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridDateFilter">
            <summary>
            The filter for date values. This control should be used as InnerControl for the DataGridFilter
            control to create the date filter for the C1DataGrid.
            </summary>
            <summary>
            Represents the default filter control for date columns.
            </summary>	
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDateFilter.Clear">
            <summary>
            Clears the current filter criteria and the values contained in the filter control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDateFilter.Create">
            <summary>
            Creates the filter based on the current filter criteria set by the user in the filter control.
            Raises the FilterChanged event if necessary.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDateFilter.Load(C1.Silverlight.DataGrid.DataGridFilterState)">
            <summary>
            Initializes the filter and filter control to the desired state.
            </summary>
            <param name="filterState">the desired state.</param>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateFilter.MouseOverBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridDateFilter.MouseOverBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateFilter.PressedBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridDateFilter.PressedBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateFilter.InputBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridDateFilter.InputBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateFilter.InputForegroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridDateFilter.InputForeground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateFilter.SelectedBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridDateFilter.SelectedBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDateFilter.FocusBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridDateFilter.FocusBrush"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDateFilter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridDateFilter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDateFilter.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.DataGrid.DataGridDateFilter"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridDateFilter.FilterChanged">
            <summary>
            Occurs when the filter criteria changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateFilter.MouseOverBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it has the mouse over.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateFilter.PressedBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint a button when it is pressed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateFilter.InputBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that fills the background of the input control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateFilter.InputForeground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> applied to the text inside an input control when this text is not selected.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateFilter.SelectedBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it is selected.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDateFilter.FocusBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the focused control.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridHyperlinkColumn">
            <summary>
            Represent a <see cref="T:C1.Silverlight.DataGrid.DataGridColumn"/> that hosts hyperlink content in its cells.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridHyperlinkColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridHyperlinkColumn"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridHyperlinkColumn.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridHyperlinkColumn"/> class.
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridHyperlinkColumn.ContentTemplate">
            <summary>
            Gets or sets the content template of the hyperlink.
            </summary>
            <value>The content template of the hyperlink.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridHyperlinkColumn.TargetName">
            <summary>
            Gets or sets the name of the target window or frame that the Web page should
            open in, or the name of the object within the Silverlight application to
            navigate to.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridHyperlinkColumn.DefaultConverter">
            <summary>
            Gets the converter that will be used for each hyperlink.
            </summary>
            <value>The default converter.</value>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridHyperlinkColumn.Click">
            <summary>
            Occurs when an hyperlink is clicked.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridUriConverter">
            <summary>
            Converts Uri's from string and vice versa.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridUriConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridUriConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the source object.
            </returns>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridNumericConverter">
            <summary>
            Numeric Converter.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNumericConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNumericConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the source object.
            </returns>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridColumnCollection">
            <summary>
            Represent the collection of columns of the data grid
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnCollection.ClearItems">
            <summary>
            Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnCollection.InsertItem(System.Int32,C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.
            -or-
            <paramref name="index"/> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.
            </exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.
            -or-
            <paramref name="index"/> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.
            </exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnCollection.SetItem(System.Int32,C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to replace.</param>
            <param name="item">The new value for the element at the specified index. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.
            -or-
            <paramref name="index"/> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.
            </exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnCollection.Contains(System.String)">
            <summary>
            Determines whether contains a column regarding the specified column name.
            </summary>
            <param name="columnName">Name of the column.</param>
            <returns>
            	<c>true</c> if contains a column regarding the specified column name; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnCollection.GetFirstVisibleColumn">
            <summary>
            Gets the first visible column.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnCollection.GetLastVisibleColumn">
            <summary>
            Gets the last visible column.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnCollection.GetVisibleColumnsFromLeft">
            <summary>
            Gets a collection of columns starting from the left.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnCollection.GetVisibleColumnsFromRight">
            <summary>
            Gets a collection of columns starting from the right.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnCollection.GetVisibleColumnsFromIndex(System.Int32,System.Windows.Controls.Primitives.GeneratorDirection)">
            <summary>
            Gets a collection of columns from a specified position and direction.
            </summary>
            <param name="fromColumnIndex">Index of the first column.</param>
            <param name="direction">The direction in which columns are returned.</param>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:C1.Silverlight.DataGrid.DataGridColumn"/> with the specified column index.
            </summary>
            <value></value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:C1.Silverlight.DataGrid.DataGridColumn"/> with the specified column name.
            </summary>
            <value></value>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumnCollection.CollectionChanged">
            <summary>
            Occurs when the items list of the collection has changed, or the collection is reset.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridColumnValue`1">
            <summary>
            Contains extra information about a column.
            </summary>
            <typeparam name="T">The type of the information.</typeparam>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnValue`1.#ctor(C1.Silverlight.DataGrid.DataGridColumn,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridColumnValue`1"/> class.
            </summary>
            <param name="column">The column.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnValue`1.#ctor(System.Collections.Generic.KeyValuePair{C1.Silverlight.DataGrid.DataGridColumn,`0})">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridColumnValue`1"/> class.
            </summary>
            <param name="pair">The pair (column,info).</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnValue`1.Column">
            <summary>
            Gets the column.
            </summary>
            <value>The column.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnValue`1.Value">
            <summary>
            Gets the information associated with the column.
            </summary>
            <value>The information associated with the column.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridGroupRow">
            <summary>
            Represents a <see cref="N:C1.Silverlight.DataGrid"/> group row.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridRow">
            <summary>
            Represents a <see cref="P:C1.Silverlight.DataGrid.DataGridRow.DataGrid"/> row.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridRow"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.OnLoaded">
            <summary>
            Called after the row is added to the row collection.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.OnUnloaded">
            <summary>
            Called before the row is removed from the row collection.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRow.HeightProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRow.Height"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRow.MinHeightProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRow.MinHeight"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRow.MaxHeightProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRow.MaxHeight"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.Refresh">
            <summary>
            Unload every visual element which is related to the row.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.GetDataItem">
            <summary>
            Gets the data item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.GetRowPresenterRecyclingKey">
            <summary>
            Key used to store the row presenter for future reuse in a shared pool. 
            </summary>
            <remarks>
            <para>
            Rows returning the same RecyclingKey will be candidate to share the same row
            presenter instances.</para>
            <para>Row presenter lifecycle.
            <list type="number">
            <item>
            <description>If there is no recycled row presenter matching the recycling key,
            the method <see cref="M:C1.Silverlight.DataGrid.DataGridRow.CreateRowPresenter">CreateRowPresenter</see> will be
            called to create a new one. </description></item>
            <item>
            <description>Once the row presenter is created or a recycled one is taken, the
            method <see cref="M:C1.Silverlight.DataGrid.DataGridRow.BindRowPresenter(C1.Silverlight.DataGrid.DataGridRowPresenter)">BindRowPresenter</see> will be called.
            </description></item>
            <item>
            <description>When the row presenter is not being used the method <see cref="M:C1.Silverlight.DataGrid.DataGridRow.UnbindRowPresenter(C1.Silverlight.DataGrid.DataGridRowPresenter)">UnbindRowPresenter</see> will be called, and the row
            presenter will be saved for future use in other
            rows.</description></item>
            </list>
            </para>
            <para>Typically this method returns the type of the element returned by the method
            <see cref="M:C1.Silverlight.DataGrid.DataGridRow.CreateRowPresenter">CreateRowPresenter</see>.</para>
            </remarks>
            <returns>
            The recycling key, or null to disable recycling.
            </returns>
            <example>
            <para><c>return typeof(DataGridRowPresenter);</c></para>
            </example>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.CreateRowPresenter">CreateRowPresenter</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.BindRowPresenter(C1.Silverlight.DataGrid.DataGridRowPresenter)">BindRowPresenter</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.UnbindRowPresenter(C1.Silverlight.DataGrid.DataGridRowPresenter)">UnbindRowPresenter</seealso>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.CreateRowPresenter">
            <summary>
            Creates a new row presenter.
            </summary>
            <remarks>
            This method is only called if no row presenter is found in the shared pool
            matching the recycling key returned by the method <see cref="M:C1.Silverlight.DataGrid.DataGridRow.GetRowPresenterRecyclingKey">GetRowPresenterRecyclingKey</see>.
            </remarks>
            <returns>
            The row presenter.
            </returns>
            <example>
            <c>return new DataGridRowPresenter();</c>
            </example>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.GetRowPresenterRecyclingKey">GetRowPresenterRecyclingKey</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.BindRowPresenter(C1.Silverlight.DataGrid.DataGridRowPresenter)">BindRowPresenter</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.UnbindRowPresenter(C1.Silverlight.DataGrid.DataGridRowPresenter)">UnbindRowPresenter</seealso>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.BindRowPresenter(C1.Silverlight.DataGrid.DataGridRowPresenter)">
            <summary>
            Initializes the row presenter.
            </summary>
            <remarks>
            This method is called after a row presenter is created or a recycled one is
            taken.
            </remarks>
            <param name="presenter">Row presenter created previously</param>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.GetRowPresenterRecyclingKey">GetRowPresenterRecyclingKey</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.CreateRowPresenter">CreateRowPresenter</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.UnbindRowPresenter(C1.Silverlight.DataGrid.DataGridRowPresenter)">UnbindRowPresenter</seealso>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.UnbindRowPresenter(C1.Silverlight.DataGrid.DataGridRowPresenter)">
            <summary>
            This method is called before the row presenter is recycled.
            </summary>
            <param name="presenter">Row presenter currently used in this row.</param>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.GetRowPresenterRecyclingKey">GetRowPresenterRecyclingKey</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.CreateRowPresenter">CreateRowPresenter</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.BindRowPresenter(C1.Silverlight.DataGrid.DataGridRowPresenter)">BindRowPresenter</seealso>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.GetRowPresenterStyle">
            <summary>
            Gets the row presenter style.
            </summary>
            <returns>The row presenter style.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.GetRowHeaderPresenterRecyclingKey">
            <summary>
            Key used to store the row header for future reuse in a shared pool. 
            </summary>
            <remarks>
            <para>Rows returning the same RecyclingKey will be candidate to share the same row header instances.</para>
            <para>Row header presenter lifecycle.
            <list type="number">
            <item>
            <description>If there is no recycled row header matching the recycling key, the
            method <see cref="M:C1.Silverlight.DataGrid.DataGridRow.CreateRowHeaderPresenter">CreateRowHeaderPresenter</see> will
            be called to create a new one. </description></item>
            <item>
            <description>Once the row header is created or a recycled one is taken, the
            method <see cref="M:C1.Silverlight.DataGrid.DataGridRow.BindRowHeaderPresenter(C1.Silverlight.DataGrid.DataGridRowHeaderPresenter)">BindRowHeaderPresenter</see> will be
            called. </description></item>
            <item>
            <description>When the row header is not being used the method <see cref="M:C1.Silverlight.DataGrid.DataGridRow.UnbindRowHeaderPresenter(C1.Silverlight.DataGrid.DataGridRowHeaderPresenter)">UnbindRowHeaderPresenter</see> will be called,
            and the row header will be saved for future use in other
            rows.</description></item>
            </list>
            </para>
            <para>Typically this method returns the type of the element returned by the method
            <see cref="M:C1.Silverlight.DataGrid.DataGridRow.CreateRowHeaderPresenter">CreateRowHeaderPresenter</see>.</para>
            </remarks>
            <returns>
            The recycling key, or null to disable recycling.
            </returns>
            <example>
            <c>return typeof(DataGridRowHeaderPresenter);</c>
            </example>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.CreateRowHeaderPresenter">CreateRowHeaderPresenter</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.BindRowHeaderPresenter(C1.Silverlight.DataGrid.DataGridRowHeaderPresenter)">BindRowHeaderPresenter</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.UnbindRowHeaderPresenter(C1.Silverlight.DataGrid.DataGridRowHeaderPresenter)">UnbindRowHeaderPresenter</seealso>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.CreateRowHeaderPresenter">
            <summary>
            Gets the row header presenter corresponding to this row.
            </summary>
            <remarks>
            This method is only called if no row header presenter is found in the shared
            pool matching the recycling key returned by the method <see cref="M:C1.Silverlight.DataGrid.DataGridRow.GetCellContentRecyclingKey(C1.Silverlight.DataGrid.DataGridColumn)">GetRowHeaderPresenterRecyclingKey</see>.
            </remarks>
            <returns>
            The row header presenter corresponding to this row.
            </returns>
            <example>
            <c>return new DataGridRowHeaderPresenter();</c>
            </example>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.GetRowHeaderPresenterRecyclingKey">GetRowHeaderPresenterRecyclingKey</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.BindRowHeaderPresenter(C1.Silverlight.DataGrid.DataGridRowHeaderPresenter)">BindRowHeaderPresenter</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.UnbindRowHeaderPresenter(C1.Silverlight.DataGrid.DataGridRowHeaderPresenter)">UnbindRowHeaderPresenter</seealso>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.BindRowHeaderPresenter(C1.Silverlight.DataGrid.DataGridRowHeaderPresenter)">
            <summary>
            Initializes the row header presenter.
            </summary>
            <remarks>
            This method is called after a row header is created or a recycled one is
            taken.
            </remarks>
            <param name="presenter">Row header presenter created previously</param>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.GetRowHeaderPresenterRecyclingKey">GetRowHeaderPresenterRecyclingKey</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.CreateRowHeaderPresenter">CreateRowHeaderPresenter</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.UnbindRowHeaderPresenter(C1.Silverlight.DataGrid.DataGridRowHeaderPresenter)">UnbindRowHeaderPresenter</seealso>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.UnbindRowHeaderPresenter(C1.Silverlight.DataGrid.DataGridRowHeaderPresenter)">
            <summary>
            This method is called before the column header presenter is recycled.
            </summary>
            <param name="presenter">Row header presenter currently used in this row.</param>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.GetRowHeaderPresenterRecyclingKey">GetRowHeaderPresenterRecyclingKey</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.CreateRowHeaderPresenter">CreateRowHeaderPresenter</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.BindRowHeaderPresenter(C1.Silverlight.DataGrid.DataGridRowHeaderPresenter)">BindRowHeaderPresenter</seealso>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.GetRowHeaderPresenterStyle">
            <summary>
            Gets the row header presenter style.
            </summary>
            <returns>The row header presenter style.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.HasCellPresenter(C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Determines whether should exists a cell for this row and the specified column.
            </summary>
            <param name="column">The column for which the cell presenter is
            requested.</param>
            <returns>
            <c>true</c> if should exists a cell for this row and the specified column; otherwise, <c>false</c>.
            </returns>
            <example>
            In group rows with summary should exist cells for columns which specify an
            aggregate function, but shouldn't be cells for the rest of the columns.
            </example>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.CreateCellPresenter(C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Gets the cell presenter.
            </summary>
            <param name="column">The column.</param>
            <returns>The cell presenter.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.GetCellPresenterStyle(C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Gets the cell presenter style.
            </summary>
            <returns>The cell presenter style.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.GetCellContentRecyclingKey(C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Key used to store the cell content for future reuse in a shared pool. 
            </summary>
            <remarks>
            <para>Columns returning the same RecyclingKey will be candidate to share the same cells
            content instances.</para>
            <para>Cell content lifecycle.
            <list type="number">
            <item><description>If there is no recycled cell content matching the recycling key,
            the method <see cref="M:C1.Silverlight.DataGrid.DataGridRow.CreateCellContent(C1.Silverlight.DataGrid.DataGridColumn)">CreateCellContent</see> will be called
            to create a new one. </description></item>
            <item><description>Once the cell content is created or a recycled one is taken, the
            method <see cref="M:C1.Silverlight.DataGrid.DataGridRow.BindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridColumn)">BindCellContent</see> will be called.
            </description></item>
            <item><description>When the cell content is not being used the method <see cref="M:C1.Silverlight.DataGrid.DataGridRow.UnbindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridColumn)">UnbindCellContent</see> will be called, and the cell
            content will be saved for future use in other cells.</description></item>
            </list>
            </para>
            <para>Typically this method returns the recycling key of the column passed by
            parameter. In some cases like FilterRow (row with TextBoxes in each cell to
            filter) the content of the cell is independent of the column, in this case this
            method will be overridden.</para>
            </remarks>
            <param name="column">The column for which the recycling key is being
            requested.</param>
            <returns>
            The recycling key, or null to disable recycling.
            </returns>
            <example>
            <c>return column.GetCellContentRecyclingKey(this);</c>
            </example>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.CreateCellContent(C1.Silverlight.DataGrid.DataGridColumn)">CreateCellContent</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.BindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridColumn)">BindCellContent</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.UnbindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridColumn)">UnbindCellContent</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.GetCellContentStyle(C1.Silverlight.DataGrid.DataGridColumn)">GetCellContentStyle</seealso>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.CreateCellContent(C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Creates the visual element that will be used to display the info inside a cell
            of this column.
            </summary>
            <remarks>
            This method is only called if no cell content is found in the shared pool
            matching the recycling key returned by the method <see cref="M:C1.Silverlight.DataGrid.DataGridRow.GetCellContentRecyclingKey(C1.Silverlight.DataGrid.DataGridColumn)">GetCellContentRecyclingKey</see>.
            </remarks>
            <param name="column">The column for which the cell content element is being
            requested.</param>
            <returns>
            Visual element used to display the content of a cell.
            </returns>
            <example>
            <c>return column.CreateCellContent(this);</c>
            </example>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.GetCellContentRecyclingKey(C1.Silverlight.DataGrid.DataGridColumn)">GetCellContentRecyclingKey</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.BindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridColumn)">BindCellContent</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.UnbindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridColumn)">UnbindCellContent</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.GetCellContentStyle(C1.Silverlight.DataGrid.DataGridColumn)">GetCellContentStyle</seealso>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.BindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Initializes the cell content presenter.
            </summary>
            <remarks>
            <para>This method must include cellContent
            property settings, SetBinding of the corresponding dependency property being
            "row.DataItem" the source which can be set directly in the binding or
            as DataContext of the cellContent.</para>
            <para>This method is called after a cell content is created or a recycled one is
            taken.</para>
            </remarks>
            <param name="cellContent">Visual element that will be bound in order to display
            the cell content. If the cellContent received is not the expected you'll
            probably need to override the method <see cref="M:C1.Silverlight.DataGrid.DataGridRow.GetCellContentRecyclingKey(C1.Silverlight.DataGrid.DataGridColumn)">GetCellContentRecyclingKey</see>.</param>
            <param name="column">The column for which the cell content will be
            initialized.</param>
            <example>
            <para><c>column.BindCellContent(cellContent, this);</c></para>
            </example>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.GetCellContentRecyclingKey(C1.Silverlight.DataGrid.DataGridColumn)">GetCellContentRecyclingKey</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.CreateCellContent(C1.Silverlight.DataGrid.DataGridColumn)">CreateCellContent</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.UnbindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridColumn)">UnbindCellContent</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.GetCellContentStyle(C1.Silverlight.DataGrid.DataGridColumn)">GetCellContentStyle</seealso>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.UnbindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            This method is called before the cell content is recycled.
            </summary>
            <remarks>
            If you set the DataContext in the <see cref="M:C1.Silverlight.DataGrid.DataGridRow.BindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridColumn)">BindCellContent</see> method, you must set it to null
            here to avoid memory leaking.
            </remarks>
            <param name="cellContent">Visual element which is currently bound to the
            row.</param>
            <param name="column">The column for which the cell content is currently bound.</param>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.GetCellContentRecyclingKey(C1.Silverlight.DataGrid.DataGridColumn)">GetCellContentRecyclingKey</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.CreateCellContent(C1.Silverlight.DataGrid.DataGridColumn)">CreateCellContent</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.BindCellContent(System.Windows.FrameworkElement,C1.Silverlight.DataGrid.DataGridColumn)">BindCellContent</seealso>
            <seealso cref="M:C1.Silverlight.DataGrid.DataGridRow.GetCellContentStyle(C1.Silverlight.DataGrid.DataGridColumn)">GetCellContentStyle</seealso>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.GetCellContentStyle(C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Gets the style which will be applied to the cell content.
            </summary>
            <param name="column">The column for which the cell content style is requested.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.GetCellEditingContent(C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Creates and initialize the visual element that will be used to edit the info of
            a cell belonging to this column when the cell is in edit mode.
            </summary>
            <remarks>
            <list type="bullet">
            <item>
            <description>The returned element won't be recycled, once the editing is
            finished the visual element will be discarded. if you need to release resources
            you can do it in the method EndEdit</description></item>
            <item>
            <description>It is no necessary to set the Source of the binding because the
            DataContext of the returned element will be set.</description></item></list>
            </remarks>
            <param name="column">The column for which the cell editing content is requested.</param>
            <returns>
            Visual element used to edit the data of a cell when it is in edit mode.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.BeginRowEdit">
            <summary>
            Beginnings the cell edit.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.CancelRowEdit">
            <summary>
            Cancels the row edit.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.CommitRowEdit">
            <summary>
            Commits the row edit.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.OnBeginningRowEdit">
            <summary>
            Called before the row is edited.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.OnBeganRowEdit">
            <summary>
            Called when the row is being edited.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.OnCancelingRowEdit">
            <summary>
            Called before the row changes are canceled.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.OnCanceledRowEdit">
            <summary>
            Called when the rows changes are canceled.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.OnCommitingRowEdit">
            <summary>
            Called before the row changes are committed.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.OnCommittedRowEdit">
            <summary>
            Called when the rows changes are committed.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.Validate">
            <summary>
            Validates the <see cref="P:C1.Silverlight.DataGrid.DataGridRow.DataItem"/>.
            Implement IDataErrorInfo or INotifyDataErrorInfo in order to implement your own validation rules.
            </summary>
            <remarks>After this method is executed the collection <see cref="P:C1.Silverlight.DataGrid.DataGridRow.ValidationResults"/> will contain the errors.</remarks>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.Validate(System.Boolean)">
            <summary>
            Validates the <see cref="P:C1.Silverlight.DataGrid.DataGridRow.DataItem"/>.
            Implement IDataErrorInfo or INotifyDataErrorInfo in order to implement your own validation rules.
            </summary>
            <remarks>After this method is executed the collection <see cref="P:C1.Silverlight.DataGrid.DataGridRow.ValidationResults"/> will contain the errors.</remarks>
            <param name="validateAllProperties">if set to <c>true</c> validate all properties.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRow.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:PropertyChanged"/> event.
            </summary>
            <param name="propertyName">Name of the property that changed.</param>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridRow.HeightChanged">
            <summary>
            Occurs after the height was changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridRow.IsEditingChanged">
            <summary>
            Occurs when the IsEditing value changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridRow.DetailsVisibilityChanging">
            <summary>
            Occurs before the visibility of the details of the row changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridRow.DetailsVisibilityChanged">
            <summary>
            Occurs after the visibility of the details of the row changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridRow.VisibilityChanged">
            <summary>
            Occurs after the visibility of the row changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridRow.CanUserResizeChanged">
            <summary>
            Occurs after the <see cref="P:C1.Silverlight.DataGrid.DataGridRow.CanUserResize"/> value changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridRow.CanUserToggleDetailsChanged">
            <summary>
            Occurs after the <see cref="P:C1.Silverlight.DataGrid.DataGridRow.CanUserToggleDetails"/> value changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridRow.Loaded">
            <summary>
            Occurs after the row is added to the collection of rows.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.DataGrid">
            <summary>
            Gets the data grid to which the row belongs.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.ParentCollection">
            <summary>
            Gets the collection of rows to which this row belongs.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.ShowVerticalFreezingSeparator">
            <summary>
            Gets a value indicating whether to show vertical freezing separator.
            </summary>
            <value>
            	<c>true</c> if show vertical freezing separator; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.Index">
            <summary>
            Gets the index of the row.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.Type">
            <summary>
            Gets the type of row.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.Level">
            <summary>
            Gets the grouping level of this row.
            This info will be used to indent the row if the grid data is grouped.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.IndentWidth">
            <summary>
            Gets the distance between the row header and the first cell of the row. This empty space is only present when there are groups in the data grid.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.DefaultHeight">
            <summary>
            Gets the default height of the row.
            </summary>
            <value>The default height.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.Height">
            <summary>
            Gets or sets the height of this row.
            </summary>
            <remarks>
            <para><see cref="T:C1.Silverlight.DataGrid.DataGridLength"/> supports four different modes but only <see cref="F:C1.Silverlight.DataGrid.DataGridUnitType.Pixel"/> and <see cref="F:C1.Silverlight.DataGrid.DataGridUnitType.Auto"/> are supported for rows.
            <list type="table">
            <listheader><term>Type</term><description>Description</description></listheader>
            <item><term>Pixel</term><description>The height of the row will be the same as the amount of pixels specified.</description></item>
            <item><term>Auto</term><description>The height of the row will be determined by the content of the cells in the row.</description></item>
            </list></para>
            <para>Notice <see cref="P:C1.Silverlight.DataGrid.DataGridRow.MinHeight"/> and <see cref="P:C1.Silverlight.DataGrid.DataGridRow.MaxHeight"/> has precedence over this property, that mean that if you set Height=100 and MinHeight=110 the actual value will be 110.</para>
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.MinHeight">
            <summary>
            Gets or sets the minimum height (in pixels) allowed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.MaxHeight">
            <summary>
            Gets or sets the maximum height (in pixels) allowed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.ActualHeight">
            <summary>
            Gets the actual height in pixels.
            </summary>
            <value>The actual height in pixels.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.CanUserResize">
            <summary>
            Gets or sets a value indicating whether this row can be resized by the user.
            </summary>
            <value>
            	<c>true</c> if this row can be resized by the user; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.CanUserToggleDetails">
            <summary>
            Gets or sets a value indicating whether the user can toggle details.
            </summary>
            <value>
            	<c>true</c> if the user can toggle details; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.ActualCanUserToggleDetails">
            <summary>
            Gets or sets a value indicating whether the user can toggle details, taking in consideration properties of the containing DataGrid.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.DataItem">
            <summary>
            Gets the data of the row.
            </summary>
            <value>The data of the row.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.IsDataRowLoaded">
            <summary>
            Gets a value indicating whether the data of this row had been loaded.
            </summary>
            <value>
            	<c>true</c> if the data of this row had been loaded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.ValidationResults">
            <summary>
            Gets the collection of errors associated with this row.
            Add errors here if you want to display an error message in the corresponding row header.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.ParentGroup">
            <summary>
            Gets the parent group.
            </summary>
            <remarks>
            If the row is not part of a group <c>null</c> is returned.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.Presenter">
            <summary>
            Gets the visual element that represent this row.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.HeaderPresenter">
            <summary>
            Gets the visual element that represent the header of this row.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.DetailsPresenter">
            <summary>
            Gets the visual element that will be arranged at the bottom of the row.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.IsSelected">
            <summary>
            Gets a value indicating whether this row is selected.
            </summary>
            <value>
            	<c>true</c> if this row is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.IsMouseOver">
            <summary>
            Gets a value indicating whether the mouse is over the row.
            </summary>
            <value>
            	<c>true</c> if the mouse is over the row; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.Visibility">
            <summary>
            Gets or sets the visibility of the row.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.DetailsVisibility">
            <summary>
            Gets or sets a value indicating whether this row is showing details.
            </summary>
            <value><c>true</c> if this row is showing details; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.ActualDetailsVisibility">
            <summary>
            Gets a value indicating whether this row is showing details, taking in consideration properties of the containing DataGrid.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.IsEditable">
            <summary>
            Gets a value indicating whether this row is editable.
            </summary>
            <value>
            	<c>true</c> if this row is editable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.IsSelectable">
            <summary>
            Gets or sets a value indicating whether the user is allowed to set the current cell from this row.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.IsEditing">
            <summary>
            Gets or sets a value indicating whether this row is editing.
            </summary>
            <value>
            	<c>true</c> if this row is editing; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.VerticalOffset">
            <summary>
            Gets the vertical offset in pixels. 
            </summary>
            <remarks>
            Note this offset is estimated if the row presenter or previous rows have not been displayed before.
            double.Nan is returned if the template of the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> has not been loaded.
            </remarks>
            <value>The vertical offset in pixels.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.RowStyle">
            <summary>
            Gets or sets the style of the row.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.RowHeaderStyle">
            <summary>
            Gets or sets the style applied to the row header presenter of this row.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRow.CellStyle">
            <summary>
            Gets or sets the style applied to all the cells of this row.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridRow.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridGroupRow.GroupRowsVisibilityChanged">
            <summary>
            Occurs when the rows related to the group visibility changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridGroupRow.GroupRowsVisibility">
            <summary>
            Gets or sets the visibility of the rows related to the group.
            </summary>
            <value>The visibility of the rows related to the group.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridGroupRow.GroupKeys">
            <summary>
            Gets keys that identify the group.
            </summary>
            <value>The group keys.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridGroupRow.Rows">
            <summary>
            Gets the rows inside the group.
            </summary>
            <value>The rows inside the group.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridGroupRow.Column">
            <summary>
            Gets the column related to the group.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridNewRow">
            <summary>
            Represents a <see cref="N:C1.Silverlight.DataGrid"/> new row.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridNewRow.IsEnteringNewRowChanged">
            <summary>
            Occurs when is entering a new row.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridNewRow.IsEnteringNewRowChanging">
            <summary>
            Occurs before is entering changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNewRow.IsEnteringNewRow">
            <summary>
            Gets a value indicating whether this instance is entering a new row.
            </summary>
            <value>
            	<c>true</c> if this instance is entering new row; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridRowCollection">
            <summary>
            Collection of <see cref="T:C1.Silverlight.DataGrid.DataGridRow"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.GetRow(System.Int32)">
            <summary>
            Gets a specified row.
            </summary>
            <param name="index">The index of the row.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.InsertGroup(System.Int32,C1.Silverlight.DataGrid.DataGridGroupRow)">
            <summary>
            Adds a group to the collection.
            </summary>
            <param name="group">The group to add.</param>
            <param name="index">Where the group will be added.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.InsertRow(System.Int32,System.Object)">
            <summary>
            Inserts the specified item at the specified index.
            </summary>
            <param name="addedItem">The added item.</param>
            <param name="addedLocalIndex">Where the item will be added.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.RemoveRows(C1.Silverlight.DataGrid.DataGridRow[])">
            <summary>
            Removes the specified rows.
            </summary>
            <param name="removedRows">The rows to remove.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.GetCount">
            <summary>
            Gets the count of rows.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.Contains(System.Int32)">
            <summary>
            Determines whether this collection contains a row in the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>
            	<c>true</c> if contains a row in the specified index; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.IndexOf(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Gets the index of the specified row.
            </summary>
            <param name="row">The row.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.IndexOf(System.Object)">
            <summary>
            Gets the index of the specified data item.
            </summary>
            <param name="dataItem">The data item.</param>
            <returns>The index, -1 if not found</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.Clear(System.Boolean)">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.GetLoadedRows">
            <summary>
            Gets the loaded rows until now.
            </summary>
            <returns>Collection of loaded rows</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.Load(System.Boolean,C1.Silverlight.DataGrid.GroupedField[],System.Collections.ObjectModel.ReadOnlyObservableCollection{System.Object})">
            <summary>
            Loads the groups.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.LoadGroupInDepth(System.Object[],System.String[],System.Collections.ObjectModel.ReadOnlyObservableCollection{System.Object})">
            <summary>
            Loads a group and its child recursively.
            </summary>
            <param name="groupKeys">The group keys.</param>
            <param name="groups">The groups itself.</param>
            <param name="groupedFields">The new collection of grouped columns.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.ExpandAll">
            <summary>
            Expands all the groups.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.Expand(System.Predicate{C1.Silverlight.DataGrid.DataGridGroupRow})">
            <summary>
            Expands the groups that satisfy the predicate.
            </summary>
            <param name="predicate">The predicate.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.CollapseAll">
            <summary>
            Collapses all the groups.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.Collapse(System.Predicate{C1.Silverlight.DataGrid.DataGridGroupRow})">
            <summary>
            Collapse the groups that satisfy the predicate.
            </summary>
            <param name="predicate">The predicate.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.AsEnumerable(System.Predicate{C1.Silverlight.DataGrid.DataGridRow},System.Predicate{C1.Silverlight.DataGrid.DataGridGroupRow})">
            <summary>
            Returns the row collection as IEnumerable.
            
            i.e. All rows that are not DataGridGroupRow:
            AsEnumerable((r) => !(r is DataGridGroupRow), null);
            
            i.e. All currently rows being shown (include group children of visible groups):
            AsEnumerable(null, (g) => g.GroupRowsVisibility == Visibility.Visible)
            </summary>
            <param name="predicate">The predicate.</param>
            <param name="recursionPredicate">The recursion predicate. Where to process children rows in a group or not.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.GetFirstVisibleRow">
            <summary>
            Gets the first visible row.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.GetLastVisibleRow">
            <summary>
            Gets the last visible row.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.GetVisibleRowsFromTop">
            <summary>
            Gets a collection of rows starting from the top.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.GetVisibleRowsFromBottom">
            <summary>
            Gets a collection of rows starting from the bottom.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowCollection.GetVisibleRowsFromIndex(System.Int32,System.Windows.Controls.Primitives.GeneratorDirection)">
            <summary>
            Gets a collection of rows from a specified position and direction.
            </summary>
            <param name="fromRowIndex">Index of the first row.</param>
            <param name="direction">The direction in which rows are returned.</param>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowCollection.OwnerGroup">
            <summary>
            Gets or sets the group that owns this collection of rows.
            If the collection doesn't belong to a group this property will be null.
            </summary>
            <value>The owner group.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowCollection.TopRows">
            <summary>
            Gets the collection of rows that are located on top of the item rows.
            </summary>
            <value>The top rows.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowCollection.BottomRows">
            <summary>
            Gets the collection of rows that are located at bottom of the item rows.
            </summary>
            <value>The bottom rows.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowCollection.IsLoading">
            <summary>
            Gets or sets a value indicating whether this instance is loading.
            </summary>
            <value>
            	<c>true</c> if this instance is loading; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowCollection.Count">
            <summary>
            Gets the count of rows.
            </summary>
            <value>The count of rows.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowCollection.Item(System.Object)">
            <summary>
            Gets the <see cref="T:C1.Silverlight.DataGrid.DataGridRow"/> with the specified data item.
            </summary>
            <value></value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:C1.Silverlight.DataGrid.DataGridRow"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridRowCollection.CollectionChanged">
            <summary>
            Occurs when the items list of the collection has changed, or the collection is reset.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridFilterLoadingEventArgs">
            <summary>
            Provides event data for the FilterLoading event of <see cref="T:C1.Silverlight.DataGrid.DataGridColumn"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridFilterLoadingEventArgs.Filter">
            <summary>
            Gets or sets the filter that will be used for this column.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridGettingCellValueEventArgs">
            <summary>
            Provides event data for GettingCellValue event of <see cref="T:C1.Silverlight.DataGrid.DataGridTemplateColumn"/>.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridRowEventArgs">
            <summary>
            Provides event data for events related to rows
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridRowEventArgs"/> class.
            </summary>
            <param name="dataGridRow">The data grid row.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowEventArgs.Row">
            <summary>
            Gets the row.
            </summary>
            <value>The row.</value>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGettingCellValueEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridEditingRowEventArgs"/> class.
            </summary>
            <param name="dataGridRow">The data grid row.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridGettingCellValueEventArgs.Value">
            <summary>
            Gets or sets an object that represent the value of the cell belonging to this column and specified row.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridMergingCellsEventArgs">
            <summary>
            Provides event data for merging cells events.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridMergingCellsEventArgs.Merge(C1.Silverlight.DataGrid.DataGridCellsRange)">
            <summary>
            Merges a range.
            </summary>
            <param name="range">Range to be visually merged.</param>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridColumnValueEventArgs`1">
            <summary>
            Provides event data for events related to columns and associated value
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridColumnEventArgs">
            <summary>
            Provides event data for events related to columns
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridColumnEventArgs"/> class.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnEventArgs.Column">
            <summary>
            Gets the column.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnValueEventArgs`1.#ctor(C1.Silverlight.DataGrid.DataGridColumn,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridColumnValueEventArgs`1"/> class.
            </summary>
            <param name="column">The column.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnValueEventArgs`1.Value">
            <summary>
            Gets the value associated with the column.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridColumnEditableValueEventArgs`1">
            <summary>
            Provides event data for events related to columns and associated value
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnEditableValueEventArgs`1.#ctor(C1.Silverlight.DataGrid.DataGridColumn,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridColumnEditableValueEventArgs`1"/> class.
            </summary>
            <param name="column">The column.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnEditableValueEventArgs`1.Value">
            <summary>
            Gets or sets the value associated with the column.
            </summary>
            <value>The value associated with the column.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridRowsAddedEventArgs">
            <summary>
            Provides event data for RowsAdded event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowsAddedEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridRow[])">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridRowsAddedEventArgs"/> class.
            </summary>
            <param name="addedRows">The added rows.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowsAddedEventArgs.AddedRows">
            <summary>
            Gets the added rows.
            </summary>
            <value>The added rows.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridBeginningNewRowEventArgs">
            <summary>
            Provides event data for new row beginning event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridBeginningNewRowEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridNewRow)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridBeginningNewRowEventArgs"/> class.
            </summary>
            <param name="newRow">The new row.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridBeginningNewRowEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the event is canceled.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridBeginningNewRowEventArgs.NewRow">
            <summary>
            Gets the new row.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridBeginningNewRowEventArgs.Item">
            <summary>
            Gets or sets the data item corresponding to the new row.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridCreatingRowEventArgs">
            <summary>
            Provides event data for CreatingRow event.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCreatingRowEventArgs.Type">
            <summary>
            Gets the type of row.
            </summary>
            <value>The type of row.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCreatingRowEventArgs.Row">
            <summary>
            Gets or sets the row that will be used.
            </summary>
            <value>The row.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridRowsDeletedEventArgs">
            <summary>
            Provides event data for RowsDeleted event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowsDeletedEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridRow[])">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridRowsDeletedEventArgs"/> class.
            </summary>
            <param name="deletedRows">The deleted rows.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowsDeletedEventArgs.DeletedRows">
            <summary>
            Gets the deleted rows.
            </summary>
            <value>The deleted rows.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridDeletingRowsEventArgs">
            <summary>
            Provides event data for DeletingRows event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDeletingRowsEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridRow[])">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridDeletingRowsEventArgs"/> class.
            </summary>
            <param name="rows">The deleted rows.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDeletingRowsEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the event is canceled.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDeletingRowsEventArgs.DeletedRows">
            <summary>
            Gets the deleted rows.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridEditingRowEventArgs">
            <summary>
            Provides event data for editing events.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridEditingRowEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridEditingRowEventArgs"/> class.
            </summary>
            <param name="dataGridRow">The data grid row.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridEditingRowEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:C1.Silverlight.DataGrid.DataGridEditingRowEventArgs"/> is canceled.
            </summary>
            <value><c>true</c> if canceled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridEndingNewRowEventArgs">
            <summary>
            Provides event data for ending new row events.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridEndingNewRowEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridNewRow)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridEndingNewRowEventArgs"/> class.
            </summary>
            <param name="newRow">The new row.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridEndingNewRowEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the event is canceled.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridEndingNewRowEventArgs.NewRow">
            <summary>
            Gets the new row.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridFilterChangedEventArgs">
            <summary>
            Provides event data for FilterChanged event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridFilterChangedEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridColumnValue{C1.Silverlight.DataGrid.DataGridFilterState}[],C1.Silverlight.DataGrid.DataGridColumnValue{C1.Silverlight.DataGrid.DataGridFilterState}[])">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridFilterChangedEventArgs"/> class.
            </summary>
            <param name="newFilteredColumns">Currently filtered columns.</param>
            <param name="oldFilteredColumns">Previously filtered columns.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridFilterChangedEventArgs.OldFilteredColumns">
            <summary>
            Gets previously filtered columns.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridFilterChangedEventArgs.NewFilteredColumns">
            <summary>
            Gets currently filtered columns.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridFilterChangingEventArgs">
            <summary>
             Provides event data for FilterChanging event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridFilterChangingEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridColumnValue{C1.Silverlight.DataGrid.DataGridFilterState}[])">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridFilterChangingEventArgs"/> class.
            </summary>
            <param name="columns">The columns will be filtered.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridFilterChangingEventArgs.ChangingColumns">
            <summary>
            Gets the columns will be filtered if this event is not cancelled.
            </summary>
            <value>The columns will be filtered if this event is not cancelled.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridGroupChangedEventArgs">
            <summary>
            Provides event data for group changed events.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupChangedEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridColumnValue{C1.Silverlight.DataGrid.DataGridSortDirection}[],C1.Silverlight.DataGrid.DataGridColumnValue{C1.Silverlight.DataGrid.DataGridSortDirection}[])">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridGroupChangedEventArgs"/> class.
            </summary>
            <param name="oldGroupDescriptions">Previously grouped columns.</param>
            <param name="newGroupDescriptions">Currently grouped columns.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridGroupChangedEventArgs.OldGroupedColumns">
            <summary>
            Gets previously grouped columns.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridGroupChangedEventArgs.NewGroupedColumns">
            <summary>
            Gets currently grouped columns.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridGroupChangingEventArgs">
            <summary>
             Provides event data for GroupChanging event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupChangingEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridColumnValue{C1.Silverlight.DataGrid.DataGridSortDirection}[])">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridGroupChangingEventArgs"/> class.
            </summary>
            <param name="columns">The columns will be grouped.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridGroupChangingEventArgs.ChangingColumns">
            <summary>
            Gets the columns will be grouped if this event is not cancelled.
            </summary>
            <value>The columns will be grouped if this event is not cancelled.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridSelectionChangedEventArgs">
            <summary>
            Provides event data for selection changed event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectionChangedEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridModel,System.Collections.Generic.List{C1.Silverlight.DataGrid.DataGridCellsRange},System.Collections.Generic.List{C1.Silverlight.DataGrid.DataGridCellsRange},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridSelectionChangedEventArgs"/> class.
            </summary>
            <param name="model">The model.</param>
            <param name="addedRanges">The added ranges.</param>
            <param name="removedRanges">The removed ranges.</param>
            <param name="isReadOnly">If set to true the AddedRanges and RemovedRanges collections can not be changed.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelectionChangedEventArgs.AddedRanges">
            <summary>
            Gets the ranges that has been added to the selection.
            </summary>
            <value>The added ranges.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelectionChangedEventArgs.RemovedRanges">
            <summary>
            Gets the ranges that has been removed from the selection.
            </summary>
            <value>The removed ranges.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridSelectionDragEventArgs">
            <summary>
            Provides event data for selection dragging events.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectionDragEventArgs.GetPosition(System.Windows.UIElement)">
            <summary>
            Returns the x- and y-coordinates of the mouse pointer position, optionally
            evaluated against a coordinate origin of a supplied System.Windows.UIElement.
            </summary>
            <param name="relativeTo">Any System.Windows.UIElement-derived object that is contained by the Silverlight
            plug-in and connected to the object tree. To specify the object relative
            to the overall Silverlight coordinate system, use a relativeTo value of null.</param>
            <returns>A System.Windows.Point that represents the current x- and y-coordinates of
            the mouse pointer position. If null was passed as relativeTo, this coordinate
            is for the overall Silverlight plug-in content area. If a non-null relativeTo
            was passed, this coordinate is relative to the object referenced by relativeTo.</returns>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridSelectionDragStartedEventArgs">
            <summary>
            Provides event data for selection drag started event.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelectionDragStartedEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the event is canceled.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridSortChangingEventArgs">
            <summary>
             Provides event data for SortChanging event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSortChangingEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridColumnValue{C1.Silverlight.DataGrid.DataGridSortDirection}[])">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridSortChangingEventArgs"/> class.
            </summary>
            <param name="columns">The columns will be sorted.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSortChangingEventArgs.ChangingColumns">
            <summary>
            Gets the columns will be sorted if this event is not cancelled.
            </summary>
            <value>The columns will be sorted if this event is not cancelled.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridGroupException">
            <summary>
            This error is raised when GroupBy method is called but the collection view is not ready.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridGroupException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridGroupException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridSortException">
            <summary>
            This error is raised when SortBy method is called but the collection view is not ready.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSortException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridSortException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSortException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridSortException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridFilterException">
            <summary>
            This error is raised when FilterBy method is called but the collection view is not ready.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridFilterException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridFilterException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridFilterException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridFilterException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:C1.Silverlight.DataGrid.C1DataGridFilterHelper">
            <summary>
            Provides helper methods to work with custom filters in <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGridFilterHelper.BuildFilterPredicate``1(C1.Silverlight.DataGrid.DataGridColumnValue{C1.Silverlight.DataGrid.DataGridFilterState}[],C1.Silverlight.DataGrid.DataGridFilterCombination)">
            <summary>
            Builds the filter predicate from an array of <see cref="T:C1.Silverlight.DataGrid.DataGridFilterState"/> values for a set of columns.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filterStates">The filter states.</param>
            <param name="concat">The concatenate operator to use (OR, AND).</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.C1DataGridFilterHelper.GetPropertyValue``1(System.Object,System.String)">
            <summary>
            Gets the value of a property from the name of the property for a specified object.
            </summary>
            <remarks>It supports needed and indexed property paths.</remarks>
            <typeparam name="T"></typeparam>
            <param name="source">The object to which the property path will be applied.</param>
            <param name="propertyPath">The property path.</param>
            <returns>The resulting object after applying the property path in the specified object.</returns>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridFilterManager">
            <summary>
            Manages the filters applied to the grid.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridFilterManager.#ctor(C1.Silverlight.DataGrid.DataGridModel)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridFilterManager"/> class.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridFilterManager.FilterChanged">
            <summary>
            Occurs when the filter changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridFilterManager.FilterDescriptions">
            <summary>
            Gets the filtered columns.
            </summary>
            <value>The filtered columns.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridGroupState">
            <summary>
            Sort state of a column.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupState.#ctor(C1.Silverlight.DataGrid.DataGridSortDirection,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridSortState"/> class.
            </summary>
            <param name="direction">The direction of the sort.</param>
            <param name="index">The index of the sort between columns.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupState.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridGroupState.Direction">
            <summary>
            Gets or sets the direction of the sort.
            </summary>
            <value>The direction of the sort.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridGroupState.Index">
            <summary>
            Gets or sets the index of the sort between columns.
            </summary>
            <value>The index of the sort between columns.</value>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridGroupState.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridGroupStateTypeConverter">
            <summary>
            Converts a string to a <see cref="T:C1.Silverlight.DataGrid.DataGridSortState"/>.
            Used to set a sort state from xaml.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupStateTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupStateTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridCellsRange">
            <summary>
            Specifies a range of cells determined by two cells.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.#ctor(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridCellsRange"/> class.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.#ctor(C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridCellsRange"/> class.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.#ctor(C1.Silverlight.DataGrid.DataGridColumn,C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridCellsRange"/> class.
            </summary>
            <param name="leftColumn">The left column.</param>
            <param name="rightColumn">The right column.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.#ctor(C1.Silverlight.DataGrid.DataGridRow,C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridCellsRange"/> class.
            </summary>
            <param name="topRow">The top row.</param>
            <param name="bottomRow">The bottom row.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.#ctor(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridCellsRange"/> class.
            </summary>
            <param name="cell">The cell.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.#ctor(C1.Silverlight.DataGrid.DataGridCell,C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridCellsRange"/> class.
            </summary>
            <param name="topLeftCell">The top left cell.</param>
            <param name="bottomRightCell">The bottom right cell.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.#ctor(C1.Silverlight.DataGrid.DataGridCellsRange)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridCellsRange"/> class.
            </summary>
            <param name="range">The range.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.</exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.Contains(C1.Silverlight.DataGrid.DataGridCellsRange)">
            <summary>
            Determines whether this range instance contains the specified range.
            </summary>
            <param name="range">The range.</param>
            <returns>
            	<c>true</c> if this range instance contains the specified range; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.Contains(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Determines whether this range instance contains the specified cell.
            </summary>
            <param name="cell">The cell.</param>
            <returns>
            	<c>true</c> if this range instance contains the specified cell; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.Contains(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Determines whether this range instance contains the specified row.
            </summary>
            <param name="row">The row.</param>
            <returns>
            	<c>true</c> if this range instance contains the specified row; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.Contains(C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Determines whether this range instance contains the specified column.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if this range instance contains the specified column; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.Intersects(C1.Silverlight.DataGrid.DataGridCellsRange)">
            <summary>
            Determines if this range instance intersects the specified range.
            </summary>
            <param name="range">The range.</param>
            <returns>
            	<c>true</c> if this range instance intersects the specified range; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.Subtract(C1.Silverlight.DataGrid.DataGridCellsRange)">
            <summary>
            Returns an array of ranges which is the result of subtract the specified range to this range instance.
            </summary>
            <param name="range">The range.</param>
            <returns>Returns an array of ranges which is the result of subtract the specified range to this range instance</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.IsSingleCell">
            <summary>
            Determines whether this range is a single cell.
            </summary>
            <returns>
            	<c>true</c> if this range is single cell; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.IsSingleRow">
            <summary>
            Determines whether this range is single row.
            </summary>
            <returns>
            	<c>true</c> if this range is single row; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.IsSingleColumn">
            <summary>
            Determines whether this range is single column.
            </summary>
            <returns>
            	<c>true</c> if this range is single column; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.op_Inequality(C1.Silverlight.DataGrid.DataGridCellsRange,C1.Silverlight.DataGrid.DataGridCellsRange)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="obj">The obj.</param>
            <param name="obj2">The obj2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.op_Equality(C1.Silverlight.DataGrid.DataGridCellsRange,C1.Silverlight.DataGrid.DataGridCellsRange)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="obj">The obj.</param>
            <param name="obj2">The obj2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRange.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellsRange.TopLeftCell">
            <summary>
            Gets the top left cell.
            </summary>
            <value>The top left cell.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellsRange.BottomRightCell">
            <summary>
            Gets the bottom right cell.
            </summary>
            <value>The bottom right cell.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellsRange.IsValid">
            <summary>
            Gets a value indicating whether this range is valid.
            The range will be invalid if any of its cells don't belong to the owner data grid.
            </summary>
            <value><c>true</c> if this range is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellsRange.Columns">
            <summary>
            Gets the columns that have some cell belonging to this range.
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellsRange.Rows">
            <summary>
            Gets the rows that have some cell belonging to this range.
            </summary>
            <value>The rows.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridCellsRangeCollection">
            <summary>
            Collection of <see cref="T:C1.Silverlight.DataGrid.DataGridCellsRange"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.#ctor(C1.Silverlight.DataGrid.DataGridModel,System.Collections.Generic.List{C1.Silverlight.DataGrid.DataGridCellsRange},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridCellsRangeCollection"/> class.
            </summary>
            <param name="model">The model.</param>
            <param name="ranges">The ranges.</param>
            <param name="isReadOnly">if set to <c>true</c> makes this collection read-only</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.Add(C1.Silverlight.DataGrid.DataGridCellsRange)">
            <summary>
            Adds the specified range.
            </summary>
            <param name="range">The range.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.Clear">
            <summary>
            Removes all ranges from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.Contains(C1.Silverlight.DataGrid.DataGridCellsRange)">
            <summary>
            Determines whether this collection contains the specified range.
            </summary>
            <param name="range">The range.</param>
            <returns>
            	<c>true</c> if this collection contains the specified range; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.Contains(C1.Silverlight.DataGrid.DataGridCellsRange,System.Boolean)">
            <summary>
            Determines whether this collection contains the specified range.
            </summary>
            <param name="range">The range.</param>
            <param name="isEqualToARange">if set to <c>true</c> return true only if the specified range is equal to some of the contained ranges.</param>
            <returns>
            	<c>true</c> if this collection contains the specified range; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.Contains(C1.Silverlight.DataGrid.DataGridCell,System.Boolean)">
            <summary>
            Determines whether this collection contains the specified range.
            </summary>
            <param name="cell">The cell.</param>
            <param name="isEqualToARange">if set to <c>true</c> return true only if the specified cell is equal to some of the contained ranges.</param>
            <returns>
            	<c>true</c> if this collection contains the specified range; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.Contains(C1.Silverlight.DataGrid.DataGridRow,System.Boolean)">
            <summary>
            Determines whether this collection contains the specified range.
            </summary>
            <param name="row">The row.</param>
            <param name="isEqualToARange">if set to <c>true</c> return true only if the specified row is equal to some of the contained ranges.</param>
            <returns>
            	<c>true</c> if this collection contains the specified range; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.Contains(C1.Silverlight.DataGrid.DataGridColumn,System.Boolean)">
            <summary>
            Determines whether this collection contains the specified range.
            </summary>
            <param name="column">The column.</param>
            <param name="isEqualToARange">if set to <c>true</c> return true only if the specified column is equal to some of the contained ranges.</param>
            <returns>
            	<c>true</c> if this collection contains the specified range; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.CopyTo(C1.Silverlight.DataGrid.DataGridCellsRange[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.-or-Type cannot be cast automatically to the type of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.Remove(C1.Silverlight.DataGrid.DataGridCellsRange)">
            <summary>
            Removes the specified range from the collection.
            If the specified range intersects some of the ranges in the collection, 
            the range in the collection will be split.
            </summary>
            <param name="range">The range.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.Remove(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Removes the specified row from the ranges in the collection.
            </summary>
            <param name="row">The row.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.Remove(C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Removes the specified column from the in the collection.
            </summary>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.ToString">
            <summary>
            Returns a System.String that represents a set of cell ranges.
            </summary>
            <returns>System.String that represents a set of cell ranges</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.Rows">
            <summary>
            Collection of rows that have some cell belonging to some of the contained ranges.
            </summary>
            <value>The rows.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.Columns">
            <summary>
            Collection of columns that have some cell belonging to some of the contained ranges.
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellsRangeCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.</returns>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridSelection">
            <summary>
            Manages the selected cells, columns and rows.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelection.#ctor(C1.Silverlight.DataGrid.DataGridModel)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridSelection"/> class.
            </summary>
            <param name="model">The model regarding the selection.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelection.BeginUpdate">
            <summary>
            Begins the update.
            The changes won't have effect until the EndUpdate method is called.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelection.EndUpdate">
            <summary>
            Ends the update.
            The pending changes are executed and the corresponding events are raised.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelection.EndUpdate(System.Boolean,System.Boolean)">
            <summary>
            Ends the update committing changes if specified.
            </summary>
            <param name="commitChanges">if set to <c>true</c> the pending changes are executed and the corresponding events are raised.</param>
            <param name="forceChanges">if set to <c>true</c> the ranges will not be able to be modified in the <see cref="E:C1.Silverlight.DataGrid.DataGridSelection.SelectionChanging"/> event.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelection.Add(C1.Silverlight.DataGrid.DataGridCell,C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Adds the range between <paramref name="fromCell"/> and <paramref name="toCell"/> to the selection.
            In case the selection mode didn't accept a range the <paramref name="toCell"/> will be selected.
            </summary>
            <param name="fromCell">From cell.</param>
            <param name="toCell">To cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelection.Add(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Adds a <paramref name="cell"/> to the selection.
            </summary>
            <param name="cell">The cell that will be adedd to the selection.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelection.Add(C1.Silverlight.DataGrid.DataGridCellsRange)">
            <summary>
            Adds the specified range to the selection.
            </summary>
            <param name="range">The range.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelection.Add(C1.Silverlight.DataGrid.DataGridRow,C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Adds the range between <paramref name="fromRow"/> and <paramref name="toRow"/> to the selection.
            In case the selection mode didn't accept a range the <paramref name="toRow"/> will be selected.
            </summary>
            <param name="fromRow">From row.</param>
            <param name="toRow">To row.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelection.Add(C1.Silverlight.DataGrid.DataGridColumn,C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Adds the range between <paramref name="fromColumn"/> and <paramref name="toColumn"/> to the selection.
            </summary>
            <param name="fromColumn">From column.</param>
            <param name="toColumn">To column.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelection.Remove(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Removes the specified cell considering selection mode.
            i.e. if selection mode is single or multi row the whole row containing the specified cell will be removed.
            </summary>
            <param name="cell">The cell to remove.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelection.Remove(C1.Silverlight.DataGrid.DataGridCell,C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Removes the specified range of cells considering selection mode. 
            i.e. if selection mode is multi row, column information of the specified cells will be ignored, and viceversa.
            </summary>
            <param name="fromCell">From cell.</param>
            <param name="toCell">To cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelection.Remove(C1.Silverlight.DataGrid.DataGridRow,C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Removes the specified range of cells considering selection mode.
            </summary>
            <param name="fromRow">From row.</param>
            <param name="toRow">To row.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelection.Remove(C1.Silverlight.DataGrid.DataGridColumn,C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Removes the specified range of cells considering selection mode.
            </summary>
            <param name="fromColumn">From column.</param>
            <param name="toColumn">To column.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelection.Clear">
            <summary>
            Clears the selection.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelection.Clear(System.Boolean)">
            <summary>
            Clears the selection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelection.SelectedRows">
            <summary>
            Gets the selected rows.
            </summary>
            <value>The selected rows.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelection.SelectedColumns">
            <summary>
            Gets the selected columns.
            </summary>
            <value>The selected columns.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelection.SelectedCells">
            <summary>
            Gets the selected cells.
            </summary>
            <value>The selected cells.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelection.SelectedRanges">
            <summary>
            Gets the selected ranges.
            </summary>
            <value>The selected ranges.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelection.Mode">
            <summary>
            Gets the mode that determines how the cells columns or rows will be selected.
            </summary>
            <value>The mode.</value>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridSelection.SelectionChanged">
            <summary>
            Occurs when the selection changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridSelection.SelectionChanging">
            <summary>
            Occurs when the selection is changing.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridSelectionMode">
            <summary>
            Determines the available selection modes.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridSelectionMode.None">
            <summary>
            Any element will be selected.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridSelectionMode.SingleCell">
            <summary>
            Only single cells can be selected.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridSelectionMode.SingleRow">
            <summary>
            Only a row can be selected at the same time.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridSelectionMode.SingleColumn">
            <summary>
            Only a column can be selected at the same time.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridSelectionMode.SingleRange">
            <summary>
            Only a range of cells can be selected at the same time.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridSelectionMode.MultiRow">
            <summary>
            It is possible to select more than one row at the same time using ctrl and shift keys.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridSelectionMode.MultiColumn">
            <summary>
            It is possible to select more than one column at the same time using ctrl and shift keys.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridSelectionMode.MultiRange">
            <summary>
            It is possible to select more than one cell, range of cells, columns or rows at the same time using ctrl and shift keys.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridSelectionModeExtension">
            <summary>
            Extends the SelectionMode enumeration to classify then into groups.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectionModeExtension.IsRowSelectionMode(C1.Silverlight.DataGrid.DataGridSelectionMode)">
            <summary>
            Determines whether this selection mode select rows.
            </summary>
            <param name="selectionMode">The selection mode.</param>
            <returns>
            	<c>true</c> if this selection mode select rows; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectionModeExtension.IsColumnSelectionMode(C1.Silverlight.DataGrid.DataGridSelectionMode)">
            <summary>
            Determines whether this selection mode select columns.
            </summary>
            <param name="selectionMode">The selection mode.</param>
            <returns>
            	<c>true</c> if this selection mode select columns; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectionModeExtension.IsCellSelectionMode(C1.Silverlight.DataGrid.DataGridSelectionMode)">
            <summary>
            Determines whether this selection mode select cells.
            </summary>
            <param name="selectionMode">The selection mode.</param>
            <returns>
            	<c>true</c> if this selection mode select cells; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectionModeExtension.IsSingleMode(C1.Silverlight.DataGrid.DataGridSelectionMode)">
            <summary>
            Determines whether this selection mode select only one element at a time.
            </summary>
            <param name="selectionMode">The selection mode.</param>
            <returns>
            	<c>true</c> if this selection mode select only one element at a time; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectionModeExtension.IsMultiMode(C1.Silverlight.DataGrid.DataGridSelectionMode)">
            <summary>
            Determines whether this selection mode select more than one element at a time.
            </summary>
            <param name="selectionMode">The selection mode.</param>
            <returns>
            	<c>true</c> if this selection mode select more than one element at a time; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridSelectedItemsCollection`1">
            <summary>
            Collection of selected cells, columns or rows.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectedItemsCollection`1.#ctor(System.Func{System.Int32,`0},System.Func{System.Int32},System.Func{`0,System.Boolean},System.Func{System.Collections.Generic.IEnumerable{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridSelectedItemsCollection`1"/> class.
            </summary>
            <param name="indexer">The indexer function.</param>
            <param name="count">The count function.</param>
            <param name="contains">The contains function.</param>
            <param name="enumerable">The enumerable function.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectedItemsCollection`1.Contains(`0)">
            <summary>
            Determines whether this collection contains the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if this collection contains the specified item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectedItemsCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectedItemsCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelectedItemsCollection`1.Item(System.Int32)">
            <summary>
            Gets the selected item at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelectedItemsCollection`1.Count">
            <summary>
            Gets the amount of items.
            </summary>
            <value>The amount of items.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridSelectionManager">
            <summary>
            Manages the selection.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectionManager.#ctor(C1.Silverlight.DataGrid.DataGridModel,C1.Silverlight.DataGrid.DataGridSelectionMode)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridSelectionManager"/> class.
            </summary>
            <param name="model">The model.</param>
            <param name="selectionMode">The selection mode.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectionManager.Select(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Selects the specified cell.
            </summary>
            <param name="cell">The cell.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectionManager.Select(C1.Silverlight.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
            <summary>
            Selects the specified cell.
            </summary>
            <param name="cell">The cell.</param>
            <param name="shift">if set to <c>true</c> behaves as if the shift key was pressed.</param>
            <param name="ctrl">if set to <c>true</c> behaves as if the ctrl key was pressed.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectionManager.Select(C1.Silverlight.DataGrid.DataGridCell,C1.Silverlight.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
            <summary>
            Selects the range between <paramref name="fromCell"/> and <paramref name="toCell"/>.
            </summary>
            <param name="fromCell">From cell.</param>
            <param name="toCell">To cell.</param>
            <param name="shift">if set to <c>true</c> behaves as if the shift key was pressed.</param>
            <param name="ctrl">if set to <c>true</c> behaves as if the ctrl key was pressed.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectionManager.Select(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Selects the specified row.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectionManager.Select(C1.Silverlight.DataGrid.DataGridRow,C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Selects the specified from row.
            </summary>
            <param name="fromRow">From row.</param>
            <param name="toRow">To row.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectionManager.Select(C1.Silverlight.DataGrid.DataGridRow,System.Boolean,System.Boolean)">
            <summary>
            Selects the specified row.
            </summary>
            <param name="row">The row.</param>
            <param name="shift">if set to <c>true</c> behaves as if the shift key was pressed.</param>
            <param name="ctrl">if set to <c>true</c> behaves as if the ctrl key was pressed.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectionManager.Select(C1.Silverlight.DataGrid.DataGridRow,C1.Silverlight.DataGrid.DataGridRow,System.Boolean,System.Boolean)">
            <summary>
            Selects the range between <paramref name="fromRow"/> and <paramref name="toRow"/>.
            </summary>
            <param name="fromRow">From row.</param>
            <param name="toRow">To row.</param>
            <param name="shift">if set to <c>true</c> behaves as if the shift key was pressed.</param>
            <param name="ctrl">if set to <c>true</c> behaves as if the ctrl key was pressed.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectionManager.Select(C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Selects the specified column.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectionManager.Select(C1.Silverlight.DataGrid.DataGridColumn,C1.Silverlight.DataGrid.DataGridColumn,System.Boolean,System.Boolean)">
            <summary>
            Selects the range between <paramref name="fromColumn"/> and <paramref name="toColumn"/>.
            </summary>
            <param name="fromColumn">From column.</param>
            <param name="toColumn">To column.</param>
            <param name="shift">if set to <c>true</c> behaves as if the shift key was pressed.</param>
            <param name="ctrl">if set to <c>true</c> behaves as if the ctrl key was pressed.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectionManager.Clear">
            <summary>
            Clears the selection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelectionManager.Selection">
            <summary>
            Gets the selection object which allows you to query and modify the selection.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelectionManager.SelectedRow">
            <summary>
            Gets the first selected row.
            In case there aren't selected rows return null.
            </summary>
            <value>The first selected row.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelectionManager.SelectedRows">
            <summary>
            Gets the selected rows.
            </summary>
            <value>The selected rows.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelectionManager.SelectedCells">
            <summary>
            Gets the selected cells.
            </summary>
            <value>The selected cells.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelectionManager.SelectedColumns">
            <summary>
            Gets the selected columns.
            </summary>
            <value>The selected columns.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridSortDirection">
            <summary>
            Direction of the sort state.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridSortDirection.None">
            <summary>
            Disordered.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridSortDirection.Ascending">
            <summary>
            Ascending order.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridSortDirection.Descending">
            <summary>
            Descending order.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridGroupManager">
            <summary>
            Manages the groups applied to the grid.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridGroupManager.GroupChanged">
            <summary>
            Occurs when the groups changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridGroupManager.GroupCount">
            <summary>
            Gets the amount of grouped columns.
            </summary>
            <value>The amount of grouped columns.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridGroupManager.GroupedColumns">
            <summary>
            Gets the grouped columns.
            </summary>
            <value>The grouped columns.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridNewRowManager">
            <summary>
            Manages the creation of a new row
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNewRowManager.#ctor(C1.Silverlight.DataGrid.DataGridModel)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridNewRowManager"/> class.
            </summary>
            <param name="model">The related model.</param>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridSortManager">
            <summary>
            Manages the order applied to the columns of the grid.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSortManager.#ctor(C1.Silverlight.DataGrid.DataGridModel)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridSortManager"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSortManager.SortBy(System.Boolean,C1.Silverlight.DataGrid.DataGridColumnValue{C1.Silverlight.DataGrid.DataGridSortDirection}[])">
            <summary>
            Sorts by the specified parameters.
            </summary>
            <param name="preservePreviousSorting">if set to <c>true</c> preserve previous sorting state.</param>
            <param name="columns">Collection of pairs of columns and sort directions.</param>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridSortManager.SortChanged">
            <summary>
            Occurs when the sort changed.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridSortState">
            <summary>
            Sort state of a column.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSortState.#ctor(C1.Silverlight.DataGrid.DataGridSortDirection,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridSortState"/> class.
            </summary>
            <param name="direction">The direction of the sort.</param>
            <param name="index">The index of the sort between columns.(null if not specified)</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSortState.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSortState.Direction">
            <summary>
            Gets or sets the direction of the sort.
            </summary>
            <value>The direction of the sort.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSortState.Index">
            <summary>
            Gets or sets the index of the sort between columns.
            </summary>
            <value>The index of the sort between columns.</value>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridSortState.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridCell">
            <summary>
            Represents an individual <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> cell.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCell.#ctor(C1.Silverlight.DataGrid.DataGridRow,C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridCell"/> class.
            </summary>
            <param name="row">The row regarding the cell.</param>
            <param name="column">The column regarding the cell.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCell.op_Inequality(C1.Silverlight.DataGrid.DataGridCell,C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="obj">The obj.</param>
            <param name="obj2">The obj2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCell.op_Equality(C1.Silverlight.DataGrid.DataGridCell,C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="obj">The obj.</param>
            <param name="obj2">The obj2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCell.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCell.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCell.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCell.DataGrid">
            <summary>
            Gets the owner data grid.
            </summary>
            <value>The owner data grid.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCell.Column">
            <summary>
            Gets the column.
            </summary>
            <value>The column.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCell.Row">
            <summary>
            Gets the row.
            </summary>
            <value>The row.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCell.Presenter">
            <summary>
            Gets the content of the cell.
            </summary>
            <value>The <see cref="T:C1.Silverlight.DataGrid.DataGridCellPresenter"/> corresponding to the cell.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCell.IsEditable">
            <summary>
            Gets a value indicating whether this cell is editable.
            </summary>
            <value>
            	<c>true</c> if this cell is editable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCell.IsEditing">
            <summary>
            Gets a value indicating whether this cell is being edited.
            </summary>
            <value>
            	<c>true</c> if this cell is being edited; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCell.IsSelectable">
            <summary>
            Gets a value indicating whether this cell is selectable.
            </summary>
            <value>
            	<c>true</c> if this cell is selectable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCell.IsSelected">
            <summary>
            Gets a value indicating whether this cell is selected.
            </summary>
            <value>
            	<c>true</c> if this cell is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCell.IsMouseOver">
            <summary>
            Gets a value indicating whether the mouse is over the cell.
            </summary>
            <value>
            	<c>true</c> if the mouse is over the cell; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCell.Text">
            <summary>
            Gets the text inside the cell.
            </summary>
            <value>The text inside the cell.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCell.Value">
            <summary>
            Gets the value shown in the cell.
            </summary>
            <value>The value shown the cell.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridAutoGeneratingColumnEventArgs">
            <summary>
            Provides event data for auto generating column events.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridAutoGeneratingColumnEventArgs.#ctor(System.Reflection.PropertyInfo,C1.Silverlight.DataGrid.DataGridBoundColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridAutoGeneratingColumnEventArgs"/> class.
            </summary>
            <param name="property">The property info corresponding to the generated column.</param>
            <param name="column">The column that is being generated.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridAutoGeneratingColumnEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the event is canceled.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridAutoGeneratingColumnEventArgs.Column">
            <summary>
            Gets or sets the column that is being generated.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridAutoGeneratingColumnEventArgs.Property">
            <summary>
            Gets or sets the property info corresponding to the generated column.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridBeganEditEventArgs">
            <summary>
            Provides event data for BeganEdit event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridBeganEditEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridRow,C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridBeganEditEventArgs"/> class.
            </summary>
            <param name="row">The row corresponding to the editing cell.</param>
            <param name="column">The column corresponding to the editing cell.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridBeganEditEventArgs.Column">
            <summary>
            Gets the column corresponding to the editing cell.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridBeganEditEventArgs.Row">
            <summary>
            Gets the row corresponding to the editing cell.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridBeganEditEventArgs.EditingElement">
            <summary>
            Gets the editing ui element.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridCellEventArgs">
            <summary>
            Provides event data for events related to cells.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridCellEventArgs"/> class.
            </summary>
            <param name="cell">The cell.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellEventArgs.Cell">
            <summary>
            Gets the cell.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridColumnReorderingEventArgs">
            <summary>
            Provides event data for ColumnReordering event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnReorderingEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridColumnReorderingEventArgs"/> class.
            </summary>
            <param name="column">The reordering column.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnReorderingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the event is canceled.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnReorderingEventArgs.Column">
            <summary>
            Gets the reordering column.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnReorderingEventArgs.TargetColumnIndex">
            <summary>
            Gets or sets the target index of the column.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridRowDetailsEventArgs">
            <summary>
            Provides event data for events related to row details.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowDetailsEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridRow,System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridRowDetailsEventArgs"/> class.
            </summary>
            <param name="row">The row that owns the details.</param>
            <param name="detailsElement">The details of a row.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowDetailsEventArgs.DetailsElement">
            <summary>
            Gets the details of a row.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowDetailsEventArgs.Row">
            <summary>
            Gets the row that owns the details.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridSortChangedEventArgs">
            <summary>
            Provides event data for SortChanged event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSortChangedEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridColumnValue{C1.Silverlight.DataGrid.DataGridSortDirection}[],C1.Silverlight.DataGrid.DataGridColumnValue{C1.Silverlight.DataGrid.DataGridSortDirection}[])">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridSortChangedEventArgs"/> class.
            </summary>
            <param name="oldSortedColumns">Previously sorted columns.</param>
            <param name="newSortedColumns">Currently sorted columns.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSortChangedEventArgs.OldSortedColumns">
            <summary>
            Gets previously sorted columns.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSortChangedEventArgs.NewSortedColumns">
            <summary>
            Gets currently sorted columns.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridFinalizeEditingException">
            <summary>
            This error is raised when the editing cell couldn't be committed.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridFinalizeEditingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridFinalizeEditingException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridCheckBoxFilter">
            <summary>
            Visual element that display a checkbox to filter by its value.
            </summary>
            <summary>
            Represents the default filter control for checkbox columns.
            </summary>	
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.RaisePropertyChanged(System.String)">
            <summary>
            Raises the <see cref="e:PropertyChanged"/> event.
            </summary>
            <param name="propertyName">Name of the property that was changed.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.Clear">
            <summary>
            Clears the current filter criteria and the values contained in the filter control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.Create">
            <summary>
            Creates the filter based on the current filter criteria set by the user in the filter control.
            Raises the FilterChanged event if necessary.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.Load(C1.Silverlight.DataGrid.DataGridFilterState)">
            <summary>
            Initializes the filter and filter control to the desired state.
            </summary>
            <param name="filterState">the desired state.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.SetFilter(C1.Silverlight.DataGrid.DataGridFilterState)">
            <summary>
            Sets the filter state into the control.
            </summary>
            <param name="filterState">State of the filter.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.GetFilter">
            <summary>
            Gets the filter from the control.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.MouseOverBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.MouseOverBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.PressedBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.PressedBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.InputBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.InputBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.InputForegroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.InputForeground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.FocusBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.FocusBrush"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridCheckBoxFilter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.DataGrid.DataGridCheckBoxFilter"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.IsChecked">
            <summary>
            Gets or sets whether the checkbox is checked.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.IsThreeState">
            <summary>
            Gets or sets a value indicating whether the checkbox is three state.
            </summary>
            <value>
            	<c>true</c> if the checkbox is three state; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.Filter">
            <summary>
            Gets or sets the filter shown in the unity.
            </summary>
            <value></value>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.FilterChanged">
            <summary>
            Occurs when the filter criteria changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.MouseOverBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it has the mouse over.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.PressedBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint a button when it is pressed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.InputBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that fills the background of the input control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.InputForeground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> applied to the text inside an input control when this text is not selected.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCheckBoxFilter.FocusBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the focused control.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridComboBoxFilter">
            <summary>
            Represents the default filter control for combo-box columns.
            </summary>	
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridComboBoxFilter.Clear">
            <summary>
            Clears the current filter criteria and the values contained in the filter control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridComboBoxFilter.Create">
            <summary>
            Creates the filter based on the current filter criteria set by the user in the filter control.
            Raises the FilterChanged event if necessary.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridComboBoxFilter.Load(C1.Silverlight.DataGrid.DataGridFilterState)">
            <summary>
            Initializes the filter and filter control to the desired state.
            </summary>
            <param name="filterState">the desired state.</param>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridComboBoxFilter.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridComboBoxFilter.ItemsSource"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridComboBoxFilter.MouseOverBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridComboBoxFilter.MouseOverBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridComboBoxFilter.PressedBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridComboBoxFilter.PressedBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridComboBoxFilter.InputBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridComboBoxFilter.InputBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridComboBoxFilter.InputForegroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridComboBoxFilter.InputForeground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridComboBoxFilter.FocusBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridComboBoxFilter.FocusBrush"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridComboBoxFilter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridComboBoxFilter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridComboBoxFilter.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.DataGrid.DataGridComboBoxFilter"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridComboBoxFilter.Values">
            <summary>
            Gets or sets the values displayed in the filter.
            </summary>
            <value>The values displayed in the filter.</value>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridComboBoxFilter.FilterChanged">
            <summary>
            Occurs when the filter criteria changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridComboBoxFilter.ItemsSource">
            <summary>
            Get/sets the combo values triple (value, text, checked).
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridComboBoxFilter.MouseOverBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it has the mouse over.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridComboBoxFilter.PressedBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint a button when it is pressed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridComboBoxFilter.InputBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that fills the background of the input control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridComboBoxFilter.InputForeground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> applied to the text inside an input control when this text is not selected.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridComboBoxFilter.FocusBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the focused control.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridFilterState">
            <summary>
            State of the filter.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridFilterState.Tag">
            <summary>
            Gets or sets an arbitrary object value that can be used to store custom information about the filter.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridFilterState.FilterInfo">
            <summary>
            Gets or sets a list of objects providing basic information that describe the applied filters.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.FilterInfo">
            <summary>
            Contains the filter information used to create filters for a C1DataGrid column.
            A filter can be constructed by one or more FilterInfo instances.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.FilterInfo.FilterOperation">
            <summary>
            The current filter operation: e.g. for a text filter, the
            FilterOperation is one of: 'Contains', 'StartsWith'.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.FilterInfo.FilterType">
            <summary>
            The FilterType this FilterInfo applies to: e.g. Text, CheckBox
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.FilterInfo.FilterCombination">
            <summary>
            When creating a filter using two or more FilterInfo instances,
            the filter combination is used to determine how to combine those
            instances: e.g. And, Or, None.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.FilterInfo.Value">
            <summary>
            The filter info value used when applying the filter.
            e.g. when creating a text filter: text.StartsWith("AAA"), the
            Value would be "AAA".
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.FilterOperation">
            <summary>
            Represents the valid operations to create a FilterInfo.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterOperation.Contains">
            <summary>
            Represents a contains operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterOperation.Equal">
            <summary>
            Represents an equal operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterOperation.GreaterThan">
            <summary>
            Represents a greater than operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterOperation.GreaterThanOrEqual">
            <summary>
            Represents a greater than or equal operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterOperation.IsEmpty">
            <summary>
            Represents an is empty operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterOperation.IsNotEmpty">
            <summary>
            Represents an is not empty operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterOperation.IsOneOf">
            <summary>
            Represents an is one of operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterOperation.LessThan">
            <summary>
            Represents a less than operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterOperation.LessThanOrEqual">
            <summary>
            Represents a less than or equal operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterOperation.NotEqual">
            <summary>
            Represents a not equal operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterOperation.StartsWith">
            <summary>
            Represents a starts with operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterOperation.All">
            <summary>
            Represents an all operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterOperation.None">
            <summary>
            Represents a none operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterOperation.Some">
            <summary>
            Represents a some operation
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.FilterType">
            <summary>
            Represents the valid filter types to create a FilterInfo.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterType.CheckBox">
            <summary>
            Filter for boolean types
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterType.MultiValue">
            <summary>
            Filter for list of values
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterType.DateTime">
            <summary>
            Filter for date types
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterType.Image">
            <summary>
            Filter for image types
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterType.Numeric">
            <summary>
            Filter for numeric types
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterType.Text">
            <summary>
            Filter for text types
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterType.Other">
            <summary>
            Filter for other types
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.FilterCombination">
            <summary>
            Represents the valid filter combinations to create a FilterInfo.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterCombination.None">
            <summary>
            No logical operation is applied to the filters
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterCombination.And">
            <summary>
            An And logical operation is applied to the filters
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.FilterCombination.Or">
            <summary>
            A Or logical operation is applied to the filters
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridFilterInfo">
            <summary>
            Contains the filter information used to create filters for a C1DataGrid column.
            A filter can be constructed by one or more FilterInfo instances.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridFilterInfo.FilterOperation">
            <summary>
            The current filter operation: e.g. for a text filter, the
            FilterOperation is one of: 'Contains', 'StartsWith'.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridFilterInfo.FilterType">
            <summary>
            The FilterType this FilterInfo applies to: e.g. Text, CheckBox
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridFilterInfo.FilterCombination">
            <summary>
            When creating a filter using two or more FilterInfo instances,
            the filter combination is used to determine how to combine those
            instances: e.g. And, Or, None.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridFilterInfo.Value">
            <summary>
            The filter info value used when applying the filter.
            e.g. when creating a text filter: text.StartsWith("AAA"), the
            Value would be "AAA".
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridFilterOperation">
            <summary>
            Represents the valid operations to create a FilterInfo.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterOperation.Contains">
            <summary>
            Represents a contains operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterOperation.Equal">
            <summary>
            Represents an equal operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterOperation.GreaterThan">
            <summary>
            Represents a greater than operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterOperation.GreaterThanOrEqual">
            <summary>
            Represents a greater than or equal operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterOperation.IsEmpty">
            <summary>
            Represents an is empty operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterOperation.IsNotEmpty">
            <summary>
            Represents an is not empty operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterOperation.IsOneOf">
            <summary>
            Represents an is one of operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterOperation.LessThan">
            <summary>
            Represents a less than operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterOperation.LessThanOrEqual">
            <summary>
            Represents a less than or equal operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterOperation.NotEqual">
            <summary>
            Represents a not equal operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterOperation.StartsWith">
            <summary>
            Represents a starts with operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterOperation.All">
            <summary>
            Represents an all operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterOperation.None">
            <summary>
            Represents a none operation
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterOperation.Some">
            <summary>
            Represents a some operation
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridFilterType">
            <summary>
            Represents the valid filter types to create a FilterInfo.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterType.CheckBox">
            <summary>
            Filter for boolean types
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterType.MultiValue">
            <summary>
            Filter for list of values
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterType.DateTime">
            <summary>
            Filter for date types
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterType.Image">
            <summary>
            Filter for image types
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterType.Numeric">
            <summary>
            Filter for numeric types
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterType.Text">
            <summary>
            Filter for text types
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterType.Other">
            <summary>
            Filter for other types
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridFilterCombination">
            <summary>
            Represents the valid filter combinations to create a FilterInfo.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterCombination.None">
            <summary>
            No logical operation is applied to the filters
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterCombination.And">
            <summary>
            An And logical operation is applied to the filters
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilterCombination.Or">
            <summary>
            A Or logical operation is applied to the filters
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.GroupDescription">
            <summary>
            Contains info about a group.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.GroupDescription.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.GroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,C1.Silverlight.DataGrid.DataGridGroupState)">
            <summary>
            Constructor
            </summary>
            <param name="propertyName">The property name for the group description.</param>
            <param name="converter">The converter used for the group description.</param>
            <param name="state">The state of the group.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.GroupDescription.PropertyName">
            <summary>
            Gets or sets the property name being used as the sorting criteria.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.GroupDescription.GroupConverter">
            <summary>
            Gets or sets the group converter used to get the group the data.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.GroupDescription.State">
            <summary>
            Gets or sets a value that indicates whether to sort in ascending or descending order.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridSortStateTypeConverter">
            <summary>
            Converts a string to a <see cref="T:C1.Silverlight.DataGrid.DataGridSortState"/>.
            Used to set a sort state from xaml.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSortStateTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSortStateTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="T:C1.Silverlight.DataGrid.SortDescription">
            <summary>
            Defines the direction and the property name to be used as the criteria for sorting a collection.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.SortDescription.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.SortDescription.#ctor(System.String,C1.Silverlight.DataGrid.DataGridSortState)">
            <summary>
            Constructor
            </summary>
            <param name="propertyName">The property name for the sort description.</param>
            <param name="state">The state for the sorting.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.SortDescription.PropertyName">
            <summary>
            Gets or sets the property name being used as the sorting criteria.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.SortDescription.State">
            <summary>
            Gets or sets a value that indicates whether to sort in ascending or descending order.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridLength">
            <summary>
            Describe a length which can be expressed in absolute measures like pixels or relative as auto or star.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridLength.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridLength"/> struct.
            </summary>
            <param name="pixels">The amount of pixels.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridLength.#ctor(System.Double,C1.Silverlight.DataGrid.DataGridUnitType)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridLength"/> struct.
            </summary>
            <param name="value">The value.</param>
            <param name="type">The type of unit used to express the length.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridLength.op_Equality(C1.Silverlight.DataGrid.DataGridLength,C1.Silverlight.DataGrid.DataGridLength)">
            <summary>
            Compares two DataGridLength structures for equality.
            </summary>
            <param name="gl1">The first instance of DataGridLength to compare.</param>
            <param name="gl2">The second instance of DataGridLength to compare.</param>
            <returns>true if the two instances of DataGridLength have the same value and DataGridUnitType; otherwise, false.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridLength.op_Inequality(C1.Silverlight.DataGrid.DataGridLength,C1.Silverlight.DataGrid.DataGridLength)">
            <summary>
            Compares two DataGridLength structures to determine if they are not equal.
            </summary>
            <param name="gl1">The first instance of DataGridLength to compare.</param>
            <param name="gl2">The second instance of DataGridLength to compare.</param>
            <returns>true if the two instances of DataGridLength do not have the same value and DataGridUnitType; otherwise, false.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridLength.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridLength.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridLength.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridLength.Type">
            <summary>
            Gets the type of unit.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridLength.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridLength.IsAbsolute">
            <summary>
            Gets a value indicating whether the length is expressed in pixels.
            </summary>
            <value>
            	<c>true</c> if the length is expressed in pixels; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridLength.IsAuto">
            <summary>
            Gets a value indicating whether the length is auto.
            </summary>
            <value><c>true</c> if the length is auto; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridLength.IsStar">
            <summary>
            Gets a value indicating whether the length is star.
            </summary>
            <value><c>true</c> if the length is star; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridLength.IsAutoStar">
            <summary>
            Gets a value indicating whether the length is auto star.
            </summary>
            <value>
            	<c>true</c> if the length is auto star; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridLength.Auto">
            <summary>
            Gets the auto length.
            </summary>
            <value>The auto length.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridUnitType">
            <summary>
            Describes the kind of value that DataGridLength object is holding.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridUnitType.Auto">
            <summary>
            The size is determined by the size properties of the content object.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridUnitType.Pixel">
            <summary>
            The value is expressed in pixels.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridUnitType.Star">
            <summary>
            The value is expressed as a weighted proportion of available space.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridUnitType.AutoStar">
            <summary>
            The value is expressed as a weighted proportion of available space as the Star does, 
            but its minimum value will be determined as an Auto length.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridLengthTypeConverter">
            <summary>
            Converts a string to a <see cref="T:C1.Silverlight.DataGrid.DataGridLength"/> and vice versa.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridLengthTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridLengthTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the intended conversion type of the converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotImplementedException">
            	<see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/> not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridViewport">
            <summary>
            Contains information about the visible area of the data grid, 
            like which columns and rows are being visible, size of the viewport, etc.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridViewport.ScrollToHorizontalOffset(System.Double)">
            <summary>
            Scrolls the content of the data grid to the specified horizontal offset position.
            </summary>
            <param name="horizontalOffset">The horizontal offset.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridViewport.ScrollToVerticalOffset(System.Double)">
            <summary>
            Scrolls the content of the data grid to the specified vertical offset position.
            </summary>
            <param name="verticalOffset">The vertical offset.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridViewport.VisibleRange(C1.Silverlight.DataGrid.DataGridCellsRange,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            The largest sub-range with visible edges.
            </summary>
            <returns>false if range is completely invisible</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridViewport.CellsRange">
            <summary>
            Gets the range of cells currently visible.
            </summary>
            <value>The range of cells currently visible.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridViewport.Size">
            <summary>
            Gets the size of the viewport.
            </summary>
            <value>The size of the viewport.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridViewport.ExtentSize">
            <summary>
            Gets the size of the content would take up.
            This size is estimated and could change as the scroll changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridViewport.FirstVisibleRow">
            <summary>
            Gets the top most visible row.
            </summary>
            <value>The top most visible row.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridViewport.LastVisibleRow">
            <summary>
            Gets the bottom most visible row.
            </summary>
            <value>The bottom most visible row.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridViewport.FirstVisibleColumn">
            <summary>
            Gets the left most visible column.
            </summary>
            <value>The left most visible column.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridViewport.LastVisibleColumn">
            <summary>
            Gets the right most visible column.
            </summary>
            <value>The right most visible column.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridViewport.Rows">
            <summary>
            Gets the collection of rows which are currently in the viewport.
            </summary>
            <value>The collection of rows which are currently in the viewport.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridViewport.Columns">
            <summary>
            Gets the collection of columns which are currently in the viewport.
            </summary>
            <value>The collection of columns which are currently in the viewport.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridViewport.HorizontalOffset">
            <summary>
            Gets a value that contains the horizontal offset of the scrolled content.
            </summary>
            <value>The horizontal offset.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridViewport.VerticalOffset">
            <summary>
            Gets a value that contains the vertical offset of the scrolled content.
            </summary>
            <value>The vertical offset.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy">
            <summary>
            This instance manages the keyboard events navigating through the cells.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.IDataGridInputHandlingStrategy">
            <summary>
            Input handling strategy interface
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.IDataGridInputHandlingStrategy.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the key down.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.#ctor(C1.Silverlight.DataGrid.C1DataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy"/> class.
            </summary>
            <param name="dataGrid">The data grid.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the key down.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GoToFirstCell(C1.Silverlight.DataGrid.C1DataGrid,System.Boolean,System.Boolean)">
            <summary>
            Goes to first cell.
            </summary>
            <param name="dataGrid">The data grid.</param>
            <param name="shift">if set to <c>true</c> act as if the shift key were pressed.</param>
            <param name="ctrl">if set to <c>true</c> act as if the ctrl key were pressed.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GoToLastCell(C1.Silverlight.DataGrid.C1DataGrid,System.Boolean,System.Boolean)">
            <summary>
            Goes to last cell.
            </summary>
            <param name="dataGrid">The data grid.</param>
            <param name="shift">if set to <c>true</c> act as if the shift key were pressed.</param>
            <param name="ctrl">if set to <c>true</c> act as if the ctrl key were pressed.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GoToRightMostCell(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Goes to right most cell.
            </summary>
            <param name="currentCell">The current cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GoToRightMostCell(C1.Silverlight.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
            <summary>
            Goes to right most cell.
            </summary>
            <param name="currentCell">The current cell.</param>
            <param name="shift">if set to <c>true</c> act as if the shift key were pressed.</param>
            <param name="ctrl">if set to <c>true</c> act as if the ctrl key were pressed.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GoToLeftMostCell(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Goes to left most cell.
            </summary>
            <param name="currentCell">The current cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GoToLeftMostCell(C1.Silverlight.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
            <summary>
            Goes to left most cell.
            </summary>
            <param name="currentCell">The current cell.</param>
            <param name="shift">if set to <c>true</c> act as if the shift key were pressed.</param>
            <param name="ctrl">if set to <c>true</c> act as if the ctrl key were pressed.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GoToRightCell(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Goes to the cell on the right.
            </summary>
            <param name="currentCell">The current cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GoToRightCell(C1.Silverlight.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
            <summary>
            Goes to the cell on the right
            </summary>
            <param name="currentCell">The current cell.</param>
            <param name="shift">if set to <c>true</c> act as if the shift key were pressed.</param>
            <param name="ctrl">if set to <c>true</c> act as if the ctrl key were pressed.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GoToLeftCell(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Goes to the cell on the left.
            </summary>
            <param name="currentCell">The current cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GoToLeftCell(C1.Silverlight.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
            <summary>
            Goes to the cell on the left.
            </summary>
            <param name="currentCell">The current cell.</param>
            <param name="shift">if set to <c>true</c> act as if the shift key were pressed.</param>
            <param name="ctrl">if set to <c>true</c> act as if the ctrl key were pressed.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GoToDownCell(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Goes to down cell.
            </summary>
            <param name="currentCell">The current cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GoToDownCell(C1.Silverlight.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
            <summary>
            Goes to down cell.
            </summary>
            <param name="currentCell">The current cell.</param>
            <param name="shift">if set to <c>true</c> act as if the shift key were pressed.</param>
            <param name="ctrl">if set to <c>true</c> act as if the ctrl key were pressed.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GoToUpCell(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Goes to up cell.
            </summary>
            <param name="currentCell">The current cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GoToUpCell(C1.Silverlight.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
            <summary>
            Goes to up cell.
            </summary>
            <param name="currentCell">The current cell.</param>
            <param name="shift">if set to <c>true</c> act as if the shift key were pressed.</param>
            <param name="ctrl">if set to <c>true</c> act as if the ctrl key were pressed.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GoToTopCell(C1.Silverlight.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
            <summary>
            Goes to top cell.
            </summary>
            <param name="currentCell">The current cell.</param>
            <param name="shift">if set to <c>true</c> act as if the shift key were pressed.</param>
            <param name="ctrl">if set to <c>true</c> act as if the ctrl key were pressed.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GoToBottomCell(C1.Silverlight.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
            <summary>
            Goes to bottom cell.
            </summary>
            <param name="currentCell">The current cell.</param>
            <param name="shift">if set to <c>true</c> act as if the shift key were pressed.</param>
            <param name="ctrl">if set to <c>true</c> act as if the ctrl key were pressed.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.SetCurrentCell(C1.Silverlight.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
            <summary>
            Sets the current cell.
            </summary>
            <param name="cell">The cell.</param>
            <param name="shift">if set to <c>true</c> act as if the shift key were pressed.</param>
            <param name="ctrl">if set to <c>true</c> act as if the ctrl key were pressed.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GetLeftMostCell(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Gets the left most visible cell regarding to the current cell.
            </summary>
            <param name="currentCell">The current cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GetLeftMostVisibleColumn(C1.Silverlight.DataGrid.C1DataGrid)">
            <summary>
            Gets the left most visible column.
            </summary>
            <param name="dataGrid">The data grid.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GetRightMostCell(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Gets the right most visible cell regarding to the current cell.
            </summary>
            <param name="currentCell">The current cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GetRightMostVisibleColumn(C1.Silverlight.DataGrid.C1DataGrid)">
            <summary>
            Gets the right most visible column.
            </summary>
            <param name="dataGrid">The data grid.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GetTopVisibleRow(C1.Silverlight.DataGrid.C1DataGrid)">
            <summary>
            Gets the top visible row.
            </summary>
            <param name="dataGrid">The data grid.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GetBottomVisibleRow(C1.Silverlight.DataGrid.C1DataGrid)">
            <summary>
            Gets the bottom visible row.
            </summary>
            <param name="dataGrid">The data grid.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GetTopCell(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Gets the top visible cell regarding to the current cell.
            </summary>
            <param name="currentCell">The current cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GetBottomCell(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Gets the bottom visible cell regarding to the current cell.
            </summary>
            <param name="currentCell">The current cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GetNextVisibleColumn(C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Gets the next visible column regarding to the current column.
            </summary>
            <param name="currentColumn">The current column.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GetPreviousVisibleColumn(C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Gets the previous visible column regarding to the current column.
            </summary>
            <param name="currentColumn">The current column.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GetNextVisibleRow(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Gets the next visible row regarding to the current row.
            </summary>
            <param name="currentRow">The current row.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GetPreviousVisibleRow(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Gets the previous visible row regarding to the current row.
            </summary>
            <param name="currentRow">The current row.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GetNextEditableCell(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Gets the next editable cell regarding to the current cell.
            </summary>
            <param name="currentCell">The current cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GetPreviousEditableCell(C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Gets the previous editable cell regarding to the current cell.
            </summary>
            <param name="currentCell">The current cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GetClipboardContent">
            <summary>
            Gets the text that will be the content of the clipboard.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.GetFormattedSelection(System.String,System.String,System.Boolean)">
            <summary>
            Gets a text representing the selection formatted.
            </summary>
            <param name="separator">The separator between column.</param>
            <param name="lineSeparator">The line separator.</param>
            <param name="generateColumnTitles">if set to <c>true</c> generate a row for column titles.</param>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.DataGrid">
            <summary>
            Gets the owner data grid.
            </summary>
            <value>The owner data grid.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDefaultInputHandlingStrategy.SelectionManager">
            <summary>
            Gets the selection manager which allow you to manipulate the selection.
            </summary>
            <value>The selection manager which allow you to manipulate the selection.</value>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNewInputHandlingStrategy.GoToRightCell(C1.Silverlight.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
            <summary>
            Goes to the cell on the right.
            </summary>
            <param name="currentCell">The current cell.</param>
            <param name="shift">if set to <c>true</c> act as if the shift key were pressed.</param>
            <param name="ctrl">if set to <c>true</c> act as if the ctrl key were pressed.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNewInputHandlingStrategy.GoToLeftCell(C1.Silverlight.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
            <summary>
            Goes to the cell on the left.
            </summary>
            <param name="currentCell">The current cell.</param>
            <param name="shift">if set to <c>true</c> act as if the shift key were pressed.</param>
            <param name="ctrl">if set to <c>true</c> act as if the ctrl key were pressed.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNewInputHandlingStrategy.GoToUpCell(C1.Silverlight.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
            <summary>
            Goes to up cell.
            </summary>
            <param name="currentCell">The current cell.</param>
            <param name="shift">if set to <c>true</c> act as if the shift key were pressed.</param>
            <param name="ctrl">if set to <c>true</c> act as if the ctrl key were pressed.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNewInputHandlingStrategy.GoToDownCell(C1.Silverlight.DataGrid.DataGridCell,System.Boolean,System.Boolean)">
            <summary>
            Goes to down cell.
            </summary>
            <param name="currentCell">The current cell.</param>
            <param name="shift">if set to <c>true</c> act as if the shift key were pressed.</param>
            <param name="ctrl">if set to <c>true</c> act as if the ctrl key were pressed.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNewInputHandlingStrategy.GetNextSelectableRows(C1.Silverlight.DataGrid.DataGridCell,System.Windows.Controls.Primitives.GeneratorDirection)">
            <summary>
            Gets the next visible and selectable rows according to the direction specified.
            </summary>
            <param name="currentCell">The current cell.</param>
            <param name="direction">The direction.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNewInputHandlingStrategy.GetNextSelectableRows(C1.Silverlight.DataGrid.DataGridRow,System.Windows.Controls.Primitives.GeneratorDirection)">
            <summary>
            Gets the next visible and selectable rows according to the direction specified.
            </summary>
            <param name="currentRow">The current row.</param>
            <param name="direction">The direction.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNewInputHandlingStrategy.GetNextSelectableColumns(C1.Silverlight.DataGrid.DataGridCell,System.Windows.Controls.Primitives.GeneratorDirection)">
            <summary>
            Gets the next visible and selectable columns according to the direction specified.
            </summary>
            <param name="currentCell">The current cell.</param>
            <param name="direction">The direction.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNewInputHandlingStrategy.GetNextSelectableColumns(C1.Silverlight.DataGrid.DataGridColumn,System.Windows.Controls.Primitives.GeneratorDirection)">
            <summary>
            Gets the next visible and selectable columns according to the direction specified.
            </summary>
            <param name="currentColumn">The current column.</param>
            <param name="direction">The direction.</param>
            <returns></returns>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter">
            <summary>
            Represent the visual element of a row which contains an element for selection and mouse over.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridRowPresenter">
            <summary>
            Represent the visual element of a row.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowPresenter.Load">
            <summary>
            Called after a row presenter is added to the visual tree.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowPresenter.Unload">
            <summary>
            Called before a row presenter is removed from the visual tree.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowPresenter.UpdateSelection">
            <summary>
            Updates the selection state.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowPresenter.UpdateEditingRow">
            <summary>
            Updates the editing state.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowPresenter.UpdateMouseOver">
            <summary>
            Updates the mouse over state.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowPresenter.UpdateValidationState">
            <summary>
            Updates the validation state.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowPresenter.UpdateCurrentCell">
            <summary>
            Updates the current cell.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowPresenter.UpdateLines">
            <summary>
            Updates the border lines of the cells.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowPresenter.UnloadCells">
            <summary>
            Unloads the cells from the row.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowPresenter.RaisePropertyChanged(System.String)">
            <summary>
            Raises the property changed event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowPresenter.ChangeVisualStateValidation(System.Boolean)">
            <summary>
            Updates the current visual state of the Validation visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowPresenter.HorizontalGridLineVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowPresenter.HorizontalGridLineVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowPresenter.HorizontalGridLineBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowPresenter.HorizontalGridLineBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowPresenter.HorizontalGridLineOpacityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowPresenter.HorizontalGridLineOpacity"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowPresenter.CellsAreaMarginProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowPresenter.CellsAreaMargin"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowPresenter.RowAreaMarginProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowPresenter.RowAreaMargin"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowPresenter.ValidationStateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowPresenter.ValidationState"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowPresenter.ValidationResultsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowPresenter.ValidationResults"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowPresenter.BackgroundBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowPresenter.BackgroundBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowPresenter.ValidationBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowPresenter.ValidationBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowPresenter.VerticalGridLineVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowPresenter.VerticalGridLineVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowPresenter.VerticalGridLineBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowPresenter.VerticalGridLineBrush"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowPresenter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridRowPresenter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowPresenter.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.DataGrid.DataGridRowPresenter"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowPresenter.Row">
            <summary>
            Gets the row associated with this presenter.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowPresenter.DataGrid">
            <summary>
            Gets the data grid associated with this presenter.
            </summary>
            <value>The row.</value>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridRowPresenter.MouseLeftButtonDown">
            <summary>
            Occurs when preview mouse left button down.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowPresenter.CellsPanel">
            <summary>
            Gets the cells panel inside this row presenter.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowPresenter.Item(C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Gets the <see cref="T:C1.Silverlight.DataGrid.DataGridCellPresenter"/> with the specified column.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridRowPresenter.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowPresenter.HorizontalGridLineVisibility">
            <summary>
            Gets or sets the visibility of the horizontal grid lines of this row, If true, the horizontal grid lines are shown.
            </summary>
            <remarks>
            This property is controlled by the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> to which the presenter belongs.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowPresenter.HorizontalGridLineBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the horizontal grid lines.
            </summary>
            <remarks>
            This property is controlled by the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> to which the presenter belongs.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowPresenter.HorizontalGridLineOpacity">
            <summary>
            Gets or sets the opacity of the horizontal grid line.
            </summary>
            <remarks>
            This property is controlled by the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> to which the presenter belongs.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowPresenter.CellsAreaMargin">
            <summary>
            Gets or sets a <see cref="T:Margin"/> that can be applied to a <see cref="T:System.Windows.UIElement"/> locating the element in the area where the cells are shown, typically this margin is applied to the  cells panel.
            </summary>
            <remarks>
            This property is controlled by the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> to which the presenter belongs.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowPresenter.RowAreaMargin">
            <summary>
            Gets or sets a <see cref="T:Margin"/> that can be applied to a <see cref="T:System.Windows.UIElement"/> inside a row presenter ensuring the element won't be scrolled even whether the row is scrollable.
            </summary>
            <remarks>
            This property is controlled by the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> to which the presenter belongs.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowPresenter.ValidationState">
            <summary>
            Gets or sets the <see cref="P:C1.Silverlight.DataGrid.DataGridRowPresenter.ValidationState"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowPresenter.ValidationResults">
            <summary>
            Gets or sets a collection of ValidationResult related to the corresponding row. When the number of errors is greater than 0 the background of the row will became red.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowPresenter.BackgroundBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used in the background of the row.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowPresenter.ValidationBackground">
            <summary>
            Gets or sets the brush used to paint the background of the validation elements.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowPresenter.VerticalGridLineVisibility">
            <summary>
            Gets or sets the visibility of the vertical grid lines of this row, If true, the vertical grid lines are shown.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowPresenter.VerticalGridLineBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the vertical grid lines.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.UpdateSelection">
            <summary>
            Updates the selection state.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.UpdateEditingRow">
            <summary>
            Updates the editing state.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.UpdateMouseOver">
            <summary>
            Updates the mouse over state.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseEnter"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeave"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.ChangeVisualStateSelection(System.Boolean)">
            <summary>
            Updates the current visual state of the Selection visual state group to match the object's properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.ChangeVisualStateCommon(System.Boolean)">
            <summary>
            Updates the current visual state of the Common visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.IsSelected"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.IsEditingProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.IsEditing"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.IsMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.IsMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.ForceMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.ForceMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.MouseOverBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.MouseOverBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.PressedBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.PressedBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.SelectedBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.SelectedBackground"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.IsSelected">
            <summary>
            Gets or sets a value indicating whether this cell is currently selected.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.IsEditing">
            <summary>
            Gets or sets a value indicating whether this cell is currently editing.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.IsMouseOver">
            <summary>
            Returns true if the mouse is over the control.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.IsMouseOverChanged">
            <summary> 
            Event raised when the <see cref="P:IsMouseOver"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.ForceMouseOver">
            <summary>
            Set to true to force the mouse over visual state.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.MouseOverBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it has the mouse over.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.PressedBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint a button when it is pressed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridSelectableRowPresenter.SelectedBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it is selected.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridScrollManager.PageUp">
            <summary>
            Scrolls a page up.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridScrollManager.PageDown">
            <summary>
            Scrolls a page down.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridScrollManager.ScrollSteps(System.Int32)">
            <summary>
            Scrolls a specified number of steps.
            </summary>
            <param name="stepsCount">The steps count.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridView.GetCellFromPoint(System.Windows.Point,System.Boolean)">
            <summary>
            Gets the cell from a point in the system coordinates.
            </summary>
            <param name="intersectingPoint">The intersecting point in the system coordinates.</param>
            <param name="useVisualTree">If <c>true</c> it will walk the visual tree until a <see cref="T:C1.Silverlight.DataGrid.DataGridCellPresenter"/> is found, otherwise it will calculate the cell coordinates from the given point and viewport information.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridView.SetMouseOverRow(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Sets the row which the mouse is over.
            null, to set no mouse over row.
            </summary>
            <param name="row">Row that has the mouse over.</param>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridViewProperties">
            <summary>
            Contains extra information of the view.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridViewProperties.CellsAreaMargin">
            <summary>
            Gets the margin of the cells area. Zero if there are no grouped columns.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridViewProperties.IsDraggingVerticalFreezingSeparator">
            <summary>
            Gets or sets a value indicating if the vertical freezing separator is being dragged.
            </summary>
            <value>
            	<c>true</c> if the vertical freezing separator is being dragged; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridViewProperties.IsOverVerticalFreezingSeparator">
            <summary>
            Gets or sets a value indicating if the mouse is over vertical freezing separator.
            </summary>
            <value>
            	<c>true</c> if the mouse is over vertical freezing separator; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridViewProperties.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridColumnHeaderRow">
            <summary>
            Represents a <see cref="N:C1.Silverlight.DataGrid"/> row whose cells are column headers.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridCellPresenter">
            <summary>
            Represent the visual element of a cell.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.Load">
            <summary>
            Occurs after a cell is added to the visual tree.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.Unload">
            <summary>
            Occurs before a cell is removed from the visual tree.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.OnContentChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property changes.
            </summary>
            <param name="oldContent">The old value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property.</param>
            <param name="newContent">The new value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property.</param>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCellPresenter.MergedRangeProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCellPresenter.MergedRange"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.UpdateSelection">
            <summary>
            Updates the selection state.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseMove"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseEnter"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeave"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.UpdateMouseOver">
            <summary>
            Updates the mouse over state.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.UpdateValidationState">
            <summary>
            Updates the validation state.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.UpdateLines">
            <summary>
            Updates the border lines.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.UpdateCurrentCell">
            <summary>
            Updates the current cell.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.UpdateEditingCell">
            <summary>
            Updates the editing cell state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.RaisePropertyChanged(System.String)">
            <summary>
            Raises the property changed event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.ChangeVisualStateSelection(System.Boolean)">
            <summary>
            Updates the current visual state of the Selection visual state group to match the object's properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.ChangeVisualStateValidation(System.Boolean)">
            <summary>
            Updates the current visual state of the Validation visual state group to match the object's properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.ChangeVisualStateCommon(System.Boolean)">
            <summary>
            Updates the current visual state of the Common visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCellPresenter.FocusStyleProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCellPresenter.FocusStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCellPresenter.CornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCellPresenter.CornerRadius"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCellPresenter.IsCurrentProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCellPresenter.IsCurrent"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCellPresenter.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCellPresenter.IsSelected"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCellPresenter.IsEditingProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCellPresenter.IsEditing"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCellPresenter.ValidationStateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCellPresenter.ValidationState"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCellPresenter.LeftLineBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCellPresenter.LeftLineBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCellPresenter.TopLineBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCellPresenter.TopLineBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCellPresenter.RightLineBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCellPresenter.RightLineBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCellPresenter.BottomLineBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCellPresenter.BottomLineBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCellPresenter.ValidationBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCellPresenter.ValidationBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCellPresenter.IsMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCellPresenter.IsMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCellPresenter.ForceMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCellPresenter.ForceMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCellPresenter.MouseOverBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCellPresenter.MouseOverBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCellPresenter.PressedBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCellPresenter.PressedBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridCellPresenter.SelectedBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridCellPresenter.SelectedBackground"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridCellPresenter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellPresenter.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.DataGrid.DataGridCellPresenter"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.MergedRange">
            <summary>
            Gets the merged range this cell belongs to.
            </summary>
            <value>The merged range.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.MergedSize">
            <summary>
            The size of all cells spanned by this presenter.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.DataGrid">
            <summary>
            Gets the data grid which contains the cell.
            </summary>
            <value>The data grid which contains the cell.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.Row">
            <summary>
            Gets the row associated with this presenter.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.Column">
            <summary>
            Gets the column associated with this presenter.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.Cell">
            <summary>
            Gets the cell associated with this presenter.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridCellPresenter.MouseLeftButtonDown">
            <summary>
            Occurs when the left mouse button is pressed (or when the tip of the stylus touches the tablet) while the mouse pointer is over a <see cref="T:System.Windows.UIElement"/>.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridCellPresenter.MouseLeftButtonUp">
            <summary>
            Occurs when the left mouse button is released (or the tip of the stylus is removed from the tablet) while the mouse (or the stylus) is over a <see cref="T:System.Windows.UIElement"/> (or while a <see cref="T:System.Windows.UIElement"/> holds mouse capture).
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridCellPresenter.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.IsLoading">
            <summary>
            This flag is used to avoid unloading a cell while is being loaded.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.FocusStyle">
            <summary>
            Gets or sets the style of the focus element which is inside each cell.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.CornerRadius">
            <summary>
            Gets or sets the radius for the corners of the cell.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.IsCurrent">
            <summary>
            Gets or sets a value indicating whether this cell is the current cell.
            </summary>
            <remarks>
            This property is controlled by the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> to which the presenter belongs.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.IsSelected">
            <summary>
            Gets or sets a value indicating whether this cell is currently selected.
            </summary>
            <remarks>
            This property is controlled by the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> to which the presenter belongs.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.IsEditing">
            <summary>
            Gets or sets a value indicating whether this cell is currently editing.
            </summary>
            <remarks>
            This property is controlled by the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> to which the presenter belongs.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.ValidationState">
            <summary>
            Gets or sets the <see cref="P:C1.Silverlight.DataGrid.DataGridCellPresenter.ValidationState"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.LeftLineBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint the left line.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.TopLineBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint the top line.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.RightLineBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint the right line.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.BottomLineBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint the bottom line.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.ValidationBackground">
            <summary>
            Gets or sets the brush used to paint the background of the validation elements.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.IsMouseOver">
            <summary>
            Returns true if the mouse is over the control.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridCellPresenter.IsMouseOverChanged">
            <summary> 
            Event raised when the <see cref="P:IsMouseOver"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.ForceMouseOver">
            <summary>
            Set to true to force the mouse over visual state.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.MouseOverBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it has the mouse over.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.PressedBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint a button when it is pressed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellPresenter.SelectedBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it is selected.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridCellsPanel">
            <summary>
            Panel which contains the cells.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.RecyclingPanel">
            <summary>
            Base panel which manages the recycling life of its items.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.RecyclingPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.RecyclingPanel"/> class.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.RecyclingPanel.ClipPresenterHorizontally(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Clips the presenter horizontally.
            </summary>
            <param name="presenter">The presenter.</param>
            <param name="presenterRenderWidth">Render width of the presenter.</param>
            <param name="presenterRenderHeight">Render height of the presenter.</param>
            <param name="topOffset">The top offset.</param>
            <param name="bottomOffset">The bottom offset.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.RecyclingPanel.ClipPresenterVertically(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Clips the presenter vertically.
            </summary>
            <param name="presenter">The presenter.</param>
            <param name="presenterRenderWidth">Render width of the presenter.</param>
            <param name="presenterRenderHeight">Render height of the presenter.</param>
            <param name="leftOffset">The left offset.</param>
            <param name="rightOffset">The right offset.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.RecyclingPanel.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity"/>) can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsPanel.UpdateSelection">
            <summary>
            Updates the selection state.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsPanel.UpdateMouseOver">
            <summary>
            Updates the mouse over state.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsPanel.UpdateValidationState">
            <summary>
            Updates the validation state.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsPanel.UpdateCurrentCell">
            <summary>
            Updates the current cell.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsPanel.UpdateLines">
            <summary>
            Updates border lines of the cells.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridCellsPanel.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridCellsPanel"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridCellsPanel.RowPresenter">
            <summary>
            Gets the parent row presenter.
            </summary>
            <value>The row presenter.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridDetailsPresenter">
            <summary>
            Represent the visual element of the details of a row.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDetailsPresenter.HorizontalGridLineVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridDetailsPresenter.HorizontalGridLineVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridDetailsPresenter.HorizontalGridLineBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridDetailsPresenter.HorizontalGridLineBrush"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridDetailsPresenter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridDetailsPresenter"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDetailsPresenter.Row">
            <summary>
            Gets the row the detail belongs to.
            </summary>
            <value>The row.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDetailsPresenter.DataGrid">
            <summary>
            Gets the data grid the detail belongs to.
            </summary>
            <value>The data grid.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDetailsPresenter.HorizontalGridLineVisibility">
            <summary>
            Gets or sets the visibility of the horizontal grid lines of this row, If true, the horizontal grid lines are shown.
            </summary>
            <remarks>
            This property is controlled by the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> to which the presenter belongs.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridDetailsPresenter.HorizontalGridLineBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to display the horizontal grid lines.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridGroupColumnHeaderPresenter">
            <summary>
            Represent the visual element of an item of the grouping panel.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter">
            <summary>
            Content Control that represent the header of a column, 
            this control contains the sort, resize and filter elements.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.Load">
            <summary>
            Called after the column header has been added to the visual tree.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.Unload">
            <summary>
            Called before the column header has been removed from the visual tree.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseEnter"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeave"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.UpdateMouseOver">
            <summary>
            Updates the mouse over state.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.RaisePropertyChanged(System.String)">
            <summary>
            Raises the property changed event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.ChangeVisualStateOptions(System.Boolean)">
            <summary>
            Updates the current visual state of the Options visual state group to match the object's properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.ChangeVisualStateSelection(System.Boolean)">
            <summary>
            Updates the current visual state of the Selection visual state group to match the object's properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.ChangeVisualStateMerging(System.Boolean)">
            <summary>
            Updates the current visual state of the Merging visual state group to match the object's properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.ChangeVisualStateCommon(System.Boolean)">
            <summary>
            Updates the current visual state of the Common visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsFilteringProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsFiltering"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsInGroupingPanelProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsInGroupingPanel"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsSelected"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsEditingProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsEditing"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsMergingProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsMerging"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.ForceMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.ForceMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.MouseOverBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.MouseOverBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.PressedBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.PressedBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.SelectedBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.SelectedBackground"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.Column">
            <summary>
            Gets the column.
            </summary>
            <value>The column.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.DataGrid">
            <summary>
            Gets the owner data grid.
            </summary>
            <value>The owner data grid.</value>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.Resizing">
            <summary>
            Occurs when the column header is resized.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.Resized">
            <summary>
            Occurs when the column header is resized.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.AutoSized">
            <summary>
            Occurs when the column header is auto sized.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.FilterChanged">
            <summary>
            Occurs when the state of the filter changed.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.FilterOpened">
            <summary>
            Occurs when the filter control of a column is opened.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.FilterLoading">
            <summary>
            Occurs before the filter control of a column is opened.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.Filter">
            <summary>
            Gets or sets the filter used to filter the data in the column.
            </summary>
            <value>The filter.</value>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsFiltering">
            <summary>
            Gets or sets a value indicating whether this column is currently filtering data or not.
            </summary>
            <remarks>
            If this property is set to true the visual state group "OptionsStates" will change its visual state to "Filtering".
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsInGroupingPanel">
            <summary>
            Gets or sets a value indicating whether the column header is in the grouping panel or not.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsSelected">
            <summary>
            Gets or sets a value indicating whether the column to which this header belongs is currently selected or not.
            </summary>
            <remarks>
            If this property is set to true the visual state group "CommonStates" will change its visual state to "Selected".
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsEditing">
            <summary>
            Gets or sets a value indicating whether the column to which this header belongs is currently being edited.
            </summary>
            <remarks>
            If this property is set to true the visual state group "CommonStates" will change its visual state to "Editing".
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsMerging">
            <summary>
            Gets or sets a value indicating whether the header may get merged.
            </summary>
            <remarks>
            If this property is set to true the visual state group "MergingStates" will change its visual state to "Merging".
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsMouseOver">
            <summary>
            Returns true if the mouse is over the control.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.IsMouseOverChanged">
            <summary> 
            Event raised when the <see cref="P:IsMouseOver"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.ForceMouseOver">
            <summary>
            Set to true to force the mouse over visual state.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.MouseOverBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it has the mouse over.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.PressedBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint a button when it is pressed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnHeaderPresenter.SelectedBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it is selected.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupColumnHeaderPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridGroupColumnHeaderPresenter"/> class.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridRowsPanel">
            <summary>
            Main Panel of the data grid which contains the rows and details.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowsPanel.InvalidateRowsMeasure">
            <summary>
            Invalidates the measure of the rows.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowsPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity"/>) can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowsPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowsPanel.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridRowsPanel"/>.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.ScaleMode">
            <summary>
            Specifies how the grid content should be scaled to fit the page.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.ScaleMode.ActualSize">
            <summary>
            Render the grid in actual size, breaking pages as needed.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.ScaleMode.PageWidth">
            <summary>
            Scale the grid so it fits the page width.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.ScaleMode.SinglePage">
            <summary>
            Scale the grid so it fits on a single page.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.PrintManager.GetNextPage(System.Boolean@)">
            <summary>
            Called with print grid's height == content area height
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.PrintManager.ShowPageInfo">
            <summary>
            Indicates whether page info like a page number should be exposed in generated printout.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.AddNewRow">
            <summary>
              Looks up a localized string similar to Click here to add a new row.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.CheckBoxFilter_Checked">
            <summary>
              Looks up a localized string similar to Checked :.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.ComboBoxFilter_SelectAll">
            <summary>
              Looks up a localized string similar to Select All.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.DateTimeFilter_End">
            <summary>
              Looks up a localized string similar to End.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.DateTimeFilter_Start">
            <summary>
              Looks up a localized string similar to Start.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.EmptyGroupPanel">
            <summary>
              Looks up a localized string similar to Drag a column here to group by that column.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.Filter_Clear">
            <summary>
              Looks up a localized string similar to Clear.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.Filter_Filter">
            <summary>
              Looks up a localized string similar to Filter.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.NumericFilter_And">
            <summary>
              Looks up a localized string similar to And.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.NumericFilter_Equals">
            <summary>
              Looks up a localized string similar to Equals.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.NumericFilter_GraterOrEquals">
            <summary>
              Looks up a localized string similar to Greater/Equals.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.NumericFilter_Greater">
            <summary>
              Looks up a localized string similar to Greater.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.NumericFilter_Less">
            <summary>
              Looks up a localized string similar to Less.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.NumericFilter_LessOrEquals">
            <summary>
              Looks up a localized string similar to Less/Equals.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.NumericFilter_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.NumericFilter_NotEquals">
            <summary>
              Looks up a localized string similar to Not Equals.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.NumericFilter_Or">
            <summary>
              Looks up a localized string similar to Or.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.TextFilter_Contains">
            <summary>
              Looks up a localized string similar to Contains.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.TextFilter_Equals">
            <summary>
              Looks up a localized string similar to Equals.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.TextFilter_NotEquals">
            <summary>
              Looks up a localized string similar to Not Equals.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.Resources.C1_Silverlight_DataGrid.TextFilter_StartsWith">
            <summary>
              Looks up a localized string similar to Starts With.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridComboBoxColumn">
            <summary>
            Represent a <see cref="T:C1.Silverlight.DataGrid.DataGridColumn"/> that hosts enumerable content in its cells
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridComboBoxColumn.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridComboBoxColumn"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridComboBoxColumn.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridComboBoxColumn"/> class.
            </summary>
            <param name="property">The property info used to initialize the column.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridComboBoxColumn.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridComboBoxColumn.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridComboBoxColumn.ItemsSource"/> dependency property. 
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridComboBoxColumn.ItemsSource">
            <summary>
            Gets or sets the collection of items that will be displayed in the editing combo 
            as well as in the filter.
            </summary>
            <remarks>
            Use this property in conjunction with <see cref="P:C1.Silverlight.DataGrid.DataGridComboBoxColumn.DisplayMemberPath"/> and <see cref="P:C1.Silverlight.DataGrid.DataGridComboBoxColumn.SelectedValuePath"/> 
            to indicate which property value will be displayed and 
            which property value will be set in the data item when an item of the combo box is chosen.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridComboBoxColumn.DisplayMemberPath">
            <summary>
            Gets or sets the name or path of the property that is displayed for each item of the combo.
            </summary>
            <value>The name or path of the property that is displayed for each the item of the combo. The default is an empty string ("")..</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridComboBoxColumn.SelectedValuePath">
            <summary>
            Gets or sets the path that is used to get the SelectedValue from the SelectedItem of the combo.
            </summary>
            <value>Returns the path used to get the SelectedValue. The default is an empty string.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridComboBoxColumn.ItemTemplate">
            <summary>
            Gets or sets the item template shown in the items of the combo box.
            </summary>
            <remarks>
            If this property is set the property <see cref="P:C1.Silverlight.DataGrid.DataGridComboBoxColumn.DisplayMemberPath"/> will not be set in the editing combo.
            </remarks>
            <value>The item template.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridComboBoxColumn.ItemConverter">
            <summary>
            Item converter used to convert the items to string and vice versa.
            </summary>
            <remarks>
            Use in conjunction with ItemTemplate to support AutoComplete and editing when providing custom item visualization.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridComboBoxColumn.DropDownWidth">
            <summary>
            Gets or sets the width of the drop-down box (set to Double.NaN to size automatically).
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridComboBoxColumn.DropDownHeight">
            <summary>
            Gets or sets the height of the dropdown (set to Double.NaN to size automatically).
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridComboBoxColumn.MaxDropDownWidth">
            <summary>
            Gets or sets maximum width constraint of the drop-down box.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridComboBoxColumn.MaxDropDownHeight">
            <summary>
            Gets or sets maximum height constraint of the drop-down box.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridComboBoxColumn.ItemNotFoundText">
            <summary>
            Gets or sets the text displayed when the corresponding item is not found.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridImageColumn">
            <summary>
            Represent a <see cref="T:C1.Silverlight.DataGrid.DataGridColumn"/> that hosts image content in its cells
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridImageColumn.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridImageColumn"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridImageColumn.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridImageColumn"/> class.
            </summary>
            <param name="property">The property info used to initialize the column.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridImageColumn.CreateCellContent(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Gets an <see cref="T:System.Windows.Controls.Image"/> that will be used to display 
            the image into a cell of this column.
            </summary>
            <returns>Image that represent the cell content.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridImageColumn.Stretch">
            <summary>
            Gets or sets a value that describes how an Image should be stretched to fill the destination rectangle.
            </summary>
            <value>Value that describes how an Image should be stretched to fill the destination rectangle.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridImageColumn.ImageNotFoundSource">
            <summary>
            Gets or sets the default image source for all the rows that aren't bound to a real source.
            Set null in order to don't show any image by default.
            </summary>
            <value>The default image source.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridNumericColumn">
            <summary>
            Represent a <see cref="T:C1.Silverlight.DataGrid.DataGridColumn"/> that hosts numeric content in its cells.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNumericColumn.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridNumericColumn"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNumericColumn.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridNumericColumn"/> class.
            </summary>
            <param name="property">The property info used to initialize the column.</param>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridNumericColumn.MaximumProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridNumericColumn.Maximum"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridNumericColumn.MinimumProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridNumericColumn.Minimum"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridNumericColumn.RangeValidationModeProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridNumericColumn.RangeValidationMode"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridNumericColumn.ShowButtonsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridNumericColumn.ShowButtons"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridNumericColumn.HandleUpDownKeysProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridNumericColumn.HandleUpDownKeys"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNumericColumn.GetCellEditingContent(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Gets a C1NumericBox that will be used to display 
            the info into a cell of this column when the row is in edit mode.
            </summary>
            <returns>C1NumericBox that represent a cell content in edit mode.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNumericColumn.Maximum">
            <summary>
            Gets or sets the maximum value allowed for the <see cref="T:C1.Silverlight.C1NumericBox" />.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNumericColumn.Minimum">
            <summary>
            Gets or sets the minimum value allowed for the <see cref="T:C1.Silverlight.C1NumericBox" />.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNumericColumn.RangeValidationMode">
            <summary>
            Gets or sets the mode used to validate the range between Minimum and Maximum.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNumericColumn.ShowButtons">
            <summary>
            Shows or hides the buttons for Increment or Decrement.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNumericColumn.HandleUpDownKeys">
            <summary>
            Gets or sets a value indicating whether handle up and down keys.
            </summary>
            <value><c>true</c> if handle up and down keys; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.PreparingCellEditEventHandler">
            <summary>
            Handles preparing cell edit event.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.CancellingCellEditEventHandler">
            <summary>
            Handles cancelling cell edit event.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.EndingCellEditEventHandler">
            <summary>
            Handles ending cell edit event.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridTemplateColumn">
            <summary>
            Represent a <see cref="T:C1.Silverlight.DataGrid.DataGridColumn"/> whose templates are specified by the user.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridTemplateColumn.CreateCellContent(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Gets a ContentControl containing the CellTemplate that will be used to display 
            the info into a cell of this column.
            </summary>
            <returns>ContentControl that represent the cell content.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridTemplateColumn.GetCellEditingContent(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Gets a ContentControl containing the CellEditingTemplate that will be used to display 
            the info into a cell of this column when the row is in edit mode.
            </summary>
            <returns>ContentControl that represent a cell content in edit mode.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridTemplateColumn.CellTemplate">
            <summary>
            Gets or sets the data template used to display the data
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridTemplateColumn.CellEditingTemplate">
            <summary>
            Gets or sets the data template used to display the data in edit mode.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridTemplateColumn.PreparingCell">
            <summary>
            Occurs when a cell is being prepared for edit.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridTemplateColumn.CancelingCell">
            <summary>
            Occurs when a cell edit is canceled.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridTemplateColumn.EndingCell">
            <summary>
            Occurs when a cell is ending.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridTemplateColumn.GettingCellValue">
            <summary>
            Occurs when the value of a cell is requested for export operations.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridTextColumn">
            <summary>
            Represent a <see cref="T:C1.Silverlight.DataGrid.DataGridColumn"/> that hosts textual content in its cells
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridTextColumn.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridTextColumn"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridTextColumn.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridTextColumn"/> class.
            </summary>
            <param name="property">The property info used to initialize the column.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridTextColumn.GetCellEditingContent(C1.Silverlight.DataGrid.DataGridRow)">
            <summary>
            Gets a C1TextBoxBase that will be used to display 
            the info into a cell of this column when the row is in edit mode.
            </summary>
            <returns>C1TextBoxBase that represent a cell content in edit mode.</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridTextColumn.MaxLength">
            <summary>
            Gets or sets the value that determines the maximum number of characters allowed for user input.
            </summary>
            <value>The maximum number of characters allowed for user input. The default is 0.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridFilter">
            <summary>
            Represents the Control that hosts the filters for the C1DataGrid.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridFilter.Clear">
            <summary>
            Clears the current filter criteria and the values contained in the filter control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridFilter.Create">
            <summary>
            Creates the filter based on the current filter criteria set by the user in the filter control.
            Raises the FilterChanged event if necessary.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridFilter.Load(C1.Silverlight.DataGrid.DataGridFilterState)">
            <summary>
            Initializes the filter and filter control to the desired state.
            </summary>
            <param name="filterState">the desired state.</param>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilter.MouseOverBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridFilter.MouseOverBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilter.PressedBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridFilter.PressedBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridFilter.FocusBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridFilter.FocusBrush"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridFilter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridFilter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridFilter.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.DataGrid.DataGridFilter"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridFilter.FilterChanged">
            <summary>
            Occurs when the filter criteria changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridFilter.InnerControl">
            <summary>
            Gets or sets the inner filter control.
            </summary>
            <value>The control used to create and set the filter, it must implement the IDataGridFilter
            and inherit from Control class.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridFilter.MouseOverBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it has the mouse over.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridFilter.PressedBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint a button when it is pressed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridFilter.FocusBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the focused control.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.FilterDescription">
            <summary>
            Contains info about a filter.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.FilterDescription.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.FilterDescription.#ctor(System.String,C1.Silverlight.DataGrid.DataGridFilterState)">
            <summary>
            Constructor
            </summary>
            <param name="propertyName">The property name for the filter description.</param>
            <param name="state">The state of the filter.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.FilterDescription.GetPredicate``1">
            <summary>
            Returns a predicate representing the current state of this filter description.
            This predicate can be used to execute the filter against a Linq source.
            </summary>
            <typeparam name="T">The elements in the data source type</typeparam>
            <returns>The filter predicate</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.FilterDescription.GetExpression``1">
            <summary>
            Returns an expression tree representing the current state of this filter description.
            The expression tree can be used to execute the filter against an Ado net Data Service source.
            </summary>
            <typeparam name="T">The elements in the data source type</typeparam>
            <returns>The filter expression</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.FilterDescription.GetRowFilter">
            <summary>
            Returns a string representing the current state of this filter description.
            The filter string can be used to filter C1.Silverlight.Data.DataView instances
            using the RowFilter property.
            </summary>
            <returns>The filter string</returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.FilterDescription.PropertyName">
            <summary>
            Gets or sets the property name being used as the filtering criteria.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.FilterDescription.State">
            <summary>
            Gets or sets the current state of this filter description.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridModel._ignoreCurrentCellChanges">
            <summary>
            Used to avoid setting the current when an event 
            from the collection view is being handled.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridModel.#ctor(C1.Silverlight.DataGrid.C1DataGrid,C1.Silverlight.DataGrid.DataGridSelectionMode)">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridModel"/>.
            </summary>
            <param name="dataGrid">Data grid which the model belongs to.</param>
            <param name="selectionMode">Selection mode of the rows</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridModel.GetCell(System.Int32,System.Int32)">
            <summary>
            Gets the cell corresponding to a cell and a column.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="columnIndex">Index of the column.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridModel.OnRowsReseted(System.Boolean,C1.Silverlight.DataGrid.GroupedField[],System.Collections.ObjectModel.ReadOnlyObservableCollection{System.Object})">
            <summary>
            Called when the inner collection view raise a Reset event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridModel.OnRowsAdded(System.Int32,System.Object)">
            <summary>
            Called when the inner collection view raise an Added item event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridModel.OnRowsRemoved(System.Int32,System.Object)">
            <summary>
            Called when the inner collection view raise an Removed item event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridModel.PrepareColumn(C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Prepares the column.
            </summary>
            <param name="column">The column.</param>
            <returns>True, if needs the data be refreshed</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridModel.SetCurrentRow(C1.Silverlight.DataGrid.DataGridRow,System.Boolean)">
            <summary>
            Sets the current row.
            </summary>
            <param name="row">The current row.</param>
            <param name="force">When set to true forces the change even if there was a cell being edited whose committing cell event was cancelled.</param>
            <returns></returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridModel.DataGrid">
            <summary>
            Gets the data grid which the model belongs to.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridModel.Rows">
            <summary>
            Gets the collection of rows.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridModel.Columns">
            <summary>
            Gets the collection of columns.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridModel.SelectionManager">
            <summary>
            Gets the current selection.
            </summary>
            <value>The selection.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridModel.DataConnection">
            <summary>
            Gets the data connection object.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridModel.ItemsSourceChanged">
            <summary>
            It is raised when the rows collection has changed.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridBeginningEditEventArgs">
            <summary>
            Provides event data for editing event.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridBeginningEditEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridRow,C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridBeginningEditEventArgs"/> class.
            </summary>
            <param name="row">The row corresponding to the editing cell.</param>
            <param name="column">The column corresponding to the editing cell.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridBeginningEditEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the event is canceled.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridBeginningEditEventArgs.Column">
            <summary>
            Gets the column corresponding to the editing cell.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridBeginningEditEventArgs.Row">
            <summary>
            Gets the row corresponding to the editing cell.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridEndingEditEventArgs">
            <summary>
            Provides event data for ending cell edit events.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridEndingEditEventArgs.#ctor(C1.Silverlight.DataGrid.DataGridRow,C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridEndingEditEventArgs"/> class.
            </summary>
            <param name="row">The row corresponding to the editing cell.</param>
            <param name="column">The column corresponding to the editing cell.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridEndingEditEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the event is canceled.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridEndingEditEventArgs.Column">
            <summary>
            Gets the column corresponding to the editing cell.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridEndingEditEventArgs.Row">
            <summary>
            Gets the row corresponding to the editing cell.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridEndingEditEventArgs.EditingElement">
            <summary>
            Gets the editing <see cref="T:System.Windows.FrameworkElement"/>.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridRowType">
            <summary>
            Specifies constants that define the different types of rows.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowType.Undefined">
            <summary>
            A row which is not in the row collection yet.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowType.Item">
            <summary>
            A common row.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowType.New">
            <summary>
            A new row.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowType.Group">
            <summary>
            A row which represents a group of rows
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowType.Top">
            <summary>
            A row which is on top of the items rows.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowType.Bottom">
            <summary>
            A row which is at the bottom of the items rows.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridNumericFilter">
            <summary>
            The filter for numeric values. This control should be used as InnerControl for the DataGridFilter
            control to create the numeric filter for the C1DataGrid.
            </summary>
            <summary>
            Represents the default filter control for numeric columns.
            </summary>	
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNumericFilter.RaisePropertyChanged(System.String)">
            <summary>
            Raises the <see cref="e:PropertyChanged"/> event.
            </summary>
            <param name="propertyName">Name of the property that was changed.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNumericFilter.Create">
            <summary>
            Creates the filter based on the current filter criteria set by the user in the filter control.
            Raises the FilterChanged event if necessary.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNumericFilter.Clear">
            <summary>
            Clears the current filter criteria and the values contained in the filter control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNumericFilter.Load(C1.Silverlight.DataGrid.DataGridFilterState)">
            <summary>
            Initializes the filter and filter control to the desired state.
            </summary>
            <param name="filterState">the desired state.</param>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridNumericFilter.MouseOverBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridNumericFilter.MouseOverBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridNumericFilter.PressedBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridNumericFilter.PressedBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridNumericFilter.InputBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridNumericFilter.InputBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridNumericFilter.InputForegroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridNumericFilter.InputForeground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridNumericFilter.SelectedBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridNumericFilter.SelectedBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridNumericFilter.FocusBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridNumericFilter.FocusBrush"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNumericFilter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridNumericFilter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNumericFilter.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.DataGrid.DataGridNumericFilter"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridNumericFilter.FilterChanged">
            <summary>
            Occurs when the filter criteria changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNumericFilter.Format">
            <summary>
            Gets or sets the format used in the numeric boxes.
            </summary>
            <value>The format used in the numeric boxes.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNumericFilter.FirstComparator">
            <summary>
            Gets or sets the comparator used in the first line.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNumericFilter.FirstValue">
            <summary>
            Gets or sets the value used in the first line.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNumericFilter.Combination">
            <summary>
            Gets or sets the logical combination between the first and second line.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNumericFilter.SecondComparator">
            <summary>
            Gets or sets the comparator of the second line.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNumericFilter.SecondValue">
            <summary>
            Gets or sets the value of the second line.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNumericFilter.Filter">
            <summary>
            Gets or sets the filter shown in the unity.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridNumericFilter.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNumericFilter.MouseOverBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it has the mouse over.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNumericFilter.PressedBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint a button when it is pressed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNumericFilter.InputBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that fills the background of the input control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNumericFilter.InputForeground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> applied to the text inside an input control when this text is not selected.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNumericFilter.SelectedBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it is selected.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNumericFilter.FocusBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the focused control.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.NumericComparator">
            <summary>
            Represents a numeric comparator used to populate the filter.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.NumericComparator.#ctor(C1.Silverlight.DataGrid.DataGridFilterOperation,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.NumericComparator"/> class.
            </summary>
            <param name="comparison">The operation which this object represent.</param>
            <param name="comparisonSymbol">The comparison symbol for this operation.</param>
        </member>
        <member name="P:C1.Silverlight.DataGrid.NumericComparator.Comparison">
            <summary>
            Gets or sets the comparison.
            </summary>
            <value>The comparison.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.NumericComparator.ComparisonSymbol">
            <summary>
            Gets or sets the comparison symbol.
            </summary>
            <value>The comparison symbol.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridTextFilter">
            <summary>
            The filter for text values. This control should be used as InnerControl for the DataGridFilter
            control to create the text filter for the C1DataGrid.
            </summary>
            <summary>
            Represents the default filter control for text columns.
            </summary>	
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridTextFilter.RaisePropertyChanged(System.String)">
            <summary>
            Raises the <see cref="e:PropertyChanged"/> event.
            </summary>
            <param name="propertyName">Name of the property that was changed.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridTextFilter.Create">
            <summary>
            Creates the filter based on the current filter criteria set by the user in the filter control.
            Raises the FilterChanged event if necessary.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridTextFilter.Clear">
            <summary>
            Clears the current filter criteria and the values contained in the filter control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridTextFilter.Load(C1.Silverlight.DataGrid.DataGridFilterState)">
            <summary>
            Initializes the filter and filter control to the desired state.
            </summary>
            <param name="filterState">the desired state.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridTextFilter.GetFilter">
            <summary>
            Gets the filter state object from the information gathered in the control.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridTextFilter.SetFilter(C1.Silverlight.DataGrid.DataGridFilterState)">
            <summary>
            Sets the filter into the control.
            </summary>
            <param name="filterState">State of the filter.</param>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridTextFilter.MouseOverBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridTextFilter.MouseOverBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridTextFilter.PressedBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridTextFilter.PressedBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridTextFilter.InputBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridTextFilter.InputBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridTextFilter.InputForegroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridTextFilter.InputForeground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridTextFilter.SelectedBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridTextFilter.SelectedBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridTextFilter.FocusBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridTextFilter.FocusBrush"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridTextFilter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridTextFilter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridTextFilter.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.DataGrid.DataGridTextFilter"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridTextFilter.Filter">
            <summary>
            Gets or sets the filter shown in the unity.
            </summary>
            <value></value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridTextFilter.SelectedOperation">
            <summary>
            Gets or sets the text operation shown in the unity.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridTextFilter.FilterText">
            <summary>
            Gets or sets the filter text.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridTextFilter.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridTextFilter.FilterChanged">
            <summary>
            Occurs when the filter criteria changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridTextFilter.MouseOverBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it has the mouse over.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridTextFilter.PressedBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint a button when it is pressed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridTextFilter.InputBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that fills the background of the input control.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridTextFilter.InputForeground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> applied to the text inside an input control when this text is not selected.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridTextFilter.SelectedBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it is selected.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridTextFilter.FocusBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the focused control.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridTextFilterEntry">
            <summary>
            Entry for a supported FilterOperation in DataGridTextFilter.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridTextFilterEntry.Label">
            <summary>
            Gets or sets the label of the filter operation.
            </summary>
            <value>
            The label of the filter operation.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridTextFilterEntry.Operation">
            <summary>
            Gets or sets the operation corresponding to this entry.
            </summary>
            <value>
            The operation corresponding to this entry.
            </value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridColumnsHeaderPanel">
            <summary>
            Panel that contains a collection of <see cref="T:C1.Silverlight.DataGrid.DataGridColumnsHeaderPanel"/>.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumnsHeaderPanel.ClipTopMarginProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumnsHeaderPanel.ClipTopMargin"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridColumnsHeaderPanel.ClipBottomMarginProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridColumnsHeaderPanel.ClipBottomMargin"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnsHeaderPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "measure" pass of Silverlight layout. Classes can override this method to define their own measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of child object allotted sizes.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnsHeaderPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of Silverlight layout. Classes can override this method to define their own arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridColumnsHeaderPanel.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridColumnsHeaderPanel"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnsHeaderPanel.Panel">
            <summary>
            Gets the panel which contains the rows.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnsHeaderPanel.ClipTopMargin">
            <summary>
            Gets or sets the clip top margin.
            </summary>
            <value>
            The clip top margin.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridColumnsHeaderPanel.ClipBottomMargin">
            <summary>
            Gets or sets the clip bottom margin.
            </summary>
            <value>
            The clip bottom margin.
            </value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter">
            <summary>
            Represent the visual element of a freezing vertical separator.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseEnter"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeave"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter.ChangeVisualStateMovement(System.Boolean)">
            <summary>
            Updates the current visual state of the Movement visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter.IsDraggingProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter.IsDragging"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter.ForceMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter.ForceMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter.MouseOverBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter.MouseOverBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter.PressedBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter.PressedBrush"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter.IsDragging">
            <summary>
            Gets or sets a value indicating whether the control is currently being dragged.
            </summary>
            <remarks>
            This property is controlled by the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> to which the presenter belongs.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter.ForceMouseOver">
            <summary>
            Gets or sets a value indicating whether the mouse is over the control.
            </summary>
            <remarks>
            This property is controlled by the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> to which the presenter belongs.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter.MouseOverBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it has the mouse over.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridVerticalFreezingSeparatorPresenter.PressedBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint a button when it is pressed.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridGroupingPanel">
            <summary>
            Panel used to group by columns.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupingPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "measure" pass of Silverlight layout. Classes can override this method to define their own measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of child object allotted sizes.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupingPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of Silverlight layout. Classes can override this method to define their own arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridGroupingPanel.IndentHeightProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridGroupingPanel.IndentHeight"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridGroupingPanel.ColumnsHeaderGapProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridGroupingPanel.ColumnsHeaderGap"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupingPanel.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridGroupingPanel"/>.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridGroupingPanel.DataGrid">
            <summary>
            Gets the data grid the panel belongs to.
            </summary>
            <value>The data grid the panel belongs to.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridGroupingPanel.IndentHeight">
            <summary>
            Gets or sets the distance of each step (vertically), If this value is 0 the column headers will be shown horizontally,will not be phased.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridGroupingPanel.ColumnsHeaderGap">
            <summary>
            Gets or sets the distance between columns headers (horizontally).
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridGroupingPresenter">
            <summary>
            Presenter that display the grouping panel or another 
            element if there is no columns in the grouping panel.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupingPresenter.ChangeVisualStateGroups(System.Boolean)">
            <summary>
            Updates the current visual state of the Groups visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridGroupingPresenter.IsEmptyProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridGroupingPresenter.IsEmpty"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupingPresenter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridGroupingPresenter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupingPresenter.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.DataGrid.DataGridGroupingPresenter"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridGroupingPresenter.GroupsChanged">
            <summary>
            Occurs when the groups changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridGroupingPresenter.Panel">
            <summary>
            Gets the grouping panel.
            </summary>
            <value>The grouping panel.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridGroupingPresenter.IsEmpty">
            <summary>
            Gets or sets a value indicating whether the grouping panel is empty or not.
            </summary>
            <remarks>
            <para>If this property is set to false the visual state group "GroupingStates" will change its visual state to "Grouping".</para>
            <para>This property is controlled by the <see cref="T:C1.Silverlight.DataGrid.C1DataGrid"/> to which the presenter belongs.</para>
            </remarks>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridFocusPresenter">
            <summary>
            Represent the visual element of the focus which is used inside a cell.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridFocusPresenter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridFocusPresenter"/>.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridGroupRowPresenter">
            <summary>
            Row presenter that represents a group.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupRowPresenter.Load">
            <summary>
            Called after a row presenter is added to the visual tree.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupRowPresenter.Unload">
            <summary>
            Called before the visual element is removed from the visual tree.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupRowPresenter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridGroupRowPresenter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridGroupRowPresenter.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.DataGrid.DataGridGroupRowPresenter"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridGroupRowPresenter.GroupContent">
            <summary>
            Gets or sets the visual element on the right of the plus sign inside a group row.
            </summary>
            <value>The content of the group.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridNewRowHeaderPresenter">
            <summary>
            Represent the visual element of a new row header.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter">
            <summary>
            Represent the visual element of a row header.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.Load">
            <summary>
            Initializes the presenter.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.Unload">
            <summary>
            Finalizes the presenter.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.UpdateSelection">
            <summary>
            Updates the selection state.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.UpdateEditingRow">
            <summary>
            Updates the editing row state.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseEnter"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeave"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.UpdateMouseOver">
            <summary>
            Updates the mouse over state.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.UpdateValidationState">
            <summary>
            Updates the validation state.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.UpdateCurrentCell">
            <summary>
            Updates the current cell.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.RaisePropertyChanged(System.String)">
            <summary>
            Raises the property changed event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ChangeVisualStateSelection(System.Boolean)">
            <summary>
            Updates the current visual state of the Selection visual state group to match the object's properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ChangeVisualStateValidation(System.Boolean)">
            <summary>
            Updates the current visual state of the Validation visual state group to match the object's properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ChangeVisualStateMerging(System.Boolean)">
            <summary>
            Updates the current visual state of the Merging visual state group to match the object's properties.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ChangeVisualStateCommon(System.Boolean)">
            <summary>
            Updates the current visual state of the Common visual state group to match the object's properties.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.CanUserResizeProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.CanUserResize"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.CanUserToggleDetailsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.CanUserToggleDetails"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.IsSelected"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.IsEditingProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.IsEditing"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.IsMergingProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.IsMerging"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ValidationStateProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ValidationState"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ValidationResultsProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ValidationResults"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.DetailsVisibilityProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.DetailsVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.IsMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.IsMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ForceMouseOverProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ForceMouseOver"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.MouseOverBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.MouseOverBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.PressedBrushProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.PressedBrush"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.SelectedBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.SelectedBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ValidationBackgroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ValidationBackground"/> dependency property. 
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ValidationForegroundProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ValidationForeground"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.Resized">
            <summary>
            Occurs when the row header is resized.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.Resizing">
            <summary>
            Occurs when the row header is resized.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.AutoSized">
            <summary>
            Occurs when the row header is auto sized.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.MouseLeftButtonDown">
            <summary>
            Occurs when preview mouse left button down.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.Row">
            <summary>
            Gets the owner row.
            </summary>
            <value>The owner row.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.DataGrid">
            <summary>
            Gets the owner data grid.
            </summary>
            <value>The owner data grid.</value>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.CanUserResize">
            <summary>
            Gets or sets a value indicating whether the user can adjust row height by dragging the bottom edge of the row header.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.CanUserToggleDetails">
            <summary>
            Gets or sets a value indicating whether the expand/collapse button is visible.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.IsSelected">
            <summary>
            Gets or sets a value indicating whether the row is currently selected or not.
            </summary>
            <remarks>
            If this property is set to true the visual state group "CommonStates" will change its visual state to "Selected".
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.IsEditing">
            <summary>
            Gets or sets a value indicating whether the row is currently being edited. 
            </summary>
            <remarks>
            If this property is set to true the visual state group "CommonStates" will change its visual state to "Editing".
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.IsMerging">
            <summary>
            Gets or sets a value indicating whether the header may get merged.
            </summary>
            <remarks>
            If this property is set to true the visual state group "MergingStates" will change its visual state to "Merging".
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ValidationState">
            <summary>
            Gets or sets the <see cref="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ValidationState"/> of the related row.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ValidationResults">
            <summary>
            Gets or sets a collection of ValidationResult related to the corresponding row. This errors will be displayed as red icon whit a tooltip showing the text of the error.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.DetailsVisibility">
            <summary>
            Gets or sets the visibility of the details.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.IsMouseOver">
            <summary>
            Returns true if the mouse is over the control.
            </summary>
        </member>
        <member name="E:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.IsMouseOverChanged">
            <summary> 
            Event raised when the <see cref="P:IsMouseOver"/> property has changed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ForceMouseOver">
            <summary>
            Set to true to force the mouse over visual state.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.MouseOverBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it has the mouse over.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.PressedBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint a button when it is pressed.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.SelectedBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to highlight the control when it is selected.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ValidationBackground">
            <summary>
            Gets or sets the brush used to paint the background of the validation elements.
            </summary>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridRowHeaderPresenter.ValidationForeground">
            <summary>
            Gets or sets the brush used to paint the foreground of the validation elements.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNewRowHeaderPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridNewRowHeaderPresenter"/> class.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridNewRowPresenter">
            <summary>
            Represent the visual element of a new row.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNewRowPresenter.Load">
            <summary>
            Initializes the presenter.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNewRowPresenter.Unload">
            <summary>
            Finalizes the presenter.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridNewRowPresenter.WatermarkTextProperty">
            <summary>
            Identifies the <see cref="P:C1.Silverlight.DataGrid.DataGridNewRowPresenter.WatermarkText"/> dependency property. 
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNewRowPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNewRowPresenter.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridNewRowPresenter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridNewRowPresenter.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:C1.Silverlight.DataGrid.DataGridNewRowPresenter"/> control when a new template is applied.
            </summary>
            <remarks>
            This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <see cref="M:ApplyTemplate"/> method.
            </remarks>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridNewRowPresenter.WatermarkText">
            <summary>
            Gets or sets that is shown in the whole row before the data is entered.
            </summary>
            <remarks>
            Default value is "Click here to enter a new row".
            </remarks>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridRowsHeaderPanel">
            <summary>
            Panel that contains <see cref="T:C1.Silverlight.DataGrid.DataGridRowsHeaderPanel"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowsHeaderPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "measure" pass of Silverlight layout. Classes can override this method to define their own measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of child object allotted sizes.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowsHeaderPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of Silverlight layout. Classes can override this method to define their own arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridRowsHeaderPanel.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridRowsHeaderPanel"/>.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridToggleGroupButton">
            <summary>
            Button used to toggle a group.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridToggleGroupButton.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Silverlight.DataGrid.DataGridToggleGroupButton"/>.
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridScrollStep">
            <summary>
            Represent the length used to scroll a step, 
            typically the up/down buttons in the scrollbar, 
            and the mouse wheel.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridScrollStep.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridScrollStep"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridScrollStep.#ctor(System.Double,C1.Silverlight.DataGrid.DataGridScrollStepUnitType)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Silverlight.DataGrid.DataGridScrollStep"/> struct.
            </summary>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridScrollStep.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> containing a fully qualified type name.
            </returns>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridScrollStep.IsDiscrete">
            <summary>
            Gets a value indicating whether this instance is discrete.
            </summary>
            <value>
            	<c>true</c> if this instance is discrete; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridScrollStep.IsAbsolute">
            <summary>
            Gets a value indicating whether this instance is absolute.
            </summary>
            <value>
            	<c>true</c> if this instance is absolute; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridScrollStep.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridScrollStep.Discrete">
            <summary>
            Gets the discrete instance.
            </summary>
            <value>The discrete.</value>
        </member>
        <member name="P:C1.Silverlight.DataGrid.DataGridScrollStep.StepUnitType">
            <summary>
            Gets the type of the step unit.
            </summary>
            <value>The type of the step unit.</value>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridScrollStepUnitType">
            <summary>
            Unit used to scroll in the data grid.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridScrollStepUnitType.Discrete">
            <summary>
            Scrolls by a discrete unit, like rows.
            </summary>
        </member>
        <member name="F:C1.Silverlight.DataGrid.DataGridScrollStepUnitType.Pixel">
            <summary>
            Scrolls a specified amount of pixels
            </summary>
        </member>
        <member name="T:C1.Silverlight.DataGrid.DataGridScrollStepConverter">
            <summary>
            Converts a string to a <see cref="T:C1.Silverlight.DataGrid.DataGridScrollStepConverter"/>.
            </summary>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridScrollStepConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.Silverlight.DataGrid.DataGridScrollStepConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotImplementedException">
            	<see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/> not implemented in base <see cref="T:System.ComponentModel.TypeConverter"/>.</exception>
        </member>
    </members>
</doc>
